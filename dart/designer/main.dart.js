// Generated by dart2js (fast startup emitter, strong), the Dart to JavaScript compiler version: 2.8.2.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo += typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {JS_CONST: function JS_CONST() {
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new H.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      P.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      P.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new H.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        P.ArgumentError_checkNotNull(count, _s5_, type$.int);
        P.RangeError_checkNotNegative(count, _s5_);
        return new H.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      P.ArgumentError_checkNotNull(count, _s5_, type$.int);
      P.RangeError_checkNotNegative(count, _s5_);
      return new H.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (typeof preserved == "string")
        return preserved;
      return rawClassName;
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S: function(value) {
      var res;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res != "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch;
      if (typeof source != "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return null;
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = H._asStringNullable(match[3]);
      if (decimalMatch != null)
        return parseInt(source, 10);
      if (match[2] != null)
        return parseInt(source, 16);
      return null;
    },
    Primitives_parseDouble: function(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = C.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName: function(object) {
      var t1 = H.Primitives__objectTypeNameNewRti(object);
      return t1;
    },
    Primitives__objectTypeNameNewRti: function(object) {
      var dispatchName, $constructor, constructorName;
      if (object instanceof P.Object)
        return H._rtiToString(H.instanceType(object), null);
      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = C.C_JS_CONST(object);
        if (H.Primitives__saneNativeClassName(dispatchName))
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && H.Primitives__saneNativeClassName(constructorName))
            return constructorName;
        }
      }
      return H._rtiToString(H.instanceType(object), null);
    },
    Primitives__saneNativeClassName: function($name) {
      var t1 = $name !== "Object" && $name !== "";
      return t1;
    },
    Primitives__fromCharCodeApply: function(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var t1, _i, i,
        a = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          C.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          C.JSArray_methods.add$1(a, 55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          C.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (typeof end !== "number")
        return end.$le();
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        if (i0 < end)
          chunkEnd = i0;
        else
          chunkEnd = end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (charCode <= 65535)
        return String.fromCharCode(charCode);
      if (charCode <= 1114111) {
        bits = charCode - 65536;
        return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_valueFromDecomposedDate: function(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var jsMonth, value;
      if (!H._isInt(years))
        H.throwExpression(H.argumentErrorValue(years));
      if (!H._isInt(month))
        H.throwExpression(H.argumentErrorValue(month));
      if (!H._isInt(day))
        H.throwExpression(H.argumentErrorValue(day));
      if (!H._isInt(hours))
        H.throwExpression(H.argumentErrorValue(hours));
      if (!H._isInt(minutes))
        H.throwExpression(H.argumentErrorValue(minutes));
      if (!H._isInt(seconds))
        H.throwExpression(H.argumentErrorValue(seconds));
      if (typeof month !== "number")
        return month.$sub();
      jsMonth = month - 1;
      if (typeof years !== "number")
        return H.iae(years);
      if (0 <= years && years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return null;
      return value;
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      "" + t1.argumentCount;
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, used, key;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, type$.dynamic);
      else
        $arguments = [];
      argumentCount = $arguments.length;
      requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i)
            C.JSArray_methods.add$1($arguments, defaultValues[H._asStringNullable(keys[_i])]);
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            key = H._asStringNullable(keys[_i]);
            if (namedArguments.containsKey$1(0, key)) {
              ++used;
              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, key));
            } else
              C.JSArray_methods.add$1($arguments, defaultValues[key]);
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1, _s5_ = "index";
      if (!H._isInt(index))
        return new P.ArgumentError(true, index, _s5_, null);
      $length = H._asIntNullable(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value != "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    NullError$: function(_message, match) {
      return new H.NullError(_message, match == null ? null : match.method);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2, _null = null,
        t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return _null;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H._asStringNullable(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H._asStringNullable(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H._asStringNullable(message), match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (H._asIntNullable(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, signatureFunction, applyTrampoline, i, stub, stubCallName, _null = null,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(_null, _null, _null, _null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      signatureFunction = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {
      var typeEvalMethod;
      if (typeof functionType == "number")
        return function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getTypeFromTypesTable, functionType);
      if (typeof functionType == "string") {
        if (isStatic)
          throw H.wrapException("Cannot compute signature for static tearoff.");
        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, typeEvalMethod);
      }
      throw H.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t2, stubName, arity, lookedUpFunction, t3, t4, $arguments,
        t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null)
        t1 = $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self");
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null)
        t2 = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_evalRecipe: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);
    },
    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
    },
    boolConversionCheck: function(value) {
      if (value == null)
        H.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow: function(message) {
      throw H.wrapException(new H._AssertionError(message));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(staticName));
    },
    RuntimeError$: function(message) {
      return new H.RuntimeError(message);
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return null;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return null;
      if (Array.isArray(substitution))
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, mark, t1,
        tag = H._asStringNullable($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = H._asStringNullable($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _._memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this._message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this._message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this._message = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    unwrapException_saveStackTrace: function unwrapException_saveStackTrace(t0) {
      this.ex = t0;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _._name = t3;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _.__js_helper$_previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar: function(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr: function(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType: function(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return H.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe: function(rti) {
      return rti._canonicalRecipe;
    },
    findType: function(recipe) {
      return H._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute: function(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw H.wrapException(P.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray: function(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(substitutedRti);
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed: function(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, rti, substitutedRti,
        $length = namedArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; i += 2) {
        t1 = namedArray[i];
        rti = namedArray[i + 1];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(t1);
        result.push(substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),
        optionalNamed = functionParameters._optionalNamed,
        substitutedOptionalNamed = H._substituteNamed(universe, optionalNamed, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedOptionalNamed === optionalNamed)
        return functionParameters;
      result = new H._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._optionalNamed = substitutedOptionalNamed;
      return result;
    },
    closureFunctionType: function(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return H.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType: function(object, testRti) {
      var rti;
      if (H.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof H.Closure) {
          rti = H.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return H.instanceType(object);
    },
    instanceType: function(object) {
      var rti;
      if (object instanceof P.Object) {
        rti = object.$ti;
        return rti != null ? rti : H._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return H._arrayInstanceType(object);
      return H._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType: function(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType: function(object) {
      var rti = object.$ti;
      return rti != null ? rti : H._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor: function(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return H._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss: function(instance, $constructor) {
      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable: function(_index) {
      var rti,
        index = _index,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = H._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    _installSpecializedIsTest: function(object) {
      var testRti = this,
        isFn = H._generalIsTestImplementation,
        t1 = type$.Object;
      if (testRti === t1) {
        isFn = H._isObject;
        testRti._as = H._asObject;
      } else if (H.isStrongTopType(testRti) || testRti === t1) {
        isFn = H._isTop;
        testRti._as = H._asTop;
      } else if (testRti === type$.int)
        isFn = H._isInt;
      else if (testRti === type$.double)
        isFn = H._isNum;
      else if (testRti === type$.num)
        isFn = H._isNum;
      else if (testRti === type$.String)
        isFn = H._isString;
      else if (testRti === type$.bool)
        isFn = H._isBool;
      else if (testRti._kind === 9) {
        t1 = testRti._primary;
        if (testRti._rest.every(H.isTopType)) {
          testRti._specializedTestResource = "$is" + t1;
          isFn = H._isTestViaProperty;
        }
      }
      testRti._is = isFn;
      return testRti._is(object);
    },
    _generalIsTestImplementation: function(object) {
      var testRti = this;
      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _isTestViaProperty: function(object) {
      var t1 = this,
        tag = t1._specializedTestResource;
      if (object instanceof P.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));
    },
    checkTypeBound: function(type, bound, variable, methodName) {
      var _null = null;
      if (H._isSubtype(init.typeUniverse, type, _null, bound, _null))
        return type;
      throw H.wrapException(H._TypeError$fromMessage("The type argument '" + H.S(H._rtiToString(type, _null)) + "' is not a subtype of the type variable bound '" + H.S(H._rtiToString(bound, _null)) + "' of type variable '" + variable + "' in '" + H.S(methodName) + "'."));
    },
    _Error_compose: function(object, objectRti, checkedTypeDescription) {
      var objectDescription = P.Error_safeToString(object),
        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);
      return objectDescription + ": type '" + H.S(objectTypeDescription) + "' is not a subtype of type '" + H.S(checkedTypeDescription) + "'";
    },
    _TypeError$fromMessage: function(message) {
      return new H._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType: function(object, type) {
      return new H._TypeError("TypeError: " + H._Error_compose(object, null, type));
    },
    _isObject: function(object) {
      return true;
    },
    _asObject: function(object) {
      return object;
    },
    _isTop: function(object) {
      return true;
    },
    _asTop: function(object) {
      return object;
    },
    _isBool: function(object) {
      return true === object || false === object;
    },
    _asBoolNullable: function(object) {
      if (true === object || false === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asDoubleNullable: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _isInt: function(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asIntNullable: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _isNum: function(object) {
      return typeof object == "number";
    },
    _asNumNullable: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _isString: function(object) {
      return typeof object == "string";
    },
    _asStringNullable: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _rtiArrayToString: function(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += C.JSString_methods.$add(sep, H._rtiToString(array[i], genericContext));
      return s;
    },
    _functionRtiToString: function(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, typeParametersText, typeSep, t2, t3, boundRti, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, optionalNamed, optionalNamedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText += typeSep;
          t2 = genericContext.length;
          t3 = t2 - 1 - i;
          if (t3 < 0)
            return H.ioore(genericContext, t3);
          typeParametersText = C.JSString_methods.$add(typeParametersText, genericContext[t3]);
          boundRti = bounds[i];
          if (!(H.isStrongTopType(boundRti) || boundRti === t1))
            t2 = !(boundRti === t1);
          else
            t2 = false;
          if (t2)
            typeParametersText += C.JSString_methods.$add(" extends ", H._rtiToString(boundRti, genericContext));
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      optionalNamed = parameters._optionalNamed;
      optionalNamedLength = optionalNamed.length;
      returnTypeText = H._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += C.JSString_methods.$add(sep, H._rtiToString(requiredPositional[i], genericContext));
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalPositional[i], genericContext));
        argumentsText += "]";
      }
      if (optionalNamedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < optionalNamedLength; i += 2, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalNamed[i + 1], genericContext)) + " " + optionalNamed[i];
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParametersText + "(" + argumentsText + ") => " + H.S(returnTypeText);
    },
    _rtiToString: function(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = H._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = H._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return J.$add$ansx(argumentKind === 11 || argumentKind === 12 ? C.JSString_methods.$add("(", s) + ")" : s, "?");
      }
      if (kind === 8)
        return "FutureOr<" + H.S(H._rtiToString(rti._primary, genericContext)) + ">";
      if (kind === 9) {
        $name = H._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length !== 0 ? $name + ("<" + H._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return H._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return H._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (t1 < 0 || t1 >= t2)
          return H.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule: function(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType: function(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        metadata = universe.eT,
        probe = metadata[cls];
      if (probe == null)
        return H._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = H._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = [];
        for (i = 0; i < $length; ++i)
          $arguments.push(erased);
        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);
        metadata[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules: function(universe, rules) {
      return H._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes: function(universe, types) {
      return H._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval: function(universe, recipe, normalize) {
      var rti,
        cache = universe.eC,
        probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, null, recipe, normalize);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment: function(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, environment, recipe, true);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind: function(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__parseRecipe: function(universe, environment, recipe, normalize) {
      var rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, normalize));
      if (rti != null)
        return rti;
      throw H.wrapException(P.UnimplementedError$('_Universe._parseRecipe("' + H.S(recipe) + '")'));
    },
    _Universe__installTypeTests: function(universe, rti) {
      rti._as = H._generalAsCheckImplementation;
      rti._is = H._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti: function(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti: function(universe, baseType, key, normalize) {
      var baseKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Null || baseKind === 7 || baseKind === 6)
          return baseType;
      }
      rti = new H.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, starArgumentKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.Null))
            if (baseKind !== 7)
              t1 = baseKind === 8 && H.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          starArgumentKind = starArgument._kind;
          if (starArgumentKind === 1)
            return type$.Null;
          else if (starArgumentKind === 8 && H.isNullable(starArgument._primary))
            return starArgument;
          else
            return H.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return H._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null)
          return type$.Future_Null;
      }
      rti = new H.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin: function($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed: function($arguments) {
      var s, sep, i, t1, s0,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 2, sep = ",") {
        t1 = $arguments[i];
        s0 = $arguments[i + 1]._canonicalRecipe;
        s += sep + t1 + ":" + s0;
      }
      return s;
    },
    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length !== 0)
        s += "<" + H._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti: function(universe, base, $arguments) {
      var newBase, newArguments, s, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      s = newBase._canonicalRecipe + ";" + ("<" + H._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {
      var key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        optionalNamed = parameters._optionalNamed,
        optionalNamedLength = optionalNamed.length,
        recipe = "(" + H._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "[" + H._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      if (optionalNamedLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "{" + H._Universe__canonicalRecipeJoinNamed(optionalNamed) + "}";
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + "<" + H._Universe__canonicalRecipeJoin(bounds) + ">",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = new Array($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Parser_create: function(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse: function(parser) {
      var t1, i, ch, universe, array, head, base, u, parameters, optionalPositional, optionalNamed, item,
        source = parser.r,
        stack = parser.s;
      for (t1 = source.length, i = 0; i < t1;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = H._Parser_handleDigit(i + 1, ch, source, stack);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = H._Parser_handleIdentifier(parser, i, source, stack, false);
        else if (ch === 46)
          i = H._Parser_handleIdentifier(parser, i, source, stack, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              break;
            case 59:
              stack.push(H._Parser_toType(parser.u, parser.e, stack.pop()));
              break;
            case 94:
              stack.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));
              break;
            case 35:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 62:
              universe = parser.u;
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              head = stack.pop();
              if (typeof head == "string")
                stack.push(H._Universe__lookupInterfaceRti(universe, head, array));
              else {
                base = H._Parser_toType(universe, parser.e, head);
                switch (base._kind) {
                  case 11:
                    stack.push(H._Universe__lookupGenericFunctionRti(universe, base, array, parser.n));
                    break;
                  default:
                    stack.push(H._Universe__lookupBindingRti(universe, base, array));
                    break;
                }
              }
              break;
            case 38:
              H._Parser_handleExtendedOperations(parser, stack);
              break;
            case 42:
              u = parser.u;
              stack.push(H._Universe__lookupStarRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 63:
              u = parser.u;
              stack.push(H._Universe__lookupQuestionRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 47:
              u = parser.u;
              stack.push(H._Universe__lookupFutureOrRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 40:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 41:
              universe = parser.u;
              parameters = new H._FunctionParameters();
              optionalPositional = universe.sEA;
              optionalNamed = universe.sEA;
              head = stack.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = stack.pop();
                    break;
                  case -2:
                    optionalNamed = stack.pop();
                    break;
                  default:
                    stack.push(head);
                    break;
                }
              else
                stack.push(head);
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._optionalNamed = optionalNamed;
              stack.push(H._Universe__lookupFunctionRti(universe, H._Parser_toType(universe, parser.e, stack.pop()), parameters));
              break;
            case 91:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 93:
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-1);
              break;
            case 123:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 125:
              array = stack.splice(parser.p);
              H._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = stack.pop();
      return H._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit: function(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = H._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          H.throwExpression('No "' + string + '" in "' + H.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations: function(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw H.wrapException(P.AssertionError$("Unexpected extended operation " + H.S($top)));
    },
    _Parser_toType: function(universe, environment, item) {
      if (typeof item == "string")
        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return H._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 1; i < $length; i += 2)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType: function(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw H.wrapException(P.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw H.wrapException(P.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype: function(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (H.isStrongTopType(t) || t === type$.Object)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (H.isStrongTopType(s))
        return false;
      if (s === type$.Null)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      if (sKind === 6)
        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = t._primary;
        return H._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return t1;
      }
      if (tKind === 8) {
        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = H._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t1;
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (t1 = type$.Rti, i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          t1._as(sBound);
          t1._as(tBound);
          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sOptionalNamed, tOptionalNamed, sOptionalNamedLength, tOptionalNamedLength, j, tName, sName;
      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sOptionalNamed = sParameters._optionalNamed;
      tOptionalNamed = tParameters._optionalNamed;
      sOptionalNamedLength = sOptionalNamed.length;
      tOptionalNamedLength = tOptionalNamed.length;
      for (i = 0, j = 0; j < tOptionalNamedLength; j += 2) {
        tName = tOptionalNamed[j];
        do {
          if (i >= sOptionalNamedLength)
            return false;
          sName = sOptionalNamed[i];
          i += 2;
        } while (sName < tName);
        if (tName < sName)
          return false;
        t1 = sOptionalNamed[i - 1];
        if (!H._isSubtype(universe, tOptionalNamed[j + 1], tEnv, t1, sEnv))
          return false;
      }
      return true;
    },
    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {
      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,
        sName = s._primary,
        tName = t._primary;
      if (sName === tName) {
        sArgs = s._rest;
        tArgs = t._rest;
        $length = sArgs.length;
        for (i = 0; i < $length; ++i) {
          t1 = sArgs[i];
          t2 = tArgs[i];
          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))
            return false;
        }
        return true;
      }
      if (t === type$.Object)
        return true;
      rule = H._Universe_findRule(universe, sName);
      if (rule == null)
        return false;
      supertypeArgs = rule[tName];
      if (supertypeArgs == null)
        return false;
      $length = supertypeArgs.length;
      tArgs = t._rest;
      for (i = 0; i < $length; ++i)
        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    isNullable: function(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null))
        if (!H.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && H.isNullable(t._primary)))
              t1 = kind === 8 && H.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType: function(t) {
      return H.isStrongTopType(t) || t === type$.Object;
    },
    isStrongTopType: function(t) {
      var t2,
        t1 = t._kind,
        kind = t1;
      if (kind !== 2)
        if (kind !== 3)
          if (kind !== 4)
            if (kind !== 5) {
              t2 = type$.Object;
              if (!(t === t2))
                t1 = t1 === 7 && t._primary === t2;
              else
                t1 = true;
            } else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _Utils_objectAssign: function(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._optionalNamed = this._optionalPositional = this._requiredPositional = null;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    isBrowserObject: function(o) {
      return type$.Blob._is(o) || type$.Event._is(o) || type$.KeyRange._is(o) || type$.ImageData._is(o) || type$.Node._is(o) || type$.Window._is(o) || type$.WorkerGlobalScope._is(o);
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return init.mangledGlobalNames[$name];
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JSArray_markFixedList: function(list) {
      list.fixed$length = Array;
      return list;
    },
    JSString__isWhitespace: function(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace: function(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace: function(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$bn: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$innerHtml$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$innerHtml(receiver, value);
    },
    set$type$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$type(receiver, value);
    },
    get$attributes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$children$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$data$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$data(receiver);
    },
    get$first$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$innerHtml$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$innerHtml(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$onClick$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$onClick(receiver);
    },
    get$target$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    get$type$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$type(receiver);
    },
    get$value$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$value(receiver);
    },
    get$valueAsNumber$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$valueAsNumber(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $and$bn: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver & a0) >>> 0;
      return J.getInterceptor$bn(receiver).$and(receiver, a0);
    },
    $div$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver / a0;
      return J.getInterceptor$n(receiver).$div(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $ge$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver >= a0;
      return J.getInterceptor$n(receiver).$ge(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $lt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver < a0;
      return J.getInterceptor$n(receiver).$lt(receiver, a0);
    },
    $or$bn: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver | a0) >>> 0;
      return J.getInterceptor$bn(receiver).$or(receiver, a0);
    },
    $shl$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).$shl(receiver, a0);
    },
    $sub$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    _clearChildren$0$x: function(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    _removeEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    clamp$2$n: function(receiver, a0, a1) {
      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    containsKey$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    createGain$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).createGain$0(receiver);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    remove$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    startsWith$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
    },
    substring$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).substring$1(receiver, a0);
    },
    toInt$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).toInt$0(receiver);
    },
    toLowerCase$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toRadixString$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trim$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSDouble: function JSDouble() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync: function(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn: function(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var t1, future,
        thenCallback = new P._awaitOnObject_closure(bodyFunction),
        errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      if (object instanceof P._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new P._Future($.Zone__current, type$._Future_dynamic);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), type$.Null, type$.int, type$.dynamic);
    },
    _Future__chainForeignFuture: function(source, target) {
      var e, s, exception;
      target._state = 1;
      try {
        source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), type$.Null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
      }
    },
    _Future__chainCoreFuture: function(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, t2 === 2;)
        source = t1._as(source._resultOrListeners);
      if (t2 >= 4) {
        listeners = target._removeListeners$0();
        target._state = source._state;
        target._resultOrListeners = source._resultOrListeners;
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$._FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = 2;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var t2, t3, t4, _box_0, hasError, asyncError, listeners0, sourceResult, t5, t6, zone, t7, oldZone, current, result, _null = null, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$._FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        hasError = t1._state === 8;
        if (listeners == null) {
          if (hasError) {
            asyncError = t2._as(t1._resultOrListeners);
            P._rootHandleUncaughtError(_null, _null, t1._zone, asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
          listeners._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, listeners);
        }
        t1 = _box_1.source;
        sourceResult = t1._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        t5 = !hasError;
        if (t5) {
          t6 = listeners.state;
          t6 = (t6 & 1) !== 0 || (t6 & 15) === 8;
        } else
          t6 = true;
        if (t6) {
          t6 = listeners.result;
          zone = t6._zone;
          if (hasError) {
            t7 = t1._zone === zone;
            t7 = !(t7 || t7);
          } else
            t7 = false;
          if (t7) {
            t2._as(sourceResult);
            P._rootHandleUncaughtError(_null, _null, t1._zone, sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = _null;
          t1 = listeners.state;
          if ((t1 & 15) === 8)
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
          else if (t5) {
            if ((t1 & 1) !== 0)
              new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            if (t1._state >= 4) {
              current = t3._as(t6._resultOrListeners);
              t6._resultOrListeners = null;
              listeners = t6._reverseListeners$1(current);
              t6._state = t1._state;
              t6._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              P._Future__chainCoreFuture(t1, t6);
            return;
          }
        }
        result = listeners.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 4;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(callback);
      if ($._nextCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = $._lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var entry, t2,
        t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        entry.next = t2.next;
        $._lastPriorityCallback = t2.next = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      P._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      if (stream == null)
        H.throwExpression(P.ArgumentError$notNull("stream"));
      return new P._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController$broadcast: function(onCancel, sync, $T) {
      return sync ? new P._SyncBroadcastStreamController(null, onCancel, $T._eval$1("_SyncBroadcastStreamController<0>")) : new P._AsyncBroadcastStreamController(null, onCancel, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(null, null, $.Zone__current, e, type$.StackTrace._as(s));
      }
    },
    _nullErrorHandler: function(error, stackTrace) {
      P._rootHandleUncaughtError(null, null, $.Zone__current, error, stackTrace);
    },
    _nullDoneHandler: function() {
    },
    _cancelAndValue: function(subscription, future, value) {
      var action, t1, t2,
        cancelFuture = subscription.cancel$0();
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture()) {
        action = type$.dynamic_Function._as(new P._cancelAndValue_closure(future, value));
        t1 = H._instanceType(cancelFuture);
        t2 = $.Zone__current;
        cancelFuture._addListener$1(new P._FutureListener(new P._Future(t2, t1._eval$1("_Future<1>")), 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      } else
        future._complete$1(value);
    },
    Timer_Timer: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createTimer(duration, type$.void_Function._as(callback));
      return P.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    AsyncError$: function(error, stackTrace) {
      var t1 = stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace;
      P.ArgumentError_checkNotNull(error, "error", type$.Object);
      return new P.AsyncError(error, t1);
    },
    AsyncError_defaultStackTrace: function(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return C.C__StringStackTrace;
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      t1.stackTrace = stackTrace;
      if (error == null) {
        t1.error = new P.ArgumentError(false, null, "error", "Must not be null");
        t1.stackTrace = P.StackTrace_current();
      }
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1));
    },
    _rootRun: function($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      var t1;
      type$.void_Function._as(f);
      t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || false) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);
      P._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onDone = _._onError = _._async$_onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future: function Future() {
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.target = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncComplete_closure: function _Future__asyncComplete_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.hasError = t3;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1, t2) {
      this._box_0 = t0;
      this.listener = t1;
      this.sourceResult = t2;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1, t2) {
      this._box_1 = t0;
      this._box_0 = t1;
      this.listener = t2;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.future = t2;
    },
    Stream_first_closure0: function Stream_first_closure0(t0) {
      this.future = t0;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _ControllerStream: function _ControllerStream() {
    },
    _ControllerSubscription: function _ControllerSubscription() {
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents(t0) {
      var _ = this;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _._state = 0;
      _.$ti = t0;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0) {
      this._box_0 = t0;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    LinkedHashMap_LinkedHashMap: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$: function(_set, _modifications, $E) {
      var t1 = new P._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current());
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap($K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var t1, _i,
        result = P.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    ListQueue: function ListQueue(t0) {
      var _ = this;
      _._table = null;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t0;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson: function(source, reviver) {
      var parsed, e, exception, t1;
      if (typeof source != "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e), null, null);
        throw H.wrapException(t1);
      }
      t1 = P._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Base64Encoder_encodeChunk: function(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, i, byteOr, byte, outputIndex0, t3, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = bytes.length, t2 = output.length, i = start, byteOr = 0; i < end; ++i) {
        if (i >= t1)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return H.iae(byte);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);
          if (outputIndex >= t2)
            return H.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);
          if (outputIndex0 >= t2)
            return H.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          outputIndex0 = outputIndex + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);
          if (outputIndex >= t2)
            return H.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits & 63);
          if (outputIndex0 >= t2)
            return H.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);
            if (outputIndex0 >= t2)
              return H.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            if (outputIndex1 >= t2)
              return H.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);
            if (outputIndex0 >= t2)
              return H.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);
            if (outputIndex1 >= t2)
              return H.ioore(output, outputIndex1);
            output[outputIndex1] = t1;
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        if (i >= t1)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return byte.$lt();
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      t1 = "Not a byte value at index " + i + ": 0x";
      if (i >= bytes.length)
        return H.ioore(bytes, i);
      throw H.wrapException(P.ArgumentError$value(bytes, t1 + J.toRadixString$1$n(bytes[i], 16), null));
    },
    JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {
      return new P.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable: function(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier_stringify: function(object, toEncodable, indent) {
      var stringifier, t1,
        output = new P.StringBuffer("");
      if (indent == null)
        stringifier = new P._JsonStringStringifier(output, [], P.convert___defaultToEncodable$closure());
      else
        stringifier = new P._JsonStringStringifierPretty(indent, 0, output, [], P.convert___defaultToEncodable$closure());
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0, t1) {
      this.indent = t0;
      this._toEncodable = t1;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonPrettyPrintMixin_writeMap_closure: function _JsonPrettyPrintMixin_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _JsonStringStringifierPretty: function _JsonStringStringifierPretty(t0, t1, t2, t3, t4) {
      var _ = this;
      _._indent = t0;
      _._JsonPrettyPrintMixin__indentLevel = t1;
      _._sink = t2;
      _._seen = t3;
      _._toEncodable = t4;
    },
    __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin: function __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin() {
    },
    _symbolMapToStringMap: function(map) {
      var result = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      J.forEach$1$ax(map, new P._symbolMapToStringMap_closure(result));
      return result;
    },
    Function_apply: function($function, positionalArguments, namedArguments) {
      return H.Primitives_applyFunction($function, positionalArguments, namedArguments == null ? null : P._symbolMapToStringMap(namedArguments));
    },
    int_parse: function(source) {
      var value = H.Primitives_parseInt(source, null);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.S(H.Primitives_objectTypeName(object)) + "'";
    },
    List_List$from: function(elements, growable, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        C.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      if (growable)
        return list;
      return $E._eval$1("List<0>")._as(J.JSArray_markFixedList(list));
    },
    String_String$fromCharCodes: function(charCodes) {
      var len, end, t1;
      if (Array.isArray(charCodes)) {
        type$.JSArray_int._as(charCodes);
        len = charCodes.get$length(charCodes);
        end = P.RangeError_checkValidRange(0, null, len);
        if (typeof end !== "number")
          return end.$lt();
        t1 = C.JSInt_methods.$lt(end, len);
        return H.Primitives_stringFromCharCodes(t1 ? charCodes.sublist$2(0, 0, end) : charCodes);
      }
      if (type$.NativeUint8List._is(charCodes))
        return H.Primitives_stringFromNativeUint8List(charCodes, 0, P.RangeError_checkValidRange(0, null, charCodes.length));
      return P.String__stringFromIterable(charCodes, 0, null);
    },
    String__stringFromIterable: function(charCodes, start, end) {
      var i, list,
        it = new H.ListIterator(charCodes, charCodes.length, H.instanceType(charCodes)._eval$1("ListIterator<ListMixin.E>"));
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, null, null));
      list = [];
      for (; it.moveNext$0();)
        list.push(it.__internal$_current);
      return H.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp: function(source) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, false, true, false, false, false));
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current());
      }
      return string;
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    StackTrace_current: function() {
      var stackTrace, exception;
      if (H.boolConversionCheck($.$get$_hasErrorStackProperty()))
        return H.getTraceFromException(new Error());
      try {
        throw H.wrapException("");
      } catch (exception) {
        H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        return stackTrace;
      }
    },
    DateTime_parse: function(formattedString) {
      var t1, t2, years, month, day, hour, minute, second, milliAndMicroseconds, t3, t4, t5, sign, hourDifference, minuteDifference, isUtc, value,
        match = $.$get$DateTime__parseFormat().firstMatch$1(formattedString);
      if (match != null) {
        t1 = new P.DateTime_parse_parseIntOrZero();
        t2 = match._match;
        if (1 >= t2.length)
          return H.ioore(t2, 1);
        years = P.int_parse(t2[1]);
        if (2 >= t2.length)
          return H.ioore(t2, 2);
        month = P.int_parse(t2[2]);
        if (3 >= t2.length)
          return H.ioore(t2, 3);
        day = P.int_parse(t2[3]);
        if (4 >= t2.length)
          return H.ioore(t2, 4);
        hour = t1.call$1(t2[4]);
        if (5 >= t2.length)
          return H.ioore(t2, 5);
        minute = t1.call$1(t2[5]);
        if (6 >= t2.length)
          return H.ioore(t2, 6);
        second = t1.call$1(t2[6]);
        if (7 >= t2.length)
          return H.ioore(t2, 7);
        milliAndMicroseconds = new P.DateTime_parse_parseMilliAndMicroseconds().call$1(t2[7]);
        if (typeof milliAndMicroseconds !== "number")
          return milliAndMicroseconds.$tdiv();
        t3 = C.JSInt_methods._tdivFast$1(milliAndMicroseconds, 1000);
        t4 = t2.length;
        if (8 >= t4)
          return H.ioore(t2, 8);
        if (t2[8] != null) {
          if (9 >= t4)
            return H.ioore(t2, 9);
          t5 = t2[9];
          if (t5 != null) {
            sign = t5 === "-" ? -1 : 1;
            if (10 >= t4)
              return H.ioore(t2, 10);
            hourDifference = P.int_parse(t2[10]);
            if (11 >= t2.length)
              return H.ioore(t2, 11);
            minuteDifference = t1.call$1(t2[11]);
            if (typeof hourDifference !== "number")
              return H.iae(hourDifference);
            if (typeof minuteDifference !== "number")
              return minuteDifference.$add();
            if (typeof minute !== "number")
              return minute.$sub();
            minute -= sign * (minuteDifference + 60 * hourDifference);
          }
          isUtc = true;
        } else
          isUtc = false;
        value = H.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, t3 + C.JSDouble_methods.round$0(milliAndMicroseconds % 1000 / 1000), isUtc);
        if (value == null)
          throw H.wrapException(P.FormatException$("Time out of range", formattedString, null));
        return P.DateTime$_withValue(value, isUtc);
      } else
        throw H.wrapException(P.FormatException$("Invalid date format", formattedString, null));
    },
    DateTime$_withValue: function(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + _value));
      P.ArgumentError_checkNotNull(isUtc, "isUtc", type$.bool);
      return new P.DateTime(_value, isUtc);
    },
    DateTime__fourDigits: function(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString: function(object) {
      if (typeof object == "number" || H._isBool(object) || null == object)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    AssertionError$: function(message) {
      return new P.AssertionError(message);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull: function($name) {
      return new P.ArgumentError(false, null, $name, "Must not be null");
    },
    ArgumentError_checkNotNull: function(argument, $name, $T) {
      if (argument == null)
        throw H.wrapException(P.ArgumentError$notNull($name));
      return argument;
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange: function(start, end, $length) {
      var t1;
      if (typeof start !== "number")
        return H.iae(start);
      if (0 <= start) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = start > $length;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (!(start > end)) {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = end > $length;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (typeof value !== "number")
        return value.$lt();
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = H._asIntNullable($length == null ? J.get$length$asx(indexable) : $length);
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    FormatException$: function(message, source, offset) {
      return new P.FormatException(message, source, offset);
    },
    num_parse: function(input) {
      var t1,
        source = J.trim$0$s(input),
        result = H.Primitives_parseInt(source, null);
      if (result == null)
        result = H.Primitives_parseDouble(source);
      if (result != null)
        return result;
      t1 = P.FormatException$(input, null, null);
      throw H.wrapException(t1);
    },
    print: function(object) {
      H.printString(H.S(object));
    },
    _symbolMapToStringMap_closure: function _symbolMapToStringMap_closure(t0) {
      this.result = t0;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    bool: function bool() {
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    DateTime_parse_parseIntOrZero: function DateTime_parse_parseIntOrZero() {
    },
    DateTime_parse_parseMilliAndMicroseconds: function DateTime_parse_parseMilliAndMicroseconds() {
    },
    double: function double() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits() {
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._core$_memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Function: function Function() {
    },
    int: function int() {
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    List: function List() {
    },
    Map: function Map() {
    },
    Null: function Null() {
    },
    num: function num() {
    },
    Object: function Object() {
    },
    StackTrace: function StackTrace() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    String: function String() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Symbol0: function Symbol0() {
    },
    convertDartToNative_Dictionary: function(dict) {
      var object = {};
      dict.forEach$1(0, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    convertDartToNative_Dictionary_closure: function convertDartToNative_Dictionary_closure(t0) {
      this.object = t0;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    KeyRange: function KeyRange() {
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, t1, dartArgs;
      H._asBoolNullable(captureThis);
      type$.List_dynamic._as($arguments);
      if (H.boolConversionCheck(captureThis)) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      t1 = type$.dynamic;
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), t1), true, t1);
      return P._convertToJS(P.Function_apply(type$.Function._as(callback), dartArgs, null));
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return null;
    },
    _convertToJS: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || H._isBool(o))
        return o;
      if (o instanceof P.JsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (type$.TypedData._is(o))
        return o;
      if (o instanceof P.DateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (type$.Function._is(o))
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      var t1, t2;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && type$.TypedData._is(o))
        return o;
      else if (o instanceof Date) {
        t1 = H._asIntNullable(o.getTime());
        t2 = new P.DateTime(t1, false);
        t2.DateTime$_withValue$2$isUtc(t1, false);
        return t2;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new P._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(H.convertDartClosureToJS(new P.promiseToFuture_closure(completer, $T), 1), H.convertDartClosureToJS(new P.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JSRandom: function _JSRandom() {
    },
    Point: function Point(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.$ti = t2;
    },
    FEColorMatrixElement: function FEColorMatrixElement() {
    },
    FETurbulenceElement: function FETurbulenceElement() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    StyleElement0: function StyleElement0() {
    },
    SvgElement: function SvgElement() {
    },
    Float32List: function Float32List() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioBufferSourceNode: function AudioBufferSourceNode() {
    },
    AudioContext: function AudioContext() {
    },
    AudioContext_decodeAudioData_closure: function AudioContext_decodeAudioData_closure(t0) {
      this.completer = t0;
    },
    AudioContext_decodeAudioData_closure0: function AudioContext_decodeAudioData_closure0(t0) {
      this.completer = t0;
    },
    AudioNode: function AudioNode() {
    },
    AudioParam: function AudioParam() {
    },
    AudioProcessingEvent: function AudioProcessingEvent() {
    },
    AudioScheduledSourceNode: function AudioScheduledSourceNode() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    BiquadFilterNode: function BiquadFilterNode() {
    },
    DelayNode: function DelayNode() {
    },
    DynamicsCompressorNode: function DynamicsCompressorNode() {
    },
    GainNode: function GainNode() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    OscillatorNode: function OscillatorNode() {
    },
    ScriptProcessorNode: function ScriptProcessorNode() {
    }
  },
  W = {
    AnchorElement_AnchorElement: function() {
      var e = document.createElement("a");
      return e;
    },
    AudioElement_AudioElement$_: function(src) {
      return new Audio();
    },
    Element_Element$html: function(html, treeSanitizer, validator) {
      var t1 = document.body,
        fragment = (t1 && C.BodyElement_methods).createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator);
      fragment.toString;
      t1 = type$._ChildNodeListLazy;
      t1 = new H.WhereIterable(new W._ChildNodeListLazy(fragment), t1._eval$1("bool(ListMixin.E)")._as(new W.Element_Element$html_closure()), t1._eval$1("WhereIterable<ListMixin.E>"));
      return type$.Element._as(t1.get$single(t1));
    },
    Element__safeTagName: function(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        if (typeof t1.get$tagName(element) == "string")
          result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    HttpRequest_request: function(url, method, sendData, withCredentials) {
      var t2, t3, t4,
        t1 = new P._Future($.Zone__current, type$._Future_HttpRequest),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_HttpRequest),
        xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, method, url, true);
      xhr.withCredentials = true;
      t2 = type$.void_Function_ProgressEvent;
      t3 = t2._as(new W.HttpRequest_request_closure(xhr, completer));
      type$.void_Function._as(null);
      t4 = type$.ProgressEvent;
      W._EventStreamSubscription$(xhr, "load", t3, false, t4);
      W._EventStreamSubscription$(xhr, "error", t2._as(completer.get$completeError()), false, t4);
      xhr.send(sendData);
      return t1;
    },
    InputElement_InputElement: function() {
      var exception, type = null,
        t1 = document.createElement("input"),
        e = type$.InputElement._as(t1);
      if (type != null)
        try {
          J.set$type$x(e, type);
        } catch (exception) {
          H.unwrapException(exception);
        }
      return e;
    },
    OptionElement_OptionElement$_: function(data, value, defaultSelected, selected) {
      var t1 = new Option(data, value, defaultSelected, selected);
      return t1;
    },
    WebSocket_WebSocket: function(url) {
      return new WebSocket(url);
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d),
        hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = W._wrapZone(new W._EventStreamSubscription_closure(onData), type$.Event);
      if (t1 != null && true)
        J.addEventListener$3$x(_target, _eventType, t1, false);
      return new W._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
    },
    _Html5NodeValidator$: function(uriPolicy) {
      var t1 = W.AnchorElement_AnchorElement(),
        t2 = window.location;
      t1 = new W._Html5NodeValidator(new W._SameOriginUriPolicy(t1, t2));
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
      type$.Element._as(element);
      H._asStringNullable(attributeName);
      H._asStringNullable(value);
      type$._Html5NodeValidator._as(context);
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
      var t1, t2, t3;
      type$.Element._as(element);
      H._asStringNullable(attributeName);
      H._asStringNullable(value);
      t1 = type$._Html5NodeValidator._as(context).uriPolicy;
      t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (!(t3 == t1.hostname && t2.port == t1.port && t2.protocol == t1.protocol))
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$: function() {
      var t1 = type$.String,
        t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1),
        t3 = type$.String_Function_String._as(new W._TemplatingNodeValidator_closure()),
        t4 = H.setRuntimeTypeInfo(["TEMPLATE"], type$.JSArray_String);
      t1 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new H.MappedListIterable(C.List_wSV, t3, type$.MappedListIterable_String_String), t4, null);
      return t1;
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return type$.EventTarget._as(e);
    },
    _convertNativeToDart_XHR_Response: function(o) {
      if (type$.Document._is(o))
        return o;
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(o, true);
    },
    _DOMWindowCrossFrame__createSafe: function(w) {
      if (w === window)
        return type$.WindowBase._as(w);
      else
        return new W._DOMWindowCrossFrame();
    },
    _wrapZone: function(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    BackgroundFetchEvent: function BackgroundFetchEvent() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    BlobEvent: function BlobEvent() {
    },
    BodyElement: function BodyElement() {
    },
    ButtonElement: function ButtonElement() {
    },
    CanvasElement: function CanvasElement() {
    },
    CanvasRenderingContext2D: function CanvasRenderingContext2D() {
    },
    CharacterData: function CharacterData() {
    },
    CompositionEvent: function CompositionEvent() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    DataElement: function DataElement() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._element = t0;
      this._childElements = t1;
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element: function Element() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    EmbedElement: function EmbedElement() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    ExtendableEvent: function ExtendableEvent() {
    },
    ExtendableMessageEvent: function ExtendableMessageEvent() {
    },
    FieldSetElement: function FieldSetElement() {
    },
    FormElement: function FormElement() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequest_request_closure: function HttpRequest_request_closure(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    ImageData: function ImageData() {
    },
    ImageElement: function ImageElement() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    LIElement: function LIElement() {
    },
    LabelElement: function LabelElement() {
    },
    LinkElement: function LinkElement() {
    },
    Location: function Location() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessagePort: function MessagePort() {
    },
    MeterElement: function MeterElement() {
    },
    MidiMessageEvent: function MidiMessageEvent() {
    },
    MouseEvent: function MouseEvent() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    OListElement: function OListElement() {
    },
    ObjectElement: function ObjectElement() {
    },
    OptionElement: function OptionElement() {
    },
    OutputElement: function OutputElement() {
    },
    ParamElement: function ParamElement() {
    },
    ProgressElement: function ProgressElement() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    PushEvent: function PushEvent() {
    },
    ScriptElement: function ScriptElement() {
    },
    SelectElement: function SelectElement() {
    },
    SourceElement: function SourceElement() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleElement: function StyleElement() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextEvent: function TextEvent() {
    },
    Touch: function Touch() {
    },
    TouchEvent: function TouchEvent() {
    },
    TouchList: function TouchList() {
    },
    UIEvent: function UIEvent() {
    },
    WebSocket: function WebSocket() {
    },
    Window: function Window() {
    },
    Window_animationFrame_closure: function Window_animationFrame_closure(t0) {
      this.completer = t0;
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _Attr: function _Attr() {
    },
    _DomRect: function _DomRect() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementListEventStreamImpl: function _ElementListEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._targetList = t0;
      _._useCapture = t1;
      _._eventType = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _StreamPool: function _StreamPool(t0, t1) {
      this._html$_controller = null;
      this._subscriptions = t0;
      this.$ti = t1;
    },
    _StreamPool_add_closure: function _StreamPool_add_closure(t0, t1) {
      this.$this = t0;
      this.stream = t1;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    NodeValidator: function NodeValidator() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.modifiedTree = false;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  D = {
    GrowableAudioBuffer$: function() {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_List_Float32List),
        t2 = new P.ListQueue(type$.ListQueue_List_num),
        t3 = new Array(8);
      t3.fixed$length = Array;
      t2.set$_table(H.setRuntimeTypeInfo(t3, type$.JSArray_List_num));
      t2 = new D.GrowableAudioBuffer(t1, t2);
      t2.reshape$2(1, 44100);
      return t2;
    },
    GrowableAudioBuffer: function GrowableAudioBuffer(t0, t1) {
      var _ = this;
      _._channels = t0;
      _.sampleRate = 44100;
      _.samples = 0;
      _._buffer = null;
      _.waveform = t1;
    },
    Key: function Key(t0, t1) {
      this.pattern = t0;
      this.name = t1;
    }
  },
  U = {
    _toInt: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    MIDIManager: function MIDIManager(t0, t1) {
      var _ = this;
      _.inputs = t0;
      _.outputs = t1;
      _._messageStream = _._stateStream = null;
    },
    MIDIEvent: function MIDIEvent(t0) {
      this.data = t0;
    },
    SynthChain: function SynthChain(t0, t1) {
      var _ = this;
      _.context = t0;
      _.free = true;
      _.nodes = t1;
      _.out = null;
      _.maxD = _.release = 0;
    },
    SynthChain_playNote_closure: function SynthChain_playNote_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.$this = t0;
      _.note = t1;
      _.when = t2;
      _.offset = t3;
      _.duration = t4;
      _.sustain = t5;
    },
    SynthChain_pitchBend_closure: function SynthChain_pitchBend_closure(t0) {
      this.cents = t0;
    },
    SynthChain_releaseNote_closure: function SynthChain_releaseNote_closure() {
    },
    SynthChain_destroy_closure: function SynthChain_destroy_closure() {
    }
  },
  N = {HexCodec: function HexCodec() {
    }, User: function User(t0, t1, t2, t3) {
      var _ = this;
      _.email = _.displayName = null;
      _.anonymous = false;
      _.photo = _.icon = _.color = null;
      _._rand = t0;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    }},
  R = {
    _convert: function(bytes, start, end) {
      var t1, t2, i, bufferIndex, byteOr, byte, bufferIndex0, t3,
        buffer = new Uint8Array((end - start) * 2);
      for (t1 = buffer.length, t2 = bytes.length, i = start, bufferIndex = 0, byteOr = 0; i < end; ++i) {
        if (i >= t2)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return H.iae(byte);
        byteOr = (byteOr | byte) >>> 0;
        bufferIndex0 = bufferIndex + 1;
        t3 = (byte & 240) >>> 4;
        t3 = t3 < 10 ? t3 + 48 : t3 + 97 - 10;
        if (bufferIndex >= t1)
          return H.ioore(buffer, bufferIndex);
        buffer[bufferIndex] = t3;
        bufferIndex = bufferIndex0 + 1;
        t3 = byte & 15;
        t3 = t3 < 10 ? t3 + 48 : t3 + 97 - 10;
        if (bufferIndex0 >= t1)
          return H.ioore(buffer, bufferIndex0);
        buffer[bufferIndex0] = t3;
      }
      if (byteOr >= 0 && byteOr <= 255)
        return P.String_String$fromCharCodes(buffer);
      for (i = start; i < end; ++i) {
        if (i >= t2)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return byte.$ge();
        if (byte >= 0 && byte <= 255)
          continue;
        throw H.wrapException(P.FormatException$("Invalid byte " + (byte < 0 ? "-" : "") + "0x" + C.JSInt_methods.toRadixString$1(Math.abs(byte), 16) + ".", bytes, i));
      }
      throw H.wrapException("unreachable");
    },
    HexEncoder: function HexEncoder() {
    },
    Recording: function Recording(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.instrument = _.description = "";
      _.duration = 0;
      _.original = t0;
      _.processed = t1;
      _.settings = t2;
      _.Recording_username = "";
      _.remix_count = _.star_count = _.like_count = 0;
      _.deleted = _.$public = false;
      _.id = t3;
      _.name = _.type = "";
      _.username = null;
      _.created = t4;
      _.modified = t5;
    },
    DParam$: function($name, value) {
      var t1 = new R.DParam();
      t1.DParam$2($name, value);
      return t1;
    },
    DSelectParam$: function($name, value, options) {
      var t1 = new R.DSelectParam();
      t1.DParam$2($name, value);
      t1.DSelectParam$3($name, value, options);
      return t1;
    },
    DParam: function DParam() {
      this._container = this._input = this.onChange = null;
    },
    DParam_closure: function DParam_closure(t0, t1, t2) {
      this.$this = t0;
      this.label = t1;
      this.name = t2;
    },
    DParam_closure0: function DParam_closure0(t0, t1, t2) {
      this.$this = t0;
      this.label = t1;
      this.name = t2;
    },
    DSelectParam: function DSelectParam() {
      var _ = this;
      _._container = _._input = _.onChange = _._select = null;
    },
    DSelectParam_closure: function DSelectParam_closure(t0) {
      this.$this = t0;
    }
  },
  E = {ClockSubscriber: function ClockSubscriber() {
    }, Metronome: function Metronome() {
    }, PlayClock: function PlayClock(t0, t1, t2, t3) {
      var _ = this;
      _._elapsedBeats = 0;
      _._bpm = 120;
      _._meter = "4/4";
      _._beatValue = _._beatsPerMeasure = 4;
      _._key = t0;
      _._subscribers = t1;
      _._listeners = t2;
      _._metronomes = t3;
    }, PlayClock_setTempo_closure: function PlayClock_setTempo_closure() {
    }, PlayClock_setTimeSignature_closure: function PlayClock_setTimeSignature_closure() {
    }},
  K = {Effect: function Effect() {
    }, Project: function Project(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clock = t0;
      _.bars = 20;
      _.summary = _.description = "";
      _.color = "black";
      _.deleted = _.$public = false;
      _.remix_parent = null;
      _.tags = t1;
      _.settings = t2;
      _.id = t3;
      _.name = _.type = "";
      _.username = null;
      _.created = t4;
      _.modified = t5;
    },
    Uuid$: function() {
      var options, t2, t1 = {};
      t1.options = options;
      t1.options = null;
      t2 = new K.Uuid();
      t2.Uuid$1$options(t1);
      return t2;
    },
    Uuid: function Uuid() {
      var _ = this;
      _._clockSeq = _._nodeId = _._seedBytes = null;
      _._lastNSecs = _._lastMSecs = 0;
      _._hexToByte = _._byteToHex = null;
    },
    Contact$fromMouse: function(mouse) {
      var t2, t3,
        t1 = new K.Contact(false);
      t1.id = -1;
      t2 = J.getInterceptor$x(mouse);
      t3 = t2.get$offset(mouse).x;
      t3.toString;
      t1.touchX = t3;
      t2 = t2.get$offset(mouse).y;
      t2.toString;
      t1.touchY = t2;
      t1.finger = true;
      t1.down = mouse.type === "mousedown";
      return t1;
    },
    TouchManager: function TouchManager(t0, t1) {
      var _ = this;
      _.mdown = false;
      _.parent = null;
      _.layers = t0;
      _.touch_bindings = t1;
      _._lastMouseOver = null;
    },
    TouchManager_registerEvents_closure: function TouchManager_registerEvents_closure(t0) {
      this.$this = t0;
    },
    TouchManager_registerEvents_closure0: function TouchManager_registerEvents_closure0(t0) {
      this.$this = t0;
    },
    TouchManager_registerEvents_closure1: function TouchManager_registerEvents_closure1(t0) {
      this.$this = t0;
    },
    TouchManager_registerEvents_closure2: function TouchManager_registerEvents_closure2(t0) {
      this.$this = t0;
    },
    TouchManager_registerEvents_closure3: function TouchManager_registerEvents_closure3(t0) {
      this.$this = t0;
    },
    TouchManager_registerEvents_closure4: function TouchManager_registerEvents_closure4() {
    },
    TouchLayer: function TouchLayer() {
    },
    TouchBinding: function TouchBinding(t0, t1) {
      this.layer = t0;
      this.touchable = t1;
    },
    Touchable: function Touchable() {
    },
    Contact: function Contact(t0) {
      var _ = this;
      _.id = null;
      _.tagId = -1;
      _.touchY = _.touchX = 0;
      _.up = false;
      _.down = t0;
      _.finger = _.drag = false;
    }
  },
  X = {SynthEvent: function SynthEvent(t0) {
      this.note = t0;
      this.onEnded = this.chain = null;
    }, SynthEvent_releaseNote_closure: function SynthEvent_releaseNote_closure(t0) {
      this.$this = t0;
    }},
  B = {
    SynthNode$: function(context, config) {
      var t1 = new B.SynthNode(context);
      t1.SynthNode$2(context, config);
      return t1;
    },
    DistNode$: function(context, config) {
      var t1 = new B.DistNode(context);
      t1.SynthNode$2(context, config);
      t1.DistNode$2(context, config);
      return t1;
    },
    SynthNode: function SynthNode(t0) {
      var _ = this;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    ADSRNode: function ADSRNode(t0, t1, t2, t3) {
      var _ = this;
      _.A = t0;
      _.D = t1;
      _.S = 1;
      _.R = t2;
      _.adsr = null;
      _.context = t3;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    FMNode: function FMNode(t0) {
      var _ = this;
      _.fIn = _.dIn = _.osc = null;
      _.frequency = 1;
      _.relative = true;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    LFONode: function LFONode(t0) {
      var _ = this;
      _.osc = null;
      _.frequency = 1;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    DistNode: function DistNode(t0) {
      var _ = this;
      _.preGainNode = _.spn = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    DistNode_closure: function DistNode_closure() {
    },
    DistNode__closure: function DistNode__closure() {
    },
    SynthSampleNode: function SynthSampleNode(t0) {
      var _ = this;
      _.samples = _.pIn = _.dIn = _.source = null;
      _.sampleDuration = 0;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    SynthDelayNode: function SynthDelayNode(t0, t1) {
      var _ = this;
      _.delay = null;
      _.delayTime = t0;
      _.context = t1;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    SynthCompressorNode: function SynthCompressorNode(t0) {
      var _ = this;
      _.compressor = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    FilterNode: function FilterNode(t0) {
      var _ = this;
      _.filter = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    DOutNode$: function(designer, $name, config) {
      var e,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket);
      t1 = new B.DOutNode(designer, config, $name, t1, t2, H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.color = "#660080";
      t1.label = "out";
      C.JSArray_methods.add$1(t2, new V.DNodeSocket(t1, -39, 0, "out"));
      J.$indexSet$ax(config, "type", "out");
      e = document.createElement("img");
      e.src = "images/designer/out.svg";
      t1._icon = e;
      return t1;
    },
    DADSRNode$: function(designer, $name, config) {
      var t1 = new B.DADSRNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DADSRNode$3(designer, $name, config);
      return t1;
    },
    DLFONode$: function(designer, $name, config) {
      var t1 = new B.DLFONode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DLFONode$3(designer, $name, config);
      return t1;
    },
    DDistNode$: function(designer, $name, config) {
      var t1 = new B.DDistNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DDistNode$3(designer, $name, config);
      return t1;
    },
    DOscNode$: function(designer, $name, config) {
      var t1 = new B.DOscNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DOscNode$3(designer, $name, config);
      return t1;
    },
    DGainNode$: function(designer, $name, config) {
      var t1 = new B.DGainNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DGainNode$3(designer, $name, config);
      return t1;
    },
    DDelayNode$: function(designer, $name, config) {
      var t1 = new B.DDelayNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DDelayNode$3(designer, $name, config);
      return t1;
    },
    DSampleNode$: function(designer, $name, config) {
      var t1 = new B.DSampleNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DSampleNode$3(designer, $name, config);
      return t1;
    },
    DCompressorNode$: function(designer, $name, config) {
      var t1 = new B.DCompressorNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DCompressorNode$3(designer, $name, config);
      return t1;
    },
    DFilterNode$: function(designer, $name, config) {
      var t1 = new B.DFilterNode(designer, config, $name, H.setRuntimeTypeInfo([], type$.JSArray_DNodeConnector), H.setRuntimeTypeInfo([], type$.JSArray_DNodeSocket), H.setRuntimeTypeInfo([], type$.JSArray_DParam));
      t1.DNode$3(designer, $name, config);
      t1.DFilterNode$3(designer, $name, config);
      return t1;
    },
    roundRect: function(ctx, rx, ry, rw, rh, rr) {
      var t1, t2, t3, t4, t5, t6;
      ctx.beginPath();
      t1 = rx + rr;
      ctx.moveTo(t1, ry);
      t2 = rx + rw;
      t3 = t2 - rr;
      ctx.lineTo(t3, ry);
      t4 = ry + rr;
      ctx.quadraticCurveTo(t2, ry, t2, t4);
      t5 = ry + rh;
      t6 = t5 - rr;
      ctx.lineTo(t2, t6);
      ctx.quadraticCurveTo(t2, t5, t3, t5);
      ctx.lineTo(t1, t5);
      ctx.quadraticCurveTo(rx, t5, rx, t6);
      ctx.lineTo(rx, t4);
      ctx.quadraticCurveTo(rx, ry, t1, ry);
      ctx.closePath();
    },
    DNode: function DNode() {
    },
    DNode_animate_closure: function DNode_animate_closure(t0) {
      this._box_0 = t0;
    },
    DOutNode: function DOutNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DADSRNode: function DADSRNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DADSRNode_closure: function DADSRNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DADSRNode_closure0: function DADSRNode_closure0(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DADSRNode_closure1: function DADSRNode_closure1(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DADSRNode_closure2: function DADSRNode_closure2(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DADSRNode_closure3: function DADSRNode_closure3(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DLFONode: function DLFONode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DLFONode_closure: function DLFONode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DLFONode_closure0: function DLFONode_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.config = t1;
      _.name = t2;
      _.designer = t3;
    },
    DLFONode_closure1: function DLFONode_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.config = t1;
      _.name = t2;
      _.designer = t3;
    },
    DDistNode: function DDistNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DDistNode_closure: function DDistNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DDistNode_closure0: function DDistNode_closure0(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DOscNode: function DOscNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DOscNode_closure: function DOscNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DOscNode_closure0: function DOscNode_closure0(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DOscNode_closure1: function DOscNode_closure1(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DOscNode_closure2: function DOscNode_closure2(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.config = t1;
      _.name = t2;
      _.designer = t3;
    },
    DOscNode_closure3: function DOscNode_closure3(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DOscNode_closure4: function DOscNode_closure4(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.config = t1;
      _.name = t2;
      _.designer = t3;
    },
    DGainNode: function DGainNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DGainNode_closure: function DGainNode_closure(t0, t1, t2) {
      this.$this = t0;
      this.config = t1;
      this.designer = t2;
    },
    DDelayNode: function DDelayNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DDelayNode_closure: function DDelayNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DDelayNode_closure0: function DDelayNode_closure0(t0, t1, t2) {
      this.$this = t0;
      this.config = t1;
      this.designer = t2;
    },
    DSampleNode: function DSampleNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DSampleNode_closure: function DSampleNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DCompressorNode: function DCompressorNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DCompressorNode_closure: function DCompressorNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DCompressorNode_closure0: function DCompressorNode_closure0(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DCompressorNode_closure1: function DCompressorNode_closure1(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DCompressorNode_closure2: function DCompressorNode_closure2(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DCompressorNode_closure3: function DCompressorNode_closure3(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DFilterNode: function DFilterNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.designer = t0;
      _.id = 0;
      _.config = t1;
      _.cy = _.cx = 100;
      _._dragging = false;
      _._lastY = _._lastX = _._touchY = _._touchX = null;
      _.name = t2;
      _.label = null;
      _.color = "#016394";
      _._icon = null;
      _.links = t3;
      _.sockets = t4;
      _.params = t5;
    },
    DFilterNode_closure: function DFilterNode_closure(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DFilterNode_closure0: function DFilterNode_closure0(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DFilterNode_closure1: function DFilterNode_closure1(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DFilterNode_closure2: function DFilterNode_closure2(t0, t1) {
      this.config = t0;
      this.designer = t1;
    },
    DFilterNode_closure3: function DFilterNode_closure3(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.config = t1;
      _.name = t2;
      _.designer = t3;
    },
    toInt0: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toNum1: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (typeof d == "number")
        return d;
      else
        try {
          t1 = P.num_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toBool0: function(b, defaultValue) {
      var s;
      if (b == null)
        return true;
      else if (H._isBool(b))
        return b;
      else {
        s = J.toString$0$(b);
        if (s.toLowerCase() === "true" || s.toLowerCase() === "t")
          return true;
        else if (s.toLowerCase() === "false" || s.toLowerCase() === "f")
          return false;
      }
      return true;
    },
    toInt: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toNum: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (typeof d == "number")
        return d;
      else
        try {
          t1 = P.num_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toDateTime: function(d) {
      var t1, exception;
      if (d == null)
        return new P.DateTime(Date.now(), false);
      else if (H._isInt(d)) {
        t1 = new P.DateTime(d, false);
        t1.DateTime$_withValue$2$isUtc(d, false);
        return t1;
      } else if (typeof d == "string")
        try {
          t1 = P.DateTime_parse(d);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          P.print("unable to parse datetime");
        }
      return new P.DateTime(Date.now(), false);
    },
    toBool: function(b, defaultValue) {
      var s;
      if (b == null)
        return defaultValue;
      else if (H._isBool(b))
        return b;
      else {
        s = J.toString$0$(b);
        if (s.toLowerCase() === "true" || s.toLowerCase() === "t")
          return true;
        else if (s.toLowerCase() === "false" || s.toLowerCase() === "f")
          return false;
      }
      return defaultValue;
    },
    toNum0: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (typeof d == "number")
        return d;
      else
        try {
          t1 = P.num_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    }
  },
  F = {Note: function Note() {
      this._note = 60;
      this._velocity = 90;
    },
    main: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t1, t2, t3, t4, t5;
      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.synth = new L.Synthesizer(H.setRuntimeTypeInfo([], type$.JSArray_Effect), H.setRuntimeTypeInfo([], type$.JSArray_SynthEvent), H.setRuntimeTypeInfo([], type$.JSArray_SynthChain));
              t1 = document;
              $.designer = V.SynthDesigner$(type$.CanvasElement._as(t1.querySelector("#designer")), $.synth);
              t2 = S.Datastore$("https://tunepad.club", "wss://tunepad.club/websocket/");
              $.datastore = t2;
              t2 = t2._logout_stream;
              new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(new F.main_closure());
              t2 = $.datastore._updated_stream;
              new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(F.main__patchUpdated$closure());
              t2 = $.datastore._created_stream;
              new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(F.main__patchCreated$closure());
              t2 = $.datastore._deleted_stream;
              new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(F.main__patchDeleted$closure());
              $async$goto = 2;
              return P._asyncAwait($.datastore.connect$0(), $async$main);
            case 2:
              // returning from await.
              t2 = type$.Element;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              t4 = type$.ElementList_Element;
              t5 = type$._ElementListEventStreamImpl_MouseEvent;
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#add-patch"), t3)), false, "click", t5).listen$1(new F.main_closure0());
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#save-patch"), t3)), false, "click", t5).listen$1(new F.main_closure1());
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#delete-patch"), t3)), false, "click", t5).listen$1(new F.main_closure2());
              F.loadPatches();
              t5 = window;
              t3 = type$.void_Function_KeyboardEvent;
              t4 = t3._as(new F.main_closure3());
              type$.void_Function._as(null);
              t2 = type$.KeyboardEvent;
              W._EventStreamSubscription$(t5, "keydown", t4, false, t2);
              W._EventStreamSubscription$(window, "keyup", t3._as(new F.main_closure4()), false, t2);
              t1 = new W._EventStream(t1, "click", false, type$._EventStream_MouseEvent);
              t1.get$first(t1).then$1$1(new F.main_closure5(), type$.Null);
              t1 = $.$get$MIDIManager__singleton()._messageStream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(new F.main_closure6());
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$main, $async$completer);
    },
    initWebAudio: function() {
      if ($.context == null) {
        var t1 = new (window.AudioContext || window.webkitAudioContext)();
        $.context = t1;
        t1 = t1.createAnalyser();
        $.analyzer = t1;
        t1.fftSize = 2048;
        t1 = $.analyzer.frequencyBinCount;
        t1 = H._isInt(t1) ? t1 : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(t1)));
        $.analyzerData = new Uint8Array(t1);
        $.analyzer.connect($.context.destination, 0, 0);
        $.synth.loadPatch$3("designer", C.Map_b8Sgx, $.context);
        C.Window_methods.requestAnimationFrame$1(window, F.main__draw$closure());
      }
    },
    draw: function(t) {
      var canvas, ctx, w, h, t1, len, start, i, x, y;
      H._asNumNullable(t);
      canvas = type$.CanvasElement._as(document.querySelector("#visualizer"));
      ctx = type$.CanvasRenderingContext2D._as((canvas && C.CanvasElement_methods).getContext$1(canvas, "2d"));
      w = canvas.width;
      h = canvas.height;
      ctx.clearRect(0, 0, w, h);
      if ($.synth.notes.length !== 0)
        C.Window_methods.requestAnimationFrame$1(window, F.main__draw$closure());
      $.analyzer.getByteTimeDomainData($.analyzerData);
      ctx.lineWidth = 2;
      ctx.strokeStyle = "rgb(255, 255, 0)";
      ctx.beginPath();
      t1 = $.analyzerData;
      len = t1.length;
      if (len <= 0)
        return;
      t1[0];
      i = 1;
      while (true) {
        if (!(i < len)) {
          start = 0;
          break;
        }
        if (t1[i] < 128 && t1[i - 1] >= 128) {
          start = i;
          break;
        }
        ++i;
      }
      if (typeof w !== "number")
        return w.$div();
      i = start;
      x = 0;
      y = 0;
      while (true) {
        if (!(i < len && x < w))
          break;
        t1 = $.analyzerData;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1 = t1[i];
        if (typeof h !== "number")
          return H.iae(h);
        y = t1 / 128 * h / 2;
        if (i === 0)
          ctx.moveTo(x, y);
        else
          ctx.lineTo(x, y);
        ++x;
        ++i;
      }
      ctx.lineTo(x + 1, y);
      ctx.stroke();
      t1 = $.$get$notes();
      if (t1.get$length(t1) === 1) {
        t1 = $.$get$notes();
        t1 = t1.get$values(t1);
        t1 = t1.get$first(t1) != null;
      } else
        t1 = false;
      if (t1) {
        ctx.fillStyle = "rgba(255, 255, 255, 0.8)";
        ctx.font = "14px sans-serif";
        t1 = $.$get$notes();
        t1 = t1.get$values(t1);
        t1 = t1.get$first(t1).note._note;
        t1 = C.List_0[C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1), 12)] + (C.JSNumber_methods._tdivFast$1(t1, 12) - 1);
        if (typeof h !== "number")
          return h.$sub();
        C.CanvasRenderingContext2D_methods.fillText$3(ctx, t1, 5, h - 10);
      }
    },
    playNote: function(n, velocity) {
      var note;
      if ($.synth == null)
        return;
      note = new F.Note();
      note._note = Math.max(0, n);
      note._velocity = C.JSInt_methods.clamp$2(velocity, 0, 127);
      $.$get$notes().$indexSet(0, n, $.synth._play$3(note, $.analyzer, null));
      F.draw(0);
    },
    releaseNote: function(n) {
      var t1, t2;
      if ($.synth == null)
        return;
      if ($.$get$notes().containsKey$1(0, n)) {
        t1 = $.synth;
        t2 = $.$get$notes().$index(0, n);
        t1.toString;
        type$.SynthEvent._as(t2);
        if (t2 != null)
          t2.releaseNote$0();
        $.$get$notes().remove$1(0, n);
      }
    },
    keyboardEvent: function(evt, down) {
      var n,
        t1 = evt.keyCode;
      if (t1 === 37 && down && $.octave > 0) {
        $.octave = $.octave - 12;
        return;
      } else if (t1 === 39 && $.octave < 72) {
        $.octave = $.octave + 12;
        return;
      }
      switch (evt.key) {
        case "a":
          n = 0;
          break;
        case "w":
          n = 1;
          break;
        case "s":
          n = 2;
          break;
        case "e":
          n = 3;
          break;
        case "d":
          n = 4;
          break;
        case "f":
          n = 5;
          break;
        case "t":
          n = 6;
          break;
        case "g":
          n = 7;
          break;
        case "y":
          n = 8;
          break;
        case "h":
          n = 9;
          break;
        case "u":
          n = 10;
          break;
        case "j":
          n = 11;
          break;
        case "k":
          n = 12;
          break;
        case "o":
          n = 13;
          break;
        case "l":
          n = 14;
          break;
        case "p":
          n = 15;
          break;
        case ";":
          n = 16;
          break;
        case "'":
          n = 17;
          break;
        case "]":
          n = 18;
          break;
        case "Enter":
          n = 19;
          break;
        case "\\":
          n = 20;
          break;
        default:
          n = -1;
      }
      if (n < 0 || H.boolConversionCheck(evt.repeat))
        return;
      n += $.octave;
      if (down)
        F.playNote(n, 100);
      else
        F.releaseNote(n);
    },
    loadPatches: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t1, el, t2, t3, t4, t5, t6, li, button, userPatches, publicPatches;
      var $async$loadPatches = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($.datastore.getUserSynthPatches$0(), $async$loadPatches);
            case 2:
              // returning from await.
              userPatches = $async$result;
              $async$goto = 3;
              return P._asyncAwait($.datastore.getPublicSynthPatches$0(), $async$loadPatches);
            case 3:
              // returning from await.
              publicPatches = $async$result;
              for (t1 = J.get$iterator$ax(userPatches); t1.moveNext$0();)
                F.addUserPatch(t1.get$current());
              t1 = document;
              el = t1.querySelector("#public-patches");
              for (t2 = J.get$iterator$ax(publicPatches), t3 = type$._ElementEventStreamImpl_MouseEvent, t4 = t3._eval$1("~(1)"), t5 = type$.void_Function, t3 = t3._precomputed1; t2.moveNext$0();) {
                t6 = t2.get$current();
                li = t1.createElement("li");
                C.LIElement_methods.setInnerHtml$1(li, H.S(t6.voice) + " (" + H.S(t6.instrument) + ")");
                button = t1.createElement("button");
                C.ButtonElement_methods.setInnerHtml$1(button, "Clone");
                t6 = t4._as(new F.loadPatches_closure(t6));
                t5._as(null);
                W._EventStreamSubscription$(button, "click", t6, false, t3);
                li.appendChild(button);
                el.appendChild(li);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadPatches, $async$completer);
    },
    addUserPatch: function(patch) {
      var li, link, t2,
        t1 = document,
        el = t1.querySelector("#user-patches");
      if (el != null) {
        li = t1.createElement("li");
        li.id = "patch-" + H.S(patch.id);
        link = W.AnchorElement_AnchorElement();
        C.AnchorElement_methods.setInnerHtml$1(link, H.S(patch.voice) + " (" + H.S(patch.instrument) + ")");
        link.href = "#" + H.S(patch.id);
        li.appendChild(link);
        el.appendChild(li);
        t1 = type$._ElementEventStreamImpl_MouseEvent;
        t2 = t1._eval$1("~(1)")._as(new F.addUserPatch_closure(patch));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(link, "click", t2, false, t1._precomputed1);
      }
    },
    addPatch: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t1, patch, $async$temp1, $async$temp2;
      var $async$addPatch = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic;
              patch = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t1, t1), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              patch.voice = "My Patch";
              patch.type = "patch";
              $async$temp1 = F;
              $async$temp2 = type$.SynthPatch;
              $async$goto = 2;
              return P._asyncAwait($.datastore.create$1(patch), $async$addPatch);
            case 2:
              // returning from await.
              $async$temp1.loadPatch($async$temp2._as($async$result));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$addPatch, $async$completer);
    },
    loadPatch: function(patch) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t1, t2, t3, $async$temp1;
      var $async$loadPatch = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              F.initWebAudio();
              $.synth.loadPatch$3("designer", patch.patch, $.context);
              $.designer.load$1(0, $.synth.config);
              $async$temp1 = type$.SynthPatch;
              $async$goto = 2;
              return P._asyncAwait($.datastore.retrieve$1(patch), $async$loadPatch);
            case 2:
              // returning from await.
              patch = $async$temp1._as($async$result);
              $.currentPatch = patch;
              t1 = document;
              J.set$innerHtml$x(t1.querySelector("#patch-id"), "(" + H.S(patch.id) + ")");
              t2 = type$.InputElement;
              t2._as(t1.querySelector("#patch-voice")).value = patch.voice;
              t3 = type$.SelectElement;
              t3._as(t1.querySelector("#patch-instrument")).value = patch.instrument;
              t2._as(t1.querySelector("#patch-description")).value = patch.description;
              J.set$innerHtml$x(t1.querySelector("#patch-data"), P._JsonStringStringifier_stringify(patch.patch, null, "   "));
              t3._as(t1.querySelector("#patch-public")).value = C.JSBool_methods.toString$0(patch.$public);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadPatch, $async$completer);
    },
    savePatch: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t2, t3, t1, $async$temp1, $async$temp2;
      var $async$savePatch = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.currentPatch;
              $async$goto = t1 != null ? 2 : 3;
              break;
            case 2:
              // then
              t2 = document;
              t3 = type$.InputElement;
              t1.voice = t3._as(t2.querySelector("#patch-voice")).value;
              t1 = type$.SelectElement;
              $.currentPatch.instrument = t1._as(t2.querySelector("#patch-instrument")).value;
              $.currentPatch.description = t3._as(t2.querySelector("#patch-description")).value;
              $.currentPatch.patch = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, J.get$innerHtml$x(t2.querySelector("#patch-data")), null));
              $.currentPatch.$public = t1._as(t2.querySelector("#patch-public")).value === "true";
              $async$temp1 = $;
              $async$temp2 = type$.SynthPatch;
              $async$goto = 4;
              return P._asyncAwait($.datastore.update$1(0, $.currentPatch), $async$savePatch);
            case 4:
              // returning from await.
              $async$temp1.currentPatch = $async$temp2._as($async$result);
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$savePatch, $async$completer);
    },
    deletePatch: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        t2, t3, t1;
      var $async$deletePatch = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.currentPatch;
              $async$goto = t1 != null && !t1.$public ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return P._asyncAwait($.datastore.delete$1(t1), $async$deletePatch);
            case 4:
              // returning from await.
              $.currentPatch = null;
              $.designer.clearNodes$0();
              t1 = document;
              J.set$innerHtml$x(t1.querySelector("#patch-id"), "");
              t2 = type$.InputElement;
              t2._as(t1.querySelector("#patch-voice")).value = "";
              t3 = type$.SelectElement;
              t3._as(t1.querySelector("#patch-instrument")).value = "";
              t2._as(t1.querySelector("#patch-description")).value = "";
              t3._as(t1.querySelector("#patch-public")).value = "false";
              J.set$innerHtml$x(t1.querySelector("#patch-data"), "");
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$deletePatch, $async$completer);
    },
    patchCreated: function($event) {
      var t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.SynthPatch)
        if (!t1.$public)
          F.addUserPatch(t1);
    },
    patchDeleted: function($event) {
      var el,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.SynthPatch) {
        t1 = "#patch-" + H.S(t1.id);
        el = document.querySelector(t1);
        if (el != null)
          J.remove$0$ax(el);
      }
    },
    patchUpdated: function($event) {
      var t2, el,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.SynthPatch) {
        t2 = "#patch-" + H.S(t1.id) + " a";
        el = document.querySelector(t2);
        if (el != null)
          J.set$innerHtml$x(el, H.S(t1.voice) + " (" + H.S(t1.instrument) + ")");
      }
    },
    main_closure: function main_closure() {
    },
    main_closure0: function main_closure0() {
    },
    main_closure1: function main_closure1() {
    },
    main_closure2: function main_closure2() {
    },
    main_closure3: function main_closure3() {
    },
    main_closure4: function main_closure4() {
    },
    main_closure5: function main_closure5() {
    },
    main_closure6: function main_closure6() {
    },
    loadPatches_closure: function loadPatches_closure(t0) {
      this.patch = t0;
    },
    addUserPatch_closure: function addUserPatch_closure(t0) {
      this.patch = t0;
    }
  },
  L = {Synthesizer: function Synthesizer(t0, t1, t2) {
      var _ = this;
      _.effects = t0;
      _.notes = t1;
      _.config = null;
      _._bank = t2;
    }, Synthesizer_loadPatch_closure: function Synthesizer_loadPatch_closure(t0) {
      this._box_0 = t0;
    }, Synthesizer__play_closure: function Synthesizer__play_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.event = t2;
    }, Synthesizer_pitchBend_closure: function Synthesizer_pitchBend_closure(t0) {
      this.cents = t0;
    }, Synthesizer_loadAudioBuffer_closure: function Synthesizer_loadAudioBuffer_closure(t0, t1, t2, t3) {
      var _ = this;
      _.context = t0;
      _.request = t1;
      _.name = t2;
      _.onLoaded = t3;
    }, Synthesizer_loadAudioBuffer_closure0: function Synthesizer_loadAudioBuffer_closure0() {
    }, Gadget: function Gadget(t0, t1, t2, t3) {
      var _ = this;
      _.beats = 4;
      _.instrument = "piano";
      _.color = "#2f9aef";
      _.idata = t0;
      _.description = "";
      _.deleted = _.$public = false;
      _.remix_parent = null;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    }, SynthPatch: function SynthPatch(t0, t1, t2, t3) {
      var _ = this;
      _.voice = "";
      _.instrument = "piano";
      _.patch = t0;
      _.SynthPatch_username = _.description = "";
      _.remix_count = _.star_count = _.like_count = 0;
      _.deleted = _.$public = false;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    }},
  S = {
    Datastore$: function(host, wss) {
      var t2, t3, _null = null,
        t1 = type$.dynamic;
      t1 = P.LinkedHashMap_LinkedHashMap$_literal(["apiKey", "AIzaSyBccCx1WaXXMqf8tq-_1dwO2qr76f6RHFo", "authDomain", "tunepadbeta.firebaseapp.com", "databaseURL", "https://tunepadbeta.firebaseio.com", "projectId", "tunepadbeta", "storageBucket", "tunepadbeta.appspot.com", "messagingSenderId", "803854221469", "appId", "1:803854221469:web:59b8d6beedab219d7bd474"], t1, t1);
      t2 = new N.User(C.C__JSRandom, _null, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      t2.id = K.Uuid$().v1$0();
      t2.type = "user";
      t2.name = "Anonymous";
      t2.displayName = "Anonymous User";
      t2.anonymous = true;
      t2.color = t2._randomColor$0();
      t2.icon = t2._randomIcon$0();
      t2.photo = null;
      t3 = type$.DatastoreEvent;
      t3 = new S.Datastore(t1, host, t2, P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3), P.StreamController_StreamController$broadcast(_null, false, t3));
      t3.Datastore$2(host, wss);
      return t3;
    },
    DataModel_DataModel$fromJson: function(json) {
      var t1, t2, t3, project, colors, gadget, patch, recording, user, _s4_ = "type",
        _s8_ = "projects",
        _s2_ = "id",
        _s9_ = "recording";
      if (json == null || J.$index$asx(json, _s4_) == null)
        return null;
      else {
        t1 = J.getInterceptor$asx(json);
        if (J.$eq$(t1.$index(json, _s4_), _s8_)) {
          t1 = t1.$index(json, _s2_);
          t2 = type$.ClockSubscriber;
          t3 = type$.dynamic;
          project = new K.Project(new E.PlayClock(new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], type$.JSArray_int), "C major"), P.LinkedHashSet_LinkedHashSet(t2), P.LinkedHashSet_LinkedHashSet(t2), P.LinkedHashSet_LinkedHashSet(type$.Metronome)), H.setRuntimeTypeInfo([], type$.JSArray_String), P.LinkedHashMap_LinkedHashMap$_empty(t3, t3), t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          project.type = _s8_;
          project.name = "New Jam Session";
          colors = ["black", "#46d753", "#5bc6fc", "#934ee0", "#aecad5", "#f067d1", "#fc3e74", "#fd7d23", "#fed330"];
          t1 = C.C__JSRandom.nextInt$1(9);
          if (t1 < 0 || t1 >= 9)
            return H.ioore(colors, t1);
          project.color = colors[t1];
          project.load$1(0, json);
          return project;
        } else if (J.$eq$(t1.$index(json, _s4_), "gadgets")) {
          t1 = t1.$index(json, _s2_);
          gadget = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          gadget.type = "gadgets";
          gadget.name = "New Track";
          gadget.load$1(0, json);
          return gadget;
        } else if (J.$eq$(t1.$index(json, _s4_), "patch")) {
          t2 = type$.dynamic;
          patch = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), H._asIntNullable(t1.$index(json, _s2_)), new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          patch.voice = "My Patch";
          patch.type = "patch";
          patch.load$1(0, json);
          return patch;
        } else if (J.$eq$(t1.$index(json, _s4_), _s9_)) {
          t1 = H._asIntNullable(t1.$index(json, _s2_));
          t2 = D.GrowableAudioBuffer$();
          t3 = D.GrowableAudioBuffer$();
          recording = new R.Recording(t2, t3, new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_num), t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          recording.name = "My Recording";
          recording.type = _s9_;
          recording.load$1(0, json);
          return recording;
        } else if (J.$eq$(t1.$index(json, _s4_), "user")) {
          t1 = t1.$index(json, _s2_);
          user = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          user.type = "user";
          user.load$1(0, json);
          return user;
        }
      }
      return null;
    },
    DatastoreEvent$fromJson: function(json) {
      var t1 = new S.DatastoreEvent(null, "created", false);
      t1.DatastoreEvent$fromJson$1(json);
      return t1;
    },
    DatastoreException$: function(code) {
      return new S.DatastoreException();
    },
    Datastore: function Datastore(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._credentials = t0;
      _.host = t1;
      _.wid = _.socket = null;
      _.user = t2;
      _._created_stream = t3;
      _._updated_stream = t4;
      _._deleted_stream = t5;
      _._reordered_stream = t6;
      _._message_stream = t7;
      _._login_stream = t8;
      _._logout_stream = t9;
    },
    Datastore_closure: function Datastore_closure() {
    },
    Datastore_closure0: function Datastore_closure0(t0) {
      this.wss = t0;
    },
    DataModel: function DataModel() {
    },
    DatastoreEvent: function DatastoreEvent(t0, t1, t2) {
      var _ = this;
      _.target = t0;
      _.type = t1;
      _.remote = t2;
      _.payload = null;
    },
    DatastoreException: function DatastoreException() {
    }
  },
  Z = {
    DNodeConnector$: function(source) {
      var t1 = new Z.DNodeConnector(source),
        t2 = source.cx;
      if (typeof t2 !== "number")
        return t2.$add();
      t1.cx = t2 + 34;
      t1.cy = source.cy;
      t1.radius = 5;
      return t1;
    },
    DNodeConnector: function DNodeConnector(t0) {
      var _ = this;
      _.source = t0;
      _._connector$_lastY = _._connector$_lastX = _._connector$_touchY = _._connector$_touchX = _.radius = _.cy = _.cx = _.dest = null;
      _._connector$_dragging = false;
    }
  },
  V = {
    SynthDesigner$: function(canvas, synth) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_TouchLayer),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_Touchable),
        t3 = type$.JSArray_double;
      t3 = new V.SynthDesigner(canvas, synth, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_DNode), new K.TouchManager(t1, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_TouchBinding)), new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_Function), t2, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_Touchable), new O.Matrix2D(H.setRuntimeTypeInfo([1, 0, 0, 0, 1, 0, 0, 0, 1], t3)), new O.Matrix2D(H.setRuntimeTypeInfo([1, 0, 0, 0, 1, 0, 0, 0, 1], t3)), new P.DateTime(Date.now(), false));
      t3.SynthDesigner$2(canvas, synth);
      return t3;
    },
    SynthDesigner: function SynthDesigner(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.canvas = t0;
      _.ctx = null;
      _.synth = t1;
      _.nodes = t2;
      _.selection = null;
      _.tmanager = t3;
      _.newNodeButtons = t4;
      _.touchables = t5;
      _.touch_bindings = t6;
      _.xform = t7;
      _.iform = t8;
      _.last_touch = t9;
    },
    SynthDesigner_closure: function SynthDesigner_closure(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure0: function SynthDesigner_closure0(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure1: function SynthDesigner_closure1(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure2: function SynthDesigner_closure2(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure3: function SynthDesigner_closure3(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure4: function SynthDesigner_closure4(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure5: function SynthDesigner_closure5(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure6: function SynthDesigner_closure6(t0) {
      this.$this = t0;
    },
    SynthDesigner_closure7: function SynthDesigner_closure7(t0, t1) {
      this.$this = t0;
      this.buttonContainer = t1;
    },
    SynthDesigner__closure: function SynthDesigner__closure(t0, t1) {
      this.$this = t0;
      this.createNode = t1;
    },
    SynthDesigner_closure8: function SynthDesigner_closure8(t0) {
      this.$this = t0;
    },
    SynthDesigner_load_closure: function SynthDesigner_load_closure() {
    },
    SynthDesigner_draw_closure: function SynthDesigner_draw_closure(t0) {
      this.$this = t0;
    },
    SynthDesigner_draw_closure0: function SynthDesigner_draw_closure0(t0) {
      this.$this = t0;
    },
    SynthDesigner_draw_closure1: function SynthDesigner_draw_closure1(t0) {
      this.$this = t0;
    },
    SynthDesigner_tick_closure: function SynthDesigner_tick_closure(t0) {
      this.$this = t0;
    },
    DNodeSocket: function DNodeSocket(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.deltaX = t1;
      _.deltaY = t2;
      _.name = t3;
    }
  },
  O = {Matrix2D: function Matrix2D(t0) {
      this.xform = t0;
    }},
  T = {
    UuidUtil_mathRNG: function() {
      var b, rand, i,
        t1 = new Array(16);
      t1.fixed$length = Array;
      b = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
      for (rand = null, i = 0; i < 16; ++i) {
        t1 = i & 3;
        if (t1 === 0)
          rand = C.JSInt_methods.toInt$0(C.JSNumber_methods.floor$0(C.C__JSRandom.nextDouble$0() * 4294967296));
        if (typeof rand !== "number")
          return rand.$shr();
        C.JSArray_methods.$indexSet(b, i, C.JSInt_methods._shrOtherPositive$1(rand, t1 << 3) & 255);
      }
      return b;
    }
  };
  var holders = [C, H, J, P, W, D, U, N, R, E, K, X, B, F, L, S, Z, V, O, T];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'";
    },
    noSuchMethod$1: function(receiver, invocation) {
      type$.Invocation._as(invocation);
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $and: function(receiver, other) {
      H._asBoolNullable(other);
      return other && receiver;
    },
    $or: function(receiver, other) {
      H._asBoolNullable(other);
      return other || receiver;
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    noSuchMethod$1: function(receiver, invocation) {
      return this.super$Interceptor$noSuchMethod(receiver, type$.Invocation._as(invocation));
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $signature: function() {
      return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1: function(receiver, value) {
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    addAll$1: function(receiver, collection) {
      var t1;
      H._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("addAll"));
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    forEach$1: function(receiver, f) {
      var end, i;
      H._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H._arrayInstanceType(receiver);
      return new H.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, t2, i,
        t1 = H._arrayInstanceType(receiver);
      t1._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      t1._eval$1("List<1>")._as(iterable);
      t1 = J.getInterceptor$asx(iterable);
      t2 = t1.get$length(iterable);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (skipCount + $length > t2)
        throw H.wrapException(H.IterableElementError_tooFew());
      if (skipCount < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1: function(receiver, test) {
      var end, i;
      H._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (H.boolConversionCheck(test.call$1(receiver[i])))
          return true;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, H._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      var _s9_ = "newLength";
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      if (!H._isInt(newLength))
        throw H.wrapException(P.ArgumentError$value(newLength, _s9_, null));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, _s9_, null));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var totalLength,
        t1 = H._arrayInstanceType(receiver);
      t1._eval$1("List<1>")._as(other);
      totalLength = C.JSInt_methods.$add(receiver.length, other.get$length(other));
      t1 = H.setRuntimeTypeInfo([], t1);
      this.set$length(t1, totalLength);
      this.setRange$3(t1, 0, receiver.length, receiver);
      this.setRange$3(t1, receiver.length, totalLength, other);
      return t1;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function() {
      return this._current;
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current: function(_current) {
      this._current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = C.JSInt_methods.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0: function(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
    },
    clamp$2: function(receiver, lowerLimit, upperLimit) {
      if (C.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toRadixString$1: function(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return H.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return H.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + C.JSString_methods.$mul("0", exponent);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return 536870911 & intValue;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;
    },
    $add: function(receiver, other) {
      H._asNumNullable(other);
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver - other;
    },
    $div: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver / other;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + other));
    },
    $shl: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    $shr: function(receiver, other) {
      var t1;
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $and: function(receiver, other) {
      return (receiver & other) >>> 0;
    },
    $or: function(receiver, other) {
      H._asNumNullable(other);
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver | other) >>> 0;
    },
    $lt: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver < other;
    },
    $gt: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver > other;
    },
    $ge: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver >= other;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSDouble.prototype = {};
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1: function(receiver, index) {
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add: function(receiver, other) {
      H._asStringNullable(other);
      if (typeof other != "string")
        throw H.wrapException(P.ArgumentError$value(other, null, null));
      return receiver + other;
    },
    startsWith$1: function(receiver, pattern) {
      var otherLength = pattern.length;
      if (otherLength > receiver.length)
        return false;
      return pattern === receiver.substring(0, otherLength);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (endIndex == null)
        endIndex = receiver.length;
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    toLowerCase$0: function(receiver) {
      return receiver.toLowerCase();
    },
    trim$0: function(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || false)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isPattern: 1,
    $isString: 1
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new H.ListIterator(_this, _this.get$length(_this), H._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$first: function(_) {
      if (this.get$length(this) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    where$1: function(_, test) {
      return this.super$Iterable$where(0, H._instanceType(this)._eval$1("bool(ListIterable.E)")._as(test));
    }
  };
  H.ListIterator.prototype = {
    get$current: function() {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length != $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      var t1 = H._instanceType(this);
      return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length: function(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$first: function(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current: function() {
      return this.__internal$_current;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = this.$ti._rest[1]._as(_current);
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (H.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current: function() {
      return this._iterator.get$current();
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, H._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (typeof iterableLength !== "number")
        return iterableLength.$gt();
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    moveNext$0: function() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current: function() {
      if (this._remaining < 0)
        return null;
      return this._iterator.get$current();
    }
  };
  H.SkipIterable.prototype = {
    get$iterator: function(_) {
      return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, H._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length,
        t1 = J.get$length$asx(this.__internal$_iterable);
      if (typeof t1 !== "number")
        return t1.$sub();
      $length = t1 - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    moveNext$0: function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function() {
      return this._iterator.get$current();
    }
  };
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      H.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this.__internal$_name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  H.ConstantMapView.prototype = {};
  H.ConstantMap.prototype = {
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $indexSet: function(_, key, val) {
      var t1 = H._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(val);
      return H.ConstantMap__throwUnmodifiable();
    },
    remove$1: function(_, key) {
      return H.ConstantMap__throwUnmodifiable();
    },
    $isMap: 1
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    containsKey$1: function(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[H._asStringNullable(key)];
    },
    forEach$1: function(_, f) {
      var keys, t2, i, key,
        t1 = H._instanceType(this);
      t1._eval$1("~(1,2)")._as(f);
      keys = this._keys;
      for (t2 = keys.length, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        key = keys[i];
        f.call$2(key, t1._as(this._fetch$1(key)));
      }
    },
    get$keys: function(_) {
      return new H._ConstantMapKeyIterable(this, H._instanceType(this)._eval$1("_ConstantMapKeyIterable<1>"));
    }
  };
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length: function(_) {
      return this._map._keys.length;
    }
  };
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this._memberName;
      return t1;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return C.List_empty0;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return C.List_empty0;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (index >= t1.length)
          return H.ioore(t1, index);
        list.push(t1[index]);
      }
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return C.Map_empty;
      map = new H.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (t4 < 0 || t4 >= t2.length)
          return H.ioore(t2, t4);
        map.$indexSet(0, new H.Symbol(t3), t2[t4]);
      }
      return new H.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    },
    $isInvocation: 1
  };
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1;
      H._asStringNullable($name);
      t1 = this._box_0;
      t1.names = t1.names + "$" + H.S($name);
      C.JSArray_methods.add$1(this.namedArgumentList, $name);
      C.JSArray_methods.add$1(this.$arguments, argument);
      ++t1.argumentCount;
    },
    $signature: 38
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(_this._message);
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + H.S(_this._message) + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + H.S(_this._message) + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this._message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.ExceptionAndStackTrace.prototype = {};
  H.unwrapException_saveStackTrace.prototype = {
    call$1: function(error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex;
      return error;
    },
    $signature: 3
  };
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + H.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this._name) + "' of " + ("Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'");
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    }
  };
  H._AssertionError.prototype = {
    toString$0: function(_) {
      return "Assertion failed: " + P.Error_safeToString(this.message);
    }
  };
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    get$keys: function(_) {
      return new H.LinkedHashMapKeyIterable(this, H._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var _this = this,
        t1 = H._instanceType(_this);
      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return false;
      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this, _null = null;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return _null;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return _null;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this.__js_helper$_addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        _this.__js_helper$_addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this.__js_helper$_newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this.__js_helper$_newLinkedCell$2(key, value));
      }
    },
    remove$1: function(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3ffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1: function(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        _this._deleteTableEntry$2(rest, hash);
      return cell.hashMapCellValue;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this.__js_helper$_modified$0();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this;
      H._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    __js_helper$_addHashTableEntry$3: function(table, key, value) {
      var cell, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = _this._getTableCell$2(table, key);
      if (cell == null)
        _this._setTableEntry$3(table, key, _this.__js_helper$_newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = this._getTableCell$2(table, key);
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      this._deleteTableEntry$2(table, key);
      return cell.hashMapCellValue;
    },
    __js_helper$_modified$0: function() {
      this._modifications = this._modifications + 1 & 67108863;
    },
    __js_helper$_newLinkedCell$2: function(key, value) {
      var last, _this = this,
        t1 = H._instanceType(_this),
        cell = new H.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        last = _this._last;
        cell.__js_helper$_previous = last;
        _this._last = last._next = cell;
      }
      ++_this.__js_helper$_length;
      _this.__js_helper$_modified$0();
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell.__js_helper$_previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next.__js_helper$_previous = previous;
      --_this.__js_helper$_length;
      _this.__js_helper$_modified$0();
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    },
    $isLinkedHashMap: 1
  };
  H.JsLinkedHashMap_values_closure.prototype = {
    call$1: function(each) {
      var t1 = this.$this;
      return t1.$index(0, H._instanceType(t1)._precomputed1._as(each));
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H.LinkedHashMapCell.prototype = {};
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._map,
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(0, element);
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    get$current: function() {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._cell;
        if (t1 == null) {
          _this.set$__js_helper$_current(null);
          return false;
        } else {
          _this.set$__js_helper$_current(t1.hashMapCellKey);
          _this._cell = _this._cell._next;
          return true;
        }
      }
    },
    set$__js_helper$_current: function(_current) {
      this.__js_helper$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 3
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 56
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(H._asStringNullable(tag));
    },
    $signature: 54
  };
  H.JSSyntaxRegExp.prototype = {
    toString$0: function(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    firstMatch$1: function(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new H._MatchImplementation(m);
    },
    $isPattern: 1
  };
  H._MatchImplementation.prototype = {
    $index: function(_, index) {
      return C.JSArray_methods.$index(this._match, H._asIntNullable(index));
    }
  };
  H.NativeByteBuffer.prototype = {$isByteBuffer: 1};
  H.NativeTypedData.prototype = {$isTypedData: 1};
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asDoubleNullable(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asIntNullable(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeFloat32List.prototype = {$isFloat32List: 1};
  H.NativeInt16List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt32List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt8List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint16List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint32List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8ClampedList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8List.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint8List: 1
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H.Rti.prototype = {
    _eval$1: function(recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1: function(typeOrTuple) {
      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  H._FunctionParameters.prototype = {};
  H._Error.prototype = {
    toString$0: function(_) {
      return this.__rti$_message;
    }
  };
  H._TypeError.prototype = {};
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 0
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 33
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  P._AsyncAwaitCompleter.prototype = {
    complete$1: function(_, value) {
      var t2, t3,
        t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      t2 = !this.isSync || t1._eval$1("Future<1>")._is(value);
      t3 = this._future;
      if (t2)
        t3._asyncComplete$1(value);
      else
        t3._completeWithValue$1(t1._precomputed1._as(value));
    },
    completeError$2: function(e, st) {
      var t1;
      if (st == null)
        st = P.AsyncError_defaultStackTrace(e);
      t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  P._awaitOnObject_closure.prototype = {
    call$1: function(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 7
  };
  P._awaitOnObject_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 44
  };
  P._wrapJsFunctionForAsync_closure.prototype = {
    call$2: function(errorCode, result) {
      this.$protected(H._asIntNullable(errorCode), result);
    },
    $signature: 46
  };
  P._BroadcastStream.prototype = {};
  P._BroadcastSubscription.prototype = {
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    set$_async$_next: function(_next) {
      this._async$_next = this.$ti._as(_next);
    },
    set$_async$_previous: function(_previous) {
      this._async$_previous = this.$ti._as(_previous);
    }
  };
  P._BroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return this._state < 4;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      return this._doneFuture = new P._Future($.Zone__current, type$._Future_dynamic);
    },
    _removeListener$1: function(subscription) {
      var previous, next;
      H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, oldLast, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      if ((_this._state & 4) !== 0) {
        if (onDone == null)
          onDone = P.async___nullDoneHandler$closure();
        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, t1._eval$1("_DoneStreamSubscription<1>"));
        t1._schedule$0();
        return t1;
      }
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = t1._eval$1("_BroadcastSubscription<1>");
      subscription = new P._BroadcastSubscription(_this, t2, t3, t4);
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1._precomputed1);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
      t4._as(subscription);
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
      if (_this._firstSubscription == _this._lastSubscription)
        P._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1: function(sub) {
      var _this = this,
        t1 = H._instanceType(_this);
      sub = t1._eval$1("_BroadcastSubscription<1>")._as(t1._eval$1("StreamSubscription<1>")._as(sub));
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _addEventError$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    },
    add$1: function(_, data) {
      var _this = this;
      H._instanceType(_this)._precomputed1._as(data);
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    close$0: function(_) {
      var doneFuture, _this = this;
      if ((_this._state & 4) !== 0)
        return _this._doneFuture;
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._ensureDoneFuture$0();
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1: function(action) {
      var t1, subscription, id, next, _this = this;
      H._instanceType(_this)._eval$1("~(_BufferingStreamSubscription<1>)")._as(action);
      t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0: function() {
      var _this = this;
      if ((_this._state & 4) !== 0 && _this._doneFuture._state === 0)
        _this._doneFuture._asyncComplete$1(null);
      P._runGuarded(_this.onCancel);
    },
    set$_firstSubscription: function(_firstSubscription) {
      this._firstSubscription = H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(_firstSubscription);
    },
    set$_lastSubscription: function(_lastSubscription) {
      this._lastSubscription = H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(_lastSubscription);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  P._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0: function() {
      if ((this._state & 2) !== 0)
        return new P.StateError("Cannot fire new event. Controller is already firing an event");
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1: function(data) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(data);
      t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._async$_add$1(data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendDone$0: function() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  P._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1: function(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._async$_add$1(this.data);
    },
    $signature: function() {
      return this.$this.$ti._eval$1("Null(_BufferingStreamSubscription<1>)");
    }
  };
  P._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1: function(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._close$0();
    },
    $signature: function() {
      return this.$this.$ti._eval$1("Null(_BufferingStreamSubscription<1>)");
    }
  };
  P._AsyncBroadcastStreamController.prototype = {
    _sendData$1: function(data) {
      var subscription,
        t1 = this.$ti;
      t1._precomputed1._as(data);
      for (subscription = this._firstSubscription, t1 = t1._eval$1("_DelayedData<1>"); subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new P._DelayedData(data, t1));
    },
    _sendDone$0: function() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  P.Future.prototype = {};
  P._Completer.prototype = {
    completeError$2: function(error, stackTrace) {
      P.ArgumentError_checkNotNull(error, "error", type$.Object);
      if (this.future._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      this._completeError$2(error, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    completeError$1: function(error) {
      return this.completeError$2(error, null);
    }
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      this.$ti._eval$1("1/")._as(value);
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  P._SyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      this.$ti._eval$1("1/")._as(value);
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._complete$1(value);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._completeError$2(error, stackTrace);
    }
  };
  P._FutureListener.prototype = {
    matchesErrorTest$1: function(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1: function(asyncError) {
      var errorCallback = this.errorCallback,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = this.$ti._eval$1("2/"),
        t4 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        return t3._as(t4.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, t1, t2, type$.StackTrace));
      else
        return t3._as(t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), asyncError.error, t1, t2));
    }
  };
  P._Future.prototype = {
    then$1$2$onError: function(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone !== C.C__RootZone) {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = P._registerErrorHandler(onError, currentZone);
      }
      result = new P._Future($.Zone__current, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new P._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1: function(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2: function(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new P._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new P._FutureListener(result, 19, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setValue$1: function(value) {
      this.$ti._precomputed1._as(value);
      this._state = 4;
      this._resultOrListeners = value;
    },
    _addListener$1: function(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 1) {
        listener._nextListener = type$._FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if (t1 === 2) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          t1 = source._state;
          if (t1 < 4) {
            source._addListener$1(listener);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1: function(listeners) {
      var t1, existingListeners, cursor, cursor0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 1) {
        existingListeners = type$._FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        cursor = _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          for (; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
            ;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (t1 === 2) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          t1 = source._state;
          if (t1 < 4) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0: function() {
      var current = type$._FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          P._Future__chainCoreFuture(value, _this);
        else
          P._Future__chainForeignFuture(value, _this);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 4;
        _this._resultOrListeners = value;
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 4;
      _this._resultOrListeners = value;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2: function(error, stackTrace) {
      var listeners, t1, _this = this;
      type$.StackTrace._as(stackTrace);
      listeners = _this._removeListeners$0();
      t1 = P.AsyncError$(error, stackTrace);
      _this._state = 8;
      _this._resultOrListeners = t1;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$1: function(error) {
      return this._completeError$2(error, null);
    },
    _asyncComplete$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        _this._chainFuture$1(value);
        return;
      }
      _this._state = 1;
      P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__asyncComplete_closure(_this, value)));
    },
    _chainFuture$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if (value._state === 8) {
          _this._state = 1;
          P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__chainFuture_closure(_this, value)));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      P._Future__chainForeignFuture(value, _this);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new P._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 1
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 1
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.target;
      t1._state = 0;
      t1._complete$1(value);
    },
    $signature: 0
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this.target._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 64
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.target._completeError$2(this.e, this.s);
    },
    $signature: 1
  };
  P._Future__asyncComplete_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._completeWithValue$1(t1.$ti._precomputed1._as(this.value));
    },
    $signature: 1
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 1
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (_this.hasError) {
          t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners).error;
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        if (completeResult instanceof P._Future && completeResult._state >= 4) {
          if (completeResult._state === 8) {
            t1 = _this._box_0;
            t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
            t1.listenerHasError = true;
          }
          return;
        }
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 2
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 67
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, t1, t2, t3, t4, exception, _this = this;
      try {
        t1 = _this.listener;
        t2 = t1.$ti;
        t3 = t2._precomputed1;
        t4 = t3._as(_this.sourceResult);
        _this._box_0.listenerValueOrError = t1.result._zone.runUnary$2$2(t2._eval$1("2/(1)")._as(t1.callback), t4, t2._eval$1("2/"), t3);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_0;
        t1.listenerValueOrError = P.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 2
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, t2, exception, t3, t4, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this.listener;
        if (H.boolConversionCheck(t1.matchesErrorTest$1(asyncError)) && t1.errorCallback != null) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1.handleError$1(asyncError);
          t2.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = t1.error;
        t3 = e;
        t4 = _this._box_0;
        if (t2 == null ? t3 == null : t2 === t3)
          t4.listenerValueOrError = t1;
        else
          t4.listenerValueOrError = P.AsyncError$(e, s);
        t4.listenerHasError = true;
      }
    },
    $signature: 2
  };
  P._AsyncCallbackEntry.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, H._instanceType(this)._eval$1("_Future<1>"));
      t1.subscription = null;
      t1.subscription = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      H._instanceType(this.$this)._precomputed1._as(_);
      ++this._box_0.count;
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1)");
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P.Stream_first_closure.prototype = {
    call$1: function(value) {
      H._instanceType(this.$this)._precomputed1._as(value);
      P._cancelAndValue(this._box_0.subscription, this.future, value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1)");
    }
  };
  P.Stream_first_closure0.prototype = {
    call$0: function() {
      var e, s, t1, exception, error, stackTrace;
      try {
        t1 = H.IterableElementError_noElement();
        throw H.wrapException(t1);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        error = e;
        stackTrace = s;
        if (stackTrace == null)
          stackTrace = P.AsyncError_defaultStackTrace(error);
        this.future._completeError$2(error, stackTrace);
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P.StreamSubscription.prototype = {};
  P.StreamTransformerBase.prototype = {};
  P._ControllerStream.prototype = {
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P._ControllerStream && other._controller === this._controller;
    }
  };
  P._ControllerSubscription.prototype = {
    _onCancel$0: function() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0: function() {
      H._instanceType(this._controller)._eval$1("StreamSubscription<1>")._as(this);
    },
    _onResume$0: function() {
      H._instanceType(this._controller)._eval$1("StreamSubscription<1>")._as(this);
    }
  };
  P._BufferingStreamSubscription.prototype = {
    _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
      var handleError, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(onData);
      _this.set$_async$_onData(type$.$env_1_1_dynamic._bind$1(t1._precomputed1)._eval$1("1(2)")._as(onData));
      handleError = onError == null ? P.async___nullErrorHandler$closure() : onError;
      if (type$.void_Function_Object_StackTrace._is(handleError))
        _this._onError = _this._zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      else if (type$.void_Function_Object._is(handleError))
        _this._onError = type$.dynamic_Function_Object._as(handleError);
      else
        H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
      t1 = type$.void_Function;
      t1._as(onDone);
      _this.set$_onDone(t1._as(onDone == null ? P.async___nullDoneHandler$closure() : onDone));
    },
    cancel$0: function() {
      var t1 = this._state &= 4294967279;
      if ((t1 & 8) === 0)
        this._cancel$0();
      t1 = $.$get$Future__nullFuture();
      return t1;
    },
    _cancel$0: function() {
      var t2, _this = this,
        t1 = _this._state |= 8;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _async$_add$1: function(data) {
      var t2, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 32)
        _this._sendData$1(data);
      else
        _this._addPending$1(new P._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _close$0: function() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 |= 2;
      _this._state = t1;
      if (t1 < 32)
        _this._sendDone$0();
      else
        _this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _onCancel$0: function() {
      return null;
    },
    _addPending$1: function($event) {
      var _this = this,
        t1 = H._instanceType(_this)._eval$1("_StreamImplEvents<1>"),
        pending = t1._as(_this._pending);
      if (pending == null) {
        pending = new P._StreamImplEvents(t1);
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 |= 64;
        _this._state = t1;
        if (t1 < 128)
          _this._pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var t2, _this = this,
        t1 = H._instanceType(_this)._precomputed1;
      t1._as(data);
      t2 = _this._state;
      _this._state = t2 | 32;
      _this._zone.runUnaryGuarded$1$2(_this._async$_onData, data, t1);
      _this._state &= 4294967263;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendDone$0: function() {
      this._cancel$0();
      this._state |= 16;
      new P._BufferingStreamSubscription__sendDone_sendDone(this).call$0();
    },
    _checkState$1: function(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = t1 & 4294967231;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null || t2.lastPendingEvent == null;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 &= 4294967291;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = t1 ^ 32;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state &= 4294967263;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_async$_onData: function(_onData) {
      this._async$_onData = H._instanceType(this)._eval$1("~(1)")._as(_onData);
    },
    set$_onDone: function(_onDone) {
      this._onDone = type$.void_Function._as(_onDone);
    },
    set$_pending: function(_pending) {
      this._pending = H._instanceType(this)._eval$1("_PendingEvents<1>")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventDispatch: 1
  };
  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = t2 | 42;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state &= 4294967263;
    },
    $signature: 2
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)")._as(onData), onError, onDone, true === cancelOnError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  P._DelayedEvent.prototype = {
    set$next: function(next) {
      this.next = type$._DelayedEvent_dynamic._as(next);
    },
    get$next: function() {
      return this.next;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    },
    get$value: function(receiver) {
      return this.value;
    }
  };
  P._DelayedDone.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function() {
      return null;
    },
    set$next: function(_) {
      throw H.wrapException(P.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  P._PendingEvents.prototype = {
    schedule$1: function(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t2, $event, t3,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      t3 = $event.get$next();
      t1.firstPendingEvent = t3;
      if (t3 == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 1
  };
  P._StreamImplEvents.prototype = {
    add$1: function(_, $event) {
      var t1, _this = this;
      type$._DelayedEvent_dynamic._as($event);
      t1 = _this.lastPendingEvent;
      if (t1 == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        t1.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  P._DoneStreamSubscription.prototype = {
    _schedule$0: function() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(_this.get$_sendDone()));
      _this._state |= 2;
    },
    cancel$0: function() {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0: function() {
      var _this = this,
        t1 = _this._state &= 4294967293;
      if (t1 >= 4)
        return;
      _this._state = t1 | 1;
      _this._zone.runGuarded$1(_this._onDone);
    },
    $isStreamSubscription: 1
  };
  P._StreamIterator.prototype = {};
  P._cancelAndValue_closure.prototype = {
    call$0: function() {
      return this.future._complete$1(this.value);
    },
    $signature: 2
  };
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1,
    get$stackTrace: function() {
      return this.stackTrace;
    }
  };
  P._Zone.prototype = {$isZone: 1};
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var error,
        t1 = this._box_0,
        t2 = t1.stackTrace;
      if (t2 == null)
        throw H.wrapException(t1.error);
      error = H.wrapException(t1.error);
      error.stack = t2.toString$0(0);
      throw error;
    },
    $signature: 1
  };
  P._RootZone.prototype = {
    runGuarded$1: function(f) {
      var e, s, exception, _null = null;
      type$.void_Function._as(f);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(_null, _null, this, f, type$.void);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2: function(f, arg, $T) {
      var e, s, exception, _null = null;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(_null, _null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, type$.StackTrace._as(s));
      }
    },
    bindCallback$1$1: function(f, $R) {
      return new P._RootZone_bindCallback_closure(this, $R._eval$1("0()")._as(f), $R);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    $index: function(_, key) {
      return null;
    },
    run$1$1: function(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2: function(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1: function(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  P._RootZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1$1(this.f, this.R);
    },
    $signature: function() {
      return this.R._eval$1("0()");
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 2
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature: function() {
      return this.T._eval$1("~(0)");
    }
  };
  P._LinkedHashSet.prototype = {
    get$iterator: function(_) {
      var _this = this,
        t1 = new P._LinkedHashSetIterator(_this, _this._collection$_modifications, H._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: function(_, object) {
      var strings, t1;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return type$._LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(action);
      cell = _this._collection$_first;
      modifications = _this._collection$_modifications;
      for (t1 = t1._precomputed1; cell != null;) {
        action.call$1(t1._as(cell._collection$_element));
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    get$first: function(_) {
      var t1 = this._collection$_first;
      if (t1 == null)
        throw H.wrapException(P.StateError$("No elements"));
      return H._instanceType(this)._precomputed1._as(t1._collection$_element);
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      H._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1: function(element) {
      var rest, hash, bucket, _this = this;
      H._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._newLinkedCell$1(element));
      }
      return true;
    },
    _addHashTableEntry$2: function(table, element) {
      H._instanceType(this)._precomputed1._as(element);
      if (type$._LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    },
    _modified$0: function() {
      this._collection$_modifications = 1073741823 & this._collection$_modifications + 1;
    },
    _newLinkedCell$1: function(element) {
      var last, _this = this,
        cell = new P._LinkedHashSetCell(H._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        last = _this._collection$_last;
        cell._previous = last;
        _this._collection$_last = last._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._modified$0();
      return cell;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._collection$_cell;
        if (t1 == null) {
          _this.set$_collection$_current(null);
          return false;
        } else {
          _this.set$_collection$_current(_this.$ti._precomputed1._as(t1._collection$_element));
          _this._collection$_cell = _this._collection$_cell._collection$_next;
          return true;
        }
      }
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  P.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 5
  };
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), H.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty: function(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first: function(receiver) {
      if (this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.instanceType(receiver);
      return new H.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    toList$1$growable: function(receiver, growable) {
      var i, t1,
        result = H.setRuntimeTypeInfo([], H.instanceType(receiver)._eval$1("JSArray<ListMixin.E>"));
      C.JSArray_methods.set$length(result, this.get$length(receiver));
      i = 0;
      while (true) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, this.$index(receiver, i));
        ++i;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1: function(receiver, element) {
      var t1;
      H.instanceType(receiver)._eval$1("ListMixin.E")._as(element);
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    $add: function(receiver, other) {
      var result, t2,
        t1 = H.instanceType(receiver);
      t1._eval$1("List<ListMixin.E>")._as(other);
      result = H.setRuntimeTypeInfo([], t1._eval$1("JSArray<ListMixin.E>"));
      t1 = this.get$length(receiver);
      t2 = other.get$length(other);
      if (typeof t1 !== "number")
        return t1.$add();
      C.JSArray_methods.set$length(result, C.JSInt_methods.$add(t1, t2));
      C.JSArray_methods.setRange$3(result, 0, this.get$length(receiver), receiver);
      C.JSArray_methods.setRange$3(result, this.get$length(receiver), result.length, other);
      return result;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 5
  };
  P.MapMixin.prototype = {
    forEach$1: function(receiver, action) {
      var t1, key;
      H.instanceType(receiver)._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)); t1.moveNext$0();) {
        key = t1.get$current();
        action.call$2(key, this.$index(receiver, key));
      }
    },
    containsKey$1: function(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length: function(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty: function(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    toString$0: function(receiver) {
      return P.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  P._UnmodifiableMapMixin.prototype = {
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    remove$1: function(_, key) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  P.MapView.prototype = {
    $index: function(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      this._collection$_map.$indexSet(0, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1: function(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1: function(_, action) {
      this._collection$_map.forEach$1(0, this.$ti._eval$1("~(1,2)")._as(action));
    },
    get$isEmpty: function(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$length: function(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys: function(_) {
      var t1 = this._collection$_map;
      return t1.get$keys(t1);
    },
    remove$1: function(_, key) {
      return this._collection$_map.remove$1(0, key);
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this._collection$_map);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {};
  P.ListQueue.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new P._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first: function(_) {
      var t2,
        t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(H.IterableElementError_noElement());
      t2 = this._table;
      if (t1 >= t2.length)
        return H.ioore(t2, t1);
      return t2[t1];
    },
    elementAt$1: function(_, index) {
      var t1, t2, t3, _this = this,
        $length = _this.get$length(_this);
      if (typeof index !== "number")
        return H.iae(index);
      if (0 > index || index >= $length)
        H.throwExpression(P.IndexError$(index, _this, "index", null, $length));
      t1 = _this._table;
      t2 = t1.length;
      t3 = (_this._head + index & t2 - 1) >>> 0;
      if (t3 < 0 || t3 >= t2)
        return H.ioore(t1, t3);
      return t1[t3];
    },
    add$1: function(_, value) {
      this._add$1(this.$ti._precomputed1._as(value));
    },
    clear$0: function(_) {
      var _this = this,
        i = _this._head;
      if (i !== _this._tail) {
        for (; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0)
          C.JSArray_methods.$indexSet(_this._table, i, null);
        _this._head = _this._tail = 0;
        ++_this._modificationCount;
      }
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    _add$1: function(element) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(element);
      C.JSArray_methods.$indexSet(_this._table, _this._tail, element);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        t2 = new Array(t3 * 2);
        t2.fixed$length = Array;
        newTable = H.setRuntimeTypeInfo(t2, t1._eval$1("JSArray<1>"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        C.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this.set$_table(newTable);
      }
      ++_this._modificationCount;
    },
    set$_table: function(_table) {
      this._table = this.$ti._eval$1("List<1>")._as(_table);
    },
    $isQueue: 1
  };
  P._ListQueueIterator.prototype = {
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t2, t3, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._end) {
        _this.set$_collection$_current(null);
        return false;
      }
      t3 = t1._table;
      if (t2 >= t3.length)
        return H.ioore(t3, t2);
      _this.set$_collection$_current(t3[t2]);
      _this._collection$_position = (_this._collection$_position + 1 & t1._table.length - 1) >>> 0;
      return true;
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  P._SetBase.prototype = {
    addAll$1: function(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(H._instanceType(this)._eval$1("Iterable<1>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    get$first: function(_) {
      var it = P._LinkedHashSetIterator$(this, this._collection$_modifications, H._instanceType(this)._precomputed1);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it._collection$_current;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _this = this, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H._instanceType(_this)._precomputed1), elementIndex = 0; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, _this, _s5_, null, elementIndex));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  P._JsonMap.prototype = {
    $index: function(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        t1 = t1.get$length(t1);
      } else
        t1 = this._computeKeys$0().length;
      return t1;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$keys: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        return t1.get$keys(t1);
      }
      return new P._JsonMapKeyIterable(this);
    },
    $indexSet: function(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1: function(_, key) {
      if (this._processed == null)
        return this._data.containsKey$1(0, key);
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    remove$1: function(_, key) {
      if (this._processed != null && !this.containsKey$1(0, key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1: function(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = P._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var keys = type$.List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = H.setRuntimeTypeInfo(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0: function() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        C.JSArray_methods.add$1(keys, null);
      else
        C.JSArray_methods.set$length(keys, 0);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1: function(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = P._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  P._JsonMapKeyIterable.prototype = {
    get$length: function(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1: function(_, index) {
      var t1 = this._parent;
      return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : C.JSArray_methods.$index(t1._computeKeys$0(), index);
    },
    get$iterator: function(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1: function(_, key) {
      return this._parent.containsKey$1(0, key);
    }
  };
  P.Base64Codec.prototype = {
    get$encoder: function() {
      return C.C_Base64Encoder;
    }
  };
  P.Base64Encoder.prototype = {
    convert$1: function(input) {
      type$.List_int._as(input);
      if (J.get$isEmpty$asx(input))
        return "";
      return P.String_String$fromCharCodes(new P._Base64Encoder("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/").encode$4(input, 0, input.length, true));
    }
  };
  P._Base64Encoder.prototype = {
    encode$4: function(bytes, start, end, isLast) {
      var byteCount, fullChunks, bufferLength, output, _this = this;
      type$.List_int._as(bytes);
      byteCount = (_this._convert$_state & 3) + (end - start);
      fullChunks = C.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = new Uint8Array(bufferLength);
      _this._convert$_state = P._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, true, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  P.Codec.prototype = {};
  P.Converter.prototype = {};
  P.JsonUnsupportedObjectError.prototype = {
    toString$0: function(_) {
      var safeString = P.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  P.JsonCyclicError.prototype = {
    toString$0: function(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  P.JsonCodec.prototype = {
    decode$2$reviver: function(_, source, reviver) {
      var t1;
      type$.dynamic_Function_Object_Object._as(reviver);
      t1 = P._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable: function(value, toEncodable) {
      var t1;
      type$.dynamic_Function_dynamic._as(toEncodable);
      t1 = this.get$encoder();
      t1 = P._JsonStringStringifier_stringify(value, t1._toEncodable, t1.indent);
      return t1;
    },
    get$encoder: function() {
      return C.JsonEncoder_null_null;
    },
    get$decoder: function() {
      return C.JsonDecoder_null;
    }
  };
  P.JsonEncoder.prototype = {};
  P.JsonDecoder.prototype = {};
  P._JsonStringifier.prototype = {
    writeStringContent$1: function(s) {
      var t1, t2, offset, i, charCode, t3,
        $length = s.length;
      for (t1 = J.getInterceptor$s(s), t2 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = t1._codeUnitAt$1(s, i);
        if (charCode > 92)
          continue;
        if (charCode < 32) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          switch (charCode) {
            case 8:
              t2._contents += H.Primitives_stringFromCharCode(98);
              break;
            case 9:
              t2._contents += H.Primitives_stringFromCharCode(116);
              break;
            case 10:
              t2._contents += H.Primitives_stringFromCharCode(110);
              break;
            case 12:
              t2._contents += H.Primitives_stringFromCharCode(102);
              break;
            case 13:
              t2._contents += H.Primitives_stringFromCharCode(114);
              break;
            default:
              t2._contents += H.Primitives_stringFromCharCode(117);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t3 = charCode >>> 4 & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t3 = charCode & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          t2._contents += H.Primitives_stringFromCharCode(charCode);
        }
      }
      if (offset === 0)
        t2._contents += H.S(s);
      else if (offset < $length)
        t2._contents += t1.substring$2(s, offset, $length);
    },
    _checkCycle$1: function(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw H.wrapException(new P.JsonCyclicError(object, null));
      }
      C.JSArray_methods.add$1(t1, object);
    },
    writeObject$1: function(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = P.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw H.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw H.wrapException(t1);
      }
    },
    writeJsonValue$1: function(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += C.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1: function(list) {
      var t2, i, t3,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        i = 1;
        while (true) {
          t3 = t2.get$length(list);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
          ++i;
        }
      }
      t1._contents += "]";
    },
    writeMap$1: function(map) {
      var t2, keyValueList, i, separator, t3, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t2 = t1.get$length(map);
      if (typeof t2 !== "number")
        return t2.$mul();
      t2 *= 2;
      keyValueList = new Array(t2);
      keyValueList.fixed$length = Array;
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t1 = _this._sink;
      t1._contents += "{";
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        t1._contents += separator;
        _this.writeStringContent$1(H._asStringNullable(keyValueList[i]));
        t1._contents += '":';
        t3 = i + 1;
        if (t3 >= t2)
          return H.ioore(keyValueList, t3);
        _this.writeObject$1(keyValueList[t3]);
      }
      t1._contents += "}";
      return true;
    }
  };
  P._JsonStringifier_writeMap_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      C.JSArray_methods.$indexSet(t1, t2.i++, key);
      C.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 5
  };
  P._JsonPrettyPrintMixin.prototype = {
    writeList$1: function(list) {
      var i, _this = this,
        t1 = J.getInterceptor$asx(list),
        t2 = t1.get$isEmpty(list),
        t3 = _this._sink,
        t4 = t3._contents;
      if (t2)
        t3._contents = t4 + "[]";
      else {
        t3._contents = t4 + "[\n";
        _this.writeIndentation$1(++_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeObject$1(t1.$index(list, 0));
        i = 1;
        while (true) {
          t2 = t1.get$length(list);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t3._contents += ",\n";
          _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
          _this.writeObject$1(t1.$index(list, i));
          ++i;
        }
        t3._contents += "\n";
        _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
        t3._contents += "]";
      }
    },
    writeMap$1: function(map) {
      var t2, keyValueList, i, separator, t3, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t2 = t1.get$length(map);
      if (typeof t2 !== "number")
        return t2.$mul();
      t2 *= 2;
      keyValueList = new Array(t2);
      keyValueList.fixed$length = Array;
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new P._JsonPrettyPrintMixin_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t1 = _this._sink;
      t1._contents += "{\n";
      ++_this._JsonPrettyPrintMixin__indentLevel;
      for (separator = ""; i < t2; i += 2, separator = ",\n") {
        t1._contents += separator;
        _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
        t1._contents += '"';
        _this.writeStringContent$1(H._asStringNullable(keyValueList[i]));
        t1._contents += '": ';
        t3 = i + 1;
        if (t3 >= t2)
          return H.ioore(keyValueList, t3);
        _this.writeObject$1(keyValueList[t3]);
      }
      t1._contents += "\n";
      _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
      t1._contents += "}";
      return true;
    }
  };
  P._JsonPrettyPrintMixin_writeMap_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      C.JSArray_methods.$indexSet(t1, t2.i++, key);
      C.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 5
  };
  P._JsonStringStringifier.prototype = {
    get$_partialResult: function() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P._JsonStringStringifierPretty.prototype = {
    writeIndentation$1: function(count) {
      var t1, t2, i;
      for (t1 = this._indent, t2 = this._sink, i = 0; i < count; ++i)
        t2._contents += t1;
    }
  };
  P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin.prototype = {};
  P._symbolMapToStringMap_closure.prototype = {
    call$2: function(key, value) {
      this.result.$indexSet(0, type$.Symbol._as(key).__internal$_name, value);
    },
    $signature: 16
  };
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2, t3;
      type$.Symbol._as(key);
      t1 = this.sb;
      t2 = this._box_0;
      t1._contents += t2.comma;
      t3 = t1._contents += H.S(key.__internal$_name);
      t1._contents = t3 + ": ";
      t1._contents += P.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 16
  };
  P.bool.prototype = {};
  P.DateTime.prototype = {
    add$1: function(_, duration) {
      return P.DateTime$_withValue(C.JSInt_methods.$add(this._value, type$.Duration._as(duration).get$inMilliseconds()), this.isUtc);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    DateTime$_withValue$2$isUtc: function(_value, isUtc) {
      var t2,
        t1 = this._value;
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
      P.ArgumentError_checkNotNull(this.isUtc, "isUtc", type$.bool);
    },
    get$hashCode: function(_) {
      var t1 = this._value;
      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),
        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),
        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),
        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this));
      if (_this.isUtc)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    }
  };
  P.DateTime_parse_parseIntOrZero.prototype = {
    call$1: function(matched) {
      if (matched == null)
        return 0;
      return P.int_parse(matched);
    },
    $signature: 17
  };
  P.DateTime_parse_parseMilliAndMicroseconds.prototype = {
    call$1: function(matched) {
      var t1, result, i;
      if (matched == null)
        return 0;
      for (t1 = matched.length, result = 0, i = 0; i < 6; ++i) {
        result *= 10;
        if (i < t1)
          result += C.JSString_methods._codeUnitAt$1(matched, i) ^ 48;
      }
      return result;
    },
    $signature: 17
  };
  P.double.prototype = {};
  P.Duration.prototype = {
    $add: function(_, other) {
      return new P.Duration(C.JSInt_methods.$add(this._duration, type$.Duration._as(other).get$_duration()));
    },
    $sub: function(_, other) {
      return new P.Duration(C.JSInt_methods.$sub(this._duration, type$.Duration._as(other).get$_duration()));
    },
    $lt: function(_, other) {
      return C.JSInt_methods.$lt(this._duration, type$.Duration._as(other).get$_duration());
    },
    $gt: function(_, other) {
      return C.JSInt_methods.$gt(this._duration, type$.Duration._as(other).get$_duration());
    },
    $ge: function(_, other) {
      return C.JSInt_methods.$ge(this._duration, type$.Duration._as(other).get$_duration());
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,
        t1 = new P.Duration_toString_twoDigits(),
        t2 = this._duration;
      if (t2 < 0)
        return "-" + new P.Duration(0 - t2).toString$0(0);
      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    },
    $signature: 18
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    $signature: 18
  };
  P.Error.prototype = {
    get$stackTrace: function() {
      return H.getTraceFromException(this.$thrownJsError);
    }
  };
  P.AssertionError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + P.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var message, prefix, explanation, errorValue, _this = this,
        t1 = _this.name,
        nameString = t1 != null ? " (" + t1 + ")" : "";
      t1 = _this.message;
      message = t1 == null ? "" : ": " + H.S(t1);
      prefix = _this.get$_errorName() + nameString + message;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation, t2,
        t1 = this.start;
      if (t1 == null) {
        t1 = this.end;
        explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
      } else {
        t2 = this.end;
        if (t2 == null)
          explanation = ": Not greater than or equal to " + H.S(t1);
        else if (t2 > t1)
          explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
        else
          explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
      }
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var t1,
        invalidValue = H._asIntNullable(this.invalidValue);
      if (typeof invalidValue !== "number")
        return invalidValue.$lt();
      if (invalidValue < 0)
        return ": index must not be negative";
      t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + H.S(t1);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t1, t2, _i, t3, t4, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new P.StringBuffer("");
      _box_0.comma = "";
      for (t1 = _this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
        argument = t1[_i];
        sb._contents = t3 + t4;
        t3 = sb._contents += P.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      t1 = "NoSuchMethodError: method not found: '" + H.S(_this._core$_memberName.__internal$_name) + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {
    toString$0: function(_) {
      return "Out of Memory";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,
        t1 = this.message,
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException",
        offset = this.offset,
        objectSource = this.source;
      if (typeof objectSource == "string") {
        if (offset != null)
          t1 = offset > objectSource.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          source = objectSource.length > 78 ? C.JSString_methods.substring$2(objectSource, 0, 75) + "..." : objectSource;
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = objectSource.length;
        for (i = offset; i < lineEnd; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(objectSource, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
    },
    $isException: 1
  };
  P.Function.prototype = {};
  P.int.prototype = {};
  P.Iterable.prototype = {
    where$1: function(_, test) {
      var t1 = H._instanceType(this);
      return new H.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    forEach$1: function(_, f) {
      var t1;
      H._instanceType(this)._eval$1("~(Iterable.E)")._as(f);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current());
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it.get$current();
    },
    get$single: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      result = it.get$current();
      if (it.moveNext$0())
        throw H.wrapException(H.IterableElementError_tooMany());
      return result;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Iterator.prototype = {};
  P.List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.Map.prototype = {};
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.num.prototype = {};
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(this)) + "'";
    },
    noSuchMethod$1: function(_, invocation) {
      type$.Invocation._as(invocation);
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.StackTrace.prototype = {};
  P._StringStackTrace.prototype = {
    toString$0: function(_) {
      return "";
    },
    $isStackTrace: 1
  };
  P.String.prototype = {$isPattern: 1};
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  P.Symbol0.prototype = {};
  W.HtmlElement.prototype = {};
  W.AnchorElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isAnchorElement: 1
  };
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.BackgroundFetchEvent.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.BaseElement.prototype = {$isBaseElement: 1};
  W.Blob.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isBlob: 1
  };
  W.BlobEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.BodyElement.prototype = {$isBodyElement: 1};
  W.ButtonElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.CanvasElement.prototype = {
    getContext$1: function(receiver, contextId) {
      return receiver.getContext(contextId);
    },
    $isCanvasElement: 1
  };
  W.CanvasRenderingContext2D.prototype = {
    fillText$3: function(receiver, text, x, y) {
      receiver.fillText(text, x, y);
    },
    $isCanvasRenderingContext2D: 1
  };
  W.CharacterData.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CompositionEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.CssStyleDeclaration.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssStyleDeclarationBase.prototype = {};
  W.DataElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.DivElement.prototype = {$isDivElement: 1};
  W.Document.prototype = {$isDocument: 1};
  W.DomException.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isDomException: 1
  };
  W.DomRectReadOnly.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      if (other == null)
        return false;
      return type$.Rectangle_num._is(other) && receiver.left == other.left && receiver.top == other.top && receiver.width == other.width && receiver.height == other.height;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(receiver.width), J.get$hashCode$(receiver.height));
    },
    $isRectangle: 1
  };
  W._ChildrenElementList.prototype = {
    get$isEmpty: function(_) {
      return this._element.firstElementChild == null;
    },
    get$length: function(_) {
      return this._childElements.length;
    },
    $index: function(_, index) {
      return type$.Element._as(J.$index$asx(this._childElements, H._asIntNullable(index)));
    },
    $indexSet: function(_, index, value) {
      H._asIntNullable(index);
      this._element.replaceChild(type$.Element._as(value), J.$index$asx(this._childElements, index));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: function(_, value) {
      type$.Element._as(value);
      this._element.appendChild(value);
      return value;
    },
    get$iterator: function(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    addAll$1: function(_, iterable) {
      var t1, t2;
      type$.Iterable_Element._as(iterable);
      for (t1 = iterable.get$iterator(iterable), t2 = this._element; t1.moveNext$0();)
        t2.appendChild(t1._current);
    },
    get$first: function(_) {
      var result = this._element.firstElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    }
  };
  W._FrozenElementList.prototype = {
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: function(_, index) {
      return this.$ti._precomputed1._as(C.NodeList_methods.$index(this._nodeList, H._asIntNullable(index)));
    },
    $indexSet: function(_, index, value) {
      H._asIntNullable(index);
      this.$ti._precomputed1._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    get$first: function(_) {
      return this.$ti._precomputed1._as(C.NodeList_methods.get$first(this._nodeList));
    },
    $isElementList: 1
  };
  W.Element.prototype = {
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    get$children: function(receiver) {
      return new W._ChildrenElementList(receiver, receiver.children);
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, t2, contextElement, fragment;
      if (treeSanitizer == null) {
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
          t2 = new W.NodeValidatorBuilder(t1);
          C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
          C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        $.Element__parseDocument = t2;
        $.Element__parseRange = t2.createRange();
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t2.href = t1.baseURI;
        $.Element__parseDocument.head.appendChild(t2);
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = type$.BodyElement._as(t2);
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver))
        contextElement = t1.body;
      else {
        contextElement = t1.createElement(receiver.tagName);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
        $.Element__parseRange.selectNodeContents(contextElement);
        fragment = $.Element__parseRange.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      t1 = $.Element__parseDocument.body;
      if (contextElement == null ? t1 != null : contextElement !== t1)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    },
    createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    set$innerHtml: function(receiver, html) {
      this.setInnerHtml$1(receiver, html);
    },
    setInnerHtml$1: function(receiver, html) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, null));
    },
    get$innerHtml: function(receiver) {
      return receiver.innerHTML;
    },
    get$id: function(receiver) {
      return receiver.id;
    },
    get$tagName: function(receiver) {
      return receiver.tagName;
    },
    get$onClick: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    $isElement: 1
  };
  W.Element_Element$html_closure.prototype = {
    call$1: function(e) {
      return type$.Element._is(type$.Node._as(e));
    },
    $signature: 19
  };
  W.EmbedElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Event.prototype = {
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    get$type: function(receiver) {
      return receiver.type;
    },
    $isEvent: 1
  };
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      type$.dynamic_Function_Event._as(listener);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, false);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(type$.dynamic_Function_Event._as(listener), 1), false);
    },
    _removeEventListener$3: function(receiver, type, listener, options) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(type$.dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  W.ExtendableEvent.prototype = {};
  W.ExtendableMessageEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.FieldSetElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.FormElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isHtmlCollection: 1
  };
  W.HttpRequest.prototype = {
    open$3$async: function(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    $isHttpRequest: 1
  };
  W.HttpRequest_request_closure.prototype = {
    call$1: function(e) {
      var t1, t2, accepted, unknownRedirect, t3;
      type$.ProgressEvent._as(e);
      t1 = this.xhr;
      t2 = t1.status;
      if (typeof t2 !== "number")
        return t2.$ge();
      accepted = t2 >= 200 && t2 < 300;
      unknownRedirect = t2 > 307 && t2 < 400;
      t2 = accepted || t2 === 0 || t2 === 304 || unknownRedirect;
      t3 = this.completer;
      if (t2)
        t3.complete$1(0, t1);
      else
        t3.completeError$1(e);
    },
    $signature: 57
  };
  W.HttpRequestEventTarget.prototype = {};
  W.ImageData.prototype = {$isImageData: 1};
  W.ImageElement.prototype = {$isImageElement: 1};
  W.InputElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    set$type: function(receiver, value) {
      receiver.type = value;
    },
    get$value: function(receiver) {
      return receiver.value;
    },
    get$valueAsNumber: function(receiver) {
      return receiver.valueAsNumber;
    },
    $isInputElement: 1
  };
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.LIElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.LabelElement.prototype = {};
  W.LinkElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Location.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isLocation: 1
  };
  W.MessageEvent.prototype = {
    get$data: function(receiver) {
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(receiver.data, true);
    },
    $isMessageEvent: 1
  };
  W.MessagePort.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      type$.dynamic_Function_Event._as(listener);
      if (type === "message")
        receiver.start();
      this.super$EventTarget$addEventListener(receiver, type, listener, false);
    }
  };
  W.MeterElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.MidiMessageEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.MouseEvent.prototype = {
    get$offset: function(receiver) {
      var t1, t2, target, t3, t4, point;
      if (!!receiver.offsetX)
        return new P.Point(receiver.offsetX, receiver.offsetY, type$.Point_num);
      else {
        t1 = receiver.target;
        t2 = type$.Element;
        if (!t2._is(W._convertNativeToDart_EventTarget(t1)))
          throw H.wrapException(P.UnsupportedError$("offsetX is only supported on elements"));
        target = t2._as(W._convertNativeToDart_EventTarget(t1));
        t1 = receiver.clientX;
        t2 = receiver.clientY;
        t3 = type$.Point_num;
        t4 = target.getBoundingClientRect();
        point = new P.Point(t1, t2, t3).$sub(0, new P.Point(t4.left, t4.top, t3));
        return new P.Point(J.toInt$0$n(point.x), J.toInt$0$n(point.y), t3);
      }
    },
    $isMouseEvent: 1
  };
  W._ChildNodeListLazy.prototype = {
    get$first: function(_) {
      var result = this._this.firstChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    get$single: function(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw H.wrapException(P.StateError$("No elements"));
      if (l > 1)
        throw H.wrapException(P.StateError$("More than one element"));
      return t1.firstChild;
    },
    add$1: function(_, value) {
      this._this.appendChild(type$.Node._as(value));
    },
    addAll$1: function(_, iterable) {
      var t1, t2, len, i;
      type$.Iterable_Node._as(iterable);
      t1 = iterable._this;
      t2 = this._this;
      if (t1 !== t2)
        for (len = t1.childNodes.length, i = 0; i < len; ++i)
          t2.appendChild(t1.firstChild);
      return;
    },
    $indexSet: function(_, index, value) {
      var t1;
      H._asIntNullable(index);
      t1 = this._this;
      t1.replaceChild(type$.Node._as(value), C.NodeList_methods.$index(t1.childNodes, index));
    },
    get$iterator: function(_) {
      var t1 = this._this.childNodes;
      return new W.FixedSizeListIterator(t1, t1.length, H.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      H._asIntNullable(index);
      return C.NodeList_methods.$index(this._this.childNodes, index);
    }
  };
  W.Node.prototype = {
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    replaceWith$1: function(receiver, otherNode) {
      var $parent, exception;
      try {
        $parent = receiver.parentNode;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return receiver;
    },
    _clearChildren$0: function(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1);
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    _replaceChild$2: function(receiver, node, child) {
      return receiver.replaceChild(node, child);
    },
    $isNode: 1
  };
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.OListElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.ObjectElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.OptionElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.OutputElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.ParamElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.ProgressElement.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.ProgressEvent.prototype = {$isProgressEvent: 1};
  W.PushEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.ScriptElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.SelectElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$type: function(receiver) {
      return receiver.type;
    },
    get$value: function(receiver) {
      return receiver.value;
    },
    $isSelectElement: 1
  };
  W.SourceElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Storage.prototype = {
    containsKey$1: function(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index: function(receiver, key) {
      return receiver.getItem(H._asStringNullable(key));
    },
    $indexSet: function(receiver, key, value) {
      receiver.setItem(key, H._asStringNullable(value));
    },
    remove$1: function(receiver, key) {
      var value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1: function(receiver, f) {
      var i, key;
      type$.void_Function_String_String._as(f);
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        f.call$2(key, receiver.getItem(key));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    get$isEmpty: function(receiver) {
      return receiver.key(0) == null;
    },
    $isMap: 1
  };
  W.Storage_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 35
  };
  W.StyleElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var table, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = W.Element_Element$html("<table>" + html + "</table>", treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      fragment.toString;
      table.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(table));
      return fragment;
    }
  };
  W.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section, row;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      section.toString;
      t1 = new W._ChildNodeListLazy(section);
      row = t1.get$single(t1);
      fragment.toString;
      row.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(row));
      return fragment;
    }
  };
  W.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      fragment.toString;
      section.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(section));
      return fragment;
    }
  };
  W.TemplateElement.prototype = {
    setInnerHtml$1: function(receiver, html) {
      var t1, fragment;
      receiver.textContent = null;
      t1 = receiver.content;
      t1.toString;
      J._clearChildren$0$x(t1);
      fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, null, null);
      receiver.content.appendChild(fragment);
    },
    $isTemplateElement: 1
  };
  W.TextAreaElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    get$value: function(receiver) {
      return receiver.value;
    }
  };
  W.TextEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.Touch.prototype = {$isTouch: 1};
  W.TouchEvent.prototype = {$isTouchEvent: 1};
  W.TouchList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Touch._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.UIEvent.prototype = {};
  W.WebSocket.prototype = {$isWebSocket: 1};
  W.Window.prototype = {
    get$animationFrame: function(receiver) {
      var t1 = new P._Future($.Zone__current, type$._Future_num);
      this.requestAnimationFrame$1(receiver, new W.Window_animationFrame_closure(new P._SyncCompleter(t1, type$._SyncCompleter_num)));
      return t1;
    },
    requestAnimationFrame$1: function(receiver, callback) {
      type$.void_Function_num._as(callback);
      this._ensureRequestAnimationFrame$0(receiver);
      return this._requestAnimationFrame$1(receiver, W._wrapZone(callback, type$.num));
    },
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(type$.void_Function_num._as(callback), 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
      (function($this) {
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
          $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    $isWindow: 1,
    $isWindowBase: 1
  };
  W.Window_animationFrame_closure.prototype = {
    call$1: function(time) {
      this.completer.complete$1(0, H._asNumNullable(time));
    },
    $signature: 36
  };
  W.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  W._Attr.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    },
    $is_Attr: 1
  };
  W._DomRect.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      if (other == null)
        return false;
      return type$.Rectangle_num._is(other) && receiver.left == other.left && receiver.top == other.top && receiver.width == other.width && receiver.height == other.height;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(receiver.width), J.get$hashCode$(receiver.height));
    }
  };
  W._NamedNodeMap.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._AttributeMap.prototype = {
    forEach$1: function(_, f) {
      var t1, t2, t3, _i, key;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        f.call$2(key, t3.getAttribute(key));
      }
    },
    get$keys: function(_) {
      var len, t1, i, attr,
        attributes = this._element.attributes,
        keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = attributes.length, t1 = type$._Attr, i = 0; i < len; ++i) {
        if (i >= attributes.length)
          return H.ioore(attributes, i);
        attr = t1._as(attributes[i]);
        if (attr.namespaceURI == null)
          C.JSArray_methods.add$1(keys, attr.name);
      }
      return keys;
    },
    get$isEmpty: function(_) {
      return this.get$keys(this).length === 0;
    }
  };
  W._ElementAttributeMap.prototype = {
    containsKey$1: function(_, key) {
      return this._element.hasAttribute(key);
    },
    $index: function(_, key) {
      return this._element.getAttribute(H._asStringNullable(key));
    },
    $indexSet: function(_, key, value) {
      this._element.setAttribute(key, H._asStringNullable(value));
    },
    remove$1: function(_, key) {
      var t1, value;
      if (typeof key == "string") {
        t1 = this._element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        t1 = value;
      } else
        t1 = null;
      return t1;
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    }
  };
  W.EventStreamProvider.prototype = {};
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = H._instanceType(this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, t1._precomputed1);
    }
  };
  W._ElementEventStreamImpl.prototype = {};
  W._ElementListEventStreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var pool, t2, t3,
        t1 = this.$ti;
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      pool = new W._StreamPool(new H.JsLinkedHashMap(t1._eval$1("@<Stream<1>>")._bind$1(t1._eval$1("StreamSubscription<1>"))._eval$1("JsLinkedHashMap<1,2>")), t1._eval$1("_StreamPool<1>"));
      pool.set$_html$_controller(P.StreamController_StreamController$broadcast(pool.get$close(pool), true, t1._precomputed1));
      for (t2 = this._targetList, t2 = new H.ListIterator(t2, t2.get$length(t2), t2.$ti._eval$1("ListIterator<ListMixin.E>")), t3 = this._eventType, t1 = t1._eval$1("_EventStream<1>"); t2.moveNext$0();)
        pool.add$1(0, new W._EventStream(t2.__internal$_current, t3, false, t1));
      t1 = pool._html$_controller;
      t1.toString;
      return new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  W._EventStreamSubscription.prototype = {
    cancel$0: function() {
      var t2, t3, _this = this,
        t1 = _this._html$_target;
      if (t1 == null)
        return null;
      t2 = _this._onData;
      t3 = t2 != null;
      if (t3) {
        type$.dynamic_Function_Event._as(t2);
        if (t3)
          J._removeEventListener$3$x(t1, _this._eventType, t2, false);
      }
      _this._html$_target = null;
      _this.set$_onData(null);
      return null;
    },
    set$_onData: function(_onData) {
      this._onData = type$.dynamic_Function_Event._as(_onData);
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 37
  };
  W._StreamPool.prototype = {
    add$1: function(_, stream) {
      var t1, t2, t3, _this = this;
      _this.$ti._eval$1("Stream<1>")._as(stream);
      t1 = _this._subscriptions;
      if (t1.containsKey$1(0, stream))
        return;
      t2 = _this._html$_controller;
      t2 = t2.get$add(t2);
      stream.toString;
      t3 = stream.$ti;
      t3._eval$1("~(1)")._as(t2);
      type$.void_Function._as(new W._StreamPool_add_closure(_this, stream));
      t1.$indexSet(0, stream, W._EventStreamSubscription$(stream._html$_target, stream._eventType, t2, false, t3._precomputed1));
    },
    close$0: function(_) {
      var t1, t2;
      for (t1 = this._subscriptions, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t2.get$current().cancel$0();
      t1.clear$0(0);
      this._html$_controller.close$0(0);
    },
    set$_html$_controller: function(_controller) {
      this._html$_controller = this.$ti._eval$1("StreamController<1>")._as(_controller);
    }
  };
  W._StreamPool_add_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        subscription = t1._subscriptions.remove$1(0, t1.$ti._eval$1("Stream<1>")._as(this.stream));
      if (subscription != null)
        subscription.cancel$0();
      return null;
    },
    $signature: 2
  };
  W._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.get$isEmpty($._Html5NodeValidator__attributeValidators)) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1: function(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, H.S(W.Element__safeTagName(element)) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return H._asBoolNullable(validator.call$4(element, attributeName, value, this));
    },
    $isNodeValidator: 1
  };
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver), H.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1: function(receiver, value) {
      H.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }
  };
  W.NodeValidatorBuilder.prototype = {
    add$1: function(_, validator) {
      C.JSArray_methods.add$1(this._validators, type$.NodeValidator._as(validator));
    },
    allowsElement$1: function(element) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  W.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1: function(v) {
      return type$.NodeValidator._as(v).allowsElement$1(this.element);
    },
    $signature: 21
  };
  W.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1: function(v) {
      return type$.NodeValidator._as(v).allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 21
  };
  W._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, C.List_empty);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1: function(element) {
      return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var _this = this,
        tagName = W.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes;
      if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t1 = _this.allowedAttributes;
        if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, H.S(tagName) + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    },
    $isNodeValidator: 1
  };
  W._SimpleNodeValidator_closure.prototype = {
    call$1: function(x) {
      return !C.JSArray_methods.contains$1(C.List_yrN, H._asStringNullable(x));
    },
    $signature: 20
  };
  W._SimpleNodeValidator_closure0.prototype = {
    call$1: function(x) {
      return C.JSArray_methods.contains$1(C.List_yrN, H._asStringNullable(x));
    },
    $signature: 20
  };
  W._TemplatingNodeValidator.prototype = {
    allowsAttribute$3: function(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  W._TemplatingNodeValidator_closure.prototype = {
    call$1: function(attr) {
      return "TEMPLATE::" + H.S(H._asStringNullable(attr));
    },
    $signature: 68
  };
  W._SvgNodeValidator.prototype = {
    allowsElement$1: function(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && W.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3: function(element, attributeName, value) {
      if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._position = t1;
      return false;
    },
    get$current: function() {
      return this._html$_current;
    },
    set$_html$_current: function(_current) {
      this._html$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  W._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  W.NodeValidator.prototype = {};
  W._SameOriginUriPolicy.prototype = {$isUriPolicy: 1};
  W._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
      var _this = this,
        walk = new W._ValidatingTreeSanitizer_sanitizeTree_walk(_this);
      _this.modifiedTree = false;
      walk.call$2(node, null);
      for (; _this.modifiedTree;) {
        _this.modifiedTree = false;
        walk.call$2(node, null);
      }
    },
    _removeNode$2: function(node, $parent) {
      var t1 = this.modifiedTree = true;
      if ($parent != null ? $parent !== node.parentNode : t1)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node);
    },
    _sanitizeUntrustedElement$2: function(element, $parent) {
      var corruptedTest1, elementText, elementTagName, exception, t1,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._element.getAttribute("is");
        type$.Element._as(element);
        corruptedTest1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == 'lastChild' || element.name == 'lastChild' || element.id == 'previousSibling' || element.name == 'previousSibling' || element.id == 'children' || element.name == 'children')
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'previousSibling' || child.name == 'previousSibling' || child.id == 'children' || child.name == 'children')
              return true;
          }
          return false;
        }(element);
        corrupted = H.boolConversionCheck(corruptedTest1) ? true : !(element.attributes instanceof NamedNodeMap);
      } catch (exception) {
        H.unwrapException(exception);
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      try {
        elementTagName = W.Element__safeTagName(element);
        this._sanitizeElement$7(type$.Element._as(element), $parent, corrupted, elementText, elementTagName, type$.Map_dynamic_dynamic._as(attrs), H._asStringNullable(isAttr));
      } catch (exception) {
        if (H.unwrapException(exception) instanceof P.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing corrupted element " + H.S(elementText);
          if (typeof console != "undefined")
            window.console.warn(t1);
        }
      }
    },
    _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, keys, i, $name, t2, t3, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing element due to corrupted attributes on <" + text + ">";
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing disallowed element <" + H.S(tag) + "> from " + H.S($parent);
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed type extension <" + H.S(tag) + ' is="' + isAttr + '">';
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._element; i >= 0; --i) {
        if (i >= keys.length)
          return H.ioore(keys, i);
        $name = keys[i];
        t2 = _this.validator;
        t3 = J.toLowerCase$0$s($name);
        H._asStringNullable($name);
        if (!t2.allowsAttribute$3(element, t3, t1.getAttribute($name))) {
          window;
          t2 = "Removing disallowed attribute <" + H.S(tag) + " " + $name + '="' + H.S(t1.getAttribute($name)) + '">';
          if (typeof console != "undefined")
            window.console.warn(t2);
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element))
        _this.sanitizeTree$1(element.content);
    },
    $isNodeTreeSanitizer: 1
  };
  W._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2: function(node, $parent) {
      var child, nextChild, t2, t3, t4, exception,
        t1 = this.$this;
      switch (node.nodeType) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (t2 = type$.Node; null != child;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t3 = nextChild.nextSibling;
            t4 = child;
            t4 = t3 == null ? t4 != null : t3 !== t4;
            t3 = t4;
          } else
            t3 = false;
          if (t3) {
            t3 = P.StateError$("Corrupt HTML");
            throw H.wrapException(t3);
          }
        } catch (exception) {
          H.unwrapException(exception);
          t3 = t2._as(child);
          t1.modifiedTree = true;
          t4 = t3.parentNode;
          t4 = node == null ? t4 != null : node !== t4;
          if (t4) {
            t4 = t3.parentNode;
            if (t4 != null)
              t4.removeChild(t3);
          } else
            node.removeChild(t3);
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 27
  };
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._Storage_Interceptor_MapMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._AcceptStructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      C.JSArray_methods.add$1(t1, value);
      C.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1: function(e) {
      var millisSinceEpoch, t1, proto, slot, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date) {
        millisSinceEpoch = e.getTime();
        t1 = new P.DateTime(millisSinceEpoch, true);
        t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
        return t1;
      }
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return P.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        C.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        C.JSArray_methods.$indexSet(t1, slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = J.getInterceptor$ax(copy);
        i = 0;
        for (; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    },
    convertNativeToDart_AcceptStructuredClone$2$mustCopy: function(object, mustCopy) {
      this.mustCopy = true;
      return this.walk$1(object);
    }
  };
  P._AcceptStructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 28
  };
  P.convertDartToNative_Dictionary_closure.prototype = {
    call$2: function(key, value) {
      this.object[key] = value;
    },
    $signature: 5
  };
  P._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2: function(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P.FilteredElementList.prototype = {
    get$_html_common$_iterable: function() {
      var t1 = this._childNodes,
        t2 = H._instanceType(t1);
      return new H.MappedIterable(new H.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new P.FilteredElementList__iterable_closure()), t2._eval$1("WhereIterable<ListMixin.E>")), t2._eval$1("Element(ListMixin.E)")._as(new P.FilteredElementList__iterable_closure0()), t2._eval$1("MappedIterable<ListMixin.E,Element>"));
    },
    $indexSet: function(_, index, value) {
      var t1;
      H._asIntNullable(index);
      type$.Element._as(value);
      t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
    },
    set$length: function(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      if (typeof len !== "number")
        return H.iae(len);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw H.wrapException(P.ArgumentError$("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: function(_, value) {
      this._childNodes._this.appendChild(type$.Element._as(value));
    },
    removeRange$2: function(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = H.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      if (typeof end !== "number")
        return end.$sub();
      C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H._instanceType(t1)._eval$1("Iterable.E")), true, type$.dynamic), new P.FilteredElementList_removeRange_closure());
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
    },
    $index: function(_, index) {
      var t1;
      H._asIntNullable(index);
      t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
    },
    get$iterator: function(_) {
      var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    }
  };
  P.FilteredElementList__iterable_closure.prototype = {
    call$1: function(n) {
      return type$.Element._is(type$.Node._as(n));
    },
    $signature: 19
  };
  P.FilteredElementList__iterable_closure0.prototype = {
    call$1: function(n) {
      return type$.Element._as(type$.Node._as(n));
    },
    $signature: 29
  };
  P.FilteredElementList_removeRange_closure.prototype = {
    call$1: function(el) {
      return J.remove$0$ax(el);
    },
    $signature: 3
  };
  P.KeyRange.prototype = {$isKeyRange: 1};
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction;
      type$.Function._as(o);
      jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 3
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 3
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return new P.JsFunction(o);
    },
    $signature: 30
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return new P.JsArray(o, type$.JsArray_dynamic);
    },
    $signature: 31
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return new P.JsObject(o);
    },
    $signature: 32
  };
  P.JsObject.prototype = {
    $index: function(_, property) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._js$_jsObject[property] = P._convertToJS(value);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(0);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t2,
        t1 = this._js$_jsObject;
      if (args == null)
        t2 = null;
      else {
        t2 = H._arrayInstanceType(args);
        t2 = P.List_List$from(new H.MappedListIterable(args, t2._eval$1("@(1)")._as(P.js___convertToJS$closure()), t2._eval$1("MappedListIterable<1,@>")), true, type$.dynamic);
      }
      return P._convertToDart(t1[method].apply(t1, t2));
    },
    get$hashCode: function(_) {
      return 0;
    }
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (typeof index == "number" && index === C.JSInt_methods.toInt$0(index))
        this._checkIndex$1(H._asIntNullable(index));
      return this.$ti._precomputed1._as(this.super$JsObject$$index(0, index));
    },
    $indexSet: function(_, index, value) {
      this.$ti._precomputed1._as(value);
      if (typeof index == "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(H._asIntNullable(index));
      this.super$JsObject$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$JsObject$$indexSet(0, "length", $length);
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [this.$ti._precomputed1._as(value)]);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._JsArray_JsObject_ListMixin.prototype = {};
  P.promiseToFuture_closure.prototype = {
    call$1: function(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/")._as(r));
    },
    $signature: 7
  };
  P.promiseToFuture_closure0.prototype = {
    call$1: function(e) {
      return this.completer.completeError$1(e);
    },
    $signature: 7
  };
  P._JSRandom.prototype = {
    nextInt$1: function(max) {
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
      return Math.random() * max >>> 0;
    },
    nextDouble$0: function() {
      return Math.random();
    },
    $isRandom: 1
  };
  P.Point.prototype = {
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Point && this.x == other.x && this.y == other.y;
    },
    get$hashCode: function(_) {
      var hash,
        t1 = J.get$hashCode$(this.x),
        t2 = J.get$hashCode$(this.y);
      t2 = P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2);
      hash = 536870911 & t2 + ((67108863 & t2) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    $add: function(_, other) {
      var t2, t3, t4,
        t1 = this.$ti;
      t1._as(other);
      t2 = this.x;
      t3 = other.get$x(other);
      if (typeof t2 !== "number")
        return t2.$add();
      t3 = C.JSNumber_methods.$add(t2, t3);
      t2 = this.y;
      t4 = other.get$y(other);
      if (typeof t2 !== "number")
        return t2.$add();
      return new P.Point(t3, C.JSNumber_methods.$add(t2, t4), t1);
    },
    $sub: function(_, other) {
      var t2, t3, t4, t5,
        t1 = this.$ti;
      t1._as(other);
      t2 = this.x;
      t3 = other.x;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = this.y;
      t5 = other.y;
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t5 !== "number")
        return H.iae(t5);
      return new P.Point(t2 - t3, t4 - t5, t1);
    }
  };
  P.FEColorMatrixElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.FETurbulenceElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.ScriptElement0.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isScriptElement0: 1
  };
  P.StyleElement0.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.SvgElement.prototype = {
    get$children: function(receiver) {
      return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
    },
    get$innerHtml: function(receiver) {
      var container = document.createElement("div"),
        cloned = type$.SvgElement._as(receiver.cloneNode(true)),
        t1 = container.children;
      cloned.toString;
      new W._ChildrenElementList(container, t1).addAll$1(0, new P.FilteredElementList(cloned, new W._ChildNodeListLazy(cloned)));
      return container.innerHTML;
    },
    set$innerHtml: function(receiver, value) {
      this.setInnerHtml$1(receiver, value);
    },
    createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
      var html, t2, fragment, svgFragment, root,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
      C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
      C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
      C.JSArray_methods.add$1(t1, new W._SvgNodeValidator());
      treeSanitizer = new W._ValidatingTreeSanitizer(new W.NodeValidatorBuilder(t1));
      html = '<svg version="1.1">' + svg + "</svg>";
      t1 = document;
      t2 = t1.body;
      fragment = (t2 && C.BodyElement_methods).createFragment$2$treeSanitizer(t2, html, treeSanitizer);
      svgFragment = t1.createDocumentFragment();
      fragment.toString;
      t1 = new W._ChildNodeListLazy(fragment);
      root = t1.get$single(t1);
      for (; t1 = root.firstChild, t1 != null;)
        svgFragment.appendChild(t1);
      return svgFragment;
    },
    get$onClick: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    $isSvgElement: 1
  };
  P.Float32List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.AudioBuffer.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    copyToChannel$3: function(receiver, source, channelNumber, startInChannel) {
      return receiver.copyToChannel(source, channelNumber, startInChannel);
    },
    $isAudioBuffer: 1
  };
  P.AudioBufferSourceNode.prototype = {$isAudioBufferSourceNode: 1};
  P.AudioContext.prototype = {
    createGain$0: function(receiver) {
      if (receiver.createGain !== undefined)
        return receiver.createGain();
      else
        return receiver.createGainNode();
    },
    createScriptProcessor$3: function(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
      var t1 = (receiver.createScriptProcessor || receiver.createJavaScriptNode).call(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels);
      return t1;
    },
    _decodeAudioData$3: function(receiver, audioData, successCallback, errorCallback) {
      type$.void_Function_AudioBuffer._as(successCallback);
      type$.void_Function_DomException._as(errorCallback);
      return receiver.decodeAudioData(audioData, H.convertDartClosureToJS(successCallback, 1), H.convertDartClosureToJS(errorCallback, 1));
    },
    decodeAudioData$1: function(receiver, audioData) {
      var t1, completer;
      type$.void_Function_AudioBuffer._as(null);
      type$.void_Function_DomException._as(null);
      t1 = new P._Future($.Zone__current, type$._Future_AudioBuffer);
      completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_AudioBuffer);
      this._decodeAudioData$3(receiver, audioData, new P.AudioContext_decodeAudioData_closure(completer), new P.AudioContext_decodeAudioData_closure0(completer));
      return t1;
    },
    $isAudioContext: 1
  };
  P.AudioContext_decodeAudioData_closure.prototype = {
    call$1: function(value) {
      this.completer.complete$1(0, type$.AudioBuffer._as(value));
    },
    $signature: 26
  };
  P.AudioContext_decodeAudioData_closure0.prototype = {
    call$1: function(error) {
      var t1;
      type$.DomException._as(error);
      t1 = this.completer;
      if (error == null)
        t1.completeError$1("");
      else
        t1.completeError$1(error);
    },
    $signature: 34
  };
  P.AudioNode.prototype = {$isAudioNode: 1};
  P.AudioParam.prototype = {
    get$value: function(receiver) {
      return receiver.value;
    },
    $isAudioParam: 1
  };
  P.AudioProcessingEvent.prototype = {$isAudioProcessingEvent: 1};
  P.AudioScheduledSourceNode.prototype = {};
  P.BaseAudioContext.prototype = {
    createGain$0: function(receiver) {
      return receiver.createGain();
    },
    createScriptProcessor$3: function(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
      return receiver.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
    },
    $isBaseAudioContext: 1
  };
  P.BiquadFilterNode.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isBiquadFilterNode: 1
  };
  P.DelayNode.prototype = {$isDelayNode: 1};
  P.DynamicsCompressorNode.prototype = {$isDynamicsCompressorNode: 1};
  P.GainNode.prototype = {$isGainNode: 1};
  P.OfflineAudioContext.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.OscillatorNode.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isOscillatorNode: 1
  };
  P.ScriptProcessorNode.prototype = {$isScriptProcessorNode: 1};
  D.GrowableAudioBuffer.prototype = {
    clear$0: function(_) {
      var t1, t2, _this = this,
        _i = _this.samples = 0;
      _this.waveform.clear$0(0);
      _this._buffer = null;
      for (t1 = _this._channels, t2 = t1.length; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        C.JSArray_methods.clear$0(t1[_i]);
    },
    reshape$2: function(channels, sampleRate) {
      var t1, t2, c;
      this.clear$0(0);
      this.sampleRate = sampleRate;
      t1 = this._channels;
      C.JSArray_methods.set$length(t1, 0);
      if (typeof channels !== "number")
        return channels.$lt();
      if (channels < 0)
        channels = 1;
      for (t2 = type$.JSArray_Float32List, c = 0; c < channels; ++c)
        C.JSArray_methods.add$1(t1, H.setRuntimeTypeInfo([], t2));
    },
    toAudioBuffer$0: function() {
      var t2, t3, c, index, _i, b, t4, _this = this,
        t1 = _this._buffer;
      if (t1 != null)
        return t1;
      t1 = _this.samples;
      if (t1 <= 0)
        return null;
      t2 = _this._channels;
      t3 = type$.dynamic;
      _this._buffer = new AudioBuffer(P.convertDartToNative_Dictionary(P.LinkedHashMap_LinkedHashMap$_literal(["length", t1, "numberOfChannels", t2.length, "sampleRate", _this.sampleRate], t3, t3)));
      for (c = 0; c < t2.length; ++c)
        for (t1 = t2[c], t3 = t1.length, index = 0, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          b = t1[_i];
          t4 = _this._buffer;
          (t4 && C.AudioBuffer_methods).copyToChannel$3(t4, b, c, index);
          index += J.get$length$asx(b);
        }
      return _this._buffer;
    },
    toWAV$0: function() {
      var t1, channels, len, wav, t2, t3, leftSource, rightSource, i, c, sample, t4, _this = this;
      if (_this._buffer == null)
        _this.toAudioBuffer$0();
      t1 = _this._buffer;
      if (t1 == null)
        return null;
      channels = Math.min(2, H.checkNum(t1.numberOfChannels));
      len = t1.length;
      if (typeof len !== "number")
        return len.$mul();
      wav = new Int16Array(len * channels + 23);
      t1 = wav.length;
      if (0 >= t1)
        return H.ioore(wav, 0);
      wav[0] = 18770;
      if (1 >= t1)
        return H.ioore(wav, 1);
      wav[1] = 17990;
      t2 = 2 * len * channels;
      t3 = t2 + 15;
      if (2 >= t1)
        return H.ioore(wav, 2);
      wav[2] = t3 & 65535;
      if (3 >= t1)
        return H.ioore(wav, 3);
      wav[3] = (t3 & 4294901760) >>> 16;
      if (4 >= t1)
        return H.ioore(wav, 4);
      wav[4] = 16727;
      if (5 >= t1)
        return H.ioore(wav, 5);
      wav[5] = 17750;
      if (6 >= t1)
        return H.ioore(wav, 6);
      wav[6] = 28006;
      if (7 >= t1)
        return H.ioore(wav, 7);
      wav[7] = 8308;
      if (8 >= t1)
        return H.ioore(wav, 8);
      wav[8] = 18;
      if (9 >= t1)
        return H.ioore(wav, 9);
      wav[9] = 0;
      if (10 >= t1)
        return H.ioore(wav, 10);
      wav[10] = 1;
      if (11 >= t1)
        return H.ioore(wav, 11);
      wav[11] = channels;
      t3 = _this.sampleRate;
      if (typeof t3 !== "number")
        return t3.$and();
      if (12 >= t1)
        return H.ioore(wav, 12);
      wav[12] = t3 & 65535;
      if (13 >= t1)
        return H.ioore(wav, 13);
      wav[13] = (t3 & 4294901760) >>> 16;
      t3 = 2 * channels * t3;
      if (14 >= t1)
        return H.ioore(wav, 14);
      wav[14] = t3 & 65535;
      if (15 >= t1)
        return H.ioore(wav, 15);
      wav[15] = (t3 & 4294901760) >>> 16;
      if (16 >= t1)
        return H.ioore(wav, 16);
      wav[16] = channels * 2;
      if (17 >= t1)
        return H.ioore(wav, 17);
      wav[17] = 16;
      if (18 >= t1)
        return H.ioore(wav, 18);
      wav[18] = 0;
      if (19 >= t1)
        return H.ioore(wav, 19);
      wav[19] = 24932;
      if (20 >= t1)
        return H.ioore(wav, 20);
      wav[20] = 24948;
      if (21 >= t1)
        return H.ioore(wav, 21);
      wav[21] = t2 & 65535;
      if (22 >= t1)
        return H.ioore(wav, 22);
      wav[22] = (t2 & 4294901760) >>> 16;
      leftSource = _this._buffer.getChannelData(0);
      rightSource = channels === 2 ? _this._buffer.getChannelData(1) : leftSource;
      for (i = 0; i < len; ++i)
        for (t2 = i * channels, c = 0; c < channels; ++c) {
          if (c === 0) {
            if (i >= leftSource.length)
              return H.ioore(leftSource, i);
            sample = leftSource[i];
          } else {
            if (i >= rightSource.length)
              return H.ioore(rightSource, i);
            sample = rightSource[i];
          }
          sample = Math.max(-1, Math.min(1, sample));
          sample = sample < 0 ? sample * 32768 : sample * 32767;
          t3 = t2 + c + 23;
          t4 = C.JSNumber_methods.round$0(sample);
          if (t3 < 0 || t3 >= t1)
            return H.ioore(wav, t3);
          wav[t3] = t4;
        }
      t1 = wav.buffer;
      t1 = new Uint8Array(t1, 0);
      return t1;
    },
    toWAVBase64$0: function() {
      var t1,
        wav = this.toWAV$0();
      if (wav != null) {
        type$.Base64Codec._eval$1("Codec.S")._as(wav);
        t1 = "data:audio/wav;base64," + C.C_Base64Codec.get$encoder().convert$1(wav);
      } else
        t1 = null;
      return t1;
    }
  };
  U.MIDIManager.prototype = {
    _midiConnection$1: function(jsonString) {
      var _this = this, _s4_ = "type", _s5_ = "state",
        _s9_ = "connected",
        _s12_ = "disconnected",
        midi = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(jsonString), null)),
        t1 = J.getInterceptor$asx(midi),
        port = U._toInt(t1.$index(midi, "port"), 0);
      if (J.$eq$(t1.$index(midi, _s4_), "input") && J.$eq$(t1.$index(midi, _s5_), _s9_) && port !== 0)
        _this.inputs.$indexSet(0, port, midi);
      else if (J.$eq$(t1.$index(midi, _s4_), "input") && J.$eq$(t1.$index(midi, _s5_), _s12_) && port !== 0)
        _this.inputs.remove$1(0, port);
      else if (J.$eq$(t1.$index(midi, _s4_), "output") && J.$eq$(t1.$index(midi, _s5_), _s9_) && port !== 0)
        _this.outputs.$indexSet(0, port, midi);
      else if (J.$eq$(t1.$index(midi, _s4_), "output") && J.$eq$(t1.$index(midi, _s5_), _s12_) && port !== 0)
        _this.outputs.remove$1(0, port);
      _this._stateStream.add$1(0, new U.MIDIEvent(midi));
    },
    _midiEvent$1: function(jsonString) {
      var midi = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(jsonString), null));
      this._messageStream.add$1(0, new U.MIDIEvent(midi));
    },
    set$_stateStream: function(_stateStream) {
      this._stateStream = type$.StreamController_MIDIEvent._as(_stateStream);
    },
    set$_messageStream: function(_messageStream) {
      this._messageStream = type$.StreamController_MIDIEvent._as(_messageStream);
    }
  };
  U.MIDIEvent.prototype = {
    toString$0: function(_) {
      return J.toString$0$(this.data);
    }
  };
  N.HexCodec.prototype = {
    get$encoder: function() {
      return C.C_HexEncoder;
    }
  };
  R.HexEncoder.prototype = {
    convert$1: function(bytes) {
      type$.List_int._as(bytes);
      return R._convert(bytes, 0, bytes.length);
    }
  };
  U.SynthChain.prototype = {
    loadPatch$1: function(config) {
      var t1, t2, t3, t4, t5, t6, t7, node, t8, t9, t10, t11, adsr, r, source, dest, _this = this,
        _s9_ = "frequency",
        _s6_ = "detune",
        _s8_ = "waveform";
      _this.out = null;
      t1 = J.getInterceptor$asx(config);
      t2 = type$.List_dynamic;
      if (t2._is(t1.$index(config, "nodes")))
        for (t3 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "nodes"))), t4 = type$.Map_dynamic_dynamic, t5 = _this.context, t6 = _this.nodes, t7 = J.getInterceptor$x(t5); t3.moveNext$0();) {
          node = t3.get$current();
          if (t4._is(node)) {
            t8 = J.getInterceptor$asx(node);
            switch (t8.$index(node, "type")) {
              case "sample":
                t9 = new B.SynthSampleNode(t5);
                t9.SynthNode$2(t5, node);
                t9.samples = t2._as(t8.$index(node, "samples"));
                t8 = t7.createGain$0(t5);
                t9.dIn = t8;
                t8.gain.value = 1;
                t8 = t7.createGain$0(t5);
                t9.pIn = t8;
                t8.gain.value = 1;
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "fm":
                t9 = new B.FMNode(t5);
                t9.SynthNode$2(t5, node);
                t9.frequency = B.toNum1(t8.$index(node, _s9_), 220);
                t9.relative = B.toBool0(t8.$index(node, "relative"), true);
                t10 = t5.createOscillator();
                t9.osc = t10;
                t10.frequency.value = 1800;
                t9.osc.detune.value = B.toNum1(t8.$index(node, _s6_), 0);
                t10 = t9.osc;
                t11 = t8.$index(node, _s8_);
                t10.type = t11 == null ? "sine" : J.toString$0$(t11);
                t9.osc.start();
                t10 = t7.createGain$0(t5);
                t9.dIn = t10;
                t10.gain.value = B.toNum1(t8.$index(node, "dIn"), 400);
                t10 = t7.createGain$0(t5);
                t9.fIn = t10;
                t10.gain.value = B.toNum1(t8.$index(node, "fIn"), 100);
                t9.dIn.connect(t9.osc.detune, 0);
                t9.fIn.connect(t9.osc.frequency, 0);
                t9.osc.connect(t9.level, 0, 0);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "lfo":
                t9 = new B.LFONode(t5);
                t9.SynthNode$2(t5, node);
                t9.frequency = B.toNum1(t8.$index(node, _s9_), 1);
                t10 = t5.createOscillator();
                t9.osc = t10;
                t10.frequency.value = t9.frequency;
                t9.osc.detune.value = B.toNum1(t8.$index(node, _s6_), 0);
                t10 = t9.osc;
                t8 = t8.$index(node, _s8_);
                t10.type = t8 == null ? "sine" : J.toString$0$(t8);
                t9.osc.start();
                t9.osc.connect(t9.level, 0, 0);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "delay":
                t9 = new B.SynthDelayNode(0.1, t5);
                t9.SynthNode$2(t5, node);
                t9.delay = t5.createDelay();
                t9.delayTime = B.toNum1(t8.$index(node, "delay"), 0.1);
                t9.delay.connect(t9.level, 0, 0);
                t9.delay.delayTime.value = t9.delayTime;
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "adsr":
                adsr = new B.ADSRNode(0.1, 0.2, 0.2, t5);
                adsr.SynthNode$2(t5, node);
                adsr.adsr = t7.createGain$0(t5);
                adsr.A = B.toNum1(t8.$index(node, "A"), adsr.A);
                adsr.D = B.toNum1(t8.$index(node, "D"), adsr.D);
                adsr.S = B.toNum1(t8.$index(node, "S"), adsr.S);
                adsr.R = B.toNum1(t8.$index(node, "R"), adsr.R);
                adsr.adsr.connect(adsr.level, 0, 0);
                adsr.adsr.gain.value = 0;
                t8 = adsr.R;
                t9 = _this.release;
                _this.release = Math.max(H.checkNum(t8), t9);
                adsr.enabled = false;
                t6.$indexSet(0, adsr.id, adsr);
                break;
              case "compressor":
                t9 = new B.SynthCompressorNode(t5);
                t9.SynthNode$2(t5, node);
                t10 = t5.createDynamicsCompressor();
                t9.compressor = t10;
                t10.connect(t9.level, 0, 0);
                t9.compressor.threshold.value = B.toNum1(t8.$index(node, "threshold"), -24);
                t9.compressor.knee.value = B.toNum1(t8.$index(node, "knee"), 30);
                t9.compressor.ratio.value = B.toNum1(t8.$index(node, "ratio"), 12);
                t9.compressor.release.value = B.toNum1(t8.$index(node, "release"), 0.25);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "filter":
                t9 = new B.FilterNode(t5);
                t9.SynthNode$2(t5, node);
                t10 = t5.createBiquadFilter();
                t9.filter = t10;
                t10.connect(t9.level, 0, 0);
                t9.filter.frequency.value = B.toNum1(t8.$index(node, _s9_), 350);
                t9.filter.detune.value = B.toNum1(t8.$index(node, _s6_), 0);
                t9.filter.Q.value = B.toNum1(t8.$index(node, "Q"), 1);
                t9.filter.gain.value = B.toNum1(t8.$index(node, "gain"), 0);
                t10 = t9.filter;
                t8 = t8.$index(node, "filter type");
                t10.type = t8 == null ? "lowpass" : J.toString$0$(t8);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "distortion":
                t8 = B.DistNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
              case "out":
                t8 = _this.out = B.SynthNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
              default:
                t8 = B.SynthNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
            }
          }
        }
      for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "routing"))), t2 = _this.nodes; t1.moveNext$0();) {
        r = t1.get$current();
        t3 = J.getInterceptor$asx(r);
        source = t2.$index(0, t3.$index(r, "source"));
        dest = t2.$index(0, t3.$index(r, "dest"));
        if (source != null && dest != null) {
          source.enabled = true;
          dest.connectFromSource$2(source, H._asStringNullable(t3.$index(r, "type")));
        }
      }
    },
    playNote$6: function(note, dest, when, offset, duration, sustain) {
      var _this = this,
        t1 = _this.out;
      if (t1 == null)
        return 0;
      t1.level.connect(dest, 0, 0);
      _this.maxD = duration;
      t1 = _this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_playNote_closure(_this, note, when, offset, duration, true));
      return _this.release + _this.maxD;
    },
    pitchBend$1: function(cents) {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_pitchBend_closure(cents));
    },
    releaseNote$0: function() {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_releaseNote_closure());
    },
    destroy$0: function() {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_destroy_closure());
    }
  };
  U.SynthChain_playNote_closure.prototype = {
    call$1: function(node) {
      var t1, _this = this;
      type$.SynthNode._as(node);
      node.start$5(0, _this.note, _this.when, _this.offset, _this.duration, _this.sustain);
      if (node instanceof B.SynthSampleNode) {
        t1 = _this.$this;
        t1.maxD = Math.max(t1.maxD, node.sampleDuration);
      }
    },
    $signature: 22
  };
  U.SynthChain_pitchBend_closure.prototype = {
    call$1: function(node) {
      return type$.SynthNode._as(node).pitchBend$1(this.cents);
    },
    $signature: 23
  };
  U.SynthChain_releaseNote_closure.prototype = {
    call$1: function(node) {
      type$.SynthNode._as(node).release$0(0);
    },
    $signature: 22
  };
  U.SynthChain_destroy_closure.prototype = {
    call$1: function(node) {
      return type$.SynthNode._as(node).destroy$0();
    },
    $signature: 23
  };
  E.ClockSubscriber.prototype = {};
  E.Metronome.prototype = {};
  E.PlayClock.prototype = {
    setTempo$1: function(tempo) {
      this.set$_bpm(Math.max(1, H.checkNum(tempo)));
      this._listeners.forEach$1(0, new E.PlayClock_setTempo_closure());
    },
    setTimeSignature$1: function(s) {
      var t1, t2, _this = this;
      if (s == null || s.split("/").length !== 2)
        s = "4/4";
      t1 = H.setRuntimeTypeInfo(s.split("/"), type$.JSArray_String);
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      _this._beatsPerMeasure = B.toInt0(t1[0], -1);
      t1 = s.split("/");
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      t1 = B.toInt0(t1[1], -1);
      _this._beatValue = t1;
      t2 = _this._beatsPerMeasure;
      if (typeof t2 !== "number")
        return t2.$lt();
      if (t2 >= 0) {
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < 0;
      } else
        t1 = true;
      if (t1)
        t1 = _this._beatValue = _this._beatsPerMeasure = 4;
      else
        t1 = t2;
      _this._meter = "" + t1 + "/" + H.S(_this._beatValue);
      _this._listeners.forEach$1(0, new E.PlayClock_setTimeSignature_closure());
    },
    set$_bpm: function(_bpm) {
      this._bpm = H._asIntNullable(_bpm);
    }
  };
  E.PlayClock_setTempo_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onTempoChange$0();
    },
    $signature: 24
  };
  E.PlayClock_setTimeSignature_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onTimeSignatureChange$0();
    },
    $signature: 24
  };
  K.Effect.prototype = {};
  X.SynthEvent.prototype = {
    releaseNote$0: function() {
      var t1 = this.chain;
      if (t1 != null) {
        t1.releaseNote$0();
        P.Timer_Timer(new P.Duration(1000 * (C.JSNumber_methods.round$0(this.chain.release * 1000) + 200)), new X.SynthEvent_releaseNote_closure(this));
      }
    }
  };
  X.SynthEvent_releaseNote_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.onEnded;
      if (t1 != null)
        P.Function_apply(t1, [], null);
    },
    $signature: 1
  };
  D.Key.prototype = {};
  B.SynthNode.prototype = {
    SynthNode$2: function(context, config) {
      var _this = this,
        t1 = J.getInterceptor$asx(config);
      _this.id = B.toInt0(t1.$index(config, "id"), 0);
      _this.level = J.createGain$0$x(_this.context);
      _this.enabled = B.toBool0(t1.$index(config, "enabled"), true);
      t1 = B.toNum1(t1.$index(config, "level"), 1);
      _this._level = t1;
      _this.level.gain.value = t1;
    },
    connectFromSource$2: function(source, type) {
      source.level.connect(this.level, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
    },
    release$0: function(_) {
    },
    destroy$0: function() {
      var t1 = this.level;
      if (t1 != null)
        t1.disconnect();
      this.level = null;
    },
    pitchBend$1: function(cents) {
    },
    get$id: function(receiver) {
      return this.id;
    }
  };
  B.ADSRNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.adsr, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, t2, t3, _this = this,
        param = _this.adsr.gain;
      param.cancelScheduledValues(0);
      param.setValueAtTime(0, when);
      t1 = _this.A;
      if (typeof t1 !== "number")
        return t1.$div();
      param.setTargetAtTime(1, when, t1 / 2);
      t1 = _this.D;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t2 = _this.S;
        t3 = _this.A;
        if (typeof t3 !== "number")
          return t3.$add();
        param.setTargetAtTime(t2, t3 + when, t1 / 2);
      }
    },
    release$0: function(_) {
      var t1, param, now;
      this.super$SynthNode$release(0);
      t1 = this.adsr;
      if (t1 != null) {
        param = t1.gain;
        now = t1.context.currentTime;
        t1 = this.R;
        if (typeof t1 !== "number")
          return t1.$div();
        param.setTargetAtTime(0, now, t1 / 3);
      }
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.adsr;
      if (t1 != null)
        t1.disconnect();
      this.adsr = null;
    }
  };
  B.FMNode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, t2, f, _this = this;
      if (_this.osc == null || !_this.enabled)
        return;
      if (_this.relative) {
        t1 = note._note;
        t1 = Math.pow(2, C.JSNumber_methods._tdivFast$1(t1, 12) + C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1), 12) / 12);
        t2 = _this.frequency;
        if (typeof t2 !== "number")
          return H.iae(t2);
        f = 16.3516 * t1 * t2;
      } else
        f = _this.frequency;
      _this.osc.frequency.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.frequency.setValueAtTime(f, t1.context.currentTime);
      _this.osc.detune.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.detune.setValueAtTime(0, t1.context.currentTime);
    },
    pitchBend$1: function(cents) {
      var t1 = this.osc,
        when = t1.context.currentTime;
      t1 = t1.detune;
      if (typeof when !== "number")
        return when.$add();
      t1.linearRampToValueAtTime(cents, when + 0.01);
    },
    destroy$0: function() {
      var t1, _this = this;
      _this.super$SynthNode$destroy();
      t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.stop();
      _this.dIn.disconnect();
      _this.fIn.disconnect();
      _this.osc.disconnect();
      _this.osc = _this.fIn = _this.dIn = null;
    },
    connectFromSource$2: function(source, type) {
      if (type === "detune")
        source.level.connect(this.dIn, 0, 0);
      else if (type === "frequency")
        source.level.connect(this.fIn, 0, 0);
      else if (type === "amplitude")
        source.level.connect(this.level.gain, 0);
    }
  };
  B.LFONode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var _this = this,
        t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.frequency.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.frequency.setValueAtTime(_this.frequency, t1.context.currentTime);
      _this.osc.detune.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.detune.setValueAtTime(0, t1.context.currentTime);
    },
    destroy$0: function() {
      var t1, _this = this;
      _this.super$SynthNode$destroy();
      t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.stop();
      _this.osc.disconnect();
      _this.osc = null;
    },
    connectFromSource$2: function(incoming, type) {
      var t1 = this.osc;
      if (t1 == null)
        return;
      if (type === "detune")
        incoming.level.connect(t1.detune, 0);
      else if (type === "frequency")
        incoming.level.connect(t1.frequency, 0);
      else if (type === "amplitude")
        incoming.level.connect(this.level.gain, 0);
    }
  };
  B.DistNode.prototype = {
    DistNode$2: function(context, config) {
      var t3, _this = this,
        t1 = J.getInterceptor$x(context),
        t2 = t1.createScriptProcessor$3(context, 1024, 2, 2);
      _this.spn = t2;
      t2.toString;
      t3 = type$.void_Function_AudioProcessingEvent._as(new B.DistNode_closure());
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t2, "audioprocess", t3, false, type$.AudioProcessingEvent);
      t1 = t1.createGain$0(context);
      _this.preGainNode = t1;
      t1.gain.value = B.toNum1(J.$index$asx(config, "pre-gain"), 1);
      _this.preGainNode.connect(_this.spn, 0, 0);
      _this.spn.connect(_this.level, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
    },
    destroy$0: function() {
      var _this = this;
      _this.super$SynthNode$destroy();
      _this.spn.disconnect();
      _this.preGainNode.disconnect();
      _this.preGainNode = _this.spn = null;
    },
    connectFromSource$2: function(incoming, type) {
      incoming.level.connect(this.preGainNode, 0, 0);
    }
  };
  B.DistNode_closure.prototype = {
    call$1: function($event) {
      var atan, input, output, c, t1, channelData, outputData, t2, i;
      type$.AudioProcessingEvent._as($event);
      atan = new B.DistNode__closure();
      input = $event.inputBuffer;
      output = $event.outputBuffer;
      c = 0;
      while (true) {
        t1 = input.numberOfChannels;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(c < t1))
          break;
        channelData = input.getChannelData(c);
        outputData = output.getChannelData(c);
        for (t1 = channelData.length, t2 = outputData && C.NativeFloat32List_methods, i = 0; i < t1; ++i)
          t2.$indexSet(outputData, i, atan.call$1(channelData[i]));
        ++c;
      }
    },
    $signature: 39
  };
  B.DistNode__closure.prototype = {
    call$1: function(signal) {
      var e2x = Math.pow(2.71828, 2 * signal);
      return (e2x - 1) / (e2x + 1);
    },
    $signature: 40
  };
  B.SynthSampleNode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, step, score, delta, sample, s, t2, t3, t4, d, buffer, playback, _this = this;
      if (!_this.enabled)
        return;
      t1 = _this.source;
      if (t1 != null)
        t1.disconnect();
      t1 = _this.context.createBufferSource();
      _this.source = t1;
      t1.connect(_this.level, 0, 0);
      _this.dIn.connect(_this.source.detune, 0);
      _this.pIn.connect(_this.source.playbackRate, 0);
      for (t1 = J.get$iterator$ax(_this.samples), step = -1, score = 100000, delta = 0, sample = null; t1.moveNext$0();) {
        s = t1.get$current();
        t2 = note._note;
        t3 = J.getInterceptor$asx(s);
        t4 = H._asNumNullable(t3.$index(s, "step"));
        if (typeof t4 !== "number")
          return H.iae(t4);
        d = t2 - t4;
        if (d < 0)
          d = d * -1 + 12;
        if (d < score) {
          step = H._asNumNullable(t3.$index(s, "step"));
          t2 = note._note;
          if (typeof step !== "number")
            return H.iae(step);
          delta = t2 - step;
          sample = H._asStringNullable(t3.$index(s, "sample"));
          score = d;
        }
      }
      buffer = sample != null ? type$.AudioBuffer._as($.$get$Synthesizer_sounds().$index(0, sample)) : null;
      if (buffer != null) {
        playback = Math.pow(2, delta / 12);
        _this.source.buffer = buffer;
        _this.source.playbackRate.value = playback;
        _this.source.start(when, offset);
        t1 = buffer.duration;
        if (typeof t1 !== "number")
          return t1.$div();
        _this.sampleDuration = t1 / playback;
      }
    },
    pitchBend$1: function(cents) {
      var when, semitoneRatio, t2, exception, t3,
        t1 = this.source;
      if (t1 != null && this.enabled) {
        when = t1.context.currentTime;
        try {
          t1 = t1.detune;
          t2 = when;
          if (typeof t2 !== "number")
            return t2.$add();
          t1.linearRampToValueAtTime(cents, t2 + 0.01);
        } catch (exception) {
          H.unwrapException(exception);
          window;
          if (typeof console != "undefined")
            window.console.info("The browser does not support detune; Using playbackrate");
          semitoneRatio = Math.pow(2, 0.0008333333333333334);
          t1 = this.source.playbackRate;
          t2 = semitoneRatio;
          H.checkNum(t2);
          t2 = Math.pow(t2, cents);
          t3 = when;
          if (typeof t3 !== "number")
            return t3.$add();
          t1.linearRampToValueAtTime(t2, t3 + 0.01);
        }
      }
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.source;
      if (t1 != null)
        t1.disconnect();
      this.source = null;
    },
    connectFromSource$2: function(incoming, type) {
      if (type === "detune")
        incoming.level.connect(this.dIn, 0, 0);
      else if (type === "playbackRate")
        incoming.level.connect(this.pIn, 0, 0);
    }
  };
  B.SynthDelayNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.delay, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.delay;
      if (t1 != null)
        t1.disconnect();
      this.delay = null;
    }
  };
  B.SynthCompressorNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.compressor, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.compressor;
      if (t1 != null)
        t1.disconnect();
      this.compressor = null;
    }
  };
  B.FilterNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.filter, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.filter;
      if (t1 != null)
        t1.disconnect();
      this.filter = null;
    }
  };
  F.Note.prototype = {};
  L.Synthesizer.prototype = {
    loadPatch$3: function($name, patch, context) {
      return this.loadPatch$body$Synthesizer($name, patch, context);
    },
    loadPatch$body$Synthesizer: function($name, patch, context) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, t2, t3, t4, node, t5, sample, t6, _box_0;
      var $async$loadPatch$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              $async$self.cancelAllNotes$0();
              $async$self.config = patch;
              _box_0.load_count = 0;
              t1 = type$.List_dynamic;
              if (t1._is(J.$index$asx(patch, "nodes")))
                for (t2 = type$.Iterable_dynamic, t3 = J.get$iterator$ax(t2._as(J.$index$asx($async$self.config, "nodes"))), t4 = type$.Map_dynamic_dynamic; t3.moveNext$0();) {
                  node = t4._as(t3.get$current());
                  t5 = J.getInterceptor$asx(node);
                  if (J.$eq$(t5.$index(node, "type"), "sample"))
                    if (t1._is(t5.$index(node, "samples")))
                      for (t5 = J.get$iterator$ax(t2._as(t5.$index(node, "samples"))); t5.moveNext$0();) {
                        sample = t4._as(t5.get$current());
                        t6 = J.getInterceptor$asx(sample);
                        if (t6.$index(sample, "sample") != null) {
                          ++_box_0.load_count;
                          $async$self.loadAudioBuffer$3(H._asStringNullable(t6.$index(sample, "sample")), context, new L.Synthesizer_loadPatch_closure(_box_0));
                        }
                      }
                }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadPatch$3, $async$completer);
    },
    _play$3: function(note, dest, generator) {
      var $event, t2, gain, t3, t4, _this = this, t1 = {};
      if (_this.config == null)
        return null;
      $event = new X.SynthEvent(note);
      t2 = $event.chain = _this.allocateGenerator$1(dest.context);
      if (t2 == null)
        return null;
      gain = J.createGain$0$x(dest.context);
      t3 = gain.gain;
      t4 = note._velocity;
      t3.value = t4 * t4 / 16129;
      t1.gain = gain;
      gain.connect(dest, 0, 0);
      t3 = t2.context;
      t3.currentTime;
      t2.playNote$6(note, gain, 0, 0, 0, true);
      C.JSArray_methods.add$1(_this.notes, $event);
      $event.onEnded = new L.Synthesizer__play_closure(t1, _this, $event);
      return $event;
    },
    releaseNote$1: function(note) {
      var t1, i, t2;
      for (t1 = this.notes, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t2 = t1[i];
        if (t2.note._note === note._note)
          t2.releaseNote$0();
      }
    },
    cancelAllNotes$0: function() {
      var t1, i, t2, t3;
      for (t1 = this.notes, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t2 = t1[i];
        t3 = t2.onEnded;
        if (t3 != null)
          H.Primitives_applyFunction(t3, [], null);
        t2.onEnded = null;
      }
      this.destroyAllGenerators$0();
    },
    pitchBend$1: function(cents) {
      C.JSArray_methods.forEach$1(this.notes, new L.Synthesizer_pitchBend_closure(cents));
    },
    allocateGenerator$1: function(context) {
      var _i, chain, t3,
        t1 = this._bank,
        t2 = t1.length;
      if (t2 !== 0) {
        if (0 >= t2)
          return H.ioore(t1, 0);
        t2 = t1[0].context;
        t2 = t2 == null ? context != null : t2 !== context;
      } else
        t2 = false;
      if (t2)
        this.destroyAllGenerators$0();
      for (t2 = t1.length, _i = 0; _i < t2; ++_i) {
        chain = t1[_i];
        if (chain.free) {
          t3 = chain.context;
          t3 = t3 == null ? context == null : t3 === context;
        } else
          t3 = false;
        if (t3) {
          chain.free = false;
          return chain;
        }
      }
      if (t2 < 16) {
        chain = new U.SynthChain(context, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_SynthNode));
        chain.loadPatch$1(this.config);
        chain.free = false;
        C.JSArray_methods.add$1(t1, chain);
        return chain;
      }
      return null;
    },
    destroyAllGenerators$0: function() {
      var t1, t2, _i;
      for (t1 = this._bank, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].destroy$0();
      C.JSArray_methods.set$length(t1, 0);
    },
    loadAudioBuffer$3: function($name, context, onLoaded) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, audio, t1, formats, supportsFormat, url, request, t2, t3;
      var $async$loadAudioBuffer$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.$get$Synthesizer_sounds().$index(0, $name) != null) {
                // goto return
                $async$goto = 1;
                break;
              }
              audio = W.AudioElement_AudioElement$_(null);
              audio.id = "test-audio-node";
              t1 = type$.String;
              formats = P.LinkedHashMap_LinkedHashMap$_literal(["mp3", "audio/mpeg", "mp4", "audio/mp4", "ogg", "audio/ogg", "aif", "audio/x-aiff", "wav", "audio/wav"], t1, t1);
              t1 = document;
              t1.body.appendChild(audio);
              if (audio.canPlayType(formats.$index(0, "ogg")) === "probably" || audio.canPlayType(formats.$index(0, "ogg")) === "maybe") {
                J.remove$0$ax(t1.querySelector("#test-audio-node"));
                supportsFormat = true;
              } else
                supportsFormat = false;
              url = supportsFormat ? H.S($name) + ".ogg" : H.S($name) + ".wav";
              request = new XMLHttpRequest();
              C.HttpRequest_methods.open$3$async(request, "GET", url, true);
              request.responseType = "arraybuffer";
              t1 = type$.void_Function_ProgressEvent;
              t2 = t1._as(new L.Synthesizer_loadAudioBuffer_closure(context, request, $name, onLoaded));
              type$.void_Function._as(null);
              t3 = type$.ProgressEvent;
              W._EventStreamSubscription$(request, "load", t2, false, t3);
              W._EventStreamSubscription$(request, "error", t1._as(new L.Synthesizer_loadAudioBuffer_closure0()), false, t3);
              request.send();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadAudioBuffer$3, $async$completer);
    }
  };
  L.Synthesizer_loadPatch_closure.prototype = {
    call$1: function(n) {
      --this._box_0.load_count;
    },
    $signature: 0
  };
  L.Synthesizer__play_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.event;
      C.JSArray_methods.remove$1(this.$this.notes, t1);
      t2 = t1.chain;
      if (t2 != null) {
        t2.free = true;
        t1.chain = null;
      }
      t1 = this._box_0;
      t2 = t1.gain;
      if (t2 != null) {
        t2.disconnect();
        t1.gain = null;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  L.Synthesizer_pitchBend_closure.prototype = {
    call$1: function($event) {
      var t1 = type$.SynthEvent._as($event).chain;
      if (t1 != null)
        t1.pitchBend$1(this.cents);
      return null;
    },
    $signature: 41
  };
  L.Synthesizer_loadAudioBuffer_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$Synthesizer_loadAudioBuffer_closure(type$.ProgressEvent._as(e));
    },
    $call$body$Synthesizer_loadAudioBuffer_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, buffer;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.context;
              $async$goto = 2;
              return P._asyncAwait((t1 && C.AudioContext_methods).decodeAudioData$1(t1, type$.ByteBuffer._as(W._convertNativeToDart_XHR_Response($async$self.request.response))), $async$call$1);
            case 2:
              // returning from await.
              buffer = $async$result;
              if (buffer != null) {
                t1 = $async$self.name;
                $.$get$Synthesizer_sounds().$indexSet(0, t1, buffer);
                P.Function_apply($async$self.onLoaded, [t1], null);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 42
  };
  L.Synthesizer_loadAudioBuffer_closure0.prototype = {
    call$1: function(e) {
      type$.ProgressEvent._as(e);
      return P.print("BufferLoader: XHR error");
    },
    $signature: 43
  };
  S.Datastore.prototype = {
    Datastore$2: function(host, wss) {
      var t1, t2, _this = this;
      _this.wid = K.Uuid$().v1$0();
      t1 = W.WebSocket_WebSocket(wss);
      _this.socket = t1;
      t2 = type$.void_Function_MessageEvent._as(_this.get$_handleSocketMessage());
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "message", t2, false, type$.MessageEvent);
      t2 = type$.void_Function_Event;
      t1 = type$.Event;
      W._EventStreamSubscription$(_this.socket, "error", t2._as(new S.Datastore_closure()), false, t1);
      W._EventStreamSubscription$(_this.socket, "open", t2._as(new S.Datastore_closure0(wss)), false, t1);
    },
    connect$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, data, e, t1, exception, $async$exception;
      var $async$connect$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait($async$self._sendJSON$1("/api/connect/"), $async$connect$0);
            case 6:
              // returning from await.
              data = $async$result;
              if (type$.Map_dynamic_dynamic._is(data) && H.boolConversionCheck(J.containsKey$1$x(data, "id"))) {
                t1 = J.$index$asx(data, "id");
                t1 = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                t1.type = "user";
                $async$self.user = t1;
                t1.load$1(0, data);
                $async$self._login_stream.add$1(0, new S.DatastoreEvent($async$self.user, "login", false));
              } else
                P.print("No existing user session");
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              P.print("Error connecting " + H.S(e));
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$connect$0, $async$completer);
    },
    create$1: function(object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, type, data, result;
      var $async$create$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              object.SynthPatch_username = $async$self.user.displayName;
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/", "POST", object.save$0(0)), $async$create$1);
            case 3:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              P.print(data);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              P.print(result.save$0(0));
              $async$self._created_stream.add$1(0, new S.DatastoreEvent(result, "created", false));
              $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "created", true));
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$create$1, $async$completer);
    },
    retrieve$1: function(object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, type, data;
      var $async$retrieve$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/" + type + "/" + H.S(object.id) + "/"), $async$retrieve$1);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              J.$indexSet$ax(data, "type", type);
              $async$returnValue = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$retrieve$1, $async$completer);
    },
    update$1: function(_, object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, t1, data, result, type;
      var $async$update$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              object.SynthPatch_username = $async$self.user.displayName;
              t1 = object.id;
              if (t1 != null)
                t1 = H._isInt(t1) && t1 <= 0;
              else
                t1 = true;
              $async$goto = !t1 ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/" + H.S(object.id) + "/", "PUT", object.save$0(0)), $async$update$1);
            case 6:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              result = object;
            case 4:
              // join
              if (result != null) {
                $async$self._updated_stream.add$1(0, new S.DatastoreEvent(result, "updated", false));
                $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "updated", true));
              }
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$update$1, $async$completer);
    },
    delete$1: function(object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, result, type, data;
      var $async$delete$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/" + H.S(object.id) + "/", "DELETE", object.save$0(0)), $async$delete$1);
            case 3:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              if (result != null) {
                $async$self._deleted_stream.add$1(0, new S.DatastoreEvent(result, "deleted", false));
                $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "deleted", true));
              }
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$delete$1, $async$completer);
    },
    getUserSynthPatches$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_SynthPatch),
        $async$returnValue, $async$self = this;
      var $async$getUserSynthPatches$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._getPatches$1("/api/patches/user/"), $async$getUserSynthPatches$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getUserSynthPatches$0, $async$completer);
    },
    getPublicSynthPatches$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_SynthPatch),
        $async$returnValue, $async$self = this;
      var $async$getPublicSynthPatches$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._getPatches$1("/api/patches/"), $async$getPublicSynthPatches$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getPublicSynthPatches$0, $async$completer);
    },
    _getPatches$1: function(api_endpoint) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_SynthPatch),
        $async$returnValue, $async$self = this, results, t1, t2, t3, p, t4, data;
      var $async$_getPatches$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1(api_endpoint), $async$_getPatches$1);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              results = H.setRuntimeTypeInfo([], type$.JSArray_SynthPatch);
              if (type$.List_dynamic._is(data))
                for (t1 = J.get$iterator$ax(data), t2 = type$.Map_dynamic_dynamic, t3 = type$.dynamic; t1.moveNext$0();) {
                  p = t1.get$current();
                  if (t2._is(p)) {
                    t4 = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t3, t3), H._asIntNullable(J.$index$asx(p, "id")), new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                    t4.voice = "My Patch";
                    t4.type = "patch";
                    t4.load$1(0, p);
                    C.JSArray_methods.add$1(results, t4);
                  }
                }
              $async$returnValue = results;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_getPatches$1, $async$completer);
    },
    _sendJSON$3: function(url, method, data) {
      return this._sendJSON$body$Datastore(url, method, data);
    },
    _sendJSON$1: function(url) {
      return this._sendJSON$3(url, "GET", null);
    },
    _sendJSON$body$Datastore: function(url, method, data) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, request, e, t1, exception, $async$exception;
      var $async$_sendJSON$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(W.HttpRequest_request($async$self.host + url, method, C.C_JsonCodec.encode$2$toEncodable(data, null), true), $async$_sendJSON$3);
            case 7:
              // returning from await.
              request = $async$result;
              t1 = C.C_JsonCodec.decode$2$reviver(0, request.responseText, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.ProgressEvent._is(t1)) {
                e = t1;
                throw H.wrapException(S.DatastoreException$(type$.HttpRequest._as(J.get$target$x(e)).status));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_sendJSON$3, $async$completer);
    },
    _broadcastEvent$1: function($event) {
      var path,
        t1 = this.socket.readyState;
      if (t1 === 1) {
        path = J.$add$ansx(window.location.pathname, window.location.hash);
        t1 = type$.dynamic;
        this.socket.send(C.C_JsonCodec.encode$2$toEncodable(P.LinkedHashMap_LinkedHashMap$_literal(["action", "datastore-event", "clientId", this.wid, "path", path, "event", P.LinkedHashMap_LinkedHashMap$_literal(["target", $event.target.save$0(0), "type", $event.type, "remote", $event.remote, "payload", $event.payload], t1, t1)], type$.String, type$.Object), null));
      }
    },
    _handleSocketMessage$1: function(message) {
      var data, action, path, mypath, $event, t1, exception, _this = this;
      try {
        t1 = type$.Map_dynamic_dynamic;
        data = t1._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(J.get$data$x(message)), null));
        action = H._asStringNullable(J.$index$asx(data, "action"));
        path = H._asStringNullable(J.$index$asx(data, "path"));
        mypath = J.$add$ansx(window.location.pathname, window.location.hash);
        if (!J.$eq$(action, "datastore-event") || !J.$eq$(path, mypath))
          return;
        if (_this.wid === J.$index$asx(data, "clientId"))
          return;
        $event = S.DatastoreEvent$fromJson(t1._as(J.$index$asx(data, "event")));
        if ($event.target != null) {
          $event.remote = true;
          if (J.startsWith$1$s($event.type, "message-")) {
            $event.type = J.substring$1$s($event.type, 8);
            _this._message_stream.add$1(0, $event);
            return;
          }
          switch ($event.type) {
            case "created":
              _this._created_stream.add$1(0, $event);
              break;
            case "updated":
              _this._updated_stream.add$1(0, $event);
              break;
            case "deleted":
              _this._deleted_stream.add$1(0, $event);
              break;
            case "reordered":
              _this._reordered_stream.add$1(0, $event);
              break;
            case "login":
              _this._login_stream.add$1(0, $event);
              break;
            case "logout":
              _this._logout_stream.add$1(0, $event);
              break;
          }
        }
      } catch (exception) {
        H.unwrapException(exception);
        P.print("Invalid websocket message " + H.S(J.get$data$x(message)));
      }
    }
  };
  S.Datastore_closure.prototype = {
    call$1: function(e) {
      P.print("Socket error: " + H.S(e));
    },
    $signature: 6
  };
  S.Datastore_closure0.prototype = {
    call$1: function(e) {
      P.print(this.wss + " opened.");
    },
    $signature: 6
  };
  S.DataModel.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      return J.$eq$(this.id, t1.get$id(other)) && this.type === t1.get$type(other);
    },
    get$id: function(receiver) {
      return this.id;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  S.DatastoreEvent.prototype = {
    DatastoreEvent$fromJson$1: function(json) {
      var t1, t2, _this = this;
      if (json == null)
        return;
      t1 = J.getInterceptor$asx(json);
      _this.target = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(t1.$index(json, "target")));
      t2 = t1.$index(json, "type");
      _this.type = t2 == null ? "unknown" : J.toString$0$(t2);
      _this.remote = B.toBool(t1.$index(json, "remote"), true);
      _this.payload = t1.$index(json, "payload");
      if (_this.type === "unknown")
        _this.target = null;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  S.DatastoreException.prototype = {$isException: 1};
  L.Gadget.prototype = {
    load$1: function(_, data) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t2, t3, t1;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.id;
              if (t1 == null || J.$lt$n(t1, 0))
                $async$self.id = B.toInt(J.$index$asx(data, "id"), null);
              t1 = J.getInterceptor$asx(data);
              $async$self.name = H._asStringNullable(t1.$index(data, "name"));
              $async$self.beats = B.toInt(t1.$index(data, "beats"), 4);
              t2 = t1.$index(data, "instrument");
              $async$self.instrument = t2 == null ? "piano" : J.toString$0$(t2);
              t2 = t1.$index(data, "color");
              $async$self.color = t2 == null ? "#2f9aef" : J.toString$0$(t2);
              t2 = t1.$index(data, "description");
              $async$self.description = t2 == null ? "" : J.toString$0$(t2);
              $async$self.created = B.toDateTime(t1.$index(data, "created"));
              $async$self.modified = B.toDateTime(t1.$index(data, "modified"));
              $async$self.$public = B.toBool(t1.$index(data, "public"), false);
              $async$self.deleted = B.toBool(t1.$index(data, "deleted"), false);
              $async$self.remix_parent = B.toInt(t1.$index(data, "remix_parent"), null);
              t2 = type$.Map_dynamic_dynamic;
              if (t2._is(t1.$index(data, "idata"))) {
                t3 = type$.dynamic;
                $async$self.idata = P.LinkedHashMap_LinkedHashMap$from(t2._as(t1.$index(data, "idata")), t3, t3);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    },
    save$0: function(_) {
      var _this = this,
        t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", _this.id, "name", _this.name, "type", _this.type, "beats", _this.beats, "instrument", _this.instrument, "version", "2.0", "color", _this.color, "voice", "piano", "idata", _this.idata, "description", _this.description, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "public", _this.$public, "deleted", _this.deleted, "remix_parent", _this.remix_parent], t1, t1);
    }
  };
  L.SynthPatch.prototype = {
    save$0: function(_) {
      var t1, _this = this;
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", _this.id, "type", _this.type, "voice", _this.voice, "instrument", _this.instrument, "patch", _this.patch, "description", _this.description, "username", _this.SynthPatch_username, "preview", null, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "like_count", _this.like_count, "star_count", _this.star_count, "remix_count", _this.remix_count, "public", _this.$public, "deleted", _this.deleted], t1, t1);
    },
    load$1: function(_, json) {
      var t1, t2, _this = this;
      if (J.$lt$n(_this.id, 0))
        _this.id = B.toInt(J.$index$asx(json, "id"), -1);
      t1 = J.getInterceptor$asx(json);
      t2 = t1.$index(json, "voice");
      _this.voice = t2 == null ? "My Patch" : J.toString$0$(t2);
      t2 = t1.$index(json, "instrument");
      _this.instrument = t2 == null ? "" : J.toString$0$(t2);
      _this.patch = type$.Map_dynamic_dynamic._as(t1.$index(json, "patch"));
      t2 = t1.$index(json, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(json, "username");
      _this.SynthPatch_username = t2 == null ? "" : J.toString$0$(t2);
      _this.created = B.toDateTime(t1.$index(json, "created"));
      _this.modified = B.toDateTime(t1.$index(json, "modified"));
      _this.like_count = B.toInt(t1.$index(json, "like_count"), 0);
      _this.star_count = B.toInt(t1.$index(json, "star_count"), 0);
      _this.remix_count = B.toInt(t1.$index(json, "remix_count"), 0);
      _this.$public = B.toBool(t1.$index(json, "public"), false);
      _this.deleted = B.toBool(t1.$index(json, "deleted"), false);
    }
  };
  K.Project.prototype = {
    save$0: function(_) {
      var t4, t5, t6, result, _i, tag, _this = this,
        t1 = _this.settings,
        t2 = _this.clock,
        t3 = t2._key;
      J.$indexSet$ax(t1, "key", t3.name);
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = _this.id;
      t3 = _this.type;
      t4 = _this.name;
      t5 = t2._bpm;
      t2 = t2._meter;
      t6 = type$.dynamic;
      result = P.LinkedHashMap_LinkedHashMap$_literal(["id", t1, "type", t3, "name", t4, "bpm", t5, "meter", t2, "bars", _this.bars, "color", _this.color, "summary", _this.summary, "description", _this.description, "tags", [], "tracks", [], "remix_parent", _this.remix_parent, "pucks", _this.settings, "public", _this.$public, "deleted", _this.deleted, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0)], t6, t6);
      for (t1 = _this.tags, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        tag = t1[_i];
        J.add$1$ax(result.$index(0, "tags"), tag);
      }
      return result;
    },
    load$1: function(_, data) {
      var t2, t3, _this = this, _s5_ = "pucks",
        _s8_ = "username",
        t1 = _this.id;
      if (t1 == null || J.$lt$n(t1, 0))
        _this.id = B.toInt(J.$index$asx(data, "id"), null);
      t1 = J.getInterceptor$asx(data);
      if (t1.$index(data, _s5_) == null || !type$.Map_dynamic_dynamic._is(t1.$index(data, _s5_))) {
        t2 = type$.dynamic;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      } else
        t2 = t1.$index(data, _s5_);
      _this.settings = type$.Map_dynamic_dynamic._as(t2);
      t2 = t1.$index(data, "name");
      _this.name = t2 == null ? "TunePad Project" : J.toString$0$(t2);
      t2 = _this.clock;
      t2.setTempo$1(B.toInt(t1.$index(data, "bpm"), 120));
      t3 = t1.$index(data, "meter");
      t2.setTimeSignature$1(t3 == null ? "4/4" : J.toString$0$(t3));
      t3 = J.$index$asx(_this.settings, "key");
      t3 = t3 == null ? "C major" : J.toString$0$(t3);
      t2._key = new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], type$.JSArray_int), t3);
      J.$indexSet$ax(_this.settings, "key", t3);
      _this.bars = B.toInt(t1.$index(data, "bars"), 20);
      t3 = t1.$index(data, "color");
      _this.color = t3 == null ? "#5bc6fc" : J.toString$0$(t3);
      t2 = t1.$index(data, "artwork");
      if (t2 != null)
        J.toString$0$(t2);
      t2 = t1.$index(data, _s8_);
      if (t2 != null)
        J.toString$0$(t2);
      t2 = t1.$index(data, _s8_);
      _this.username = t2 == null ? null : J.toString$0$(t2);
      t2 = t1.$index(data, "preview");
      if (t2 != null)
        J.toString$0$(t2);
      t2 = t1.$index(data, "summary");
      _this.summary = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(data, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      _this.remix_parent = B.toInt(t1.$index(data, "remix_parent"), null);
      _this.$public = B.toBool(t1.$index(data, "public"), false);
      _this.deleted = B.toBool(t1.$index(data, "deleted"), false);
      _this.created = B.toDateTime(t1.$index(data, "created"));
      _this.modified = B.toDateTime(t1.$index(data, "modified"));
      if (type$.List_dynamic._is(t1.$index(data, "tags")))
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(data, "tags"))), t2 = _this.tags; t1.moveNext$0();)
          C.JSArray_methods.add$1(t2, H.S(t1.get$current()));
    }
  };
  R.Recording.prototype = {
    save$0: function(_) {
      var t1, t2, _this = this;
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = _this.original;
      t2 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", _this.id, "type", _this.type, "name", _this.name, "descripition", _this.description, "instrument", _this.instrument, "duration", _this.duration, "channels", t1._channels.length, "rate", t1.sampleRate, "settings", _this.settings, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "original", t1.toWAVBase64$0(), "processed", _this.processed.toWAVBase64$0(), "username", _this.Recording_username, "like_count", _this.like_count, "star_count", _this.star_count, "remix_count", _this.remix_count, "public", _this.$public, "deleted", _this.deleted], t2, t2);
    },
    load$1: function(_, json) {
      var t1, t2, c, rate, t3, setting, _this = this,
        _s8_ = "settings";
      if (J.$lt$n(_this.id, 0))
        _this.id = B.toInt(J.$index$asx(json, "id"), -1);
      t1 = J.getInterceptor$asx(json);
      t2 = t1.$index(json, "name");
      _this.name = t2 == null ? "My Recording" : J.toString$0$(t2);
      t2 = t1.$index(json, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(json, "instrument");
      _this.instrument = t2 == null ? "" : J.toString$0$(t2);
      _this.duration = B.toNum(t1.$index(json, "duration"), 0);
      _this.created = B.toDateTime(t1.$index(json, "created"));
      _this.modified = B.toDateTime(t1.$index(json, "modified"));
      t2 = t1.$index(json, "username");
      _this.Recording_username = t2 == null ? "" : J.toString$0$(t2);
      _this.like_count = B.toInt(t1.$index(json, "like_count"), 0);
      _this.star_count = B.toInt(t1.$index(json, "star_count"), 0);
      _this.remix_count = B.toInt(t1.$index(json, "remix_count"), 0);
      _this.$public = B.toBool(t1.$index(json, "public"), false);
      _this.deleted = B.toBool(t1.$index(json, "deleted"), false);
      c = B.toInt(t1.$index(json, "channels"), 0);
      rate = B.toInt(t1.$index(json, "rate"), 0);
      _this.original.reshape$2(c, rate);
      _this.processed.reshape$2(c, rate);
      if (type$.Map_dynamic_dynamic._is(t1.$index(json, _s8_)))
        for (t2 = J.get$iterator$ax(J.get$keys$x(t1.$index(json, _s8_))), t3 = _this.settings; t2.moveNext$0();) {
          setting = H._asStringNullable(t2.get$current());
          t3.$indexSet(0, setting, B.toNum(J.$index$asx(t1.$index(json, _s8_), setting), 0));
        }
    }
  };
  N.User.prototype = {
    get$uid: function() {
      return J.toString$0$(this.id);
    },
    save$0: function(_) {
      var t1, _this = this;
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-color", _this.color);
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-icon", _this.icon);
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-display-name", _this.displayName);
      t1 = window.localStorage;
      (t1 && C.Storage_methods).remove$1(t1, H.S(J.toString$0$(_this.id)) + "-photo");
      t1 = _this.photo;
      if (t1 != null && C.JSString_methods.trim$0(t1) !== "" && t1 !== "null")
        window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-photo", _this.photo);
      t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", J.toString$0$(_this.id), "type", _this.type, "username", _this.name, "displayName", _this.displayName, "email", _this.email, "anonymous", _this.anonymous, "color", _this.color, "icon", _this.icon, "photo", _this.photo, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0)], t1, t1);
    },
    load$1: function(_, userData) {
      var t3, _this = this,
        t1 = J.getInterceptor$asx(userData),
        t2 = t1.$index(userData, "id");
      _this.id = t2 == null ? null : J.toString$0$(t2);
      _this.type = "user";
      t2 = t1.$index(userData, "username");
      _this.name = t2 == null ? null : J.toString$0$(t2);
      t2 = t1.$index(userData, "email");
      _this.email = t2 == null ? null : J.toString$0$(t2);
      _this.anonymous = B.toBool(t1.$index(userData, "anonymous"), true);
      t2 = t1.$index(userData, "color");
      t3 = _this._loadColor$0();
      _this.color = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "icon");
      t3 = _this._loadIcon$0();
      _this.icon = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "photo");
      t3 = _this._loadPhoto$0();
      _this.photo = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "displayName");
      t3 = _this._loadDisplayName$0();
      _this.displayName = t2 == null ? t3 : J.toString$0$(t2);
      _this.created = B.toDateTime(t1.$index(userData, "created"));
      _this.modified = B.toDateTime(t1.$index(userData, "modified"));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return J.toString$0$(this.id) == other.get$uid() && this.type === J.get$type$x(other);
    },
    _loadColor$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-color") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-color");
      else
        return this._randomColor$0();
    },
    _loadPhoto$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-photo") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-photo");
      else
        return null;
    },
    _loadIcon$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-icon") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-icon");
      else
        return this._randomIcon$0();
    },
    _loadDisplayName$0: function() {
      var t1, _this = this;
      if (window.localStorage.getItem(H.S(J.toString$0$(_this.id)) + "-display-name") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(_this.id)) + "-display-name");
      else {
        t1 = _this.name;
        if (t1 != null && C.JSString_methods.trim$0(t1) !== "")
          return t1;
        else {
          t1 = _this.email;
          if (t1 != null && C.JSString_methods.trim$0(t1) !== "")
            return t1;
          else
            return "Anonymous User";
        }
      }
    },
    _randomColor$0: function() {
      var t1 = this._rand,
        r = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16),
        g = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16),
        b = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16);
      return "#" + r + g + b;
    },
    _randomIcon$0: function() {
      var icons = ["fa-user-astronaut", "fa-user-secret", "fa-user-ninja", "fa-dragon", "fa-cat", "fa-crow", "fa-dove", "fa-fish", "fa-frog", "fa-hippo", "fa-horse", "fa-spider"],
        t1 = this._rand.nextInt$1(12);
      if (t1 < 0 || t1 >= 12)
        return H.ioore(icons, t1);
      return icons[t1];
    }
  };
  K.Uuid.prototype = {
    Uuid$1$options: function(_box_0) {
      var t1, t2, i, hex, t3, v1PositionalArgs, v1NamedArgs, _this = this,
        _s19_ = "v1rngPositionalArgs",
        _s14_ = "v1rngNamedArgs",
        _s18_ = "grngPositionalArgs",
        _s13_ = "grngNamedArgs",
        options = _box_0.options;
      if (!(options != null))
        options = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      _box_0.options = options;
      t1 = new Array(256);
      t1.fixed$length = Array;
      _this.set$_byteToHex(H.setRuntimeTypeInfo(t1, type$.JSArray_String));
      _this.set$_hexToByte(new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_int));
      for (t1 = type$.JSArray_int, t2 = type$.HexCodec._eval$1("Codec.S"), i = 0; i < 256; ++i) {
        hex = H.setRuntimeTypeInfo([], t1);
        C.JSArray_methods.add$1(hex, i);
        t3 = _this._byteToHex;
        t2._as(hex);
        (t3 && C.JSArray_methods).$indexSet(t3, i, C.C_HexCodec.get$encoder().convert$1(hex));
        _this._hexToByte.$indexSet(0, _this._byteToHex[i], i);
      }
      v1PositionalArgs = _box_0.options.$index(0, _s19_) != null ? _box_0.options.$index(0, _s19_) : [];
      v1NamedArgs = _box_0.options.$index(0, _s14_) != null ? type$.Map_Symbol_dynamic._as(_box_0.options.$index(0, _s14_)) : C.Map_empty;
      _this._seedBytes = _box_0.options.$index(0, "v1rng") != null ? P.Function_apply(type$.Function._as(_box_0.options.$index(0, "v1rng")), type$.List_dynamic._as(v1PositionalArgs), v1NamedArgs) : T.UuidUtil_mathRNG();
      if (_box_0.options.$index(0, _s18_) != null)
        _box_0.options.$index(0, _s18_);
      if (_box_0.options.$index(0, _s13_) != null)
        type$.Map_Symbol_dynamic._as(_box_0.options.$index(0, _s13_));
      _this._nodeId = [J.$or$bn(J.$index$asx(_this._seedBytes, 0), 1), J.$index$asx(_this._seedBytes, 1), J.$index$asx(_this._seedBytes, 2), J.$index$asx(_this._seedBytes, 3), J.$index$asx(_this._seedBytes, 4), J.$index$asx(_this._seedBytes, 5)];
      t1 = J.$shl$n(J.$index$asx(_this._seedBytes, 6), 8);
      t2 = J.$index$asx(_this._seedBytes, 7);
      if (typeof t2 !== "number")
        return H.iae(t2);
      _this._clockSeq = (t1 | t2) & 262143;
    },
    v1$0: function() {
      var t1, buf, options, clockSeq, mSecs, nSecs, dt, t2, tl, tmh, node, n, _this = this,
        _s8_ = "clockSeq",
        _s5_ = "nSecs";
      type$.Map_String_dynamic._as(null);
      t1 = new Array(16);
      t1.fixed$length = Array;
      buf = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
      options = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      clockSeq = options.$index(0, _s8_) != null ? options.$index(0, _s8_) : _this._clockSeq;
      mSecs = options.$index(0, "mSecs") != null ? options.$index(0, "mSecs") : Date.now();
      nSecs = options.$index(0, _s5_) != null ? options.$index(0, _s5_) : _this._lastNSecs + 1;
      t1 = J.getInterceptor$n(mSecs);
      dt = J.$add$ansx(t1.$sub(mSecs, _this._lastMSecs), J.$div$n(J.$sub$n(nSecs, _this._lastNSecs), 10000));
      t2 = J.getInterceptor$n(dt);
      if (t2.$lt(dt, 0) && options.$index(0, _s8_) == null)
        clockSeq = J.$and$bn(J.$add$ansx(clockSeq, 1), 16383);
      if ((t2.$lt(dt, 0) || t1.$gt(mSecs, _this._lastMSecs)) && options.$index(0, _s5_) == null)
        nSecs = 0;
      if (J.$ge$n(nSecs, 10000))
        throw H.wrapException(P.Exception_Exception("uuid.v1(): Can't create more than 10M uuids/sec"));
      H._asIntNullable(mSecs);
      _this._lastMSecs = mSecs;
      H._asIntNullable(nSecs);
      _this._lastNSecs = nSecs;
      _this._clockSeq = clockSeq;
      mSecs += 122192928e5;
      tl = C.JSInt_methods.$mod((mSecs & 268435455) * 10000 + nSecs, 4294967296);
      C.JSArray_methods.$indexSet(buf, 0, C.JSInt_methods._shrOtherPositive$1(tl, 24) & 255);
      C.JSArray_methods.$indexSet(buf, 1, C.JSInt_methods._shrOtherPositive$1(tl, 16) & 255);
      C.JSArray_methods.$indexSet(buf, 2, C.JSInt_methods._shrOtherPositive$1(tl, 8) & 255);
      C.JSArray_methods.$indexSet(buf, 3, tl & 255);
      tmh = C.JSDouble_methods.floor$0(mSecs / 4294967296 * 10000) & 268435455;
      C.JSArray_methods.$indexSet(buf, 4, tmh >>> 8 & 255);
      C.JSArray_methods.$indexSet(buf, 5, tmh & 255);
      C.JSArray_methods.$indexSet(buf, 6, tmh >>> 24 & 15 | 16);
      C.JSArray_methods.$indexSet(buf, 7, tmh >>> 16 & 255);
      t1 = J.getInterceptor$n(clockSeq);
      C.JSArray_methods.$indexSet(buf, 8, (t1.$shr(clockSeq, 8) | 128) >>> 0);
      C.JSArray_methods.$indexSet(buf, 9, H._asIntNullable(t1.$and(clockSeq, 255)));
      node = options.$index(0, "node") != null ? options.$index(0, "node") : _this._nodeId;
      for (t1 = J.getInterceptor$asx(node), n = 0; n < 6; ++n)
        C.JSArray_methods.$indexSet(buf, 10 + n, H._asIntNullable(t1.$index(node, n)));
      type$.List_int._as(buf);
      t1 = _this._byteToHex;
      t1 = H.S((t1 && C.JSArray_methods).$index(t1, buf[0]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[1]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[2]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[3])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[4]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[5])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[6]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[7])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[8]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[9])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[10]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[11]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[12]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[13]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[14]));
      t2 = _this._byteToHex;
      return t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[15]));
    },
    set$_byteToHex: function(_byteToHex) {
      this._byteToHex = type$.List_String._as(_byteToHex);
    },
    set$_hexToByte: function(_hexToByte) {
      this._hexToByte = type$.Map_String_int._as(_hexToByte);
    }
  };
  Z.DNodeConnector.prototype = {
    toJSON$0: function() {
      var t1, config, _this = this;
      if (_this.dest == null)
        return null;
      t1 = type$.dynamic;
      config = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      config.$indexSet(0, "source", _this.source.id);
      config.$indexSet(0, "dest", _this.dest.parent.id);
      config.$indexSet(0, "type", _this.dest.name);
      return config;
    },
    containsTouch$1: function(c) {
      var t3,
        tx = c.touchX,
        ty = c.touchY,
        t1 = tx - this.cx,
        t2 = this.cy;
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = ty - t2;
      t3 = this.radius;
      return t1 * t1 + t2 * t2 <= t3 * t3;
    },
    touchDown$1: function(c) {
      var t1, t2, _this = this;
      _this._connector$_dragging = true;
      t1 = c.touchX;
      _this._connector$_touchX = t1;
      t2 = c.touchY;
      _this._connector$_touchY = t2;
      _this._connector$_lastX = t1;
      _this._connector$_lastY = t2;
      _this.dest = null;
      return _this;
    },
    touchUp$1: function(c) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      _this._connector$_dragging = false;
      t1 = _this.source;
      t2 = t1.designer;
      t3 = _this.dest = t2.overlappingSocket$1(_this);
      if (t3 == null) {
        t3 = t1.cx;
        if (typeof t3 !== "number")
          return t3.$add();
        _this.cx = t3 + 34;
        _this.cy = t1.cy;
      } else {
        t4 = t3.parent;
        t5 = t4.cx;
        t6 = t3.deltaX;
        if (typeof t5 !== "number")
          return t5.$add();
        _this.cx = t5 + t6;
        t4 = t4.cy;
        t3 = t3.deltaY;
        if (typeof t4 !== "number")
          return t4.$add();
        _this.cy = t4 + t3;
      }
      t1.updateLinks$0();
      t2.updateSynth$0();
    },
    touchDrag$1: function(c) {
      this._connector$_touchX = c.touchX;
      this._connector$_touchY = c.touchY;
    },
    touchSlide$1: function(c) {
    },
    touchDoubleTap$1: function(c) {
    },
    touchExit$1: function(c) {
    },
    touchOver$1: function(c) {
    },
    $isTouchable: 1
  };
  V.SynthDesigner.prototype = {
    SynthDesigner$2: function(canvas, synth) {
      var w, h, t2, t3, _this = this,
        t1 = _this.canvas;
      _this.ctx = type$.CanvasRenderingContext2D._as((t1 && C.CanvasElement_methods).getContext$1(t1, "2d"));
      w = t1.width;
      h = t1.height;
      if (typeof w !== "number")
        return w.$mul();
      t1.width = w * 2;
      if (typeof h !== "number")
        return h.$mul();
      t1.height = h * 2;
      t2 = t1.style;
      t3 = "" + w + "px";
      t2.width = t3;
      t2 = t1.style;
      t3 = "" + h + "px";
      t2.height = t3;
      t2 = _this.tmanager;
      t2.registerEvents$1(t1);
      C.JSArray_methods.add$1(t2.layers, _this);
      t2 = type$.dynamic;
      _this.addNode$1(B.DOutNode$(_this, "out", P.LinkedHashMap_LinkedHashMap$_empty(t2, t2)));
      _this.tick$0();
      _this.draw$0();
      t2 = _this.newNodeButtons;
      t2.$indexSet(0, "VCO", new V.SynthDesigner_closure(_this));
      t2.$indexSet(0, "LFO", new V.SynthDesigner_closure0(_this));
      t2.$indexSet(0, "Delay", new V.SynthDesigner_closure1(_this));
      t2.$indexSet(0, "Gain", new V.SynthDesigner_closure2(_this));
      t2.$indexSet(0, "ADSR", new V.SynthDesigner_closure3(_this));
      t2.$indexSet(0, "Compressor", new V.SynthDesigner_closure4(_this));
      t2.$indexSet(0, "Filter", new V.SynthDesigner_closure5(_this));
      t2.$indexSet(0, "Distortion", new V.SynthDesigner_closure6(_this));
      t1 = document;
      t2.forEach$1(0, new V.SynthDesigner_closure7(_this, t1.getElementById("new-node-menu")));
      t1 = J.get$onClick$x(t1.querySelector("#delete-node-button"));
      t2 = t1.$ti;
      t3 = t2._eval$1("~(1)")._as(new V.SynthDesigner_closure8(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1._html$_target, t1._eventType, t3, false, t2._precomputed1);
    },
    load$1: function(_, config) {
      var t1, t2, t3, t4, t5, t6, out, node, t7, r, source, dest, _this = this, _s4_ = "type",
        _s10_ = "compressor";
      _this.clearNodes$0();
      $.DNode_NODE_ID = 0;
      t1 = J.getInterceptor$asx(config);
      t2 = type$.List_dynamic;
      if (t2._is(t1.$index(config, "nodes")))
        for (t3 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "nodes"))), t4 = type$.Map_dynamic_dynamic, t5 = _this.nodes, t6 = _this.touchables, out = null; t3.moveNext$0();) {
          node = t3.get$current();
          if (t4._is(node)) {
            t7 = J.getInterceptor$asx(node);
            if (J.$eq$(t7.$index(node, _s4_), "sample")) {
              t7 = B.DSampleNode$(_this, "Sample", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), "out")) {
              out = B.DOutNode$(_this, "out", node);
              t5.$indexSet(0, out.id, out);
              C.JSArray_methods.add$1(t6, out);
            } else if (J.$eq$(t7.$index(node, _s4_), "fm")) {
              t7 = B.DOscNode$(_this, "FM", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), "lfo")) {
              t7 = B.DLFONode$(_this, "LFO", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), "gain")) {
              t7 = B.DGainNode$(_this, "gain", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), "adsr")) {
              t7 = B.DADSRNode$(_this, "ADSR", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), _s10_)) {
              t7 = B.DCompressorNode$(_this, _s10_, node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            } else if (J.$eq$(t7.$index(node, _s4_), "filter")) {
              t7 = B.DFilterNode$(_this, "filter", node);
              t5.$indexSet(0, t7.id, t7);
              C.JSArray_methods.add$1(t6, t7);
            }
          }
        }
      else
        out = null;
      if (out == null) {
        t3 = type$.dynamic;
        _this.addNode$1(B.DOutNode$(_this, "out", P.LinkedHashMap_LinkedHashMap$_literal(["cx", 300, "cy", 100], t3, t3)));
      }
      if (t2._is(t1.$index(config, "routing"))) {
        t2 = _this.nodes;
        t2 = t2.get$length(t2) > 0;
      } else
        t2 = false;
      if (t2)
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "routing"))), t2 = _this.nodes; t1.moveNext$0();) {
          r = t1.get$current();
          t3 = J.getInterceptor$asx(r);
          source = t2.$index(0, t3.$index(r, "source"));
          dest = t2.$index(0, t3.$index(r, "dest"));
          if (source != null && dest != null)
            source.connectTo$2(dest, H._asStringNullable(t3.$index(r, _s4_)));
        }
      t1 = _this.nodes;
      t1.get$values(t1).forEach$1(0, new V.SynthDesigner_load_closure());
      _this.draw$0();
      _this.updateSynth$0();
    },
    get$isDraggingLink: function() {
      for (var t1 = this.nodes, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        if (t1.get$current().get$isDraggingLink())
          return true;
      return false;
    },
    draw$0: function() {
      var _this = this,
        t1 = _this.canvas,
        w = t1.width,
        h = t1.height;
      _this.ctx.clearRect(0, 0, w, h);
      _this.ctx.save();
      _this.ctx.scale(2, 2);
      if (_this.get$isDraggingLink()) {
        t1 = _this.nodes;
        t1.get$values(t1).forEach$1(0, new V.SynthDesigner_draw_closure(_this));
      }
      t1 = _this.nodes;
      t1.get$values(t1).forEach$1(0, new V.SynthDesigner_draw_closure0(_this));
      t1.get$values(t1).forEach$1(0, new V.SynthDesigner_draw_closure1(_this));
      _this.ctx.restore();
    },
    addNode$1: function(node) {
      this.nodes.$indexSet(0, node.id, node);
      C.JSArray_methods.add$1(this.touchables, node);
    },
    removeNode$1: function(node) {
      this.nodes.remove$1(0, node.id);
      C.JSArray_methods.remove$1(this.touchables, node);
    },
    clearNodes$0: function() {
      var t1, t2, t3;
      for (t1 = this.nodes, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2), t3 = this.touchables; t2.moveNext$0();)
        C.JSArray_methods.remove$1(t3, t2.get$current());
      t1.clear$0(0);
    },
    moveToTop$1: function(node) {
      this.removeNode$1(node);
      this.addNode$1(node);
      this.updateSynth$0();
    },
    tick$0: function() {
      var _this = this;
      if (_this.animate$0(0) || _this.synth.notes.length !== 0)
        _this.draw$0();
      C.Window_methods.get$animationFrame(window).then$1$1(new V.SynthDesigner_tick_closure(_this), type$.void);
    },
    animate$0: function(_) {
      var t1, refresh;
      for (t1 = this.nodes, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1), refresh = false; t1.moveNext$0();)
        if (t1.get$current().animate$0(0))
          refresh = true;
      return refresh;
    },
    updateSynth$0: function() {
      var t1 = this.synth;
      t1.loadPatch$3("designer", this.toJSON$0(), $.context);
      this.draw$0();
      J.set$innerHtml$x(document.querySelector("#patch-data"), P._JsonStringStringifier_stringify(t1.config, null, "    "));
    },
    showParameters$1: function(node) {
      var t3, t4, t5, container, _i,
        t1 = document,
        t2 = type$.DivElement,
        infoContainer = t2._as(t1.querySelector("#node-params-info-wrapper"));
      infoContainer.children;
      C.DivElement_methods._clearChildren$0(infoContainer);
      t3 = t1.createElement("DIV");
      t2._as(t3);
      t3.className = "node-params-info";
      t4 = t1.createElement("DIV");
      t2._as(t4);
      t4.className = "label";
      t4.innerText = node.label;
      t5 = t1.createElement("DIV");
      t2._as(t5);
      t5.className = "id";
      t5.innerText = "id: #" + H.S(node.id);
      t3.appendChild(t4);
      t3.appendChild(t5);
      infoContainer.appendChild(t3);
      container = t2._as(t1.querySelector("#node-params"));
      if (container != null) {
        container.children;
        C.DivElement_methods._clearChildren$0(container);
        for (t2 = node.params, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
          container.appendChild(t2[_i]._container);
      }
      t1 = t1.querySelector("#delete-node-button").style;
      t1.display = "block";
    },
    overlappingSocket$1: function(link) {
      var t1, socket;
      for (t1 = this.nodes, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        socket = t1.get$current().overlappingSocket$1(link);
        if (socket != null)
          return socket;
      }
      return null;
    },
    toJSON$0: function() {
      var t2, m, t3, _i, c,
        t1 = type$.dynamic,
        config = P.LinkedHashMap_LinkedHashMap$_literal(["nodes", [], "routing", []], t1, t1);
      for (t1 = this.nodes, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current();
        m = t2.toJSON$0();
        if (m != null) {
          J.add$1$ax(config.$index(0, "nodes"), m);
          for (t2 = t2.links, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
            c = t2[_i].toJSON$0();
            if (c != null)
              J.add$1$ax(config.$index(0, "routing"), c);
          }
        }
      }
      return config;
    }
  };
  V.SynthDesigner_closure.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DOscNode$(this.$this, "VCO", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 45
  };
  V.SynthDesigner_closure0.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DLFONode$(this.$this, "LFO", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 59
  };
  V.SynthDesigner_closure1.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DDelayNode$(this.$this, "Delay", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 47
  };
  V.SynthDesigner_closure2.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DGainNode$(this.$this, "Gain", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 48
  };
  V.SynthDesigner_closure3.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DADSRNode$(this.$this, "ADSR", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 49
  };
  V.SynthDesigner_closure4.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DCompressorNode$(this.$this, "Compressor", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 50
  };
  V.SynthDesigner_closure5.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DFilterNode$(this.$this, "Filter", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 69
  };
  V.SynthDesigner_closure6.prototype = {
    call$0: function() {
      var t1 = type$.dynamic;
      return B.DDistNode$(this.$this, "Distortion", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 52
  };
  V.SynthDesigner_closure7.prototype = {
    call$2: function($name, createNode) {
      var newButton, t1, t2, t3;
      H._asStringNullable($name);
      type$.Function._as(createNode);
      newButton = document.createElement("DIV");
      newButton.className = "new-node-button";
      newButton.id = $name.toLowerCase() + "-button";
      newButton.innerText = $name;
      J.get$children$x(this.buttonContainer).add$1(0, newButton);
      t1 = J.get$onClick$x(newButton);
      t2 = t1.$ti;
      t3 = t2._eval$1("~(1)")._as(new V.SynthDesigner__closure(this.$this, createNode));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1._html$_target, t1._eventType, t3, false, t2._precomputed1);
    },
    $signature: 53
  };
  V.SynthDesigner__closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.addNode$1(type$.DNode._as(this.createNode.call$0()));
      t1.draw$0();
    },
    $signature: 4
  };
  V.SynthDesigner_closure8.prototype = {
    call$1: function(e) {
      var t1, t2, infoContainer, container;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.selection;
      if (t2 != null) {
        t1.removeNode$1(t2);
        t1.selection = null;
        t1.updateSynth$0();
        t1 = document;
        t2 = type$.DivElement;
        infoContainer = t2._as(t1.querySelector("#node-params-info-wrapper"));
        infoContainer.children;
        C.DivElement_methods._clearChildren$0(infoContainer);
        container = t2._as(t1.querySelector("#node-params"));
        if (container != null) {
          container.children;
          C.DivElement_methods._clearChildren$0(container);
        }
        t1 = t1.querySelector("#delete-node-button").style;
        t1.display = "none";
      }
    },
    $signature: 4
  };
  V.SynthDesigner_load_closure.prototype = {
    call$1: function(node) {
      return type$.DNode._as(node).animate$0(0);
    },
    $signature: 55
  };
  V.SynthDesigner_draw_closure.prototype = {
    call$1: function(node) {
      return type$.DNode._as(node).drawSockets$1(this.$this.ctx);
    },
    $signature: 12
  };
  V.SynthDesigner_draw_closure0.prototype = {
    call$1: function(node) {
      return type$.DNode._as(node).drawLinks$1(this.$this.ctx);
    },
    $signature: 12
  };
  V.SynthDesigner_draw_closure1.prototype = {
    call$1: function(node) {
      var t1;
      type$.DNode._as(node);
      t1 = this.$this;
      return node.draw$2(t1.ctx, t1.selection == node);
    },
    $signature: 12
  };
  V.SynthDesigner_tick_closure.prototype = {
    call$1: function(time) {
      H._asNumNullable(time);
      return this.$this.tick$0();
    },
    $signature: 25
  };
  F.main_closure.prototype = {
    call$1: function($event) {
      type$.DatastoreEvent._as($event);
      P.print("logged out");
    },
    $signature: 58
  };
  F.main_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F.addPatch();
    },
    $signature: 4
  };
  F.main_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F.savePatch();
    },
    $signature: 4
  };
  F.main_closure2.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F.deletePatch();
    },
    $signature: 4
  };
  F.main_closure3.prototype = {
    call$1: function(e) {
      return F.keyboardEvent(type$.KeyboardEvent._as(e), true);
    },
    $signature: 9
  };
  F.main_closure4.prototype = {
    call$1: function(e) {
      return F.keyboardEvent(type$.KeyboardEvent._as(e), false);
    },
    $signature: 9
  };
  F.main_closure5.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F.initWebAudio();
    },
    $signature: 4
  };
  F.main_closure6.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4,
        _s7_ = "command",
        _s8_ = "velocity",
        _s4_ = "note";
      type$.MIDIEvent._as(e);
      if ($.analyzer == null)
        return;
      t1 = e.data;
      t2 = J.getInterceptor$asx(t1);
      if (U._toInt(t2.$index(t1, _s7_), 0) === 9) {
        t3 = U._toInt(t2.$index(t1, _s8_), 0);
        if (typeof t3 !== "number")
          return t3.$gt();
        t3 = t3 > 0;
      } else
        t3 = false;
      if (t3) {
        t3 = $.synth;
        t4 = new F.Note();
        t4._note = Math.max(0, H.checkNum(U._toInt(t2.$index(t1, _s4_), 0)));
        t4._velocity = J.clamp$2$n(U._toInt(t2.$index(t1, _s8_), 0), 0, 127);
        t3._play$3(t4, $.analyzer, null);
      } else {
        if (U._toInt(t2.$index(t1, _s7_), 0) !== 8)
          t3 = U._toInt(t2.$index(t1, _s7_), 0) === 9 && U._toInt(t2.$index(t1, _s8_), 0) === 0;
        else
          t3 = true;
        if (t3) {
          t3 = $.synth;
          t4 = new F.Note();
          t4._note = Math.max(0, H.checkNum(U._toInt(t2.$index(t1, _s4_), 0)));
          t3.releaseNote$1(t4);
        } else if (U._toInt(t2.$index(t1, _s7_), 0) === 14) {
          t3 = U._toInt(t2.$index(t1, _s8_), 0);
          if (typeof t3 !== "number")
            return t3.$mul();
          t1 = U._toInt(t2.$index(t1, _s4_), 0);
          if (typeof t1 !== "number")
            return H.iae(t1);
          $.synth.pitchBend$1((t3 * 128 + t1 - 8192) / 8192);
        }
      }
    },
    $signature: 60
  };
  F.loadPatches_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$loadPatches_closure(type$.MouseEvent._as(e));
    },
    $call$body$loadPatches_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, $async$temp1, $async$temp2;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = F;
              $async$temp2 = type$.SynthPatch;
              $async$goto = 2;
              return P._asyncAwait($.datastore.create$1($async$self.patch), $async$call$1);
            case 2:
              // returning from await.
              $async$temp1.loadPatch($async$temp2._as($async$result));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 61
  };
  F.addUserPatch_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F.loadPatch(this.patch);
      e.preventDefault();
      return false;
    },
    $signature: 62
  };
  O.Matrix2D.prototype = {
    transformContact$1: function(c) {
      var t1 = c.touchX,
        t2 = this.xform,
        t3 = t2[0],
        t4 = c.touchY,
        t5 = t2[1],
        t6 = t2[2],
        t7 = t2[3],
        t8 = t2[4];
      t2 = t2[5];
      c.touchX = t1 * t3 + t4 * t5 + t6;
      c.touchY = t1 * t7 + t4 * t8 + t2;
    }
  };
  B.DNode.prototype = {
    get$type: function(_) {
      return H._asStringNullable(J.$index$asx(this.config, "type"));
    },
    DNode$3: function(designer, $name, config) {
      var _this = this,
        t1 = _this.config,
        t2 = J.getInterceptor$asx(t1);
      _this.cx = B.toNum0(t2.$index(t1, "cx"), 100);
      _this.cy = B.toNum0(t2.$index(t1, "cy"), 100);
      _this.label = _this.name;
      if (H.boolConversionCheck(t2.containsKey$1(t1, "id"))) {
        t1 = H._asIntNullable(t2.$index(t1, "id"));
        _this.id = t1;
        if (typeof t1 !== "number")
          return t1.$add();
        $.DNode_NODE_ID = Math.max(t1 + 1, $.DNode_NODE_ID);
      } else {
        t1 = $.DNode_NODE_ID;
        $.DNode_NODE_ID = t1 + 1;
        _this.id = t1;
      }
    },
    get$isDraggingLink: function() {
      var t1, t2, _i;
      for (t1 = this.links, t2 = t1.length, _i = 0; _i < t2; ++_i)
        if (t1[_i]._connector$_dragging)
          return true;
      return false;
    },
    draw$2: function(ctx, highlight) {
      var t1, t2, grd, t3, s, w, h, _this = this;
      ctx.save();
      ctx.save();
      ctx.fillStyle = _this.color;
      ctx.shadowColor = "rgba(0, 0, 0, 0.4)";
      ctx.shadowBlur = 10;
      ctx.shadowOffsetX = -5;
      ctx.shadowOffsetY = 5;
      ctx.beginPath();
      ctx.arc(_this.cx, _this.cy, 34, 0, 6.283185307179586, true);
      ctx.fill();
      ctx.restore();
      t1 = _this.cx;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this.cy;
      if (typeof t2 !== "number")
        return t2.$add();
      grd = ctx.createRadialGradient(t1 - 17, t2 + 17, 7, t1, t2, 34);
      grd.addColorStop(0, "white");
      grd.addColorStop(1, "#ddd");
      ctx.fillStyle = grd;
      ctx.beginPath();
      ctx.arc(_this.cx, _this.cy, 26, 0, 6.283185307179586, true);
      ctx.fill();
      ctx.strokeStyle = "rgba(255, 255, 255, 0.75)";
      ctx.lineWidth = 3;
      ctx.stroke();
      ctx.fillStyle = _this.color;
      ctx.beginPath();
      ctx.font = "400 15px sans-serif";
      ctx.textAlign = "center";
      ctx.textBaseline = "top";
      t2 = _this.label;
      t1 = _this.cx;
      t3 = _this.cy;
      if (typeof t3 !== "number")
        return t3.$add();
      C.CanvasRenderingContext2D_methods.fillText$3(ctx, t2, t1, t3 + 34 + 5);
      ctx.restore();
      ctx.save();
      t1 = _this._icon;
      if (t1 != null) {
        t2 = t1.width;
        if (typeof t2 !== "number")
          return H.iae(t2);
        s = 34 / t2;
        w = t2 * s;
        t2 = t1.height;
        if (typeof t2 !== "number")
          return t2.$mul();
        h = t2 * s;
        t2 = _this.cx;
        if (typeof t2 !== "number")
          return t2.$sub();
        t3 = _this.cy;
        if (typeof t3 !== "number")
          return t3.$sub();
        ctx.drawImage(t1, t2 - w / 2, t3 - h / 2, w, h);
      } else {
        ctx.fillStyle = _this.color;
        ctx.font = "700 24px sans-serif";
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        C.CanvasRenderingContext2D_methods.fillText$3(ctx, H.S(_this.id), _this.cx, _this.cy);
      }
      ctx.restore();
    },
    drawSockets$1: function(ctx) {
      var t1, t2, _i, socket, t3, t4;
      for (t1 = this.sockets, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        socket = t1[_i];
        ctx.fillStyle = "#aaa";
        ctx.beginPath();
        t3 = socket.parent;
        t4 = t3.cx;
        if (typeof t4 !== "number")
          return t4.$add();
        t3 = t3.cy;
        if (typeof t3 !== "number")
          return t3.$add();
        ctx.arc(t4 + socket.deltaX, t3 + socket.deltaY, 5, 0, 6.283185307179586, true);
        ctx.fill();
      }
    },
    drawLinks$1: function(ctx) {
      var t1, t2, _i, link, target, t3, t4, outX, outY, dist, actualRoundness, t5, textX, textY,
        _s7_ = "#016394";
      for (t1 = this.links, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        link = t1[_i];
        target = link.dest;
        if (link._connector$_dragging)
          target = link.source.designer.overlappingSocket$1(link);
        ctx.strokeStyle = _s7_;
        ctx.lineWidth = 3;
        t3 = link.source;
        t4 = t3.cx;
        if (typeof t4 !== "number")
          return t4.$add();
        outX = t4 + 34;
        outY = t3.cy;
        t3 = Math.pow(outX - link.cx, 2);
        t4 = link.cy;
        if (typeof outY !== "number")
          return outY.$sub();
        if (typeof t4 !== "number")
          return H.iae(t4);
        dist = Math.sqrt(t3 + Math.pow(outY - t4, 2));
        if (link.dest != null || link._connector$_dragging) {
          actualRoundness = Math.min(dist / 2, 40);
          ctx.beginPath();
          ctx.moveTo(outX, outY);
          t3 = link.cx;
          t4 = link.cy;
          ctx.bezierCurveTo(outX + actualRoundness, outY, t3 - actualRoundness, t4, t3, t4);
          ctx.stroke();
        }
        ctx.fillStyle = _s7_;
        if (link._connector$_dragging) {
          if (target != null)
            ctx.fillStyle = "cyan";
          ctx.beginPath();
          ctx.arc(link.cx, link.cy, link.radius, 0, 6.283185307179586, true);
          ctx.fill();
        } else if (target != null) {
          ctx.beginPath();
          ctx.moveTo(link.cx + link.radius, link.cy);
          t3 = link.cx;
          t4 = link.radius;
          t5 = link.cy;
          if (typeof t5 !== "number")
            return t5.$sub();
          ctx.lineTo(t3 - 11 + t4, t5 - 6);
          t5 = link.cx;
          t4 = link.radius;
          t3 = link.cy;
          if (typeof t3 !== "number")
            return t3.$add();
          ctx.lineTo(t5 - 11 + t4, t3 + 6);
          ctx.closePath();
          ctx.fill();
        }
        if (target != null && link._connector$_dragging) {
          textX = link.cx - 20;
          t3 = link.cy;
          if (typeof t3 !== "number")
            return t3.$sub();
          textY = t3 - 4;
          ctx.font = "400 13px sans-serif";
          ctx.textAlign = "right";
          ctx.textBaseline = "bottom";
          ctx.strokeStyle = "#f9f9f9";
          ctx.lineWidth = 5;
          ctx.lineJoin = "circle";
          t3 = target.name;
          ctx.strokeText(t3, textX, textY);
          ctx.fillStyle = _s7_;
          ctx.fillText(t3, textX, textY);
        }
      }
    },
    animate$0: function(_) {
      var t2, t3, t4, t5, _this = this, t1 = {},
        refresh = _this._dragging;
      t1.refresh = refresh;
      if (refresh) {
        t2 = _this.cx;
        t3 = _this._touchX;
        t4 = _this._lastX;
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (typeof t2 !== "number")
          return t2.$add();
        _this.cx = t2 + (t3 - t4);
        t4 = _this.cy;
        t2 = _this._touchY;
        t5 = _this._lastY;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t5 !== "number")
          return H.iae(t5);
        if (typeof t4 !== "number")
          return t4.$add();
        _this.cy = t4 + (t2 - t5);
        _this._lastX = t3;
        _this._lastY = t2;
      }
      C.JSArray_methods.forEach$1(_this.links, new B.DNode_animate_closure(t1));
      return t1.refresh;
    },
    overlappingSocket$1: function(link) {
      var t1, t2, t3, t4, t5, t6, t7, _i, socket, t8, t9;
      for (t1 = this.sockets, t2 = t1.length, t3 = link.source, t4 = link.cx, t5 = link.radius, t6 = t4 + t5, t4 -= t5, t7 = link.cy, _i = 0; _i < t2; ++_i) {
        socket = t1[_i];
        t8 = socket.parent;
        if (t8 !== t3) {
          t9 = t8.cx;
          if (typeof t9 !== "number")
            return t9.$add();
          t9 += socket.deltaX;
          if (t6 >= t9 - 5)
            if (t4 <= t9 + 5) {
              if (typeof t7 !== "number")
                return t7.$add();
              t8 = t8.cy;
              if (typeof t8 !== "number")
                return t8.$add();
              t8 += socket.deltaY;
              t8 = t7 + t5 >= t8 - 5 && t7 - t5 <= t8 + 5;
            } else
              t8 = false;
          else
            t8 = false;
        } else
          t8 = false;
        if (t8)
          return socket;
      }
      return null;
    },
    updateLinks$0: function() {
      var t1, i, unallocated, link, t2;
      for (t1 = this.links, i = t1.length - 1, unallocated = false; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        link = t1[i];
        t2 = link.dest == null;
        if (t2 && unallocated)
          C.JSArray_methods.remove$1(t1, link);
        else if (t2)
          unallocated = true;
      }
      if (!unallocated)
        C.JSArray_methods.add$1(t1, Z.DNodeConnector$(this));
    },
    connectTo$2: function(dest, $name) {
      var t1, t2, t3, _i, socket, t4, t5,
        link = Z.DNodeConnector$(this);
      for (t1 = dest.sockets, t2 = t1.length, t3 = this.links, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        socket = t1[_i];
        if (socket.name === $name) {
          link.dest = socket;
          C.JSArray_methods.add$1(t3, link);
          t4 = socket.parent;
          t5 = t4.cx;
          if (typeof t5 !== "number")
            return t5.$add();
          link.cx = t5 + socket.deltaX;
          t4 = t4.cy;
          if (typeof t4 !== "number")
            return t4.$add();
          link.cy = t4 + socket.deltaY;
        }
      }
    },
    containsTouch$1: function(c) {
      var t1, t2, _i,
        tx = c.touchX,
        ty = c.touchY;
      for (t1 = this.links, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        if (t1[_i].containsTouch$1(c))
          return true;
      t1 = this.cx;
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = tx - t1;
      t2 = this.cy;
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = ty - t2;
      return t1 * t1 + t2 * t2 <= 1156;
    },
    touchDown$1: function(c) {
      var t1, t2, _i, link, t3, _this = this;
      for (t1 = _this.links, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        link = t1[_i];
        if (link.containsTouch$1(c)) {
          t1 = _this.designer;
          t2 = t1.nodes;
          t2.remove$1(0, _this.id);
          t3 = t1.touchables;
          C.JSArray_methods.remove$1(t3, _this);
          t2.$indexSet(0, _this.id, _this);
          C.JSArray_methods.add$1(t3, _this);
          t1.updateSynth$0();
          link.touchDown$1(c);
          return link;
        }
      }
      _this._dragging = true;
      t1 = c.touchX;
      _this._touchX = t1;
      t2 = c.touchY;
      _this._touchY = t2;
      _this._lastX = t1;
      _this._lastY = t2;
      t2 = _this.designer;
      t2.moveToTop$1(_this);
      t2.selection = _this;
      t2.showParameters$1(_this);
      return _this;
    },
    touchUp$1: function(c) {
      this._dragging = false;
      this.designer.updateSynth$0();
    },
    touchDrag$1: function(c) {
      this._touchX = c.touchX;
      this._touchY = c.touchY;
    },
    touchDoubleTap$1: function(c) {
    },
    touchSlide$1: function(c) {
    },
    touchExit$1: function(c) {
    },
    touchOver$1: function(c) {
    },
    toJSON$0: function() {
      var t2, _this = this,
        t1 = _this.config;
      if (t1 == null)
        return null;
      t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, "cx", _this.cx);
      t2.$indexSet(t1, "cy", _this.cy);
      t2.$indexSet(t1, "id", _this.id);
      return t1;
    },
    $isTouchable: 1,
    get$id: function(receiver) {
      return this.id;
    }
  };
  B.DNode_animate_closure.prototype = {
    call$1: function(link) {
      var t1, t2, t3, t4, t5;
      type$.DNodeConnector._as(link);
      t1 = link._connector$_dragging;
      if (t1) {
        t2 = link.cx;
        t3 = link._connector$_touchX;
        t4 = link._connector$_lastX;
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t4 !== "number")
          return H.iae(t4);
        link.cx = t2 + (t3 - t4);
        t4 = link.cy;
        t2 = link._connector$_touchY;
        t5 = link._connector$_lastY;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t5 !== "number")
          return H.iae(t5);
        if (typeof t4 !== "number")
          return t4.$add();
        link.cy = t4 + (t2 - t5);
        link._connector$_lastX = t3;
        link._connector$_lastY = t2;
      } else {
        t2 = link.dest;
        if (t2 == null) {
          t2 = link.source;
          t3 = t2.cx;
          if (typeof t3 !== "number")
            return t3.$add();
          link.cx = t3 + 34;
          link.cy = t2.cy;
        } else {
          t3 = t2.parent;
          t4 = t3.cx;
          t5 = t2.deltaX;
          if (typeof t4 !== "number")
            return t4.$add();
          link.cx = t4 + t5;
          t3 = t3.cy;
          t2 = t2.deltaY;
          if (typeof t3 !== "number")
            return t3.$add();
          link.cy = t3 + t2;
        }
      }
      if (t1)
        this._box_0.refresh = true;
    },
    $signature: 63
  };
  B.DOutNode.prototype = {};
  B.DADSRNode.prototype = {
    DADSRNode$3: function(designer, $name, config) {
      var t1, t2, t3, _this = this, _s5_ = "level", _s5_0 = "range";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, -39, 0, "in"));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "adsr");
      t1.$indexSet(config, "A", B.toNum0(t1.$index(config, "A"), 0.01));
      t1.$indexSet(config, "D", B.toNum0(t1.$index(config, "D"), 0.1));
      t1.$indexSet(config, "S", B.toNum0(t1.$index(config, "S"), 1));
      t1.$indexSet(config, "R", B.toNum0(t1.$index(config, "R"), 0.3));
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 1));
      _this.label = "ADSR";
      t2 = _this.params;
      t3 = R.DParam$("Level", t1.$index(config, _s5_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DADSRNode_closure(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("A", t1.$index(config, "A"));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DADSRNode_closure0(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("D", t1.$index(config, "D"));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DADSRNode_closure1(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("S", t1.$index(config, "S"));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DADSRNode_closure2(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t1 = R.DParam$("R", t1.$index(config, "R"));
      t1._input.type = _s5_0;
      t1._input.min = C.JSInt_methods.toString$0(0);
      t1._input.max = C.JSInt_methods.toString$0(3);
      t1._input.step = C.JSDouble_methods.toString$0(0.05);
      t1.onChange = new B.DADSRNode_closure3(config, designer);
      C.JSArray_methods.add$1(t2, t1);
    },
    _timeToX$1: function(time) {
      var t1 = this.config,
        t2 = J.getInterceptor$asx(t1),
        t3 = B.toNum0(t2.$index(t1, "A"), 0.01),
        t4 = B.toNum0(t2.$index(t1, "D"), 0.1);
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return H.iae(t4);
      t1 = B.toNum0(t2.$index(t1, "R"), 0.3);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t2 = this.cx;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof time !== "number")
        return H.iae(time);
      return t2 - 34 + 6 + 12 + 32 * time / (t3 + t4 + 1 + t1);
    },
    _gainToY$1: function(gain) {
      var t1 = this.cy;
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof gain !== "number")
        return H.iae(gain);
      return t1 - 22.9 + 45.8 - (12 + 19.619999999999997 * gain);
    },
    draw$2: function(ctx, highlight) {
      var t1, t2, grd, t3, t4, _this = this;
      ctx.save();
      ctx.save();
      ctx.fillStyle = _this.color;
      ctx.shadowColor = "rgba(0, 0, 0, 0.4)";
      ctx.shadowBlur = 10;
      ctx.shadowOffsetX = -5;
      ctx.shadowOffsetY = 5;
      t1 = _this.cx;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this.cy;
      if (typeof t2 !== "number")
        return t2.$sub();
      B.roundRect(ctx, t1 - 34, t2 - 28.9, 68, 57.8, 20);
      ctx.fill();
      t2 = _this.cx;
      if (typeof t2 !== "number")
        return t2.$sub();
      t1 = _this.cy;
      if (typeof t1 !== "number")
        return t1.$add();
      grd = ctx.createRadialGradient(t2 - 17, t1 + 17, 7, t2, t1, 51);
      grd.addColorStop(0, "white");
      grd.addColorStop(1, "#ddd");
      ctx.fillStyle = grd;
      t1 = _this.cx;
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = _this.cy;
      if (typeof t2 !== "number")
        return t2.$sub();
      B.roundRect(ctx, t1 - 34 + 6, t2 - 22.9, 56, 45.8, 15);
      ctx.fill();
      ctx.strokeStyle = "rgba(255, 255, 255, 0.75)";
      ctx.lineWidth = 3;
      ctx.stroke();
      ctx.restore();
      ctx.beginPath();
      ctx.moveTo(_this._timeToX$1(0), _this._gainToY$1(0));
      t2 = _this.config;
      t1 = J.getInterceptor$asx(t2);
      ctx.lineTo(_this._timeToX$1(B.toNum0(t1.$index(t2, "A"), 0.01)), _this._gainToY$1(1));
      t3 = B.toNum0(t1.$index(t2, "A"), 0.01);
      t4 = B.toNum0(t1.$index(t2, "D"), 0.1);
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return H.iae(t4);
      ctx.lineTo(_this._timeToX$1(t3 + t4), _this._gainToY$1(B.toNum0(t1.$index(t2, "S"), 1)));
      t4 = B.toNum0(t1.$index(t2, "A"), 0.01);
      t3 = B.toNum0(t1.$index(t2, "D"), 0.1);
      if (typeof t4 !== "number")
        return t4.$add();
      if (typeof t3 !== "number")
        return H.iae(t3);
      ctx.lineTo(_this._timeToX$1(t4 + t3 + 1), _this._gainToY$1(B.toNum0(t1.$index(t2, "S"), 1)));
      t3 = B.toNum0(t1.$index(t2, "A"), 0.01);
      t4 = B.toNum0(t1.$index(t2, "D"), 0.1);
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return H.iae(t4);
      t2 = B.toNum0(t1.$index(t2, "R"), 0.3);
      if (typeof t2 !== "number")
        return H.iae(t2);
      ctx.lineTo(_this._timeToX$1(t3 + t4 + 1 + t2), _this._gainToY$1(0));
      ctx.lineWidth = 4;
      ctx.strokeStyle = _this.color;
      ctx.lineCap = "round";
      ctx.lineJoin = "round";
      ctx.stroke();
      ctx.fillStyle = _this.color;
      ctx.beginPath();
      ctx.font = "400 15px sans-serif";
      ctx.textAlign = "center";
      ctx.textBaseline = "top";
      t2 = _this.label;
      t4 = _this.cx;
      t3 = _this.cy;
      if (typeof t3 !== "number")
        return t3.$add();
      C.CanvasRenderingContext2D_methods.fillText$3(ctx, t2, t4, t3 + 34 + 5);
      ctx.restore();
    }
  };
  B.DADSRNode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DADSRNode_closure0.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "A", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DADSRNode_closure1.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "D", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DADSRNode_closure2.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "S", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DADSRNode_closure3.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "R", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DLFONode.prototype = {
    DLFONode$3: function(designer, $name, config) {
      var t1, t2, t3, _this = this,
        _s9_ = "frequency",
        _s5_ = "level",
        _s8_ = "waveform";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      t1 = _this.sockets;
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(0.4487989505128276) * -39, Math.sin(0.39269908169872414) * -39, "detune"));
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(0) * -39, Math.sin(0) * -39, "amplitude"));
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(-0.4487989505128276) * -39, Math.sin(-0.39269908169872414) * -39, _s9_));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "lfo");
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 1));
      t1.$indexSet(config, _s9_, B.toNum0(t1.$index(config, _s9_), 1));
      t2 = t1.$index(config, _s8_);
      t1.$indexSet(config, _s8_, t2 == null ? "sine" : J.toString$0$(t2));
      _this.label = $name + " " + H.S(t1.$index(config, _s8_)) + " " + H.S(t1.$index(config, _s9_));
      t2 = _this.params;
      t3 = R.DParam$("Level", t1.$index(config, _s5_));
      t3._input.type = "range";
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DLFONode_closure(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("Frequency", t1.$index(config, _s9_));
      t3._input.type = "range";
      t3._input.min = C.JSDouble_methods.toString$0(0.1);
      t3._input.max = C.JSInt_methods.toString$0(200);
      t3._input.step = C.JSDouble_methods.toString$0(0.1);
      t3.onChange = new B.DLFONode_closure0(_this, config, $name, designer);
      C.JSArray_methods.add$1(t2, t3);
      t1 = t1.$index(config, _s8_);
      t1 = t1 == null ? "sine" : J.toString$0$(t1);
      t1 = R.DSelectParam$("Waveform", t1, ["sine", "square", "triangle", "sawtooth"]);
      t1.onChange = new B.DLFONode_closure1(_this, config, $name, designer);
      C.JSArray_methods.add$1(t2, t1);
    }
  };
  B.DLFONode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DLFONode_closure0.prototype = {
    call$1: function(param) {
      var _this = this,
        _s9_ = "frequency",
        t1 = _this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, _s9_, J.get$valueAsNumber$x(param));
      _this.$this.label = _this.name + " " + H.S(t2.$index(t1, "waveform")) + " " + H.S(t2.$index(t1, _s9_));
      _this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DLFONode_closure1.prototype = {
    call$1: function(param) {
      var _this = this,
        _s8_ = "waveform",
        t1 = _this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, _s8_, J.get$value$x(param));
      _this.$this.label = _this.name + " " + H.S(t2.$index(t1, _s8_)) + " " + H.S(t2.$index(t1, "frequency"));
      _this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DDistNode.prototype = {
    DDistNode$3: function(designer, $name, config) {
      var t1, t2, _this = this,
        _s8_ = "pre-gain",
        _s5_ = "level";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, Math.cos(0) * -39, Math.sin(0) * -39, "input"));
      config.$indexSet(0, "type", "distortion");
      config.$indexSet(0, _s8_, B.toNum0(config.$index(0, _s8_), 1));
      config.$indexSet(0, _s5_, B.toNum0(config.$index(0, _s5_), 1));
      _this.label = $name;
      t1 = _this.params;
      t2 = R.DParam$("Level", config.$index(0, _s5_));
      t2._input.type = "range";
      t2._input.min = C.JSInt_methods.toString$0(0);
      t2._input.max = C.JSInt_methods.toString$0(1);
      t2._input.step = C.JSDouble_methods.toString$0(0.01);
      t2.onChange = new B.DDistNode_closure(config, designer);
      C.JSArray_methods.add$1(t1, t2);
      t2 = R.DParam$(_s8_, config.$index(0, _s8_));
      t2._input.type = "range";
      t2._input.min = C.JSInt_methods.toString$0(1);
      t2._input.max = C.JSInt_methods.toString$0(30);
      t2._input.step = C.JSDouble_methods.toString$0(0.01);
      t2.onChange = new B.DDistNode_closure0(config, designer);
      C.JSArray_methods.add$1(t1, t2);
    }
  };
  B.DDistNode_closure.prototype = {
    call$1: function(param) {
      this.config.$indexSet(0, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DDistNode_closure0.prototype = {
    call$1: function(param) {
      this.config.$indexSet(0, "pre-gain", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode.prototype = {
    DOscNode$3: function(designer, $name, config) {
      var t1, t2, t3, _this = this, _s6_ = "detune",
        _s9_ = "frequency",
        _s5_ = "level", _s3_ = "fIn", _s3_0 = "dIn",
        _s8_ = "waveform",
        _s5_0 = "range";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      t1 = _this.sockets;
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(0.4487989505128276) * -39, Math.sin(0.39269908169872414) * -39, _s6_));
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(0) * -39, Math.sin(0) * -39, "amplitude"));
      C.JSArray_methods.add$1(t1, new V.DNodeSocket(_this, Math.cos(-0.4487989505128276) * -39, Math.sin(-0.39269908169872414) * -39, _s9_));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "fm");
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 1));
      t1.$indexSet(config, _s3_, B.toNum0(t1.$index(config, _s3_), 100));
      t1.$indexSet(config, _s3_0, B.toNum0(t1.$index(config, _s3_0), 400));
      t1.$indexSet(config, _s9_, B.toNum0(t1.$index(config, _s9_), 1));
      t1.$indexSet(config, _s6_, B.toNum0(t1.$index(config, _s6_), 0));
      t1.$indexSet(config, "relative", true);
      t2 = t1.$index(config, _s8_);
      t1.$indexSet(config, _s8_, t2 == null ? "sine" : J.toString$0$(t2));
      _this.label = $name + " " + H.S(t1.$index(config, _s8_)) + " " + H.S(t1.$index(config, _s9_));
      t2 = _this.params;
      t3 = R.DParam$("Level", t1.$index(config, _s5_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DOscNode_closure(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s3_, t1.$index(config, _s3_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(2000);
      t3._input.step = C.JSInt_methods.toString$0(10);
      t3.onChange = new B.DOscNode_closure0(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s3_0, t1.$index(config, _s3_0));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(2000);
      t3._input.step = C.JSInt_methods.toString$0(10);
      t3.onChange = new B.DOscNode_closure1(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("Frequency", t1.$index(config, _s9_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSDouble_methods.toString$0(0.1);
      t3._input.max = C.JSInt_methods.toString$0(20);
      t3._input.step = C.JSDouble_methods.toString$0(0.001);
      t3.onChange = new B.DOscNode_closure2(_this, config, $name, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("Detune", t1.$index(config, _s6_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(-50);
      t3._input.max = C.JSInt_methods.toString$0(50);
      t3._input.step = C.JSDouble_methods.toString$0(0.25);
      t3.onChange = new B.DOscNode_closure3(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t1 = t1.$index(config, _s8_);
      t1 = t1 == null ? "sine" : J.toString$0$(t1);
      t1 = R.DSelectParam$("Waveform", t1, ["sine", "square", "triangle", "sawtooth"]);
      t1.onChange = new B.DOscNode_closure4(_this, config, $name, designer);
      C.JSArray_methods.add$1(t2, t1);
    }
  };
  B.DOscNode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode_closure0.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "fIn", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode_closure1.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "dIn", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode_closure2.prototype = {
    call$1: function(param) {
      var _this = this,
        _s9_ = "frequency",
        t1 = _this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, _s9_, J.get$valueAsNumber$x(param));
      _this.$this.label = _this.name + " " + H.S(t2.$index(t1, "waveform")) + " " + H.S(t2.$index(t1, _s9_));
      _this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode_closure3.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "detune", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DOscNode_closure4.prototype = {
    call$1: function(param) {
      var _this = this,
        _s8_ = "waveform",
        t1 = _this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.remove$1(t1, "wavetable");
      t2.$indexSet(t1, _s8_, J.get$value$x(param));
      _this.$this.label = _this.name + " " + H.S(t2.$index(t1, _s8_)) + " " + H.S(t2.$index(t1, "frequency"));
      _this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DGainNode.prototype = {
    DGainNode$3: function(designer, $name, config) {
      var t1, _this = this, _s5_ = "level";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, -39, 0, "gain"));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "gain");
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 1));
      _this.label = "gain " + H.S(t1.$index(config, _s5_));
      t1 = R.DParam$("Level", t1.$index(config, _s5_));
      t1._input.type = "range";
      t1._input.min = C.JSInt_methods.toString$0(0);
      t1._input.max = C.JSInt_methods.toString$0(2);
      t1._input.step = C.JSDouble_methods.toString$0(0.01);
      t1.onChange = new B.DGainNode_closure(_this, config, designer);
      C.JSArray_methods.add$1(_this.params, t1);
    }
  };
  B.DGainNode_closure.prototype = {
    call$1: function(param) {
      var t1 = this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, "level", J.get$valueAsNumber$x(param));
      this.$this.label = "gain " + H.S(t2.$index(t1, "level"));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DDelayNode.prototype = {
    DDelayNode$3: function(designer, $name, config) {
      var t1, t2, _this = this, _s5_ = "delay", _s5_0 = "level";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, -39, 0, "in"));
      config.$indexSet(0, "type", _s5_);
      config.$indexSet(0, _s5_0, B.toNum0(config.$index(0, _s5_0), 1));
      config.$indexSet(0, _s5_, B.toNum0(config.$index(0, _s5_), 0.1));
      _this.label = "delay " + H.S(config.$index(0, _s5_)) + "s";
      t1 = _this.params;
      t2 = R.DParam$("Level", config.$index(0, _s5_0));
      t2._input.type = "range";
      t2._input.min = C.JSInt_methods.toString$0(0);
      t2._input.max = C.JSInt_methods.toString$0(1);
      t2._input.step = C.JSDouble_methods.toString$0(0.01);
      t2.onChange = new B.DDelayNode_closure(config, designer);
      C.JSArray_methods.add$1(t1, t2);
      t2 = R.DParam$("Delay", config.$index(0, _s5_));
      t2._input.type = "range";
      t2._input.min = C.JSInt_methods.toString$0(0);
      t2._input.max = C.JSInt_methods.toString$0(1);
      t2._input.step = C.JSDouble_methods.toString$0(0.01);
      t2.onChange = new B.DDelayNode_closure0(_this, config, designer);
      C.JSArray_methods.add$1(t1, t2);
    }
  };
  B.DDelayNode_closure.prototype = {
    call$1: function(param) {
      this.config.$indexSet(0, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DDelayNode_closure0.prototype = {
    call$1: function(param) {
      var t1 = this.config;
      t1.$indexSet(0, "delay", J.get$valueAsNumber$x(param));
      this.$this.label = "delay " + H.S(t1.$index(0, "delay")) + "s";
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DSampleNode.prototype = {
    DSampleNode$3: function(designer, $name, config) {
      var t1, t2, _this = this, _s5_ = "level";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "sample");
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 1));
      t2 = _this.sockets;
      C.JSArray_methods.add$1(t2, new V.DNodeSocket(_this, Math.cos(0.4487989505128276) * -39, Math.sin(0.39269908169872414) * -39, "detune"));
      C.JSArray_methods.add$1(t2, new V.DNodeSocket(_this, Math.cos(-0.4487989505128276) * -39, Math.sin(-0.39269908169872414) * -39, "playbackRate"));
      _this.label = $name;
      t1 = R.DParam$("Level", t1.$index(config, _s5_));
      t1._input.type = "range";
      t1._input.min = C.JSInt_methods.toString$0(0);
      t1._input.max = C.JSInt_methods.toString$0(1);
      t1._input.step = C.JSDouble_methods.toString$0(0.01);
      t1.onChange = new B.DSampleNode_closure(config, designer);
      C.JSArray_methods.add$1(_this.params, t1);
    }
  };
  B.DSampleNode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "level", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DCompressorNode.prototype = {
    DCompressorNode$3: function(designer, $name, config) {
      var t1, t2, t3, _this = this,
        _s9_ = "threshold",
        _s4_ = "knee", _s5_ = "ratio", _s6_ = "attack",
        _s7_ = "release",
        _s5_0 = "range";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, -39, 0, "in"));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, "type", "compressor");
      t1.$indexSet(config, _s9_, B.toNum0(t1.$index(config, _s9_), -24));
      t1.$indexSet(config, _s4_, B.toNum0(t1.$index(config, _s4_), 30));
      t1.$indexSet(config, _s5_, B.toNum0(t1.$index(config, _s5_), 12));
      t1.$indexSet(config, _s6_, B.toNum0(t1.$index(config, _s6_), 0.003));
      t1.$indexSet(config, _s7_, B.toNum0(t1.$index(config, _s7_), 0.25));
      _this.label = "Compressor";
      t2 = _this.params;
      t3 = R.DParam$(_s9_, t1.$index(config, _s9_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(-100);
      t3._input.max = C.JSInt_methods.toString$0(0);
      t3._input.step = C.JSDouble_methods.toString$0(0.1);
      t3.onChange = new B.DCompressorNode_closure(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s4_, t1.$index(config, _s4_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(40);
      t3._input.step = C.JSDouble_methods.toString$0(0.1);
      t3.onChange = new B.DCompressorNode_closure0(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s5_, t1.$index(config, _s5_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(1);
      t3._input.max = C.JSInt_methods.toString$0(20);
      t3._input.step = C.JSDouble_methods.toString$0(0.1);
      t3.onChange = new B.DCompressorNode_closure1(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s6_, t1.$index(config, _s6_));
      t3._input.type = _s5_0;
      t3._input.min = C.JSInt_methods.toString$0(0);
      t3._input.max = C.JSInt_methods.toString$0(1);
      t3._input.step = C.JSDouble_methods.toString$0(0.001);
      t3.onChange = new B.DCompressorNode_closure2(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t1 = R.DParam$(_s7_, t1.$index(config, _s7_));
      t1._input.type = _s5_0;
      t1._input.min = C.JSInt_methods.toString$0(0);
      t1._input.max = C.JSInt_methods.toString$0(1);
      t1._input.step = C.JSDouble_methods.toString$0(0.01);
      t1.onChange = new B.DCompressorNode_closure3(config, designer);
      C.JSArray_methods.add$1(t2, t1);
    }
  };
  B.DCompressorNode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "threshold", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DCompressorNode_closure0.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "knee", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DCompressorNode_closure1.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "ratio", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DCompressorNode_closure2.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "attack", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DCompressorNode_closure3.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "release", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DFilterNode.prototype = {
    DFilterNode$3: function(designer, $name, config) {
      var t1, t2, t3, _this = this, _s4_ = "type",
        _s9_ = "frequency",
        _s6_ = "detune", _s4_0 = "gain", _s5_ = "range";
      C.JSArray_methods.add$1(_this.links, Z.DNodeConnector$(_this));
      C.JSArray_methods.add$1(_this.sockets, new V.DNodeSocket(_this, -39, 0, "in"));
      t1 = J.getInterceptor$ax(config);
      t1.$indexSet(config, _s4_, "filter");
      t1.$indexSet(config, _s9_, B.toNum0(t1.$index(config, _s9_), 350));
      t1.$indexSet(config, _s6_, B.toNum0(t1.$index(config, _s6_), 0));
      t1.$indexSet(config, "Q", B.toNum0(t1.$index(config, "Q"), 1));
      t1.$indexSet(config, _s4_0, B.toNum0(t1.$index(config, _s4_0), 0));
      _this.label = $name + " " + H.S(t1.$index(config, _s4_));
      t2 = t1.$index(config, _s4_);
      t1.$indexSet(config, _s4_, t2 == null ? "lowpass" : J.toString$0$(t2));
      _this.label = "Filter";
      t2 = _this.params;
      t3 = R.DParam$(_s9_, t1.$index(config, _s9_));
      t3._input.type = _s5_;
      t3._input.min = C.JSInt_methods.toString$0(10);
      t3._input.max = C.JSInt_methods.toString$0(20000);
      t3._input.step = C.JSInt_methods.toString$0(1);
      t3.onChange = new B.DFilterNode_closure(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s6_, t1.$index(config, _s6_));
      t3._input.type = _s5_;
      t3._input.min = C.JSInt_methods.toString$0(-100);
      t3._input.max = C.JSInt_methods.toString$0(100);
      t3._input.step = C.JSDouble_methods.toString$0(0.1);
      t3.onChange = new B.DFilterNode_closure0(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$("Q", t1.$index(config, "Q"));
      t3._input.type = _s5_;
      t3._input.min = C.JSDouble_methods.toString$0(0.0001);
      t3._input.max = C.JSInt_methods.toString$0(1000);
      t3._input.step = C.JSDouble_methods.toString$0(0.0001);
      t3.onChange = new B.DFilterNode_closure1(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t3 = R.DParam$(_s4_0, t1.$index(config, _s4_0));
      t3._input.type = _s5_;
      t3._input.min = C.JSInt_methods.toString$0(-40);
      t3._input.max = C.JSInt_methods.toString$0(40);
      t3._input.step = C.JSDouble_methods.toString$0(0.01);
      t3.onChange = new B.DFilterNode_closure2(config, designer);
      C.JSArray_methods.add$1(t2, t3);
      t1 = t1.$index(config, _s4_);
      t1 = t1 == null ? "lowpass" : J.toString$0$(t1);
      t1 = R.DSelectParam$("Type", t1, ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"]);
      t1.onChange = new B.DFilterNode_closure3(_this, config, $name, designer);
      C.JSArray_methods.add$1(t2, t1);
    }
  };
  B.DFilterNode_closure.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "frequency", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DFilterNode_closure0.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "detune", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DFilterNode_closure1.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "Q", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DFilterNode_closure2.prototype = {
    call$1: function(param) {
      J.$indexSet$ax(this.config, "gain", J.get$valueAsNumber$x(param));
      this.designer.updateSynth$0();
    },
    $signature: 0
  };
  B.DFilterNode_closure3.prototype = {
    call$1: function(param) {
      var _this = this,
        t1 = _this.config,
        t2 = J.getInterceptor$ax(t1);
      t2.remove$1(t1, "wavetable");
      t2.$indexSet(t1, "waveform", J.get$value$x(param));
      _this.$this.label = _this.name + " " + H.S(t2.$index(t1, "type"));
      _this.designer.updateSynth$0();
    },
    $signature: 0
  };
  R.DParam.prototype = {
    get$value: function(_) {
      return this._input.value;
    },
    get$valueAsNumber: function(_) {
      return this._input.valueAsNumber;
    },
    DParam$2: function($name, value) {
      var label, t3, t4, _this = this,
        t1 = document,
        t2 = t1.createElement("div");
      t2.className = "node-param text";
      _this._container = t2;
      t2 = W.InputElement_InputElement();
      t2.value = value == null ? "" : J.toString$0$(value);
      _this._input = t2;
      label = t1.createElement("label");
      C.LabelElement_methods.setInnerHtml$1(label, $name + " (" + H.S(value) + ")");
      _this._container.appendChild(label);
      _this._container.appendChild(_this._input);
      t1 = _this._input;
      t2 = type$._ElementEventStreamImpl_Event;
      t3 = t2._eval$1("~(1)");
      t4 = t3._as(new R.DParam_closure(_this, label, $name));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(t1, "change", t4, false, t2);
      W._EventStreamSubscription$(_this._input, "input", t3._as(new R.DParam_closure0(_this, label, $name)), false, t2);
    }
  };
  R.DParam_closure.prototype = {
    call$1: function(e) {
      var t2,
        t1 = this.$this;
      C.LabelElement_methods.setInnerHtml$1(this.label, this.name + " (" + H.S(t1._input.value) + ")");
      t2 = t1.onChange;
      if (t2 != null)
        P.Function_apply(t2, [t1], null);
    },
    $signature: 6
  };
  R.DParam_closure0.prototype = {
    call$1: function(e) {
      var t2,
        t1 = this.$this;
      C.LabelElement_methods.setInnerHtml$1(this.label, this.name + " (" + H.S(t1._input.value) + ")");
      t2 = t1.onChange;
      if (t2 != null)
        P.Function_apply(t2, [t1], null);
    },
    $signature: 6
  };
  R.DSelectParam.prototype = {
    get$value: function(_) {
      return this._select.value;
    },
    DSelectParam$3: function($name, value, options) {
      var _i, opt, t3, t4, label, _this = this,
        t1 = document,
        t2 = t1.createElement("div");
      t2.className = "node-param text";
      _this._container = t2;
      _this._select = t1.createElement("select");
      for (t2 = options.length, _i = 0; _i < options.length; options.length === t2 || (0, H.throwConcurrentModificationError)(options), ++_i) {
        opt = options[_i];
        t3 = _this._select;
        t3.children;
        t4 = W.OptionElement_OptionElement$_("", opt, null, opt === value);
        t4.textContent = opt;
        t3.appendChild(t4);
      }
      label = t1.createElement("label");
      C.LabelElement_methods.setInnerHtml$1(label, $name);
      _this._container.appendChild(label);
      _this._container.appendChild(_this._select);
      t1 = _this._select;
      t1.toString;
      t2 = type$._ElementEventStreamImpl_Event;
      t3 = t2._eval$1("~(1)")._as(new R.DSelectParam_closure(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "change", t3, false, t2._precomputed1);
    }
  };
  R.DSelectParam_closure.prototype = {
    call$1: function(e) {
      var t1 = this.$this,
        t2 = t1.onChange;
      if (t2 != null)
        P.Function_apply(t2, [t1], null);
    },
    $signature: 6
  };
  V.DNodeSocket.prototype = {};
  K.TouchManager.prototype = {
    findTouchTarget$1: function(tp) {
      var t1, i, t;
      for (t1 = this.layers, i = 0; i < t1.length; ++i) {
        t = t1[i].findTouchTarget$1(tp);
        if (t != null) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].last_touch = new P.DateTime(Date.now(), false);
          if (i >= t1.length)
            return H.ioore(t1, i);
          return new K.TouchBinding(t1[i], t);
        } else if (tp.down)
          if (i >= t1.length)
            return H.ioore(t1, i);
      }
      return null;
    },
    registerEvents$1: function(element) {
      var t1, t2, t3, _this = this;
      _this.parent = element;
      element.toString;
      t1 = type$._ElementEventStreamImpl_MouseEvent;
      t2 = t1._eval$1("~(1)");
      t3 = t2._as(new K.TouchManager_registerEvents_closure(_this));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(element, "mousedown", t3, false, t1);
      W._EventStreamSubscription$(element, "mouseup", t2._as(new K.TouchManager_registerEvents_closure0(_this)), false, t1);
      W._EventStreamSubscription$(element, "mousemove", t2._as(new K.TouchManager_registerEvents_closure1(_this)), false, t1);
      t1 = type$._ElementEventStreamImpl_Event;
      W._EventStreamSubscription$(element, "dblclick", t1._eval$1("~(1)")._as(new K.TouchManager_registerEvents_closure2(_this)), false, t1._precomputed1);
      t1 = document;
      t2 = type$.void_Function_KeyboardEvent._as(new K.TouchManager_registerEvents_closure3(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "keydown", t2, false, type$.KeyboardEvent);
      W._EventStreamSubscription$(t1, "touchmove", type$.void_Function_TouchEvent._as(new K.TouchManager_registerEvents_closure4()), false, type$.TouchEvent);
    },
    _keyDown$1: function(kbd) {
      var t1, i;
      for (t1 = this.layers.length, i = 0; i < t1; ++i)
        ;
    }
  };
  K.TouchManager_registerEvents_closure.prototype = {
    call$1: function(e) {
      var target,
        t1 = this.$this,
        t = K.Contact$fromMouse(type$.MouseEvent._as(e));
      t.down = true;
      target = t1.findTouchTarget$1(t);
      if (target != null)
        if (target.touchDown$1(t))
          t1.touch_bindings.$indexSet(0, -1, target);
      t1.mdown = true;
      return null;
    },
    $signature: 13
  };
  K.TouchManager_registerEvents_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, target;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.touch_bindings;
      target = t2.$index(0, -1);
      if (target != null)
        target.touchUp$1(K.Contact$fromMouse(e));
      t2.$indexSet(0, -1, null);
      t1.mdown = false;
      return null;
    },
    $signature: 13
  };
  K.TouchManager_registerEvents_closure1.prototype = {
    call$1: function(e) {
      var t2, t3,
        t1 = this.$this,
        t = K.Contact$fromMouse(type$.MouseEvent._as(e)),
        target = t1.touch_bindings.$index(0, -1);
      if (target != null)
        target.touchDrag$1(t);
      else {
        target = t1.findTouchTarget$1(t);
        if (target != null)
          if (t1.mdown)
            target.touchSlide$1(t);
          else {
            target.layer.iform.transformContact$1(t);
            target.touchable.touchOver$1(t);
            t2 = target.touchable;
            t3 = t1._lastMouseOver;
            if (t2 !== t3 && t3 != null)
              t3.touchExit$1(t);
            t1._lastMouseOver = target.touchable;
          }
        else {
          t2 = t1._lastMouseOver;
          if (t2 != null) {
            t2.touchExit$1(t);
            t1._lastMouseOver = null;
          }
        }
      }
      return null;
    },
    $signature: 13
  };
  K.TouchManager_registerEvents_closure2.prototype = {
    call$1: function(e) {
      var target,
        t1 = this.$this,
        t = K.Contact$fromMouse(type$.MouseEvent._as(e));
      t.down = false;
      target = t1.findTouchTarget$1(t);
      if (target != null) {
        target.layer.iform.transformContact$1(t);
        target.touchable.touchDoubleTap$1(t);
        t1.touch_bindings.$indexSet(0, -1, null);
      }
      return null;
    },
    $signature: 65
  };
  K.TouchManager_registerEvents_closure3.prototype = {
    call$1: function(e) {
      return this.$this._keyDown$1(type$.KeyboardEvent._as(e));
    },
    $signature: 9
  };
  K.TouchManager_registerEvents_closure4.prototype = {
    call$1: function(e) {
      return type$.TouchEvent._as(e).preventDefault();
    },
    $signature: 66
  };
  K.TouchLayer.prototype = {
    findTouchTarget$1: function(tp) {
      var t1, i,
        c = new K.Contact(false);
      c.id = tp.id;
      c.tagId = tp.tagId;
      c.touchX = tp.touchX;
      c.touchY = tp.touchY;
      c.down = tp.down;
      c.finger = tp.finger;
      this.iform.transformContact$1(c);
      for (t1 = this.touchables, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        if (t1[i].containsTouch$1(c)) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          return t1[i];
        }
      }
      return null;
    }
  };
  K.TouchBinding.prototype = {
    touchDown$1: function(c) {
      this.layer.iform.transformContact$1(c);
      this.touchable = this.touchable.touchDown$1(c);
      return true;
    },
    touchUp$1: function(c) {
      this.layer.iform.transformContact$1(c);
      this.touchable.touchUp$1(c);
    },
    touchDrag$1: function(c) {
      this.layer.iform.transformContact$1(c);
      this.touchable.touchDrag$1(c);
    },
    touchSlide$1: function(c) {
      this.layer.iform.transformContact$1(c);
      this.touchable.touchSlide$1(c);
    }
  };
  K.Touchable.prototype = {};
  K.Contact.prototype = {
    get$id: function(receiver) {
      return this.id;
    }
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = P.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = W.Element.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = W.EventTarget.prototype;
    _.super$EventTarget$addEventListener = _.addEventListener$3;
    _ = W._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = B.SynthNode.prototype;
    _.super$SynthNode$release = _.release$0;
    _.super$SynthNode$destroy = _.destroy$0;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 8);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 8);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 8);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 2);
    _static(P, "async___nullErrorHandler$closure", 1, null, ["call$2", "call$1"], ["_nullErrorHandler", function(error) {
      return P._nullErrorHandler(error, null);
    }], 10, 0);
    _static_0(P, "async___nullDoneHandler$closure", "_nullDoneHandler", 2);
    _instance_1_i(P._BroadcastStreamController.prototype, "get$add", "add$1", 70);
    _instance(P._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 10, 0);
    _instance(P._Future.prototype, "get$_completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_completeError$2", "_completeError$1"], 10, 0);
    _instance_0_u(P._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 2);
    _static_1(P, "convert___defaultToEncodable$closure", "_defaultToEncodable", 3);
    _static(W, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 15, 0);
    _static(W, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 15, 0);
    _instance_0_i(W._StreamPool.prototype, "get$close", "close$0", 2);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 3);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 51);
    var _;
    _instance_1_u(_ = U.MIDIManager.prototype, "get$_midiConnection", "_midiConnection$1", 14);
    _instance_1_u(_, "get$_midiEvent", "_midiEvent$1", 14);
    _instance_1_u(S.Datastore.prototype, "get$_handleSocketMessage", "_handleSocketMessage$1", 7);
    _static_1(F, "main__draw$closure", "draw", 25);
    _static_1(F, "main__patchCreated$closure", "patchCreated", 11);
    _static_1(F, "main__patchDeleted$closure", "patchDeleted", 11);
    _static_1(F, "main__patchUpdated$closure", "patchUpdated", 11);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P.Iterable, H.ListIterator, P.Iterator, H.FixedLengthListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.Closure, H.TypeErrorDecoder, P.Error, H.ExceptionAndStackTrace, H._StackTrace, P.MapMixin, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H.Rti, H._FunctionParameters, P._TimerImpl, P._AsyncAwaitCompleter, P.Stream, P._BufferingStreamSubscription, P._BroadcastStreamController, P.Future, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.StreamSubscription, P.StreamTransformerBase, P._DelayedEvent, P._DelayedDone, P._PendingEvents, P._DoneStreamSubscription, P._StreamIterator, P.AsyncError, P._Zone, P._SetBase, P._LinkedHashSetCell, P._LinkedHashSetIterator, P._ListBase_Object_ListMixin, P.ListMixin, P._UnmodifiableMapMixin, P._ListQueueIterator, P.Codec, P._Base64Encoder, P._JsonStringifier, P._JsonPrettyPrintMixin, P.bool, P.DateTime, P.num, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.Function, P.List, P.Map, P.Null, P.StackTrace, P._StringStackTrace, P.String, P.StringBuffer, P.Symbol0, W.CssStyleDeclarationBase, W.EventStreamProvider, W._StreamPool, W._Html5NodeValidator, W.ImmutableListMixin, W.NodeValidatorBuilder, W._SimpleNodeValidator, W._SvgNodeValidator, W.FixedSizeListIterator, W._DOMWindowCrossFrame, W.NodeValidator, W._SameOriginUriPolicy, W._ValidatingTreeSanitizer, P._AcceptStructuredClone, P.JsObject, P._JSRandom, P.Point, P.Float32List, D.GrowableAudioBuffer, U.MIDIManager, U.MIDIEvent, U.SynthChain, E.ClockSubscriber, E.Metronome, E.PlayClock, K.Effect, X.SynthEvent, D.Key, B.SynthNode, F.Note, L.Synthesizer, S.Datastore, S.DataModel, S.DatastoreEvent, S.DatastoreException, K.Uuid, Z.DNodeConnector, K.TouchLayer, O.Matrix2D, B.DNode, R.DParam, V.DNodeSocket, K.TouchManager, K.TouchBinding, K.Touchable, K.Contact]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.Event, W.Blob, W.CanvasRenderingContext2D, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.DomException, W.DomRectReadOnly, W._HtmlCollection_Interceptor_ListMixin, W.ImageData, W.Location, W._NodeList_Interceptor_ListMixin, W._Storage_Interceptor_MapMixin, W.Touch, W._TouchList_Interceptor_ListMixin, W.__NamedNodeMap_Interceptor_ListMixin, P.KeyRange, P.AudioBuffer, P.AudioParam]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inheritMany(P.Iterable, [H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.TakeIterable, H.SkipIterable, H._ConstantMapKeyIterable]);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.LinkedHashMapKeyIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator]);
    _inheritMany(H.ListIterable, [H.MappedListIterable, P.ListQueue, P._JsonMapKeyIterable]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inherit(H.ConstantStringMap, H.ConstantMap);
    _inheritMany(H.Closure, [H.Primitives_functionNoSuchMethod_closure, H.unwrapException_saveStackTrace, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._SyncBroadcastStreamController__sendData_closure, P._SyncBroadcastStreamController__sendDone_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncComplete_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_length_closure, P.Stream_length_closure0, P.Stream_first_closure, P.Stream_first_closure0, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._cancelAndValue_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P._JsonStringifier_writeMap_closure, P._JsonPrettyPrintMixin_writeMap_closure, P._symbolMapToStringMap_closure, P.NoSuchMethodError_toString_closure, P.DateTime_parse_parseIntOrZero, P.DateTime_parse_parseMilliAndMicroseconds, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, W.Element_Element$html_closure, W.HttpRequest_request_closure, W.Storage_keys_closure, W.Window_animationFrame_closure, W._EventStreamSubscription_closure, W._StreamPool_add_closure, W.NodeValidatorBuilder_allowsElement_closure, W.NodeValidatorBuilder_allowsAttribute_closure, W._SimpleNodeValidator_closure, W._SimpleNodeValidator_closure0, W._TemplatingNodeValidator_closure, W._ValidatingTreeSanitizer_sanitizeTree_walk, P._AcceptStructuredClone_walk_closure, P.convertDartToNative_Dictionary_closure, P.FilteredElementList__iterable_closure, P.FilteredElementList__iterable_closure0, P.FilteredElementList_removeRange_closure, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, P.promiseToFuture_closure, P.promiseToFuture_closure0, P.AudioContext_decodeAudioData_closure, P.AudioContext_decodeAudioData_closure0, U.SynthChain_playNote_closure, U.SynthChain_pitchBend_closure, U.SynthChain_releaseNote_closure, U.SynthChain_destroy_closure, E.PlayClock_setTempo_closure, E.PlayClock_setTimeSignature_closure, X.SynthEvent_releaseNote_closure, B.DistNode_closure, B.DistNode__closure, L.Synthesizer_loadPatch_closure, L.Synthesizer__play_closure, L.Synthesizer_pitchBend_closure, L.Synthesizer_loadAudioBuffer_closure, L.Synthesizer_loadAudioBuffer_closure0, S.Datastore_closure, S.Datastore_closure0, V.SynthDesigner_closure, V.SynthDesigner_closure0, V.SynthDesigner_closure1, V.SynthDesigner_closure2, V.SynthDesigner_closure3, V.SynthDesigner_closure4, V.SynthDesigner_closure5, V.SynthDesigner_closure6, V.SynthDesigner_closure7, V.SynthDesigner__closure, V.SynthDesigner_closure8, V.SynthDesigner_load_closure, V.SynthDesigner_draw_closure, V.SynthDesigner_draw_closure0, V.SynthDesigner_draw_closure1, V.SynthDesigner_tick_closure, F.main_closure, F.main_closure0, F.main_closure1, F.main_closure2, F.main_closure3, F.main_closure4, F.main_closure5, F.main_closure6, F.loadPatches_closure, F.addUserPatch_closure, B.DNode_animate_closure, B.DADSRNode_closure, B.DADSRNode_closure0, B.DADSRNode_closure1, B.DADSRNode_closure2, B.DADSRNode_closure3, B.DLFONode_closure, B.DLFONode_closure0, B.DLFONode_closure1, B.DDistNode_closure, B.DDistNode_closure0, B.DOscNode_closure, B.DOscNode_closure0, B.DOscNode_closure1, B.DOscNode_closure2, B.DOscNode_closure3, B.DOscNode_closure4, B.DGainNode_closure, B.DDelayNode_closure, B.DDelayNode_closure0, B.DSampleNode_closure, B.DCompressorNode_closure, B.DCompressorNode_closure0, B.DCompressorNode_closure1, B.DCompressorNode_closure2, B.DCompressorNode_closure3, B.DFilterNode_closure, B.DFilterNode_closure0, B.DFilterNode_closure1, B.DFilterNode_closure2, B.DFilterNode_closure3, R.DParam_closure, R.DParam_closure0, R.DSelectParam_closure, K.TouchManager_registerEvents_closure, K.TouchManager_registerEvents_closure0, K.TouchManager_registerEvents_closure1, K.TouchManager_registerEvents_closure2, K.TouchManager_registerEvents_closure3, K.TouchManager_registerEvents_closure4]);
    _inheritMany(P.Error, [H.NullError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, P.AssertionError, H._Error, P.JsonUnsupportedObjectError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inherit(H._AssertionError, P.AssertionError);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.JsLinkedHashMap, P._JsonMap, W._AttributeMap]);
    _inherit(H.NativeTypedArray, H.NativeTypedData);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H.NativeFloat32List, H.NativeTypedArrayOfDouble);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inheritMany(P.Stream, [P._StreamImpl, W._EventStream, W._ElementListEventStreamImpl]);
    _inherit(P._ControllerStream, P._StreamImpl);
    _inherit(P._BroadcastStream, P._ControllerStream);
    _inherit(P._ControllerSubscription, P._BufferingStreamSubscription);
    _inherit(P._BroadcastSubscription, P._ControllerSubscription);
    _inheritMany(P._BroadcastStreamController, [P._SyncBroadcastStreamController, P._AsyncBroadcastStreamController]);
    _inheritMany(P._Completer, [P._AsyncCompleter, P._SyncCompleter]);
    _inherit(P._DelayedData, P._DelayedEvent);
    _inherit(P._StreamImplEvents, P._PendingEvents);
    _inherit(P._RootZone, P._Zone);
    _inherit(P._LinkedHashSet, P._SetBase);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.Codec, [P.Base64Codec, P.JsonCodec, N.HexCodec]);
    _inherit(P.Converter, P.StreamTransformerBase);
    _inheritMany(P.Converter, [P.Base64Encoder, P.JsonEncoder, P.JsonDecoder, R.HexEncoder]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inherit(P._JsonStringStringifier, P._JsonStringifier);
    _inherit(P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, P._JsonStringStringifier);
    _inherit(P._JsonStringStringifierPretty, P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin);
    _inheritMany(P.num, [P.double, P.int]);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inheritMany(W.EventTarget, [W.Node, W.HttpRequestEventTarget, W.MessagePort, W.WebSocket, W.Window, W.WorkerGlobalScope, P.AudioNode, P.BaseAudioContext]);
    _inheritMany(W.Node, [W.Element, W.CharacterData, W.Document, W._Attr]);
    _inheritMany(W.Element, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.BaseElement, W.BodyElement, W.ButtonElement, W.CanvasElement, W.DataElement, W.DivElement, W.EmbedElement, W.FieldSetElement, W.FormElement, W.ImageElement, W.InputElement, W.LIElement, W.LabelElement, W.LinkElement, W.MeterElement, W.OListElement, W.ObjectElement, W.OptionElement, W.OutputElement, W.ParamElement, W.ProgressElement, W.ScriptElement, W.SelectElement, W.SourceElement, W.StyleElement, W.TableElement, W.TableRowElement, W.TableSectionElement, W.TemplateElement, W.TextAreaElement]);
    _inheritMany(W.Event, [W.ExtendableEvent, W.BlobEvent, W.UIEvent, W.MessageEvent, W.MidiMessageEvent, W.ProgressEvent, P.AudioProcessingEvent]);
    _inheritMany(W.ExtendableEvent, [W.BackgroundFetchEvent, W.ExtendableMessageEvent, W.PushEvent]);
    _inheritMany(W.UIEvent, [W.CompositionEvent, W.KeyboardEvent, W.MouseEvent, W.TextEvent, W.TouchEvent]);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inheritMany(P.ListBase, [W._ChildrenElementList, W._FrozenElementList, W._ChildNodeListLazy, P.FilteredElementList]);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.HttpRequest, W.HttpRequestEventTarget);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._ElementAttributeMap, W._AttributeMap);
    _inherit(W._ElementEventStreamImpl, W._EventStream);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._TemplatingNodeValidator, W._SimpleNodeValidator);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inheritMany(P.SvgElement, [P.FEColorMatrixElement, P.FETurbulenceElement, P.ScriptElement0, P.StyleElement0]);
    _inheritMany(P.AudioNode, [P.AudioScheduledSourceNode, P.BiquadFilterNode, P.DelayNode, P.DynamicsCompressorNode, P.GainNode, P.ScriptProcessorNode]);
    _inheritMany(P.AudioScheduledSourceNode, [P.AudioBufferSourceNode, P.OscillatorNode]);
    _inheritMany(P.BaseAudioContext, [P.AudioContext, P.OfflineAudioContext]);
    _inheritMany(B.SynthNode, [B.ADSRNode, B.FMNode, B.LFONode, B.DistNode, B.SynthSampleNode, B.SynthDelayNode, B.SynthCompressorNode, B.FilterNode]);
    _inheritMany(S.DataModel, [L.Gadget, L.SynthPatch, K.Project, R.Recording, N.User]);
    _inherit(V.SynthDesigner, K.TouchLayer);
    _inheritMany(B.DNode, [B.DOutNode, B.DADSRNode, B.DLFONode, B.DDistNode, B.DOscNode, B.DGainNode, B.DDelayNode, B.DSampleNode, B.DCompressorNode, B.DFilterNode]);
    _inherit(R.DSelectParam, R.DParam);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, P._JsonPrettyPrintMixin);
    _mixin(W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleDeclarationBase);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._Storage_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._TouchList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["Null(@)", "Null()", "~()", "@(@)", "Null(MouseEvent)", "Null(@,@)", "Null(Event)", "~(@)", "~(~())", "~(KeyboardEvent)", "~(Object[StackTrace])", "~(DatastoreEvent)", "~(DNode)", "~(MouseEvent)", "~(String)", "bool(Element,String,String,_Html5NodeValidator)", "Null(Symbol0,@)", "int(String)", "String(int)", "bool(Node)", "bool(String)", "bool(NodeValidator)", "Null(SynthNode)", "~(SynthNode)", "~(ClockSubscriber)", "~(num)", "Null(AudioBuffer)", "~(Node,Node)", "@(@,@)", "Element(Node)", "JsFunction(@)", "JsArray<@>(@)", "JsObject(@)", "Null(~())", "Null(DomException)", "~(String,String)", "Null(num)", "@(Event)", "Null(String,@)", "Null(AudioProcessingEvent)", "double(@)", "~(SynthEvent)", "Future<Null>(ProgressEvent)", "~(ProgressEvent)", "Null(@,StackTrace)", "DOscNode()", "Null(int,@)", "DDelayNode()", "DGainNode()", "DADSRNode()", "DCompressorNode()", "Object(@)", "DDistNode()", "Null(String,Function)", "@(String)", "bool(DNode)", "@(@,String)", "Null(ProgressEvent)", "Null(DatastoreEvent)", "DLFONode()", "Null(MIDIEvent)", "Future<Null>(MouseEvent)", "bool(MouseEvent)", "Null(DNodeConnector)", "Null(@[StackTrace])", "~(Event)", "~(TouchEvent)", "_Future<@>(@)", "String(String)", "DFilterNode()", "~(Object)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","AnimationEvent":"Event","AnalyserNode":"AudioNode","ConstantSourceNode":"AudioScheduledSourceNode","AElement":"SvgElement","GraphicsElement":"SvgElement","_ResourceProgressEvent":"ProgressEvent","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","HtmlDocument":"Document","PointerEvent":"MouseEvent","AbortPaymentEvent":"ExtendableEvent","DedicatedWorkerGlobalScope":"WorkerGlobalScope","CDataSection":"CharacterData","Text":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","FocusEvent":"UIEvent","File":"Blob","BackgroundFetchClickEvent":"BackgroundFetchEvent","NativeFloat64List":"NativeTypedArrayOfDouble","NativeByteData":"NativeTypedData","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JavaScriptObject":{"Function":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"int":[],"double":[],"num":[]},"JSDouble":{"double":[],"num":[]},"JSString":{"String":[],"Pattern":[]},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"JSInvocationMirror":{"Invocation":[]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"LinkedHashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"Pattern":[]},"NativeByteBuffer":{"ByteBuffer":[]},"NativeTypedData":{"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["@"],"TypedData":[]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"EfficientLengthIterable":["double"],"FixedLengthListMixin":["double"],"TypedData":[],"Iterable":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeTypedArrayOfInt":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"]},"NativeFloat32List":{"Float32List":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"EfficientLengthIterable":["double"],"FixedLengthListMixin":["double"],"TypedData":[],"Iterable":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeInt16List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt32List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt8List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint16List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8ClampedList":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_TimerImpl":{"Timer":[]},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"]},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"_EventDispatch":["1"],"StreamSubscription":["1"]},"_BroadcastStreamController":{"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_SyncCompleter":{"_Completer":["1"]},"_Future":{"Future":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"_EventDispatch":["1"],"StreamSubscription":["1"]},"_BufferingStreamSubscription":{"_EventDispatch":["1"],"StreamSubscription":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_StreamImplEvents":{"_PendingEvents":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"AsyncError":{"Error":[]},"_Zone":{"Zone":[]},"_RootZone":{"Zone":[]},"_LinkedHashSet":{"_SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSetIterator":{"Iterator":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"Queue":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"_SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"Base64Encoder":{"Converter":["List<int>","String"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object","String"],"Codec.S":"Object"},"JsonEncoder":{"Converter":["Object","String"]},"JsonDecoder":{"Converter":["String","Object"]},"double":{"num":[]},"AssertionError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"int":{"num":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_StringStackTrace":{"StackTrace":[]},"String":{"Pattern":[]},"StringBuffer":{"StringSink":[]},"HtmlElement":{"Element":[],"Node":[],"EventTarget":[]},"AnchorElement":{"Element":[],"Node":[],"EventTarget":[]},"AreaElement":{"Element":[],"Node":[],"EventTarget":[]},"BackgroundFetchEvent":{"Event":[]},"BaseElement":{"Element":[],"Node":[],"EventTarget":[]},"BlobEvent":{"Event":[]},"BodyElement":{"Element":[],"Node":[],"EventTarget":[]},"ButtonElement":{"Element":[],"Node":[],"EventTarget":[]},"CanvasElement":{"Element":[],"Node":[],"EventTarget":[]},"CharacterData":{"Node":[],"EventTarget":[]},"CompositionEvent":{"Event":[]},"DataElement":{"Element":[],"Node":[],"EventTarget":[]},"DivElement":{"Element":[],"Node":[],"EventTarget":[]},"Document":{"Node":[],"EventTarget":[]},"DomRectReadOnly":{"Rectangle":["num"]},"_ChildrenElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"_FrozenElementList":{"ElementList":["1"],"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"Element":{"Node":[],"EventTarget":[]},"EmbedElement":{"Element":[],"Node":[],"EventTarget":[]},"ExtendableEvent":{"Event":[]},"ExtendableMessageEvent":{"Event":[]},"FieldSetElement":{"Element":[],"Node":[],"EventTarget":[]},"FormElement":{"Element":[],"Node":[],"EventTarget":[]},"HtmlCollection":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"HttpRequest":{"EventTarget":[]},"HttpRequestEventTarget":{"EventTarget":[]},"ImageElement":{"Element":[],"Node":[],"EventTarget":[]},"InputElement":{"Element":[],"Node":[],"EventTarget":[]},"KeyboardEvent":{"Event":[]},"LIElement":{"Element":[],"Node":[],"EventTarget":[]},"LabelElement":{"Element":[],"Node":[],"EventTarget":[]},"LinkElement":{"Element":[],"Node":[],"EventTarget":[]},"MessageEvent":{"Event":[]},"MessagePort":{"EventTarget":[]},"MeterElement":{"Element":[],"Node":[],"EventTarget":[]},"MidiMessageEvent":{"Event":[]},"MouseEvent":{"Event":[]},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"Node":{"EventTarget":[]},"NodeList":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"OListElement":{"Element":[],"Node":[],"EventTarget":[]},"ObjectElement":{"Element":[],"Node":[],"EventTarget":[]},"OptionElement":{"Element":[],"Node":[],"EventTarget":[]},"OutputElement":{"Element":[],"Node":[],"EventTarget":[]},"ParamElement":{"Element":[],"Node":[],"EventTarget":[]},"ProgressElement":{"Element":[],"Node":[],"EventTarget":[]},"ProgressEvent":{"Event":[]},"PushEvent":{"Event":[]},"ScriptElement":{"Element":[],"Node":[],"EventTarget":[]},"SelectElement":{"Element":[],"Node":[],"EventTarget":[]},"SourceElement":{"Element":[],"Node":[],"EventTarget":[]},"Storage":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"StyleElement":{"Element":[],"Node":[],"EventTarget":[]},"TableElement":{"Element":[],"Node":[],"EventTarget":[]},"TableRowElement":{"Element":[],"Node":[],"EventTarget":[]},"TableSectionElement":{"Element":[],"Node":[],"EventTarget":[]},"TemplateElement":{"Element":[],"Node":[],"EventTarget":[]},"TextAreaElement":{"Element":[],"Node":[],"EventTarget":[]},"TextEvent":{"Event":[]},"TouchEvent":{"Event":[]},"TouchList":{"ImmutableListMixin":["Touch"],"ListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"EfficientLengthIterable":["Touch"],"Iterable":["Touch"],"ImmutableListMixin.E":"Touch","ListMixin.E":"Touch"},"UIEvent":{"Event":[]},"WebSocket":{"EventTarget":[]},"Window":{"WindowBase":[],"EventTarget":[]},"WorkerGlobalScope":{"EventTarget":[]},"_Attr":{"Node":[],"EventTarget":[]},"_DomRect":{"Rectangle":["num"]},"_NamedNodeMap":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_ElementListEventStreamImpl":{"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"_Html5NodeValidator":{"NodeValidator":[]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"FixedSizeListIterator":{"Iterator":["1"]},"_DOMWindowCrossFrame":{"WindowBase":[],"EventTarget":[]},"_SameOriginUriPolicy":{"UriPolicy":[]},"_ValidatingTreeSanitizer":{"NodeTreeSanitizer":[]},"FilteredElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"JsFunction":{"JsObject":[]},"JsArray":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JsObject":[],"Iterable":["1"],"ListMixin.E":"1"},"_JSRandom":{"Random":[]},"FEColorMatrixElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"FETurbulenceElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"ScriptElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"StyleElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"SvgElement":{"Element":[],"Node":[],"EventTarget":[]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"AudioBufferSourceNode":{"AudioNode":[],"EventTarget":[]},"AudioContext":{"BaseAudioContext":[],"EventTarget":[]},"AudioNode":{"EventTarget":[]},"AudioProcessingEvent":{"Event":[]},"AudioScheduledSourceNode":{"AudioNode":[],"EventTarget":[]},"BaseAudioContext":{"EventTarget":[]},"BiquadFilterNode":{"AudioNode":[],"EventTarget":[]},"DelayNode":{"AudioNode":[],"EventTarget":[]},"DynamicsCompressorNode":{"AudioNode":[],"EventTarget":[]},"GainNode":{"AudioNode":[],"EventTarget":[]},"OfflineAudioContext":{"BaseAudioContext":[],"EventTarget":[]},"OscillatorNode":{"AudioNode":[],"EventTarget":[]},"ScriptProcessorNode":{"AudioNode":[],"EventTarget":[]},"HexCodec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"HexEncoder":{"Converter":["List<int>","String"]},"ADSRNode":{"SynthNode":[]},"FMNode":{"SynthNode":[]},"LFONode":{"SynthNode":[]},"DistNode":{"SynthNode":[]},"SynthSampleNode":{"SynthNode":[]},"SynthDelayNode":{"SynthNode":[]},"SynthCompressorNode":{"SynthNode":[]},"FilterNode":{"SynthNode":[]},"DatastoreException":{"Exception":[]},"Gadget":{"DataModel":[]},"SynthPatch":{"DataModel":[]},"Project":{"DataModel":[]},"Recording":{"DataModel":[]},"User":{"DataModel":[]},"DNodeConnector":{"Touchable":[]},"SynthDesigner":{"TouchLayer":[]},"DNode":{"Touchable":[]},"DOutNode":{"DNode":[],"Touchable":[]},"DADSRNode":{"DNode":[],"Touchable":[]},"DLFONode":{"DNode":[],"Touchable":[]},"DDistNode":{"DNode":[],"Touchable":[]},"DOscNode":{"DNode":[],"Touchable":[]},"DGainNode":{"DNode":[],"Touchable":[]},"DDelayNode":{"DNode":[],"Touchable":[]},"DSampleNode":{"DNode":[],"Touchable":[]},"DCompressorNode":{"DNode":[],"Touchable":[]},"DFilterNode":{"DNode":[],"Touchable":[]},"DSelectParam":{"DParam":[]}}'));
  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"StreamTransformerBase":2,"ListBase":1,"MapBase":2,"_ListBase_Object_ListMixin":1,"_JsArray_JsObject_ListMixin":1}'));
  var type$ = (function rtii() {
    var findType = H.findType;
    return {
      $env_1_1_dynamic: findType("@<@>"),
      AsyncError: findType("AsyncError"),
      AudioBuffer: findType("AudioBuffer"),
      AudioProcessingEvent: findType("AudioProcessingEvent"),
      Base64Codec: findType("Base64Codec"),
      BaseElement: findType("BaseElement"),
      Blob: findType("Blob"),
      BodyElement: findType("BodyElement"),
      ByteBuffer: findType("ByteBuffer"),
      CanvasElement: findType("CanvasElement"),
      CanvasRenderingContext2D: findType("CanvasRenderingContext2D"),
      ClockSubscriber: findType("ClockSubscriber"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ConstantStringMap_String_Object: findType("ConstantStringMap<String,Object>"),
      DNode: findType("DNode"),
      DNodeConnector: findType("DNodeConnector"),
      DataModel: findType("DataModel"),
      DatastoreEvent: findType("DatastoreEvent"),
      DivElement: findType("DivElement"),
      Document: findType("Document"),
      DomException: findType("DomException"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      ElementList_Element: findType("ElementList<Element>"),
      Error: findType("Error"),
      Event: findType("Event"),
      EventTarget: findType("EventTarget"),
      Exception: findType("Exception"),
      Function: findType("Function"),
      Future_Null: findType("Future<Null>"),
      Future_dynamic: findType("Future<@>"),
      HexCodec: findType("HexCodec"),
      HttpRequest: findType("HttpRequest"),
      ImageData: findType("ImageData"),
      InputElement: findType("InputElement"),
      Invocation: findType("Invocation"),
      Iterable_Element: findType("Iterable<Element>"),
      Iterable_Node: findType("Iterable<Node>"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_DNodeConnector: findType("JSArray<DNodeConnector>"),
      JSArray_DNodeSocket: findType("JSArray<DNodeSocket>"),
      JSArray_DParam: findType("JSArray<DParam>"),
      JSArray_Effect: findType("JSArray<Effect>"),
      JSArray_Float32List: findType("JSArray<Float32List>"),
      JSArray_List_Float32List: findType("JSArray<List<Float32List>>"),
      JSArray_List_num: findType("JSArray<List<num>>"),
      JSArray_Map_String_Object: findType("JSArray<Map<String,Object>>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_SynthChain: findType("JSArray<SynthChain>"),
      JSArray_SynthEvent: findType("JSArray<SynthEvent>"),
      JSArray_SynthPatch: findType("JSArray<SynthPatch>"),
      JSArray_TouchLayer: findType("JSArray<TouchLayer>"),
      JSArray_Touchable: findType("JSArray<Touchable>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsArray_dynamic: findType("JsArray<@>"),
      JsLinkedHashMap_String_Function: findType("JsLinkedHashMap<String,Function>"),
      JsLinkedHashMap_String_dynamic: findType("JsLinkedHashMap<String,@>"),
      JsLinkedHashMap_String_int: findType("JsLinkedHashMap<String,int>"),
      JsLinkedHashMap_String_num: findType("JsLinkedHashMap<String,num>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      JsLinkedHashMap_dynamic_dynamic: findType("JsLinkedHashMap<@,@>"),
      JsLinkedHashMap_int_DNode: findType("JsLinkedHashMap<int,DNode>"),
      JsLinkedHashMap_int_SynthNode: findType("JsLinkedHashMap<int,SynthNode>"),
      JsLinkedHashMap_int_TouchBinding: findType("JsLinkedHashMap<int,TouchBinding>"),
      JsLinkedHashMap_int_Touchable: findType("JsLinkedHashMap<int,Touchable>"),
      KeyRange: findType("KeyRange"),
      KeyboardEvent: findType("KeyboardEvent"),
      ListQueue_List_num: findType("ListQueue<List<num>>"),
      List_String: findType("List<String>"),
      List_SynthPatch: findType("List<SynthPatch>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      MIDIEvent: findType("MIDIEvent"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_String_int: findType("Map<String,int>"),
      Map_Symbol_dynamic: findType("Map<Symbol0,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MessageEvent: findType("MessageEvent"),
      Metronome: findType("Metronome"),
      MouseEvent: findType("MouseEvent"),
      NativeUint8List: findType("NativeUint8List"),
      Node: findType("Node"),
      NodeValidator: findType("NodeValidator"),
      Null: findType("Null"),
      Object: findType("Object"),
      Point_num: findType("Point<num>"),
      ProgressEvent: findType("ProgressEvent"),
      Rectangle_num: findType("Rectangle<num>"),
      Rti: findType("Rti"),
      ScriptElement: findType("ScriptElement0"),
      SelectElement: findType("SelectElement"),
      StackTrace: findType("StackTrace"),
      StreamController_MIDIEvent: findType("StreamController<MIDIEvent>"),
      String: findType("String"),
      String_Function_String: findType("String(String)"),
      SvgElement: findType("SvgElement"),
      Symbol: findType("Symbol0"),
      SynthEvent: findType("SynthEvent"),
      SynthNode: findType("SynthNode"),
      SynthPatch: findType("SynthPatch"),
      TemplateElement: findType("TemplateElement"),
      Touch: findType("Touch"),
      TouchEvent: findType("TouchEvent"),
      TypedData: findType("TypedData"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Window: findType("Window"),
      WindowBase: findType("WindowBase"),
      WorkerGlobalScope: findType("WorkerGlobalScope"),
      _AsyncCompleter_AudioBuffer: findType("_AsyncCompleter<AudioBuffer>"),
      _AsyncCompleter_HttpRequest: findType("_AsyncCompleter<HttpRequest>"),
      _Attr: findType("_Attr"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _DelayedEvent_dynamic: findType("_DelayedEvent<@>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _ElementListEventStreamImpl_MouseEvent: findType("_ElementListEventStreamImpl<MouseEvent>"),
      _EventStream_MouseEvent: findType("_EventStream<MouseEvent>"),
      _FrozenElementList_Element: findType("_FrozenElementList<Element>"),
      _FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>"),
      _Future_AudioBuffer: findType("_Future<AudioBuffer>"),
      _Future_HttpRequest: findType("_Future<HttpRequest>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_num: findType("_Future<num>"),
      _Html5NodeValidator: findType("_Html5NodeValidator"),
      _LinkedHashSetCell: findType("_LinkedHashSetCell"),
      _SyncCompleter_num: findType("_SyncCompleter<num>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Event: findType("@(Event)"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_Object: findType("@(Object,Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_dynamic: findType("@(@)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      int: findType("int"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_AudioBuffer: findType("~(AudioBuffer)"),
      void_Function_AudioProcessingEvent: findType("~(AudioProcessingEvent)"),
      void_Function_DomException: findType("~(DomException)"),
      void_Function_Event: findType("~(Event)"),
      void_Function_KeyboardEvent: findType("~(KeyboardEvent)"),
      void_Function_MessageEvent: findType("~(MessageEvent)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_ProgressEvent: findType("~(ProgressEvent)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_TouchEvent: findType("~(TouchEvent)"),
      void_Function_num: findType("~(num)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.AnchorElement_methods = W.AnchorElement.prototype;
    C.AudioBuffer_methods = P.AudioBuffer.prototype;
    C.AudioContext_methods = P.AudioContext.prototype;
    C.BodyElement_methods = W.BodyElement.prototype;
    C.ButtonElement_methods = W.ButtonElement.prototype;
    C.CanvasElement_methods = W.CanvasElement.prototype;
    C.CanvasRenderingContext2D_methods = W.CanvasRenderingContext2D.prototype;
    C.DivElement_methods = W.DivElement.prototype;
    C.HttpRequest_methods = W.HttpRequest.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSBool_methods = J.JSBool.prototype;
    C.JSDouble_methods = J.JSDouble.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.LIElement_methods = W.LIElement.prototype;
    C.LabelElement_methods = W.LabelElement.prototype;
    C.NativeFloat32List_methods = H.NativeFloat32List.prototype;
    C.NodeList_methods = W.NodeList.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.Storage_methods = W.Storage.prototype;
    C.TableElement_methods = W.TableElement.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.Window_methods = W.Window.prototype;
    C.C_Base64Encoder = new P.Base64Encoder();
    C.C_Base64Codec = new P.Base64Codec();
    C.C_HexCodec = new N.HexCodec();
    C.C_HexEncoder = new R.HexEncoder();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_JsonCodec = new P.JsonCodec();
    C.C_OutOfMemoryError = new P.OutOfMemoryError();
    C.C__DelayedDone = new P._DelayedDone();
    C.C__JSRandom = new P._JSRandom();
    C.C__RootZone = new P._RootZone();
    C.C__StringStackTrace = new P._StringStackTrace();
    C.Duration_0 = new P.Duration(0);
    C.JsonDecoder_null = new P.JsonDecoder(null);
    C.JsonEncoder_null_null = new P.JsonEncoder(null, null);
    C.List_0 = H.setRuntimeTypeInfo(makeConstList(["C", "C\u266f", "D", "D\u266f", "E", "F", "F\u266f", "G", "G\u266f", "A", "A\u266f", "B"]), type$.JSArray_String);
    C.List_2Zi = H.setRuntimeTypeInfo(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    C.List_ego = H.setRuntimeTypeInfo(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_String);
    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_dynamic);
    C.List_wSV = H.setRuntimeTypeInfo(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    C.List_yrN = H.setRuntimeTypeInfo(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    C.List_nodes_routing = H.setRuntimeTypeInfo(makeConstList(["nodes", "routing"]), type$.JSArray_String);
    C.List_type_id_cx_cy = H.setRuntimeTypeInfo(makeConstList(["type", "id", "cx", "cy"]), type$.JSArray_String);
    C.Map_J6OFu = new H.ConstantStringMap(4, {type: "out", id: 0, cx: 517, cy: 189}, C.List_type_id_cx_cy, type$.ConstantStringMap_String_Object);
    C.List_dT7 = H.setRuntimeTypeInfo(makeConstList(["type", "samples", "id", "level", "cx", "cy"]), type$.JSArray_String);
    C.List_sample_step = H.setRuntimeTypeInfo(makeConstList(["sample", "step"]), type$.JSArray_String);
    C.Map_wTs4B = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/21pianoA0", step: 21}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/24pianoC1", step: 24}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B1 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/28pianoE1", step: 28}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/32pianoAb1", step: 32}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B2 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/36pianoC2", step: 36}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B3 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/40pianoE2", step: 40}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/44pianoAb2", step: 44}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B4 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/48pianoC3", step: 48}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B5 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/52pianoE3", step: 52}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn1 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/56pianoAb3", step: 56}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B6 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/60pianoC4", step: 60}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B7 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/64pianoE4", step: 64}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn2 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/68pianoAb4", step: 68}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B8 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/72pianoC5", step: 72}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B9 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/76pianoE5", step: 76}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn3 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/80pianoAb5", step: 80}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B10 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/84pianoC6", step: 84}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B11 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/88pianoE6", step: 88}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn4 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/92pianoAb6", step: 92}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B12 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/96pianoC7", step: 96}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTIEE = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/100pianoE7", step: 100}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT799 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/104pianoAb7", step: 104}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTIEE0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/108pianoC8", step: 108}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.List_qY0 = H.setRuntimeTypeInfo(makeConstList([C.Map_wTs4B, C.Map_wTs4B0, C.Map_wTs4B1, C.Map_wT0zn, C.Map_wTs4B2, C.Map_wTs4B3, C.Map_wT0zn0, C.Map_wTs4B4, C.Map_wTs4B5, C.Map_wT0zn1, C.Map_wTs4B6, C.Map_wTs4B7, C.Map_wT0zn2, C.Map_wTs4B8, C.Map_wTs4B9, C.Map_wT0zn3, C.Map_wTs4B10, C.Map_wTs4B11, C.Map_wT0zn4, C.Map_wTs4B12, C.Map_wTIEE, C.Map_wT799, C.Map_wTIEE0]), type$.JSArray_Map_String_Object);
    C.Map_dTQcj = new H.ConstantStringMap(6, {type: "sample", samples: C.List_qY0, id: 1, level: 1, cx: 100, cy: 100}, C.List_dT7, type$.ConstantStringMap_String_Object);
    C.List_mxd = H.setRuntimeTypeInfo(makeConstList(["type", "A", "D", "S", "R", "level", "cx", "cy", "id"]), type$.JSArray_String);
    C.Map_mxiDZ = new H.ConstantStringMap(9, {type: "adsr", A: 0.01, D: 0.1, S: 1, R: 0.3, level: 1, cx: 300, cy: 188, id: 2}, C.List_mxd, type$.ConstantStringMap_String_Object);
    C.List_MEg = H.setRuntimeTypeInfo(makeConstList([C.Map_J6OFu, C.Map_dTQcj, C.Map_mxiDZ]), type$.JSArray_Map_String_Object);
    C.List_source_dest_type = H.setRuntimeTypeInfo(makeConstList(["source", "dest", "type"]), type$.JSArray_String);
    C.Map_MtKs3 = new H.ConstantStringMap(3, {source: 1, dest: 2, type: "in"}, C.List_source_dest_type, type$.ConstantStringMap_String_Object);
    C.Map_MtM2I = new H.ConstantStringMap(3, {source: 2, dest: 0, type: "out"}, C.List_source_dest_type, type$.ConstantStringMap_String_Object);
    C.List_Map_MtKs3_Map_MtM2I = H.setRuntimeTypeInfo(makeConstList([C.Map_MtKs3, C.Map_MtM2I]), type$.JSArray_Map_String_Object);
    C.Map_b8Sgx = new H.ConstantStringMap(2, {nodes: C.List_MEg, routing: C.List_Map_MtKs3_Map_MtM2I}, C.List_nodes_routing, H.findType("ConstantStringMap<String,List<Map<String,Object>>>"));
    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Symbol0>"));
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty1, H.findType("ConstantStringMap<Symbol0,@>"));
    C.Symbol_call = new H.Symbol("call");
  })();
  (function staticFields() {
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._toStringVisiting = [];
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $.analyzer = null;
    $.analyzerData = null;
    $.synth = null;
    $.designer = null;
    $.context = null;
    $.datastore = null;
    $.currentPatch = null;
    $.octave = 36;
    $.DNode_NODE_ID = 0;
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy;
    _lazy($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazy($, "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
      return H.getIsolateAffinityTag("_$dart_js");
    });
    _lazy($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazy($, "Future__nullFuture", "$get$Future__nullFuture", function() {
      var t1 = new P._Future(C.C__RootZone, H.findType("_Future<Null>"));
      t1._setValue$1(null);
      return t1;
    });
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", function() {
      return new Error().stack != void 0;
    });
    _lazy($, "DateTime__parseFormat", "$get$DateTime__parseFormat", function() {
      return P.RegExp_RegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d+))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$");
    });
    _lazy($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
      return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String);
    });
    _lazy($, "_context", "$get$_context", function() {
      return H.findType("JsObject")._as(P._wrapToDart(self));
    });
    _lazy($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazy($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazy($, "MIDIManager__singleton", "$get$MIDIManager__singleton", function() {
      var t1 = type$.int,
        t2 = type$.Map_dynamic_dynamic;
      t2 = new U.MIDIManager(H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t2), H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t2));
      t1 = type$.MIDIEvent;
      t2.set$_stateStream(P.StreamController_StreamController$broadcast(null, false, t1));
      t2.set$_messageStream(P.StreamController_StreamController$broadcast(null, false, t1));
      t1 = $.$get$_context();
      t1.$indexSet(0, "midiEvent", t2.get$_midiEvent());
      t1.$indexSet(0, "midiConnection", t2.get$_midiConnection());
      t1.callMethod$2("midiInit", []);
      return t2;
    });
    _lazy($, "Synthesizer_sounds", "$get$Synthesizer_sounds", function() {
      var t1 = type$.dynamic;
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t1);
    });
    _lazy($, "notes", "$get$notes", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.int, type$.SynthEvent);
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({CanvasGradient: J.Interceptor, DOMError: J.Interceptor, DOMImplementation: J.Interceptor, MediaError: J.Interceptor, Navigator: J.Interceptor, NavigatorConcurrentHardware: J.Interceptor, NavigatorUserMediaError: J.Interceptor, OverconstrainedError: J.Interceptor, PositionError: J.Interceptor, PushMessageData: J.Interceptor, Range: J.Interceptor, SVGAnimatedEnumeration: J.Interceptor, WebGLRenderingContext: J.Interceptor, WebGL2RenderingContext: J.Interceptor, SQLError: J.Interceptor, ArrayBuffer: H.NativeByteBuffer, DataView: H.NativeTypedData, ArrayBufferView: H.NativeTypedData, Float64Array: H.NativeTypedArrayOfDouble, Float32Array: H.NativeFloat32List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLAudioElement: W.HtmlElement, HTMLBRElement: W.HtmlElement, HTMLContentElement: W.HtmlElement, HTMLDListElement: W.HtmlElement, HTMLDataListElement: W.HtmlElement, HTMLDetailsElement: W.HtmlElement, HTMLDialogElement: W.HtmlElement, HTMLHRElement: W.HtmlElement, HTMLHeadElement: W.HtmlElement, HTMLHeadingElement: W.HtmlElement, HTMLHtmlElement: W.HtmlElement, HTMLIFrameElement: W.HtmlElement, HTMLLegendElement: W.HtmlElement, HTMLMapElement: W.HtmlElement, HTMLMediaElement: W.HtmlElement, HTMLMenuElement: W.HtmlElement, HTMLMetaElement: W.HtmlElement, HTMLModElement: W.HtmlElement, HTMLOptGroupElement: W.HtmlElement, HTMLParagraphElement: W.HtmlElement, HTMLPictureElement: W.HtmlElement, HTMLPreElement: W.HtmlElement, HTMLQuoteElement: W.HtmlElement, HTMLShadowElement: W.HtmlElement, HTMLSlotElement: W.HtmlElement, HTMLSpanElement: W.HtmlElement, HTMLTableCaptionElement: W.HtmlElement, HTMLTableCellElement: W.HtmlElement, HTMLTableDataCellElement: W.HtmlElement, HTMLTableHeaderCellElement: W.HtmlElement, HTMLTableColElement: W.HtmlElement, HTMLTimeElement: W.HtmlElement, HTMLTitleElement: W.HtmlElement, HTMLTrackElement: W.HtmlElement, HTMLUListElement: W.HtmlElement, HTMLUnknownElement: W.HtmlElement, HTMLVideoElement: W.HtmlElement, HTMLDirectoryElement: W.HtmlElement, HTMLFontElement: W.HtmlElement, HTMLFrameElement: W.HtmlElement, HTMLFrameSetElement: W.HtmlElement, HTMLMarqueeElement: W.HtmlElement, HTMLElement: W.HtmlElement, HTMLAnchorElement: W.AnchorElement, HTMLAreaElement: W.AreaElement, BackgroundFetchClickEvent: W.BackgroundFetchEvent, BackgroundFetchEvent: W.BackgroundFetchEvent, BackgroundFetchFailEvent: W.BackgroundFetchEvent, BackgroundFetchedEvent: W.BackgroundFetchEvent, HTMLBaseElement: W.BaseElement, Blob: W.Blob, File: W.Blob, BlobEvent: W.BlobEvent, HTMLBodyElement: W.BodyElement, HTMLButtonElement: W.ButtonElement, HTMLCanvasElement: W.CanvasElement, CanvasRenderingContext2D: W.CanvasRenderingContext2D, CDATASection: W.CharacterData, CharacterData: W.CharacterData, Comment: W.CharacterData, ProcessingInstruction: W.CharacterData, Text: W.CharacterData, CompositionEvent: W.CompositionEvent, CSSStyleDeclaration: W.CssStyleDeclaration, MSStyleCSSProperties: W.CssStyleDeclaration, CSS2Properties: W.CssStyleDeclaration, HTMLDataElement: W.DataElement, HTMLDivElement: W.DivElement, Document: W.Document, HTMLDocument: W.Document, XMLDocument: W.Document, DOMException: W.DomException, DOMRectReadOnly: W.DomRectReadOnly, Element: W.Element, HTMLEmbedElement: W.EmbedElement, AnimationEvent: W.Event, AnimationPlaybackEvent: W.Event, ApplicationCacheErrorEvent: W.Event, BeforeInstallPromptEvent: W.Event, BeforeUnloadEvent: W.Event, ClipboardEvent: W.Event, CloseEvent: W.Event, CustomEvent: W.Event, DeviceMotionEvent: W.Event, DeviceOrientationEvent: W.Event, ErrorEvent: W.Event, FontFaceSetLoadEvent: W.Event, GamepadEvent: W.Event, HashChangeEvent: W.Event, MediaEncryptedEvent: W.Event, MediaKeyMessageEvent: W.Event, MediaQueryListEvent: W.Event, MediaStreamEvent: W.Event, MediaStreamTrackEvent: W.Event, MIDIConnectionEvent: W.Event, MutationEvent: W.Event, PageTransitionEvent: W.Event, PaymentRequestUpdateEvent: W.Event, PopStateEvent: W.Event, PresentationConnectionAvailableEvent: W.Event, PresentationConnectionCloseEvent: W.Event, PromiseRejectionEvent: W.Event, RTCDataChannelEvent: W.Event, RTCDTMFToneChangeEvent: W.Event, RTCPeerConnectionIceEvent: W.Event, RTCTrackEvent: W.Event, SecurityPolicyViolationEvent: W.Event, SensorErrorEvent: W.Event, SpeechRecognitionError: W.Event, SpeechRecognitionEvent: W.Event, SpeechSynthesisEvent: W.Event, StorageEvent: W.Event, TrackEvent: W.Event, TransitionEvent: W.Event, WebKitTransitionEvent: W.Event, VRDeviceEvent: W.Event, VRDisplayEvent: W.Event, VRSessionEvent: W.Event, MojoInterfaceRequestEvent: W.Event, USBConnectionEvent: W.Event, IDBVersionChangeEvent: W.Event, OfflineAudioCompletionEvent: W.Event, WebGLContextEvent: W.Event, Event: W.Event, InputEvent: W.Event, SubmitEvent: W.Event, EventTarget: W.EventTarget, AbortPaymentEvent: W.ExtendableEvent, CanMakePaymentEvent: W.ExtendableEvent, FetchEvent: W.ExtendableEvent, ForeignFetchEvent: W.ExtendableEvent, InstallEvent: W.ExtendableEvent, NotificationEvent: W.ExtendableEvent, PaymentRequestEvent: W.ExtendableEvent, SyncEvent: W.ExtendableEvent, ExtendableEvent: W.ExtendableEvent, ExtendableMessageEvent: W.ExtendableMessageEvent, HTMLFieldSetElement: W.FieldSetElement, HTMLFormElement: W.FormElement, HTMLCollection: W.HtmlCollection, HTMLFormControlsCollection: W.HtmlCollection, HTMLOptionsCollection: W.HtmlCollection, XMLHttpRequest: W.HttpRequest, XMLHttpRequestEventTarget: W.HttpRequestEventTarget, ImageData: W.ImageData, HTMLImageElement: W.ImageElement, HTMLInputElement: W.InputElement, KeyboardEvent: W.KeyboardEvent, HTMLLIElement: W.LIElement, HTMLLabelElement: W.LabelElement, HTMLLinkElement: W.LinkElement, Location: W.Location, MessageEvent: W.MessageEvent, MessagePort: W.MessagePort, HTMLMeterElement: W.MeterElement, MIDIMessageEvent: W.MidiMessageEvent, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, PointerEvent: W.MouseEvent, WheelEvent: W.MouseEvent, DocumentFragment: W.Node, ShadowRoot: W.Node, DocumentType: W.Node, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, HTMLOListElement: W.OListElement, HTMLObjectElement: W.ObjectElement, HTMLOptionElement: W.OptionElement, HTMLOutputElement: W.OutputElement, HTMLParamElement: W.ParamElement, HTMLProgressElement: W.ProgressElement, ProgressEvent: W.ProgressEvent, ResourceProgressEvent: W.ProgressEvent, PushEvent: W.PushEvent, HTMLScriptElement: W.ScriptElement, HTMLSelectElement: W.SelectElement, HTMLSourceElement: W.SourceElement, Storage: W.Storage, HTMLStyleElement: W.StyleElement, HTMLTableElement: W.TableElement, HTMLTableRowElement: W.TableRowElement, HTMLTableSectionElement: W.TableSectionElement, HTMLTemplateElement: W.TemplateElement, HTMLTextAreaElement: W.TextAreaElement, TextEvent: W.TextEvent, Touch: W.Touch, TouchEvent: W.TouchEvent, TouchList: W.TouchList, FocusEvent: W.UIEvent, UIEvent: W.UIEvent, WebSocket: W.WebSocket, Window: W.Window, DOMWindow: W.Window, DedicatedWorkerGlobalScope: W.WorkerGlobalScope, ServiceWorkerGlobalScope: W.WorkerGlobalScope, SharedWorkerGlobalScope: W.WorkerGlobalScope, WorkerGlobalScope: W.WorkerGlobalScope, Attr: W._Attr, ClientRect: W._DomRect, DOMRect: W._DomRect, NamedNodeMap: W._NamedNodeMap, MozNamedAttrMap: W._NamedNodeMap, IDBKeyRange: P.KeyRange, SVGFEColorMatrixElement: P.FEColorMatrixElement, SVGFETurbulenceElement: P.FETurbulenceElement, SVGScriptElement: P.ScriptElement0, SVGStyleElement: P.StyleElement0, SVGAElement: P.SvgElement, SVGAnimateElement: P.SvgElement, SVGAnimateMotionElement: P.SvgElement, SVGAnimateTransformElement: P.SvgElement, SVGAnimationElement: P.SvgElement, SVGCircleElement: P.SvgElement, SVGClipPathElement: P.SvgElement, SVGDefsElement: P.SvgElement, SVGDescElement: P.SvgElement, SVGDiscardElement: P.SvgElement, SVGEllipseElement: P.SvgElement, SVGFEBlendElement: P.SvgElement, SVGFEComponentTransferElement: P.SvgElement, SVGFECompositeElement: P.SvgElement, SVGFEConvolveMatrixElement: P.SvgElement, SVGFEDiffuseLightingElement: P.SvgElement, SVGFEDisplacementMapElement: P.SvgElement, SVGFEDistantLightElement: P.SvgElement, SVGFEFloodElement: P.SvgElement, SVGFEFuncAElement: P.SvgElement, SVGFEFuncBElement: P.SvgElement, SVGFEFuncGElement: P.SvgElement, SVGFEFuncRElement: P.SvgElement, SVGFEGaussianBlurElement: P.SvgElement, SVGFEImageElement: P.SvgElement, SVGFEMergeElement: P.SvgElement, SVGFEMergeNodeElement: P.SvgElement, SVGFEMorphologyElement: P.SvgElement, SVGFEOffsetElement: P.SvgElement, SVGFEPointLightElement: P.SvgElement, SVGFESpecularLightingElement: P.SvgElement, SVGFESpotLightElement: P.SvgElement, SVGFETileElement: P.SvgElement, SVGFilterElement: P.SvgElement, SVGForeignObjectElement: P.SvgElement, SVGGElement: P.SvgElement, SVGGeometryElement: P.SvgElement, SVGGraphicsElement: P.SvgElement, SVGImageElement: P.SvgElement, SVGLineElement: P.SvgElement, SVGLinearGradientElement: P.SvgElement, SVGMarkerElement: P.SvgElement, SVGMaskElement: P.SvgElement, SVGMetadataElement: P.SvgElement, SVGPathElement: P.SvgElement, SVGPatternElement: P.SvgElement, SVGPolygonElement: P.SvgElement, SVGPolylineElement: P.SvgElement, SVGRadialGradientElement: P.SvgElement, SVGRectElement: P.SvgElement, SVGSetElement: P.SvgElement, SVGStopElement: P.SvgElement, SVGSVGElement: P.SvgElement, SVGSwitchElement: P.SvgElement, SVGSymbolElement: P.SvgElement, SVGTSpanElement: P.SvgElement, SVGTextContentElement: P.SvgElement, SVGTextElement: P.SvgElement, SVGTextPathElement: P.SvgElement, SVGTextPositioningElement: P.SvgElement, SVGTitleElement: P.SvgElement, SVGUseElement: P.SvgElement, SVGViewElement: P.SvgElement, SVGGradientElement: P.SvgElement, SVGComponentTransferFunctionElement: P.SvgElement, SVGFEDropShadowElement: P.SvgElement, SVGMPathElement: P.SvgElement, SVGElement: P.SvgElement, AudioBuffer: P.AudioBuffer, AudioBufferSourceNode: P.AudioBufferSourceNode, AudioContext: P.AudioContext, webkitAudioContext: P.AudioContext, AnalyserNode: P.AudioNode, RealtimeAnalyserNode: P.AudioNode, AudioDestinationNode: P.AudioNode, AudioWorkletNode: P.AudioNode, ChannelMergerNode: P.AudioNode, AudioChannelMerger: P.AudioNode, ChannelSplitterNode: P.AudioNode, AudioChannelSplitter: P.AudioNode, ConvolverNode: P.AudioNode, IIRFilterNode: P.AudioNode, MediaElementAudioSourceNode: P.AudioNode, MediaStreamAudioDestinationNode: P.AudioNode, MediaStreamAudioSourceNode: P.AudioNode, PannerNode: P.AudioNode, AudioPannerNode: P.AudioNode, webkitAudioPannerNode: P.AudioNode, StereoPannerNode: P.AudioNode, WaveShaperNode: P.AudioNode, AudioNode: P.AudioNode, AudioParam: P.AudioParam, AudioProcessingEvent: P.AudioProcessingEvent, ConstantSourceNode: P.AudioScheduledSourceNode, AudioScheduledSourceNode: P.AudioScheduledSourceNode, BaseAudioContext: P.BaseAudioContext, BiquadFilterNode: P.BiquadFilterNode, DelayNode: P.DelayNode, DynamicsCompressorNode: P.DynamicsCompressorNode, GainNode: P.GainNode, AudioGainNode: P.GainNode, OfflineAudioContext: P.OfflineAudioContext, OscillatorNode: P.OscillatorNode, Oscillator: P.OscillatorNode, ScriptProcessorNode: P.ScriptProcessorNode, JavaScriptAudioNode: P.ScriptProcessorNode});
    hunkHelpers.setOrUpdateLeafTags({CanvasGradient: true, DOMError: true, DOMImplementation: true, MediaError: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, PushMessageData: true, Range: true, SVGAnimatedEnumeration: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, SQLError: true, ArrayBuffer: true, DataView: true, ArrayBufferView: false, Float64Array: true, Float32Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLLegendElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLModElement: true, HTMLOptGroupElement: true, HTMLParagraphElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLQuoteElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSpanElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, HTMLBaseElement: true, Blob: true, File: true, BlobEvent: true, HTMLBodyElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, CanvasRenderingContext2D: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CompositionEvent: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, HTMLDataElement: true, HTMLDivElement: true, Document: true, HTMLDocument: true, XMLDocument: true, DOMException: true, DOMRectReadOnly: false, Element: false, HTMLEmbedElement: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, FontFaceSetLoadEvent: true, GamepadEvent: true, HashChangeEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MIDIConnectionEvent: true, MutationEvent: true, PageTransitionEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PromiseRejectionEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, EventTarget: false, AbortPaymentEvent: true, CanMakePaymentEvent: true, FetchEvent: true, ForeignFetchEvent: true, InstallEvent: true, NotificationEvent: true, PaymentRequestEvent: true, SyncEvent: true, ExtendableEvent: false, ExtendableMessageEvent: true, HTMLFieldSetElement: true, HTMLFormElement: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: false, ImageData: true, HTMLImageElement: true, HTMLInputElement: true, KeyboardEvent: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLinkElement: true, Location: true, MessageEvent: true, MessagePort: true, HTMLMeterElement: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParamElement: true, HTMLProgressElement: true, ProgressEvent: true, ResourceProgressEvent: true, PushEvent: true, HTMLScriptElement: true, HTMLSelectElement: true, HTMLSourceElement: true, Storage: true, HTMLStyleElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, TextEvent: true, Touch: true, TouchEvent: true, TouchList: true, FocusEvent: true, UIEvent: false, WebSocket: true, Window: true, DOMWindow: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, SharedWorkerGlobalScope: true, WorkerGlobalScope: true, Attr: true, ClientRect: true, DOMRect: true, NamedNodeMap: true, MozNamedAttrMap: true, IDBKeyRange: true, SVGFEColorMatrixElement: true, SVGFETurbulenceElement: true, SVGScriptElement: true, SVGStyleElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGSetElement: true, SVGStopElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false, AudioBuffer: true, AudioBufferSourceNode: true, AudioContext: true, webkitAudioContext: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioDestinationNode: true, AudioWorkletNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConvolverNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, StereoPannerNode: true, WaveShaperNode: true, AudioNode: false, AudioParam: true, AudioProcessingEvent: true, ConstantSourceNode: true, AudioScheduledSourceNode: false, BaseAudioContext: false, BiquadFilterNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, OfflineAudioContext: true, OscillatorNode: true, Oscillator: true, ScriptProcessorNode: true, JavaScriptAudioNode: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main, []);
    else
      F.main([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
