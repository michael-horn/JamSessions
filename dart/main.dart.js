// Generated by dart2js (fast startup emitter, strong), the Dart to JavaScript compiler version: 2.8.2.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo += typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {JS_CONST: function JS_CONST() {
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new H.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      P.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      P.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new H.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        P.ArgumentError_checkNotNull(count, _s5_, type$.int);
        P.RangeError_checkNotNegative(count, _s5_);
        return new H.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      P.ArgumentError_checkNotNull(count, _s5_, type$.int);
      P.RangeError_checkNotNegative(count, _s5_);
      return new H.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__internal$_length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _._current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (typeof preserved == "string")
        return preserved;
      return rawClassName;
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S: function(value) {
      var res;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res != "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch;
      if (typeof source != "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return null;
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = H._asStringNullable(match[3]);
      if (decimalMatch != null)
        return parseInt(source, 10);
      if (match[2] != null)
        return parseInt(source, 16);
      return null;
    },
    Primitives_parseDouble: function(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = C.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName: function(object) {
      var t1 = H.Primitives__objectTypeNameNewRti(object);
      return t1;
    },
    Primitives__objectTypeNameNewRti: function(object) {
      var dispatchName, $constructor, constructorName;
      if (object instanceof P.Object)
        return H._rtiToString(H.instanceType(object), null);
      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = C.C_JS_CONST(object);
        if (H.Primitives__saneNativeClassName(dispatchName))
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && H.Primitives__saneNativeClassName(constructorName))
            return constructorName;
        }
      }
      return H._rtiToString(H.instanceType(object), null);
    },
    Primitives__saneNativeClassName: function($name) {
      var t1 = $name !== "Object" && $name !== "";
      return t1;
    },
    Primitives__fromCharCodeApply: function(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var t1, _i, i,
        a = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          C.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          C.JSArray_methods.add$1(a, 55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          C.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (typeof end !== "number")
        return end.$le();
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        if (i0 < end)
          chunkEnd = i0;
        else
          chunkEnd = end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (charCode <= 65535)
        return String.fromCharCode(charCode);
      if (charCode <= 1114111) {
        bits = charCode - 65536;
        return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_valueFromDecomposedDate: function(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var jsMonth, value;
      if (!H._isInt(years))
        H.throwExpression(H.argumentErrorValue(years));
      if (!H._isInt(month))
        H.throwExpression(H.argumentErrorValue(month));
      if (!H._isInt(day))
        H.throwExpression(H.argumentErrorValue(day));
      if (!H._isInt(hours))
        H.throwExpression(H.argumentErrorValue(hours));
      if (!H._isInt(minutes))
        H.throwExpression(H.argumentErrorValue(minutes));
      if (!H._isInt(seconds))
        H.throwExpression(H.argumentErrorValue(seconds));
      if (typeof month !== "number")
        return month.$sub();
      jsMonth = month - 1;
      if (typeof years !== "number")
        return H.iae(years);
      if (0 <= years && years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return null;
      return value;
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      "" + t1.argumentCount;
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, used, key;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, type$.dynamic);
      else
        $arguments = [];
      argumentCount = $arguments.length;
      requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i)
            C.JSArray_methods.add$1($arguments, defaultValues[H._asStringNullable(keys[_i])]);
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            key = H._asStringNullable(keys[_i]);
            if (namedArguments.containsKey$1(0, key)) {
              ++used;
              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, key));
            } else
              C.JSArray_methods.add$1($arguments, defaultValues[key]);
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1, _s5_ = "index";
      if (!H._isInt(index))
        return new P.ArgumentError(true, index, _s5_, null);
      $length = H._asIntNullable(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value != "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    NullError$: function(_message, match) {
      return new H.NullError(_message, match == null ? null : match.method);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2, _null = null,
        t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return _null;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H._asStringNullable(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H._asStringNullable(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H._asStringNullable(message), match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (H._asIntNullable(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, signatureFunction, applyTrampoline, i, stub, stubCallName, _null = null,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(_null, _null, _null, _null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      signatureFunction = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {
      var typeEvalMethod;
      if (typeof functionType == "number")
        return function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getTypeFromTypesTable, functionType);
      if (typeof functionType == "string") {
        if (isStatic)
          throw H.wrapException("Cannot compute signature for static tearoff.");
        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, typeEvalMethod);
      }
      throw H.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t2, stubName, arity, lookedUpFunction, t3, t4, $arguments,
        t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null)
        t1 = $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self");
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null)
        t2 = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_evalRecipe: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);
    },
    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
    },
    boolConversionCheck: function(value) {
      if (value == null)
        H.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow: function(message) {
      throw H.wrapException(new H._AssertionError(message));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(staticName));
    },
    RuntimeError$: function(message) {
      return new H.RuntimeError(message);
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return null;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return null;
      if (Array.isArray(substitution))
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, mark, t1,
        tag = H._asStringNullable($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = H._asStringNullable($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement: function(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return H.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof H.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, H.escapeReplacement(replacement));
      }
      throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
    },
    stringReplaceAllUncheckedString: function(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        for (t1 = replacement, i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(H.quoteStringForRegExp(pattern), 'g'), H.escapeReplacement(replacement));
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _._length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _._memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    unwrapException_saveStackTrace: function unwrapException_saveStackTrace(t0) {
      this.ex = t0;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _.__js_helper$_target = t1;
      _._receiver = t2;
      _._name = t3;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _._length = 0;
      _.__js_helper$_last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _.__js_helper$_previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _ensureNativeList: function(list) {
      var t1, t2, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = list._string;
      t2 = t1.length;
      result = new Array(t2);
      result.fixed$length = Array;
      for (i = 0; i < t2; ++i)
        C.JSArray_methods.$indexSet(result, i, C.JSString_methods._codeUnitAt$1(t1, i));
      return result;
    },
    NativeUint8List_NativeUint8List$view: function(buffer, offsetInBytes, $length) {
      var t1 = new Uint8Array(buffer, offsetInBytes);
      return t1;
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar: function(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr: function(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType: function(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return H.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe: function(rti) {
      return rti._canonicalRecipe;
    },
    findType: function(recipe) {
      return H._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute: function(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw H.wrapException(P.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray: function(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(substitutedRti);
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed: function(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, rti, substitutedRti,
        $length = namedArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; i += 2) {
        t1 = namedArray[i];
        rti = namedArray[i + 1];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(t1);
        result.push(substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),
        optionalNamed = functionParameters._optionalNamed,
        substitutedOptionalNamed = H._substituteNamed(universe, optionalNamed, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedOptionalNamed === optionalNamed)
        return functionParameters;
      result = new H._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._optionalNamed = substitutedOptionalNamed;
      return result;
    },
    closureFunctionType: function(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return H.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType: function(object, testRti) {
      var rti;
      if (H.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof H.Closure) {
          rti = H.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return H.instanceType(object);
    },
    instanceType: function(object) {
      var rti;
      if (object instanceof P.Object) {
        rti = object.$ti;
        return rti != null ? rti : H._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return H._arrayInstanceType(object);
      return H._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType: function(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType: function(object) {
      var rti = object.$ti;
      return rti != null ? rti : H._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor: function(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return H._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss: function(instance, $constructor) {
      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable: function(_index) {
      var rti,
        index = _index,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = H._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    _installSpecializedIsTest: function(object) {
      var testRti = this,
        isFn = H._generalIsTestImplementation,
        t1 = type$.Object;
      if (testRti === t1) {
        isFn = H._isObject;
        testRti._as = H._asObject;
      } else if (H.isStrongTopType(testRti) || testRti === t1) {
        isFn = H._isTop;
        testRti._as = H._asTop;
      } else if (testRti === type$.int)
        isFn = H._isInt;
      else if (testRti === type$.double)
        isFn = H._isNum;
      else if (testRti === type$.num)
        isFn = H._isNum;
      else if (testRti === type$.String)
        isFn = H._isString;
      else if (testRti === type$.bool)
        isFn = H._isBool;
      else if (testRti._kind === 9) {
        t1 = testRti._primary;
        if (testRti._rest.every(H.isTopType)) {
          testRti._specializedTestResource = "$is" + t1;
          isFn = H._isTestViaProperty;
        }
      }
      testRti._is = isFn;
      return testRti._is(object);
    },
    _generalIsTestImplementation: function(object) {
      var testRti = this;
      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _isTestViaProperty: function(object) {
      var t1 = this,
        tag = t1._specializedTestResource;
      if (object instanceof P.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));
    },
    checkTypeBound: function(type, bound, variable, methodName) {
      var _null = null;
      if (H._isSubtype(init.typeUniverse, type, _null, bound, _null))
        return type;
      throw H.wrapException(H._TypeError$fromMessage("The type argument '" + H.S(H._rtiToString(type, _null)) + "' is not a subtype of the type variable bound '" + H.S(H._rtiToString(bound, _null)) + "' of type variable '" + variable + "' in '" + H.S(methodName) + "'."));
    },
    _Error_compose: function(object, objectRti, checkedTypeDescription) {
      var objectDescription = P.Error_safeToString(object),
        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);
      return objectDescription + ": type '" + H.S(objectTypeDescription) + "' is not a subtype of type '" + H.S(checkedTypeDescription) + "'";
    },
    _TypeError$fromMessage: function(message) {
      return new H._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType: function(object, type) {
      return new H._TypeError("TypeError: " + H._Error_compose(object, null, type));
    },
    _isObject: function(object) {
      return true;
    },
    _asObject: function(object) {
      return object;
    },
    _isTop: function(object) {
      return true;
    },
    _asTop: function(object) {
      return object;
    },
    _isBool: function(object) {
      return true === object || false === object;
    },
    _asBoolNullable: function(object) {
      if (true === object || false === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asDoubleNullable: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _isInt: function(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asIntNullable: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _isNum: function(object) {
      return typeof object == "number";
    },
    _asNumNullable: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _isString: function(object) {
      return typeof object == "string";
    },
    _asStringNullable: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _rtiArrayToString: function(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += C.JSString_methods.$add(sep, H._rtiToString(array[i], genericContext));
      return s;
    },
    _functionRtiToString: function(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, typeParametersText, typeSep, t2, t3, boundRti, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, optionalNamed, optionalNamedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText += typeSep;
          t2 = genericContext.length;
          t3 = t2 - 1 - i;
          if (t3 < 0)
            return H.ioore(genericContext, t3);
          typeParametersText = C.JSString_methods.$add(typeParametersText, genericContext[t3]);
          boundRti = bounds[i];
          if (!(H.isStrongTopType(boundRti) || boundRti === t1))
            t2 = !(boundRti === t1);
          else
            t2 = false;
          if (t2)
            typeParametersText += C.JSString_methods.$add(" extends ", H._rtiToString(boundRti, genericContext));
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      optionalNamed = parameters._optionalNamed;
      optionalNamedLength = optionalNamed.length;
      returnTypeText = H._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += C.JSString_methods.$add(sep, H._rtiToString(requiredPositional[i], genericContext));
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalPositional[i], genericContext));
        argumentsText += "]";
      }
      if (optionalNamedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < optionalNamedLength; i += 2, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalNamed[i + 1], genericContext)) + " " + optionalNamed[i];
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParametersText + "(" + argumentsText + ") => " + H.S(returnTypeText);
    },
    _rtiToString: function(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = H._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = H._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return J.$add$ansx(argumentKind === 11 || argumentKind === 12 ? C.JSString_methods.$add("(", s) + ")" : s, "?");
      }
      if (kind === 8)
        return "FutureOr<" + H.S(H._rtiToString(rti._primary, genericContext)) + ">";
      if (kind === 9) {
        $name = H._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length !== 0 ? $name + ("<" + H._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return H._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return H._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (t1 < 0 || t1 >= t2)
          return H.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule: function(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType: function(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        metadata = universe.eT,
        probe = metadata[cls];
      if (probe == null)
        return H._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = H._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = [];
        for (i = 0; i < $length; ++i)
          $arguments.push(erased);
        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);
        metadata[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules: function(universe, rules) {
      return H._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes: function(universe, types) {
      return H._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval: function(universe, recipe, normalize) {
      var rti,
        cache = universe.eC,
        probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, null, recipe, normalize);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment: function(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, environment, recipe, true);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind: function(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__parseRecipe: function(universe, environment, recipe, normalize) {
      var rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, normalize));
      if (rti != null)
        return rti;
      throw H.wrapException(P.UnimplementedError$('_Universe._parseRecipe("' + H.S(recipe) + '")'));
    },
    _Universe__installTypeTests: function(universe, rti) {
      rti._as = H._generalAsCheckImplementation;
      rti._is = H._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti: function(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti: function(universe, baseType, key, normalize) {
      var baseKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Null || baseKind === 7 || baseKind === 6)
          return baseType;
      }
      rti = new H.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, starArgumentKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.Null))
            if (baseKind !== 7)
              t1 = baseKind === 8 && H.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          starArgumentKind = starArgument._kind;
          if (starArgumentKind === 1)
            return type$.Null;
          else if (starArgumentKind === 8 && H.isNullable(starArgument._primary))
            return starArgument;
          else
            return H.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return H._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null)
          return type$.Future_Null;
      }
      rti = new H.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin: function($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed: function($arguments) {
      var s, sep, i, t1, s0,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 2, sep = ",") {
        t1 = $arguments[i];
        s0 = $arguments[i + 1]._canonicalRecipe;
        s += sep + t1 + ":" + s0;
      }
      return s;
    },
    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length !== 0)
        s += "<" + H._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti: function(universe, base, $arguments) {
      var newBase, newArguments, s, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      s = newBase._canonicalRecipe + ";" + ("<" + H._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {
      var key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        optionalNamed = parameters._optionalNamed,
        optionalNamedLength = optionalNamed.length,
        recipe = "(" + H._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "[" + H._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      if (optionalNamedLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "{" + H._Universe__canonicalRecipeJoinNamed(optionalNamed) + "}";
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + "<" + H._Universe__canonicalRecipeJoin(bounds) + ">",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = new Array($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Parser_create: function(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse: function(parser) {
      var t1, i, ch, universe, array, head, base, u, parameters, optionalPositional, optionalNamed, item,
        source = parser.r,
        stack = parser.s;
      for (t1 = source.length, i = 0; i < t1;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = H._Parser_handleDigit(i + 1, ch, source, stack);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = H._Parser_handleIdentifier(parser, i, source, stack, false);
        else if (ch === 46)
          i = H._Parser_handleIdentifier(parser, i, source, stack, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              break;
            case 59:
              stack.push(H._Parser_toType(parser.u, parser.e, stack.pop()));
              break;
            case 94:
              stack.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));
              break;
            case 35:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 62:
              universe = parser.u;
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              head = stack.pop();
              if (typeof head == "string")
                stack.push(H._Universe__lookupInterfaceRti(universe, head, array));
              else {
                base = H._Parser_toType(universe, parser.e, head);
                switch (base._kind) {
                  case 11:
                    stack.push(H._Universe__lookupGenericFunctionRti(universe, base, array, parser.n));
                    break;
                  default:
                    stack.push(H._Universe__lookupBindingRti(universe, base, array));
                    break;
                }
              }
              break;
            case 38:
              H._Parser_handleExtendedOperations(parser, stack);
              break;
            case 42:
              u = parser.u;
              stack.push(H._Universe__lookupStarRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 63:
              u = parser.u;
              stack.push(H._Universe__lookupQuestionRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 47:
              u = parser.u;
              stack.push(H._Universe__lookupFutureOrRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 40:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 41:
              universe = parser.u;
              parameters = new H._FunctionParameters();
              optionalPositional = universe.sEA;
              optionalNamed = universe.sEA;
              head = stack.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = stack.pop();
                    break;
                  case -2:
                    optionalNamed = stack.pop();
                    break;
                  default:
                    stack.push(head);
                    break;
                }
              else
                stack.push(head);
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._optionalNamed = optionalNamed;
              stack.push(H._Universe__lookupFunctionRti(universe, H._Parser_toType(universe, parser.e, stack.pop()), parameters));
              break;
            case 91:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 93:
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-1);
              break;
            case 123:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 125:
              array = stack.splice(parser.p);
              H._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = stack.pop();
      return H._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit: function(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = H._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          H.throwExpression('No "' + string + '" in "' + H.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations: function(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw H.wrapException(P.AssertionError$("Unexpected extended operation " + H.S($top)));
    },
    _Parser_toType: function(universe, environment, item) {
      if (typeof item == "string")
        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return H._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 1; i < $length; i += 2)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType: function(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw H.wrapException(P.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw H.wrapException(P.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype: function(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (H.isStrongTopType(t) || t === type$.Object)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (H.isStrongTopType(s))
        return false;
      if (s === type$.Null)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      if (sKind === 6)
        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = t._primary;
        return H._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return t1;
      }
      if (tKind === 8) {
        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = H._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t1;
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (t1 = type$.Rti, i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          t1._as(sBound);
          t1._as(tBound);
          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sOptionalNamed, tOptionalNamed, sOptionalNamedLength, tOptionalNamedLength, j, tName, sName;
      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sOptionalNamed = sParameters._optionalNamed;
      tOptionalNamed = tParameters._optionalNamed;
      sOptionalNamedLength = sOptionalNamed.length;
      tOptionalNamedLength = tOptionalNamed.length;
      for (i = 0, j = 0; j < tOptionalNamedLength; j += 2) {
        tName = tOptionalNamed[j];
        do {
          if (i >= sOptionalNamedLength)
            return false;
          sName = sOptionalNamed[i];
          i += 2;
        } while (sName < tName);
        if (tName < sName)
          return false;
        t1 = sOptionalNamed[i - 1];
        if (!H._isSubtype(universe, tOptionalNamed[j + 1], tEnv, t1, sEnv))
          return false;
      }
      return true;
    },
    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {
      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,
        sName = s._primary,
        tName = t._primary;
      if (sName === tName) {
        sArgs = s._rest;
        tArgs = t._rest;
        $length = sArgs.length;
        for (i = 0; i < $length; ++i) {
          t1 = sArgs[i];
          t2 = tArgs[i];
          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))
            return false;
        }
        return true;
      }
      if (t === type$.Object)
        return true;
      rule = H._Universe_findRule(universe, sName);
      if (rule == null)
        return false;
      supertypeArgs = rule[tName];
      if (supertypeArgs == null)
        return false;
      $length = supertypeArgs.length;
      tArgs = t._rest;
      for (i = 0; i < $length; ++i)
        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    isNullable: function(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null))
        if (!H.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && H.isNullable(t._primary)))
              t1 = kind === 8 && H.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType: function(t) {
      return H.isStrongTopType(t) || t === type$.Object;
    },
    isStrongTopType: function(t) {
      var t2,
        t1 = t._kind,
        kind = t1;
      if (kind !== 2)
        if (kind !== 3)
          if (kind !== 4)
            if (kind !== 5) {
              t2 = type$.Object;
              if (!(t === t2))
                t1 = t1 === 7 && t._primary === t2;
              else
                t1 = true;
            } else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _Utils_objectAssign: function(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._optionalNamed = this._optionalPositional = this._requiredPositional = null;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this._message = t0;
    },
    isBrowserObject: function(o) {
      return type$.Blob._is(o) || type$.Event._is(o) || type$.KeyRange._is(o) || type$.ImageData._is(o) || type$.Node._is(o) || type$.Window._is(o) || type$.WorkerGlobalScope._is(o);
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return init.mangledGlobalNames[$name];
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JSArray_markFixedList: function(list) {
      list.fixed$length = Array;
      return list;
    },
    JSString__isWhitespace: function(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace: function(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace: function(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$bn: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$artwork$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$artwork(receiver, value);
    },
    set$innerHtml$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$innerHtml(receiver, value);
    },
    get$attributes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$children$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$classes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$classes(receiver);
    },
    get$currentTarget$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$currentTarget(receiver);
    },
    get$data$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$data(receiver);
    },
    get$dataset$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$dataset(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$innerHtml$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$innerHtml(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$onClick$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$onClick(receiver);
    },
    get$onMouseDown$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$onMouseDown(receiver);
    },
    get$result$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$result(receiver);
    },
    get$target$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    get$type$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$type(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $and$bn: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver & a0) >>> 0;
      return J.getInterceptor$bn(receiver).$and(receiver, a0);
    },
    $div$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver / a0;
      return J.getInterceptor$n(receiver).$div(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $ge$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver >= a0;
      return J.getInterceptor$n(receiver).$ge(receiver, a0);
    },
    $gt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver > a0;
      return J.getInterceptor$n(receiver).$gt(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $le$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver <= a0;
      return J.getInterceptor$n(receiver).$le(receiver, a0);
    },
    $lt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver < a0;
      return J.getInterceptor$n(receiver).$lt(receiver, a0);
    },
    $or$bn: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver | a0) >>> 0;
      return J.getInterceptor$bn(receiver).$or(receiver, a0);
    },
    $shl$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).$shl(receiver, a0);
    },
    $sub$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    _clearChildren$0$x: function(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    _connect$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._connect$3(receiver, a0, a1, a2);
    },
    _removeEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    append$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).append$1(receiver, a0);
    },
    blur$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).blur$0(receiver);
    },
    clamp$2$n: function(receiver, a0, a1) {
      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    contains$2$asx: function(receiver, a0, a1) {
      return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
    },
    containsKey$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    createGain$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).createGain$0(receiver);
    },
    disconnect$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).disconnect$0(receiver);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    insert$2$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
    },
    insertAdjacentElement$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).insertAdjacentElement$2(receiver, a0, a1);
    },
    insertAdjacentHtml$4$treeSanitizer$validator$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).insertAdjacentHtml$4$treeSanitizer$validator(receiver, a0, a1, a2, a3);
    },
    lastIndexOf$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).lastIndexOf$1(receiver, a0);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    open$3$async$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).open$3$async(receiver, a0, a1, a2);
    },
    postMessage$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).postMessage$1(receiver, a0);
    },
    preventDefault$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).preventDefault$0(receiver);
    },
    readAsDataUrl$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).readAsDataUrl$1(receiver, a0);
    },
    remove$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    round$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).round$0(receiver);
    },
    scrollTo$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).scrollTo$2(receiver, a0, a1);
    },
    send$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).send$0(receiver);
    },
    setInnerHtml$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setInnerHtml$1(receiver, a0);
    },
    split$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    startsWith$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
    },
    substring$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).substring$1(receiver, a0);
    },
    toLowerCase$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toRadixString$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    toStringAsFixed$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).toStringAsFixed$1(receiver, a0);
    },
    trim$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _.__interceptors$_iterable = t0;
      _.__interceptors$_length = t1;
      _.__interceptors$_index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSDouble: function JSDouble() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync: function(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn: function(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var t1, future,
        thenCallback = new P._awaitOnObject_closure(bodyFunction),
        errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      if (object instanceof P._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new P._Future($.Zone__current, type$._Future_dynamic);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), type$.Null, type$.int, type$.dynamic);
    },
    Future_Future$error: function(error, stackTrace, $T) {
      var t1;
      P.ArgumentError_checkNotNull(error, "error", type$.Object);
      $.Zone__current !== C.C__RootZone;
      if (stackTrace == null)
        stackTrace = P.AsyncError_defaultStackTrace(error);
      t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_Future$delayed: function(duration, $T) {
      var result = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      P.Timer_Timer(duration, new P.Future_Future$delayed_closure(null, result));
      return result;
    },
    _completeWithErrorCallback: function(result, error, stackTrace) {
      result._completeError$2(error, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    _Future$zoneValue: function(value, _zone, $T) {
      var t1 = new P._Future(_zone, $T._eval$1("_Future<0>"));
      $T._as(value);
      t1._state = 4;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainForeignFuture: function(source, target) {
      var e, s, exception;
      target._state = 1;
      try {
        source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), type$.Null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
      }
    },
    _Future__chainCoreFuture: function(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, t2 === 2;)
        source = t1._as(source._resultOrListeners);
      if (t2 >= 4) {
        listeners = target._removeListeners$0();
        target._state = source._state;
        target._resultOrListeners = source._resultOrListeners;
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$._FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = 2;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var t2, t3, t4, _box_0, hasError, asyncError, listeners0, sourceResult, t5, t6, zone, t7, oldZone, current, result, _null = null, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$._FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        hasError = t1._state === 8;
        if (listeners == null) {
          if (hasError) {
            asyncError = t2._as(t1._resultOrListeners);
            P._rootHandleUncaughtError(_null, _null, t1._zone, asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
          listeners._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, listeners);
        }
        t1 = _box_1.source;
        sourceResult = t1._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        t5 = !hasError;
        if (t5) {
          t6 = listeners.state;
          t6 = (t6 & 1) !== 0 || (t6 & 15) === 8;
        } else
          t6 = true;
        if (t6) {
          t6 = listeners.result;
          zone = t6._zone;
          if (hasError) {
            t7 = t1._zone === zone;
            t7 = !(t7 || t7);
          } else
            t7 = false;
          if (t7) {
            t2._as(sourceResult);
            P._rootHandleUncaughtError(_null, _null, t1._zone, sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = _null;
          t1 = listeners.state;
          if ((t1 & 15) === 8)
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
          else if (t5) {
            if ((t1 & 1) !== 0)
              new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            if (t1._state >= 4) {
              current = t3._as(t6._resultOrListeners);
              t6._resultOrListeners = null;
              listeners = t6._reverseListeners$1(current);
              t6._state = t1._state;
              t6._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              P._Future__chainCoreFuture(t1, t6);
            return;
          }
        }
        result = listeners.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 4;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(callback);
      if ($._nextCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = $._lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var entry, t2,
        t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        entry.next = t2.next;
        $._lastPriorityCallback = t2.next = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      P._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      var t1 = stream == null ? H.throwExpression(P.ArgumentError$notNull("stream")) : stream;
      return new P._StreamIterator(t1, $T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController: function(sync, $T) {
      var _null = null;
      return sync ? new P._SyncStreamController(_null, _null, _null, _null, $T._eval$1("_SyncStreamController<0>")) : new P._AsyncStreamController(_null, _null, _null, _null, $T._eval$1("_AsyncStreamController<0>"));
    },
    StreamController_StreamController$broadcast: function(onCancel, sync, $T) {
      return sync ? new P._SyncBroadcastStreamController(null, onCancel, $T._eval$1("_SyncBroadcastStreamController<0>")) : new P._AsyncBroadcastStreamController(null, onCancel, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(null, null, $.Zone__current, e, type$.StackTrace._as(s));
      }
    },
    _nullErrorHandler: function(error, stackTrace) {
      P._rootHandleUncaughtError(null, null, $.Zone__current, error, stackTrace);
    },
    _nullDoneHandler: function() {
    },
    _StreamIterator$: function(stream, $T) {
      var t1 = stream == null ? H.throwExpression(P.ArgumentError$notNull("stream")) : stream;
      return new P._StreamIterator(t1, $T._eval$1("_StreamIterator<0>"));
    },
    _cancelAndValue: function(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(0);
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    Timer_Timer: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createTimer(duration, type$.void_Function._as(callback));
      return P.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    Timer_Timer$periodic: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createPeriodicTimer(duration, type$.void_Function_Timer._as(callback));
      return P.Timer__createPeriodicTimer(duration, type$.void_Function_Timer._as(t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer)));
    },
    AsyncError$: function(error, stackTrace) {
      var t1 = stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace;
      P.ArgumentError_checkNotNull(error, "error", type$.Object);
      return new P.AsyncError(error, t1);
    },
    AsyncError_defaultStackTrace: function(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return C.C__StringStackTrace;
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      t1.stackTrace = stackTrace;
      if (error == null) {
        t1.error = new P.ArgumentError(false, null, "error", "Must not be null");
        t1.stackTrace = P.StackTrace_current();
      }
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1));
    },
    _rootRun: function($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      var t1;
      type$.void_Function._as(f);
      t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || false) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);
      P._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onDone = _._onError = _._async$_onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future: function Future() {
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1) {
      this.computation = t0;
      this.result = t1;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.target = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncComplete_closure: function _Future__asyncComplete_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.hasError = t3;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1, t2) {
      this._box_0 = t0;
      this.listener = t1;
      this.sourceResult = t2;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1, t2) {
      this._box_1 = t0;
      this._box_0 = t1;
      this.listener = t2;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.future = t2;
    },
    Stream_first_closure0: function Stream_first_closure0(t0) {
      this.future = t0;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._controller = t0;
      _._onDone = _._onError = _._async$_onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents(t0) {
      var _ = this;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _._state = 0;
      _.$ti = t0;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _StreamIterator: function _StreamIterator(t0, t1) {
      var _ = this;
      _._subscription = null;
      _._stateData = t0;
      _._isPaused = false;
      _.$ti = t1;
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    Timer: function Timer() {
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0) {
      this._box_0 = t0;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    LinkedHashMap_LinkedHashMap: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$: function(_set, _modifications, $E) {
      var t1 = new P._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap($K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var t1, _i,
        result = P.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$: function($E) {
      var t1 = new P.ListQueue($E._eval$1("ListQueue<0>")),
        t2 = new Array(8);
      t2.fixed$length = Array;
      t1.set$_table(H.setRuntimeTypeInfo(t2, $E._eval$1("JSArray<0>")));
      return t1;
    },
    _ListQueueIterator$: function(queue, $E) {
      return new P._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, $E._eval$1("_ListQueueIterator<0>"));
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    ListQueue: function ListQueue(t0) {
      var _ = this;
      _._table = null;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t0;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetMixin: function SetMixin() {
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SetBase_Object_SetMixin: function _SetBase_Object_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson: function(source, reviver) {
      var parsed, e, exception, t1;
      if (typeof source != "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e), null, null);
        throw H.wrapException(t1);
      }
      t1 = P._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Base64Encoder_encodeChunk: function(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, i, byteOr, byte, outputIndex0, t3, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = bytes.length, t2 = output.length, i = start, byteOr = 0; i < end; ++i) {
        if (i >= t1)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return H.iae(byte);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);
          if (outputIndex >= t2)
            return H.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);
          if (outputIndex0 >= t2)
            return H.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          outputIndex0 = outputIndex + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);
          if (outputIndex >= t2)
            return H.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits & 63);
          if (outputIndex0 >= t2)
            return H.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);
            if (outputIndex0 >= t2)
              return H.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            if (outputIndex1 >= t2)
              return H.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);
            if (outputIndex0 >= t2)
              return H.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);
            if (outputIndex1 >= t2)
              return H.ioore(output, outputIndex1);
            output[outputIndex1] = t1;
            if (outputIndex >= t2)
              return H.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        if (i >= t1)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return byte.$lt();
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      t1 = "Not a byte value at index " + i + ": 0x";
      if (i >= bytes.length)
        return H.ioore(bytes, i);
      throw H.wrapException(P.ArgumentError$value(bytes, t1 + J.toRadixString$1$n(bytes[i], 16), null));
    },
    JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {
      return new P.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable: function(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier_stringify: function(object, toEncodable, indent) {
      var t1,
        output = new P.StringBuffer(""),
        stringifier = new P._JsonStringStringifier(output, [], P.convert___defaultToEncodable$closure());
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _symbolMapToStringMap: function(map) {
      var result = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      J.forEach$1$ax(map, new P._symbolMapToStringMap_closure(result));
      return result;
    },
    Function_apply: function($function, positionalArguments, namedArguments) {
      return H.Primitives_applyFunction($function, positionalArguments, namedArguments == null ? null : P._symbolMapToStringMap(namedArguments));
    },
    int_parse: function(source) {
      var value = H.Primitives_parseInt(source, null);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.S(H.Primitives_objectTypeName(object)) + "'";
    },
    List_List$from: function(elements, growable, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        C.JSArray_methods.add$1(list, $E._as(t1.get$current(t1)));
      if (growable)
        return list;
      return $E._eval$1("List<0>")._as(J.JSArray_markFixedList(list));
    },
    String_String$fromCharCodes: function(charCodes) {
      var len, end, t1;
      if (Array.isArray(charCodes)) {
        type$.JSArray_int._as(charCodes);
        len = charCodes.get$length(charCodes);
        end = P.RangeError_checkValidRange(0, null, len);
        if (typeof end !== "number")
          return end.$lt();
        t1 = C.JSInt_methods.$lt(end, len);
        return H.Primitives_stringFromCharCodes(t1 ? charCodes.sublist$2(0, 0, end) : charCodes);
      }
      if (type$.NativeUint8List._is(charCodes))
        return H.Primitives_stringFromNativeUint8List(charCodes, 0, P.RangeError_checkValidRange(0, null, charCodes.length));
      return P.String__stringFromIterable(charCodes, 0, null);
    },
    String__stringFromIterable: function(charCodes, start, end) {
      var i, list,
        it = new H.ListIterator(charCodes, charCodes.length, H.instanceType(charCodes)._eval$1("ListIterator<ListMixin.E>"));
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, null, null));
      list = [];
      for (; it.moveNext$0();)
        list.push(it._current);
      return H.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp: function(source) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, false, true, false, false, false));
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current(iterator));
      }
      return string;
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    StackTrace_current: function() {
      var stackTrace, exception;
      if (H.boolConversionCheck($.$get$_hasErrorStackProperty()))
        return H.getTraceFromException(new Error());
      try {
        throw H.wrapException("");
      } catch (exception) {
        H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        return stackTrace;
      }
    },
    DateTime_parse: function(formattedString) {
      var t1, t2, years, month, day, hour, minute, second, milliAndMicroseconds, t3, t4, t5, sign, hourDifference, minuteDifference, isUtc, value,
        match = $.$get$DateTime__parseFormat().firstMatch$1(formattedString);
      if (match != null) {
        t1 = new P.DateTime_parse_parseIntOrZero();
        t2 = match._match;
        if (1 >= t2.length)
          return H.ioore(t2, 1);
        years = P.int_parse(t2[1]);
        if (2 >= t2.length)
          return H.ioore(t2, 2);
        month = P.int_parse(t2[2]);
        if (3 >= t2.length)
          return H.ioore(t2, 3);
        day = P.int_parse(t2[3]);
        if (4 >= t2.length)
          return H.ioore(t2, 4);
        hour = t1.call$1(t2[4]);
        if (5 >= t2.length)
          return H.ioore(t2, 5);
        minute = t1.call$1(t2[5]);
        if (6 >= t2.length)
          return H.ioore(t2, 6);
        second = t1.call$1(t2[6]);
        if (7 >= t2.length)
          return H.ioore(t2, 7);
        milliAndMicroseconds = new P.DateTime_parse_parseMilliAndMicroseconds().call$1(t2[7]);
        if (typeof milliAndMicroseconds !== "number")
          return milliAndMicroseconds.$tdiv();
        t3 = C.JSInt_methods._tdivFast$1(milliAndMicroseconds, 1000);
        t4 = t2.length;
        if (8 >= t4)
          return H.ioore(t2, 8);
        if (t2[8] != null) {
          if (9 >= t4)
            return H.ioore(t2, 9);
          t5 = t2[9];
          if (t5 != null) {
            sign = t5 === "-" ? -1 : 1;
            if (10 >= t4)
              return H.ioore(t2, 10);
            hourDifference = P.int_parse(t2[10]);
            if (11 >= t2.length)
              return H.ioore(t2, 11);
            minuteDifference = t1.call$1(t2[11]);
            if (typeof hourDifference !== "number")
              return H.iae(hourDifference);
            if (typeof minuteDifference !== "number")
              return minuteDifference.$add();
            if (typeof minute !== "number")
              return minute.$sub();
            minute -= sign * (minuteDifference + 60 * hourDifference);
          }
          isUtc = true;
        } else
          isUtc = false;
        value = H.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, t3 + C.JSDouble_methods.round$0(milliAndMicroseconds % 1000 / 1000), isUtc);
        if (value == null)
          throw H.wrapException(P.FormatException$("Time out of range", formattedString, null));
        return P.DateTime$_withValue(value, isUtc);
      } else
        throw H.wrapException(P.FormatException$("Invalid date format", formattedString, null));
    },
    DateTime$_withValue: function(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + _value));
      P.ArgumentError_checkNotNull(isUtc, "isUtc", type$.bool);
      return new P.DateTime(_value, isUtc);
    },
    DateTime__fourDigits: function(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$: function(milliseconds) {
      return new P.Duration(1000 * milliseconds);
    },
    Error_safeToString: function(object) {
      if (typeof object == "number" || H._isBool(object) || null == object)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    AssertionError$: function(message) {
      return new P.AssertionError(message);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull: function($name) {
      return new P.ArgumentError(false, null, $name, "Must not be null");
    },
    ArgumentError_checkNotNull: function(argument, $name, $T) {
      if (argument == null)
        throw H.wrapException(P.ArgumentError$notNull($name));
      return argument;
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange: function(start, end, $length) {
      var t1;
      if (typeof start !== "number")
        return H.iae(start);
      if (0 <= start) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = start > $length;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (!(start > end)) {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = end > $length;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (typeof value !== "number")
        return value.$lt();
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = H._asIntNullable($length == null ? J.get$length$asx(indexable) : $length);
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    FormatException$: function(message, source, offset) {
      return new P.FormatException(message, source, offset);
    },
    num_parse: function(input) {
      var t1,
        source = J.trim$0$s(input),
        result = H.Primitives_parseInt(source, null);
      if (result == null)
        result = H.Primitives_parseDouble(source);
      if (result != null)
        return result;
      t1 = P.FormatException$(input, null, null);
      throw H.wrapException(t1);
    },
    print: function(object) {
      H.printString(H.S(object));
    },
    _symbolMapToStringMap_closure: function _symbolMapToStringMap_closure(t0) {
      this.result = t0;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    bool: function bool() {
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    DateTime_parse_parseIntOrZero: function DateTime_parse_parseIntOrZero() {
    },
    DateTime_parse_parseMilliAndMicroseconds: function DateTime_parse_parseMilliAndMicroseconds() {
    },
    double: function double() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits() {
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._core$_memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Function: function Function() {
    },
    int: function int() {
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    List: function List() {
    },
    Map: function Map() {
    },
    Null: function Null() {
    },
    num: function num() {
    },
    Object: function Object() {
    },
    Set: function Set() {
    },
    StackTrace: function StackTrace() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    String: function String() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Symbol0: function Symbol0() {
    },
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, t2;
      if (object == null)
        return null;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        t2 = H._asStringNullable(keys[_i]);
        dict.$indexSet(0, t2, object[t2]);
      }
      return dict;
    },
    convertDartToNative_Dictionary: function(dict) {
      var object = {};
      dict.forEach$1(0, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      return t1 == null ? $.Device__isOpera = J.contains$2$asx(window.navigator.userAgent, "Opera", 0) : t1;
    },
    Device_cssPrefix: function() {
      var t1,
        prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null ? $.Device__isFirefox = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0) : t1)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null)
          t1 = $.Device__isIE = !H.boolConversionCheck(P.Device_isOpera()) && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
        if (t1)
          prefix = "-ms-";
        else
          prefix = H.boolConversionCheck(P.Device_isOpera()) ? "-o-" : "-webkit-";
      }
      return $.Device__cachedCssPrefix = prefix;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredClone_walk_closure0: function _StructuredClone_walk_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    convertDartToNative_Dictionary_closure: function convertDartToNative_Dictionary_closure(t0) {
      this.object = t0;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    CssClassSetImpl: function CssClassSetImpl() {
    },
    CssClassSetImpl_add_closure: function CssClassSetImpl_add_closure(t0) {
      this.value = t0;
    },
    CssClassSetImpl_removeWhere_closure: function CssClassSetImpl_removeWhere_closure(t0) {
      this.test = t0;
    },
    CssClassSetImpl_clear_closure: function CssClassSetImpl_clear_closure() {
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    _completeRequest: function(request, $T) {
      var t2, t3, t4,
        t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new P._SyncCompleter(t1, $T._eval$1("_SyncCompleter<0>"));
      request.toString;
      t2 = type$.void_Function_Event;
      t3 = t2._as(new P._completeRequest_closure(request, completer, $T));
      type$.void_Function._as(null);
      t4 = type$.Event;
      W._EventStreamSubscription$(request, "success", t3, false, t4);
      W._EventStreamSubscription$(request, "error", t2._as(completer.get$completeError()), false, t4);
      return t1;
    },
    _completeRequest_closure: function _completeRequest_closure(t0, t1, t2) {
      this.request = t0;
      this.completer = t1;
      this.T = t2;
    },
    KeyRange: function KeyRange() {
    },
    ObjectStore: function ObjectStore() {
    },
    Observation: function Observation() {
    },
    Request: function Request() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, t1, dartArgs;
      H._asBoolNullable(captureThis);
      type$.List_dynamic._as($arguments);
      if (H.boolConversionCheck(captureThis)) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      t1 = type$.dynamic;
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), t1), true, t1);
      return P._convertToJS(P.Function_apply(type$.Function._as(callback), dartArgs, null));
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return null;
    },
    _convertToJS: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || H._isBool(o))
        return o;
      if (o instanceof P.JsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (type$.TypedData._is(o))
        return o;
      if (o instanceof P.DateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (type$.Function._is(o))
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      var t1, t2;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && type$.TypedData._is(o))
        return o;
      else if (o instanceof Date) {
        t1 = H._asIntNullable(o.getTime());
        t2 = new P.DateTime(t1, false);
        t2.DateTime$_withValue$2$isUtc(t1, false);
        return t2;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new P._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(H.convertDartClosureToJS(new P.promiseToFuture_closure(completer, $T), 1), H.convertDartClosureToJS(new P.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    _JSRandom: function _JSRandom() {
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle() {
    },
    SvgSvgElement_SvgSvgElement: function() {
      var el = type$.SvgElement._as(C.HtmlDocument_methods.createElementNS$2(document, "http://www.w3.org/2000/svg", "svg"));
      el.setAttribute("version", "1.1");
      return type$.SvgSvgElement._as(el);
    },
    CircleElement: function CircleElement() {
    },
    FEColorMatrixElement: function FEColorMatrixElement() {
    },
    FETurbulenceElement: function FETurbulenceElement() {
    },
    GElement: function GElement() {
    },
    GeometryElement: function GeometryElement() {
    },
    GraphicsElement: function GraphicsElement() {
    },
    ImageElement0: function ImageElement0() {
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    LineElement: function LineElement() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PathElement: function PathElement() {
    },
    PointList: function PointList() {
    },
    RectElement: function RectElement() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    StringList: function StringList() {
    },
    StyleElement0: function StyleElement0() {
    },
    AttributeClassSet: function AttributeClassSet(t0) {
      this._element = t0;
    },
    SvgElement: function SvgElement() {
    },
    SvgSvgElement: function SvgSvgElement() {
    },
    TextContentElement: function TextContentElement() {
    },
    TextElement: function TextElement() {
    },
    TextPositioningElement: function TextPositioningElement() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_Interceptor_ListMixin: function _LengthList_Interceptor_ListMixin() {
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: function _LengthList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NumberList_Interceptor_ListMixin: function _NumberList_Interceptor_ListMixin() {
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: function _NumberList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _StringList_Interceptor_ListMixin: function _StringList_Interceptor_ListMixin() {
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: function _StringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TransformList_Interceptor_ListMixin: function _TransformList_Interceptor_ListMixin() {
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: function _TransformList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    Float32List: function Float32List() {
    },
    AnalyserNode: function AnalyserNode() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioBufferSourceNode: function AudioBufferSourceNode() {
    },
    AudioContext: function AudioContext() {
    },
    AudioContext_decodeAudioData_closure: function AudioContext_decodeAudioData_closure(t0) {
      this.completer = t0;
    },
    AudioContext_decodeAudioData_closure0: function AudioContext_decodeAudioData_closure0(t0) {
      this.completer = t0;
    },
    AudioNode: function AudioNode() {
    },
    AudioParam: function AudioParam() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioProcessingEvent: function AudioProcessingEvent() {
    },
    AudioScheduledSourceNode: function AudioScheduledSourceNode() {
    },
    AudioTrack: function AudioTrack() {
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    BiquadFilterNode: function BiquadFilterNode() {
    },
    ConvolverNode: function ConvolverNode() {
    },
    DelayNode: function DelayNode() {
    },
    DynamicsCompressorNode: function DynamicsCompressorNode() {
    },
    GainNode: function GainNode() {
    },
    MediaStreamAudioSourceNode: function MediaStreamAudioSourceNode() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    OscillatorNode: function OscillatorNode() {
    },
    ScriptProcessorNode: function ScriptProcessorNode() {
    },
    StereoPannerNode: function StereoPannerNode() {
    },
    _AudioParamMap_Interceptor_MapMixin: function _AudioParamMap_Interceptor_MapMixin() {
    },
    ActiveInfo: function ActiveInfo() {
    },
    SqlResultSetRowList: function SqlResultSetRowList() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin: function _SqlResultSetRowList_Interceptor_ListMixin() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: function _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  W = {
    AnchorElement_AnchorElement: function() {
      var e = document.createElement("a");
      return e;
    },
    AudioElement_AudioElement$_: function(src) {
      return new Audio();
    },
    Blob_Blob: function(blobParts, type) {
      var bag = {};
      bag.type = type;
      return new self.Blob(blobParts, bag);
    },
    Element_Element$html: function(html, treeSanitizer, validator) {
      var t1 = document.body,
        fragment = (t1 && C.BodyElement_methods).createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator);
      fragment.toString;
      t1 = type$._ChildNodeListLazy;
      t1 = new H.WhereIterable(new W._ChildNodeListLazy(fragment), t1._eval$1("bool(ListMixin.E)")._as(new W.Element_Element$html_closure()), t1._eval$1("WhereIterable<ListMixin.E>"));
      return type$.Element._as(t1.get$single(t1));
    },
    Element__safeTagName: function(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        if (typeof t1.get$tagName(element) == "string")
          result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    HttpRequest_getString: function(url) {
      var _null = null;
      return W.HttpRequest_request(url, _null, _null, _null, _null, _null).then$1$1(new W.HttpRequest_getString_closure(), type$.String);
    },
    HttpRequest_request: function(url, method, onProgress, responseType, sendData, withCredentials) {
      var t2, t3, t4,
        t1 = new P._Future($.Zone__current, type$._Future_HttpRequest),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_HttpRequest),
        xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, method == null ? "GET" : method, url, true);
      if (withCredentials != null)
        xhr.withCredentials = withCredentials;
      if (responseType != null)
        xhr.responseType = responseType;
      t2 = type$.void_Function_ProgressEvent;
      t3 = t2._as(new W.HttpRequest_request_closure(xhr, completer));
      type$.void_Function._as(null);
      t4 = type$.ProgressEvent;
      W._EventStreamSubscription$(xhr, "load", t3, false, t4);
      W._EventStreamSubscription$(xhr, "error", t2._as(completer.get$completeError()), false, t4);
      if (sendData != null)
        xhr.send(sendData);
      else
        xhr.send();
      return t1;
    },
    WebSocket_WebSocket: function(url) {
      return new WebSocket(url);
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d),
        hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _MultiElementCssClassSet__MultiElementCssClassSet: function(elements) {
      var t1 = elements.$ti;
      return new W._MultiElementCssClassSet(elements, P.List_List$from(new H.MappedListIterable(elements, t1._eval$1("@(ListMixin.E)")._as(new W._MultiElementCssClassSet__MultiElementCssClassSet_closure()), t1._eval$1("MappedListIterable<ListMixin.E,@>")), true, type$.CssClassSetImpl));
    },
    _ElementCssClassSet__removeWhere: function(_element, test, doRemove) {
      var i, item,
        list = _element.classList;
      for (i = 0; i < list.length;) {
        item = list.item(i);
        if (true === test.call$1(item))
          list.remove(item);
        else
          ++i;
      }
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = W._wrapZone(new W._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new W._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$: function(uriPolicy) {
      var t1 = W.AnchorElement_AnchorElement(),
        t2 = window.location;
      t1 = new W._Html5NodeValidator(new W._SameOriginUriPolicy(t1, t2));
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
      type$.Element._as(element);
      H._asStringNullable(attributeName);
      H._asStringNullable(value);
      type$._Html5NodeValidator._as(context);
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
      var t1, t2, t3;
      type$.Element._as(element);
      H._asStringNullable(attributeName);
      H._asStringNullable(value);
      t1 = type$._Html5NodeValidator._as(context).uriPolicy;
      t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (!(t3 == t1.hostname && t2.port == t1.port && t2.protocol == t1.protocol))
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$: function() {
      var t1 = type$.String,
        t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1),
        t3 = type$.String_Function_String._as(new W._TemplatingNodeValidator_closure()),
        t4 = H.setRuntimeTypeInfo(["TEMPLATE"], type$.JSArray_String);
      t1 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new H.MappedListIterable(C.List_wSV, t3, type$.MappedListIterable_String_String), t4, null);
      return t1;
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if (e == null)
        return null;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        if (type$.EventTarget._is($window))
          return $window;
        return null;
      } else
        return type$.EventTarget._as(e);
    },
    _convertNativeToDart_XHR_Response: function(o) {
      if (type$.Document._is(o))
        return o;
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(o, true);
    },
    _DOMWindowCrossFrame__createSafe: function(w) {
      if (w === window)
        return type$.WindowBase._as(w);
      else
        return new W._DOMWindowCrossFrame();
    },
    _wrapZone: function(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    Animation: function Animation() {
    },
    AreaElement: function AreaElement() {
    },
    AudioElement: function AudioElement() {
    },
    BackgroundFetchEvent: function BackgroundFetchEvent() {
    },
    BackgroundFetchRegistration: function BackgroundFetchRegistration() {
    },
    BaseElement: function BaseElement() {
    },
    BeforeUnloadEvent: function BeforeUnloadEvent() {
    },
    Blob: function Blob() {
    },
    BlobEvent: function BlobEvent() {
    },
    BodyElement: function BodyElement() {
    },
    ButtonElement: function ButtonElement() {
    },
    CacheStorage: function CacheStorage() {
    },
    CharacterData: function CharacterData() {
    },
    Client: function Client() {
    },
    CompositionEvent: function CompositionEvent() {
    },
    Credential: function Credential() {
    },
    CryptoKey: function CryptoKey() {
    },
    CssNumericValue: function CssNumericValue() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnitValue: function CssUnitValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItem: function DataTransferItem() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DocumentFragment: function DocumentFragment() {
    },
    DomException: function DomException() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._html$_element = t0;
      this._childElements = t1;
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element: function Element() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    EmbedElement: function EmbedElement() {
    },
    Entry: function Entry() {
    },
    Entry_remove_closure: function Entry_remove_closure(t0) {
      this.completer = t0;
    },
    Entry_remove_closure0: function Entry_remove_closure0(t0) {
      this.completer = t0;
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    ExtendableEvent: function ExtendableEvent() {
    },
    ExtendableMessageEvent: function ExtendableMessageEvent() {
    },
    FieldSetElement: function FieldSetElement() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileReader: function FileReader() {
    },
    FileWriter: function FileWriter() {
    },
    FontFace: function FontFace() {
    },
    FontFaceSet: function FontFaceSet() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HtmlDocument: function HtmlDocument() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequest_getString_closure: function HttpRequest_getString_closure() {
    },
    HttpRequest_request_closure: function HttpRequest_request_closure(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    ImageData: function ImageData() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    LIElement: function LIElement() {
    },
    LinkElement: function LinkElement() {
    },
    Location: function Location() {
    },
    MediaElement: function MediaElement() {
    },
    MediaKeySession: function MediaKeySession() {
    },
    MediaList: function MediaList() {
    },
    MediaStream: function MediaStream() {
    },
    MediaStreamTrack: function MediaStreamTrack() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessagePort: function MessagePort() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiMessageEvent: function MidiMessageEvent() {
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiPort: function MidiPort() {
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    MouseEvent: function MouseEvent() {
    },
    MutationRecord: function MutationRecord() {
    },
    Navigator: function Navigator() {
    },
    Navigator_getUserMedia_closure: function Navigator_getUserMedia_closure(t0) {
      this.completer = t0;
    },
    Navigator_getUserMedia_closure0: function Navigator_getUserMedia_closure0(t0) {
      this.completer = t0;
    },
    NavigatorConcurrentHardware: function NavigatorConcurrentHardware() {
    },
    NavigatorUserMediaError: function NavigatorUserMediaError() {
    },
    NetworkInformation: function NetworkInformation() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    OListElement: function OListElement() {
    },
    ObjectElement: function ObjectElement() {
    },
    OutputElement: function OutputElement() {
    },
    PaymentInstruments: function PaymentInstruments() {
    },
    PaymentRequest: function PaymentRequest() {
    },
    PerformanceEntry: function PerformanceEntry() {
    },
    PerformanceNavigation: function PerformanceNavigation() {
    },
    PerformanceNavigationTiming: function PerformanceNavigationTiming() {
    },
    PerformanceResourceTiming: function PerformanceResourceTiming() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    PreElement: function PreElement() {
    },
    PresentationConnection: function PresentationConnection() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    PushEvent: function PushEvent() {
    },
    RelatedApplication: function RelatedApplication() {
    },
    RtcDataChannel: function RtcDataChannel() {
    },
    RtcLegacyStatsReport: function RtcLegacyStatsReport() {
    },
    RtcSessionDescription: function RtcSessionDescription() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    ScriptElement: function ScriptElement() {
    },
    SelectElement: function SelectElement() {
    },
    Selection: function Selection() {
    },
    ShadowRoot: function ShadowRoot() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SourceElement: function SourceElement() {
    },
    SpanElement: function SpanElement() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleElement: function StyleElement() {
    },
    StyleMedia: function StyleMedia() {
    },
    StyleSheet: function StyleSheet() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextEvent: function TextEvent() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TrackDefault: function TrackDefault() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    UIEvent: function UIEvent() {
    },
    UListElement: function UListElement() {
    },
    Url: function Url() {
    },
    VideoTrack: function VideoTrack() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    VttRegion: function VttRegion() {
    },
    WebSocket: function WebSocket() {
    },
    Window: function Window() {
    },
    Window_animationFrame_closure: function Window_animationFrame_closure(t0) {
      this.completer = t0;
    },
    _BeforeUnloadEvent: function _BeforeUnloadEvent(t0) {
      this.wrapped = t0;
    },
    _BeforeUnloadEventStreamProvider: function _BeforeUnloadEventStreamProvider() {
    },
    _BeforeUnloadEventStreamProvider_forTarget_closure: function _BeforeUnloadEventStreamProvider_forTarget_closure(t0) {
      this.controller = t0;
    },
    Worker: function Worker() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _Attr: function _Attr() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _Report: function _Report() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    _DataAttributeMap: function _DataAttributeMap(t0) {
      this._attributes = t0;
    },
    _DataAttributeMap_forEach_closure: function _DataAttributeMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _DataAttributeMap_keys_closure: function _DataAttributeMap_keys_closure(t0, t1) {
      this.$this = t0;
      this.keys = t1;
    },
    CssClassSet: function CssClassSet() {
    },
    _MultiElementCssClassSet: function _MultiElementCssClassSet(t0, t1) {
      this._elementIterable = t0;
      this._sets = t1;
    },
    _MultiElementCssClassSet__MultiElementCssClassSet_closure: function _MultiElementCssClassSet__MultiElementCssClassSet_closure() {
    },
    _MultiElementCssClassSet_readClasses_closure: function _MultiElementCssClassSet_readClasses_closure(t0) {
      this.s = t0;
    },
    _MultiElementCssClassSet_modify_closure: function _MultiElementCssClassSet_modify_closure(t0) {
      this.f = t0;
    },
    _MultiElementCssClassSet_toggle_closure: function _MultiElementCssClassSet_toggle_closure(t0, t1) {
      this.value = t0;
      this.shouldAdd = t1;
    },
    _MultiElementCssClassSet_remove_closure: function _MultiElementCssClassSet_remove_closure(t0) {
      this.value = t0;
    },
    _ElementCssClassSet: function _ElementCssClassSet(t0) {
      this._html$_element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementListEventStreamImpl: function _ElementListEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._targetList = t0;
      _._useCapture = t1;
      _._eventType = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _StreamPool: function _StreamPool(t0, t1) {
      this._html$_controller = null;
      this._subscriptions = t0;
      this.$ti = t1;
    },
    _StreamPool_add_closure: function _StreamPool_add_closure(t0, t1) {
      this.$this = t0;
      this.stream = t1;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._html$_position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    _WrappedEvent: function _WrappedEvent() {
    },
    NodeValidator: function NodeValidator() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.modifiedTree = false;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _DomRectList_Interceptor_ListMixin: function _DomRectList_Interceptor_ListMixin() {
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: function _DomRectList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_Interceptor_ListMixin: function _DomStringList_Interceptor_ListMixin() {
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: function _DomStringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _FileList_Interceptor_ListMixin: function _FileList_Interceptor_ListMixin() {
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: function _FileList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_Interceptor_MapMixin: function _MidiInputMap_Interceptor_MapMixin() {
    },
    _MidiOutputMap_Interceptor_MapMixin: function _MidiOutputMap_Interceptor_MapMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin: function _MimeTypeArray_Interceptor_ListMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: function _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_Interceptor_ListMixin: function _PluginArray_Interceptor_ListMixin() {
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: function _PluginArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_Interceptor_MapMixin: function _RtcStatsReport_Interceptor_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin: function _SpeechGrammarList_Interceptor_ListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: function _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin: function _TextTrackCueList_Interceptor_ListMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: function _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin: function __CssRuleList_Interceptor_ListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: function __CssRuleList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_Interceptor_ListMixin: function __GamepadList_Interceptor_ListMixin() {
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: function __GamepadList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin: function __StyleSheetList_Interceptor_ListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: function __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  D = {GrowableAudioBuffer: function GrowableAudioBuffer(t0, t1) {
      var _ = this;
      _._channels = t0;
      _.sampleRate = 44100;
      _.samples = 0;
      _._buffer = null;
      _.waveform = t1;
    },
    SequencerRow$: function(instrument, position, sound, $name, color) {
      var t1 = new D.SequencerRow(instrument, $name, position, sound, color, H.setRuntimeTypeInfo([], type$.JSArray_SequencerButton));
      t1.SequencerRow$5(instrument, position, sound, $name, color);
      return t1;
    },
    SequencerDrumButton$: function(row) {
      var t1 = new D.SequencerDrumButton(row);
      t1.SequencerDrumButton$1(row);
      return t1;
    },
    SequencerButton$: function(row, col, x) {
      var t1 = new D.SequencerButton(row, col, x);
      t1.SequencerButton$3(row, col, x);
      return t1;
    },
    Sequencer: function Sequencer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rows = t0;
      _.steps = 16;
      _.controls = t1;
      _.name = t2;
      _._stream = t3;
      _.container = _.root = null;
      _.parent = t4;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    Sequencer_render_closure: function Sequencer_render_closure(t0) {
      this.controls = t0;
    },
    SequencerRow: function SequencerRow(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.instrument = t0;
      _.name = t1;
      _.container = null;
      _.position = t2;
      _.sound = t3;
      _.color = t4;
      _.brushing = false;
      _.brushVelocity = 0;
      _.muteButton = _.volumeDial = _.pitchDial = null;
      _.buttons = t5;
      _.dbutton = null;
    },
    SequencerRow_closure: function SequencerRow_closure(t0) {
      this.$this = t0;
    },
    SequencerRow_closure0: function SequencerRow_closure0(t0) {
      this.$this = t0;
    },
    SequencerRow_closure1: function SequencerRow_closure1(t0) {
      this.$this = t0;
    },
    SequencerRow_mute_closure: function SequencerRow_mute_closure() {
    },
    SequencerRow_unmute_closure: function SequencerRow_unmute_closure() {
    },
    SequencerDrumButton: function SequencerDrumButton(t0) {
      var _ = this;
      _.row = t0;
      _.container = _.label = _.backing = null;
    },
    SequencerDrumButton_closure: function SequencerDrumButton_closure(t0) {
      this.$this = t0;
    },
    SequencerButton: function SequencerButton(t0, t1, t2) {
      var _ = this;
      _.row = t0;
      _.col = t1;
      _.x = t2;
      _.velocity = 0;
      _.container = _.light = _.backing = null;
      _._sequencer$_disabled = false;
    },
    SequencerButton_closure: function SequencerButton_closure(t0) {
      this.$this = t0;
    },
    SequencerButton_closure0: function SequencerButton_closure0(t0) {
      this.$this = t0;
    },
    SequencerButton_closure1: function SequencerButton_closure1(t0) {
      this.$this = t0;
    },
    Key: function Key(t0, t1) {
      this.pattern = t0;
      this.name = t1;
    },
    TimelineListener: function TimelineListener() {
    },
    Timeline: function Timeline(t0, t1, t2, t3) {
      var _ = this;
      _.listener = t0;
      _.tracks = 12;
      _.beats = 8;
      _._playhead = 0;
      _._playheadLine = t1;
      _.trace = null;
      _.notes = t2;
      _.container = _.root = _._waveform = null;
      _.parent = t3;
      _.width = 900;
      _.height = 200;
      _._scroll_root = null;
      _._down = false;
    },
    Timeline_setInstrument_closure: function Timeline_setInstrument_closure() {
    },
    Timeline_insert_closure: function Timeline_insert_closure(t0) {
      this.$this = t0;
    },
    Timeline__render_closure: function Timeline__render_closure(t0) {
      this.$this = t0;
    },
    Timeline__render_closure0: function Timeline__render_closure0(t0) {
      this.$this = t0;
    },
    Timeline__registerTouchEvents_closure: function Timeline__registerTouchEvents_closure(t0) {
      this.$this = t0;
    },
    Timeline__registerTouchEvents_closure0: function Timeline__registerTouchEvents_closure0(t0) {
      this.$this = t0;
    },
    Timeline__registerTouchEvents_closure1: function Timeline__registerTouchEvents_closure1(t0) {
      this.$this = t0;
    },
    Timeline__registerTouchEvents_closure2: function Timeline__registerTouchEvents_closure2(t0) {
      this.$this = t0;
    },
    Timeline__renderNote_closure: function Timeline__renderNote_closure(t0, t1, t2) {
      this.$this = t0;
      this.t = t1;
      this.tt = t2;
    },
    Timeline__renderNote_closure0: function Timeline__renderNote_closure0(t0, t1) {
      this.$this = t0;
      this.t = t1;
    },
    Timeline__renderNote_closure1: function Timeline__renderNote_closure1(t0, t1) {
      this.$this = t0;
      this.t = t1;
    },
    Timeline__renderNote_closure2: function Timeline__renderNote_closure2(t0, t1) {
      this.$this = t0;
      this.t = t1;
    },
    DropdownMenu_armMenu: function(target, onSelected) {
      var t1, t2, t3;
      if (target != null) {
        t1 = J.get$onMouseDown$x(target);
        t2 = t1.$ti;
        t3 = t2._eval$1("~(1)")._as(new D.DropdownMenu_armMenu_closure(target));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(t1._target, t1._eventType, t3, false, t2._precomputed1);
        t2 = type$.Element;
        H.checkTypeBound(t2, t2, "T", "querySelectorAll");
        new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(target.querySelectorAll(".menu-item"), type$._FrozenElementList_Element)), false, "mousedown", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new D.DropdownMenu_armMenu_closure0(onSelected));
      }
    },
    DropdownMenu_closeAllMenus: function() {
      P.Timer_Timer(C.Duration_50000, new D.DropdownMenu_closeAllMenus_closure());
    },
    DropdownMenu__toggleMenu: function(menu) {
      var t1, t2;
      if (menu != null) {
        t1 = type$.Element;
        t2 = document;
        H.checkTypeBound(t1, t1, "T", "querySelectorAll");
        t2 = new W._FrozenElementList(t2.querySelectorAll(".context-menu"), type$._FrozenElementList_Element);
        t2.forEach$1(t2, new D.DropdownMenu__toggleMenu_closure(menu));
        J.get$classes$x(menu).toggle$1(0, "hidden");
      }
    },
    DropdownMenu_armMenu_closure: function DropdownMenu_armMenu_closure(t0) {
      this.target = t0;
    },
    DropdownMenu_armMenu_closure0: function DropdownMenu_armMenu_closure0(t0) {
      this.onSelected = t0;
    },
    DropdownMenu_closeAllMenus_closure: function DropdownMenu_closeAllMenus_closure() {
    },
    DropdownMenu__toggleMenu_closure: function DropdownMenu__toggleMenu_closure(t0) {
      this.menu = t0;
    }
  },
  U = {
    _toInt: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    MIDIManager: function MIDIManager(t0, t1) {
      var _ = this;
      _.inputs = t0;
      _.outputs = t1;
      _._messageStream = _._stateStream = null;
    },
    MIDIEvent: function MIDIEvent(t0) {
      this.data = t0;
    },
    SynthChain: function SynthChain(t0, t1) {
      var _ = this;
      _.context = t0;
      _.free = true;
      _.nodes = t1;
      _.out = null;
      _.maxD = _.release = 0;
    },
    SynthChain_playNote_closure: function SynthChain_playNote_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.$this = t0;
      _.note = t1;
      _.when = t2;
      _.offset = t3;
      _.duration = t4;
      _.sustain = t5;
    },
    SynthChain_pitchBend_closure: function SynthChain_pitchBend_closure(t0) {
      this.cents = t0;
    },
    SynthChain_schedulePitchBend_closure: function SynthChain_schedulePitchBend_closure(t0, t1) {
      this.start = t0;
      this.cents = t1;
    },
    SynthChain_releaseNote_closure: function SynthChain_releaseNote_closure() {
    },
    SynthChain_destroy_closure: function SynthChain_destroy_closure() {
    },
    EffectsChain$: function(color, studio) {
      var t1 = new U.EffectsChain(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), studio);
      t1.EffectsChain$2(color, studio);
      return t1;
    },
    EffectsChain: function EffectsChain(t0, t1) {
      var _ = this;
      _.masterDial = _.midDial = _.trebleDial = _.bassDial = _.crushDial = _.reverbDial = _.pitchDial = _.master = _.rDry = _.rWet = _.convolve = _.midNode = _.trebleNode = _.bassNode = _.recorder = _.source = null;
      _.sounds = t0;
      _._adjusted = false;
      _.studio = t1;
      _._absn = null;
    },
    EffectsChain_closure: function EffectsChain_closure(t0) {
      this.$this = t0;
    },
    EffectsChain_closure0: function EffectsChain_closure0(t0) {
      this.$this = t0;
    },
    EffectsChain_closure1: function EffectsChain_closure1(t0) {
      this.$this = t0;
    },
    EffectsChain_closure2: function EffectsChain_closure2(t0) {
      this.$this = t0;
    },
    EffectsChain_closure3: function EffectsChain_closure3(t0) {
      this.$this = t0;
    },
    EffectsChain_closure4: function EffectsChain_closure4(t0) {
      this.$this = t0;
    },
    EffectsChain_closure5: function EffectsChain_closure5(t0) {
      this.$this = t0;
    },
    EffectsChain_playAudio_closure: function EffectsChain_playAudio_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.processed = t2;
    },
    EffectsChain_playSlice_closure: function EffectsChain_playSlice_closure(t0) {
      this.$this = t0;
    },
    EffectsChain_loadSoundEffects_closure: function EffectsChain_loadSoundEffects_closure(t0, t1, t2) {
      this.$this = t0;
      this.context = t1;
      this.request = t2;
    },
    EffectsChain_loadSoundEffects_closure0: function EffectsChain_loadSoundEffects_closure0() {
    }
  },
  X = {PythonListener: function PythonListener() {
    }, PythonCompiler: function PythonCompiler(t0, t1) {
      this.listener = t0;
      this._compiling = false;
      this.pp = t1;
    }, SynthEvent: function SynthEvent(t0, t1) {
      var _ = this;
      _.note = t0;
      _.context = t1;
      _.chain = null;
      _.start = 0;
      _.onEnded = null;
      _.canceled = false;
    }, SynthEvent_releaseNote_closure: function SynthEvent_releaseNote_closure(t0) {
      this.$this = t0;
    }, SynthEvent_scheduleNote_closure: function SynthEvent_scheduleNote_closure(t0) {
      this.$this = t0;
    },
    PythonCell$: function(gadget, datastore, clock) {
      var t1 = new X.PythonCell(clock, gadget, datastore);
      t1.TunePadCell$2(gadget, datastore);
      t1.PythonCell$3(gadget, datastore, clock);
      return t1;
    },
    PythonCell: function PythonCell(t0, t1, t2) {
      var _ = this;
      _.clock = t0;
      _.compiler = _.editor = null;
      _._lastline = 0;
      _.gadget = t1;
      _.datastore = t2;
      _.collaborators = _.root = null;
    },
    PythonCell_insert_closure: function PythonCell_insert_closure(t0) {
      this.$this = t0;
    },
    PythonCell_insert_closure0: function PythonCell_insert_closure0(t0) {
      this.$this = t0;
    },
    PythonCell_insert_closure1: function PythonCell_insert_closure1(t0) {
      this.$this = t0;
    },
    PythonCell_insert_closure2: function PythonCell_insert_closure2(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    PythonCell_onPythonDone_closure: function PythonCell_onPythonDone_closure(t0) {
      this.$this = t0;
    },
    PythonCell__shareCell_closure: function PythonCell__shareCell_closure(t0) {
      this.$this = t0;
    },
    PythonCell__shareCell_closure0: function PythonCell__shareCell_closure0(t0, t1) {
      this.$this = t0;
      this.dialog = t1;
    },
    PythonCell_doContextMenu_closure: function PythonCell_doContextMenu_closure(t0) {
      this.$this = t0;
    },
    _PythonCell_TunePadCell_PythonListener: function _PythonCell_TunePadCell_PythonListener() {
    },
    _PythonCell_TunePadCell_PythonListener_EditorListener: function _PythonCell_TunePadCell_PythonListener_EditorListener() {
    }
  },
  S = {Preprocessor: function Preprocessor(t0, t1, t2) {
      var _ = this;
      _.linemap = t0;
      _._matchings = t1;
      _._output = t2;
      _._multiline = false;
      _._lastValidIndent = "";
      _.hasImports = false;
    }, Instrument: function Instrument() {
    }, Instrument_unload_closure: function Instrument_unload_closure() {
    }, NoteEvent: function NoteEvent(t0, t1, t2, t3) {
      var _ = this;
      _.message = t0;
      _.source = t1;
      _.note = t2;
      _.velocity = t3;
    },
    Datastore$: function(host, wss) {
      var _null = null,
        t1 = type$.dynamic,
        t2 = type$.DatastoreEvent;
      t2 = new S.Datastore(P.LinkedHashMap_LinkedHashMap$_literal(["apiKey", "AIzaSyBccCx1WaXXMqf8tq-_1dwO2qr76f6RHFo", "authDomain", "tunepadbeta.firebaseapp.com", "databaseURL", "https://tunepadbeta.firebaseio.com", "projectId", "tunepadbeta", "storageBucket", "tunepadbeta.appspot.com", "messagingSenderId", "803854221469", "appId", "1:803854221469:web:59b8d6beedab219d7bd474"], t1, t1), host, N.User$anonymous(), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2), P.StreamController_StreamController$broadcast(_null, false, t2));
      t2.Datastore$2(host, wss);
      return t2;
    },
    DataModel_DataModel$fromJson: function(json) {
      var t1, project, gadget, t2, patch, t3, t4, recording, user, _s4_ = "type", _s2_ = "id",
        _s9_ = "recording";
      if (json == null || J.$index$asx(json, _s4_) == null)
        return null;
      else {
        t1 = J.getInterceptor$asx(json);
        if (J.$eq$(t1.$index(json, _s4_), "projects")) {
          project = K.Project$(t1.$index(json, _s2_));
          project.load$1(0, json);
          return project;
        } else if (J.$eq$(t1.$index(json, _s4_), "gadgets")) {
          t1 = t1.$index(json, _s2_);
          gadget = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          gadget.type = "gadgets";
          gadget.name = "New Track";
          gadget.load$1(0, json);
          return gadget;
        } else if (J.$eq$(t1.$index(json, _s4_), "patch")) {
          t2 = type$.dynamic;
          patch = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), H._asIntNullable(t1.$index(json, _s2_)), new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          patch.voice = "My Patch";
          patch.type = "patch";
          patch.load$1(0, json);
          return patch;
        } else if (J.$eq$(t1.$index(json, _s4_), _s9_)) {
          t1 = H._asIntNullable(t1.$index(json, _s2_));
          t2 = type$.JSArray_List_Float32List;
          t3 = type$.List_num;
          t4 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t2), P.ListQueue$(t3));
          t4.reshape$2(1, 44100);
          t3 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t2), P.ListQueue$(t3));
          t3.reshape$2(1, 44100);
          recording = new R.Recording(t4, t3, new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_num), t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          recording.name = "My Recording";
          recording.type = _s9_;
          recording.load$1(0, json);
          return recording;
        } else if (J.$eq$(t1.$index(json, _s4_), "user")) {
          t1 = t1.$index(json, _s2_);
          user = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          user.type = "user";
          user.load$1(0, json);
          return user;
        }
      }
      return null;
    },
    DatastoreEvent$fromJson: function(json) {
      var t1 = new S.DatastoreEvent(null, "created", false, null);
      t1.DatastoreEvent$fromJson$1(json);
      return t1;
    },
    DatastoreException$: function(code) {
      return new S.DatastoreException();
    },
    Datastore: function Datastore(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._credentials = t0;
      _.host = t1;
      _.wid = _.socket = null;
      _.user = t2;
      _._created_stream = t3;
      _._updated_stream = t4;
      _._deleted_stream = t5;
      _._reordered_stream = t6;
      _._message_stream = t7;
      _._login_stream = t8;
      _._logout_stream = t9;
    },
    Datastore_closure: function Datastore_closure() {
    },
    Datastore_closure0: function Datastore_closure0(t0) {
      this.wss = t0;
    },
    Datastore_loginWithGoogle_closure: function Datastore_loginWithGoogle_closure(t0) {
      this.$this = t0;
    },
    Datastore_loginWithGoogle__closure: function Datastore_loginWithGoogle__closure() {
    },
    DataModel: function DataModel() {
    },
    DatastoreEvent: function DatastoreEvent(t0, t1, t2, t3) {
      var _ = this;
      _.target = t0;
      _.type = t1;
      _.remote = t2;
      _.payload = t3;
    },
    DatastoreException: function DatastoreException() {
    }
  },
  N = {HexCodec: function HexCodec() {
    },
    Drums$: function(patch) {
      var t1 = new N.Drums(H.setRuntimeTypeInfo([], type$.JSArray_DrumPad), "drums", P.StreamController_StreamController(false, type$.NoteEvent), type$.GElement._as(type$.SvgElement._as(C.HtmlDocument_methods.createElementNS$2(document, "http://www.w3.org/2000/svg", "g"))));
      t1.Drums$1(patch);
      return t1;
    },
    DrumPad$: function(drums, row, col, midi, $name) {
      var _s4_ = "text",
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement,
        t3 = type$.TextElement;
      t1 = new N.DrumPad(drums, row, col, midi, $name, t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_))), t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_))), t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_))), type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))), type$.RectElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect"))));
      t1.DrumPad$5(drums, row, col, midi, $name);
      return t1;
    },
    Drums: function Drums(t0, t1, t2, t3) {
      var _ = this;
      _.pads = t0;
      _.name = t1;
      _._stream = t2;
      _.container = _.root = null;
      _.parent = t3;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    DrumPad: function DrumPad(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.drums = t0;
      _.row = t1;
      _.col = t2;
      _.midi = t3;
      _.name = t4;
      _._keyHint = t5;
      _._midiHint = t6;
      _._text = t7;
      _._group = t8;
      _._rect = t9;
      _._drums$_down = false;
    },
    DrumPad_closure: function DrumPad_closure(t0) {
      this.$this = t0;
    },
    DrumPad_closure0: function DrumPad_closure0(t0) {
      this.$this = t0;
    },
    DrumPad_closure1: function DrumPad_closure1(t0) {
      this.$this = t0;
    },
    DrumPad_closure2: function DrumPad_closure2(t0) {
      this.$this = t0;
    },
    User$anonymous: function() {
      var t1 = new N.User(C.C__JSRandom, null, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      t1.id = K.Uuid$().v1$0();
      t1.type = "user";
      t1.name = "Anonymous";
      t1.displayName = "Anonymous User";
      t1.anonymous = true;
      t1.color = t1._randomColor$0();
      t1.icon = t1._randomIcon$0();
      t1.photo = null;
      return t1;
    },
    User: function User(t0, t1, t2, t3) {
      var _ = this;
      _.email = _.displayName = null;
      _.anonymous = false;
      _.photo = _.icon = _.color = null;
      _._rand = t0;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    }
  },
  R = {
    _convert: function(bytes, start, end) {
      var t1, t2, i, bufferIndex, byteOr, byte, bufferIndex0, t3,
        buffer = new Uint8Array((end - start) * 2);
      for (t1 = buffer.length, t2 = bytes.length, i = start, bufferIndex = 0, byteOr = 0; i < end; ++i) {
        if (i >= t2)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return H.iae(byte);
        byteOr = (byteOr | byte) >>> 0;
        bufferIndex0 = bufferIndex + 1;
        t3 = (byte & 240) >>> 4;
        t3 = t3 < 10 ? t3 + 48 : t3 + 97 - 10;
        if (bufferIndex >= t1)
          return H.ioore(buffer, bufferIndex);
        buffer[bufferIndex] = t3;
        bufferIndex = bufferIndex0 + 1;
        t3 = byte & 15;
        t3 = t3 < 10 ? t3 + 48 : t3 + 97 - 10;
        if (bufferIndex0 >= t1)
          return H.ioore(buffer, bufferIndex0);
        buffer[bufferIndex0] = t3;
      }
      if (byteOr >= 0 && byteOr <= 255)
        return P.String_String$fromCharCodes(buffer);
      for (i = start; i < end; ++i) {
        if (i >= t2)
          return H.ioore(bytes, i);
        byte = bytes[i];
        if (typeof byte !== "number")
          return byte.$ge();
        if (byte >= 0 && byte <= 255)
          continue;
        throw H.wrapException(P.FormatException$("Invalid byte " + (byte < 0 ? "-" : "") + "0x" + C.JSInt_methods.toRadixString$1(Math.abs(byte), 16) + ".", bytes, i));
      }
      throw H.wrapException("unreachable");
    },
    HexEncoder: function HexEncoder() {
    },
    CodeMirror_onEditorUpdate: function(editor, change) {
      H._asStringNullable(editor);
      H._asStringNullable(change);
      if ($.$get$CodeMirror_editorUpdateMap().containsKey$1(0, editor))
        P.Function_apply($.$get$CodeMirror_editorUpdateMap().$index(0, editor), [C.C_JsonCodec.decode$2$reviver(0, change, null)], null);
    },
    CodeMirror_onCursorActivity: function(editor, position) {
      H._asStringNullable(editor);
      H._asStringNullable(position);
      if ($.$get$CodeMirror_cursorActivityMap().containsKey$1(0, editor))
        P.Function_apply($.$get$CodeMirror_cursorActivityMap().$index(0, editor), [C.C_JsonCodec.decode$2$reviver(0, position, null)], null);
    },
    CodeMirror_onEditorBlur: function(editor) {
      H._asStringNullable(editor);
      if ($.$get$CodeMirror_editorBlurMap().containsKey$1(0, editor))
        P.Function_apply($.$get$CodeMirror_editorBlurMap().$index(0, editor), [], null);
    },
    CodeMirror_onEditorFocus: function(editor) {
      H._asStringNullable(editor);
      if ($.$get$CodeMirror_editorFocusMap().containsKey$1(0, editor))
        P.Function_apply($.$get$CodeMirror_editorFocusMap().$index(0, editor), [], null);
    },
    CodeMirror: function CodeMirror(t0, t1) {
      var _ = this;
      _.id = t0;
      _.listener = t1;
      _._codemirror$_noEvents = _._codemirror$_dirty = false;
    },
    UserAccounts_login: function(datastore) {
      var t1, t2, t3, t4, form,
        _s16_ = "querySelectorAll",
        dialog = E.Dialog_openModal("#login-template", null),
        forgot = type$.AnchorElement._as(dialog.querySelector("#forgot-link"));
      if (forgot != null)
        forgot.href = datastore.host + "/account/reset";
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      t3 = type$.ElementList_Element;
      t4 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(dialog.querySelectorAll("#google-button"), t2)), false, "click", t4).listen$1(new R.UserAccounts_login_closure(datastore));
      H.checkTypeBound(t1, t1, "T", _s16_);
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(dialog.querySelectorAll("#join-button"), t2)), false, "click", t4).listen$1(new R.UserAccounts_login_closure0(datastore));
      H.checkTypeBound(t1, t1, "T", _s16_);
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(dialog.querySelectorAll("input"), t2)), false, "input", type$._ElementListEventStreamImpl_Event).listen$1(new R.UserAccounts_login_closure1(dialog));
      form = type$.FormElement._as(dialog.querySelector("#login-form"));
      if (form != null) {
        t1 = type$._ElementEventStreamImpl_Event;
        t2 = t1._eval$1("~(1)")._as(new R.UserAccounts_login_closure2(dialog, datastore));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(form, "submit", t2, false, t1._precomputed1);
      }
    },
    UserAccounts__onSubmit: function(dialog, datastore) {
      return R.UserAccounts__onSubmit$body(dialog, datastore);
    },
    UserAccounts__onSubmit$body: function(dialog, datastore) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], username, password, t2, errors, t3, regx, exception, email, t1, $async$exception;
      var $async$UserAccounts__onSubmit = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              email = false;
              t1 = type$.Element;
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              t2 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(dialog.querySelectorAll(".message"), t2)).add$1(0, "hidden");
              username = R.UserAccounts__getInputValue(dialog, "#username");
              if (username == null || J.$eq$(username, "")) {
                R.UserAccounts__showError(dialog, "#username-message", "Please enter your username or email.");
                errors = true;
              } else
                errors = false;
              password = R.UserAccounts__getInputValue(dialog, "#password");
              if (password == null || J.$eq$(password, "")) {
                R.UserAccounts__showError(dialog, "#password-message", "Please enter your password.");
                errors = true;
              }
              if (errors) {
                // goto return
                $async$goto = 1;
                break;
              }
              datastore.toString;
              t3 = H._asStringNullable(username);
              regx = P.RegExp_RegExp("^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,253}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,253}[a-zA-Z0-9])?)*$");
              if (typeof t3 != "string")
                H.throwExpression(H.argumentErrorValue(t3));
              email = regx._nativeRegExp.test(t3);
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(dialog.querySelectorAll(".btn"), t2)).add$1(0, "loading");
              $async$handler = 4;
              $async$goto = H.boolConversionCheck(email) ? 7 : 9;
              break;
            case 7:
              // then
              $async$goto = 10;
              return P._asyncAwait(datastore.login$3(null, username, password), $async$UserAccounts__onSubmit);
            case 10:
              // returning from await.
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = 11;
              return P._asyncAwait(datastore.login$3(username, null, password), $async$UserAccounts__onSubmit);
            case 11:
              // returning from await.
            case 8:
              // join
              E.Dialog_closeModal();
              E.Dialog_message("Sign in successful.", "", "OK");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              if (H.unwrapException($async$exception) instanceof S.DatastoreException)
                if (H.boolConversionCheck(email))
                  R.UserAccounts__showError(dialog, "#general-message", "Invalid email or password.");
                else
                  R.UserAccounts__showError(dialog, "#general-message", "Invalid username or password.");
              else
                R.UserAccounts__showError(dialog, "#general-message", "There was a problem signing in.");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(dialog.querySelectorAll(".btn"), t2)).remove$1(0, "loading");
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$UserAccounts__onSubmit, $async$completer);
    },
    UserAccounts__showError: function(dialog, selector, message) {
      var t1,
        el = dialog.querySelector(selector);
      if (el != null) {
        t1 = J.getInterceptor$x(el);
        t1.get$classes(el).remove$1(0, "hidden");
        t1.set$innerHtml(el, message);
      }
    },
    UserAccounts__getInputValue: function(dialog, selector) {
      var el = type$.InputElement._as(dialog.querySelector(selector));
      return el != null ? J.trim$0$s(el.value) : "";
    },
    UserAccounts_login_closure: function UserAccounts_login_closure(t0) {
      this.datastore = t0;
    },
    UserAccounts_login_closure0: function UserAccounts_login_closure0(t0) {
      this.datastore = t0;
    },
    UserAccounts_login_closure1: function UserAccounts_login_closure1(t0) {
      this.dialog = t0;
    },
    UserAccounts_login_closure2: function UserAccounts_login_closure2(t0, t1) {
      this.dialog = t0;
      this.datastore = t1;
    },
    Recording: function Recording(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.instrument = _.description = "";
      _.duration = 0;
      _.original = t0;
      _.processed = t1;
      _.settings = t2;
      _.Recording_username = "";
      _.remix_count = _.star_count = _.like_count = 0;
      _.deleted = _.$public = false;
      _.id = t3;
      _.name = _.type = "";
      _.username = null;
      _.created = t4;
      _.modified = t5;
    },
    PythonTrack$: function(gadget, patches, datastore, clock) {
      var t2, t3, t4, t5, patchId,
        _s26_ = "http://www.w3.org/2000/svg",
        _s5_ = "patch",
        _s13_ = "show-timeline",
        _s11_ = "show-editor",
        _s15_ = "show-instrument",
        _s10_ = "midi-input",
        _s11_0 = "midi-output",
        t1 = new R.PythonTrack(patches, clock, gadget, datastore);
      t1.TunePadCell$2(gadget, datastore);
      t1.PythonCell$3(gadget, datastore, clock);
      t2 = clock._listeners;
      t2.add$1(0, t1);
      t3 = document;
      t4 = type$.SvgElement;
      t5 = type$.PathElement._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, "path")));
      t1.timeline = new D.Timeline(t1, t5, new H.JsLinkedHashMap(type$.JsLinkedHashMap_TraceEvent_SvgElement), type$.GElement._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, "g"))));
      t3 = type$.JSArray_Effect;
      t4 = type$.JSArray_SynthEvent;
      t5 = type$.JSArray_SynthChain;
      t1.synth = new B.SchedulerSynth(H.setRuntimeTypeInfo([], t3), H.setRuntimeTypeInfo([], t4), H.setRuntimeTypeInfo([], t5));
      t1.metronome = new L.Synthesizer(H.setRuntimeTypeInfo([], t3), H.setRuntimeTypeInfo([], t4), H.setRuntimeTypeInfo([], t5));
      Date.now();
      Date.now();
      t1.metronome.loadPatch$3("metronome", C.Map_b8IFE, clock.context);
      t5 = new V.NoteRecorder(clock, H.setRuntimeTypeInfo([], type$.JSArray_NoteSpacer));
      t2.add$1(0, t5);
      t1.recorder = t5;
      t1.trace = new Y.Trace(H.setRuntimeTypeInfo([], type$.JSArray_TraceEvent));
      t1.midi = $.$get$MIDIManager__singleton();
      if (!gadget.idata.containsKey$1(0, "author"))
        gadget.idata.$indexSet(0, "author", "Anonymous");
      if (!gadget.idata.containsKey$1(0, _s13_))
        gadget.idata.$indexSet(0, _s13_, true);
      if (!gadget.idata.containsKey$1(0, _s11_))
        gadget.idata.$indexSet(0, _s11_, true);
      if (!gadget.idata.containsKey$1(0, _s15_))
        gadget.idata.$indexSet(0, _s15_, true);
      if (!gadget.idata.containsKey$1(0, _s10_))
        gadget.idata.$indexSet(0, _s10_, false);
      if (!gadget.idata.containsKey$1(0, _s11_0))
        gadget.idata.$indexSet(0, _s11_0, false);
      if (!gadget.idata.containsKey$1(0, "gain"))
        gadget.idata.$indexSet(0, "gain", 1);
      if (!gadget.idata.containsKey$1(0, "pan"))
        gadget.idata.$indexSet(0, "pan", 0);
      if (!gadget.idata.containsKey$1(0, "cloned"))
        gadget.idata.$indexSet(0, "cloned", false);
      if (!gadget.idata.containsKey$1(0, _s5_)) {
        t2 = t1._lookupSynthPatch$2(gadget.voice, gadget.instrument);
        t1.voice = t2;
        gadget.idata.$indexSet(0, _s5_, t2.id);
      } else {
        patchId = B.toInt0(gadget.idata.$index(0, _s5_), 9);
        if (patches.containsKey$1(0, patchId))
          t1.set$voice(0, patches.$index(0, patchId));
        else
          t1.voice = L.SynthPatch$piano();
      }
      t1._initMidi$0();
      return t1;
    },
    PythonTrack: function PythonTrack(t0, t1, t2, t3) {
      var _ = this;
      _.voice = _.synth = _.timeline = null;
      _.patches = t0;
      _._lastTrace = _._panNode = _._gainNode = _.midi = _.trace = _.recorder = _.instrument = _.metronome = null;
      _._lastTime = -1;
      _._looped = false;
      _.clock = t1;
      _.compiler = _.editor = null;
      _._lastline = 0;
      _.gadget = t2;
      _.datastore = t3;
      _.collaborators = _.root = null;
    },
    PythonTrack_insert_closure: function PythonTrack_insert_closure(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure0: function PythonTrack_insert_closure0(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure1: function PythonTrack_insert_closure1(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure2: function PythonTrack_insert_closure2(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure3: function PythonTrack_insert_closure3(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure4: function PythonTrack_insert_closure4(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure5: function PythonTrack_insert_closure5(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure6: function PythonTrack_insert_closure6(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure7: function PythonTrack_insert_closure7(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure8: function PythonTrack_insert_closure8(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure9: function PythonTrack_insert_closure9(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure10: function PythonTrack_insert_closure10(t0) {
      this.$this = t0;
    },
    PythonTrack_insert_closure11: function PythonTrack_insert_closure11(t0) {
      this.$this = t0;
    },
    PythonTrack_onPythonDone_closure: function PythonTrack_onPythonDone_closure(t0) {
      this.$this = t0;
    },
    PythonTrack__initVoiceMenu_closure: function PythonTrack__initVoiceMenu_closure(t0, t1) {
      this.$this = t0;
      this.patch = t1;
    },
    PythonTrack__setInstrument_closure: function PythonTrack__setInstrument_closure() {
    },
    PythonTrack__setInstrument_closure0: function PythonTrack__setInstrument_closure0(t0) {
      this.$this = t0;
    },
    PythonTrack__shareTrack_closure: function PythonTrack__shareTrack_closure(t0) {
      this.$this = t0;
    },
    PythonTrack__shareTrack_closure0: function PythonTrack__shareTrack_closure0(t0, t1) {
      this.$this = t0;
      this.dialog = t1;
    },
    PythonTrack_doContextMenu_closure: function PythonTrack_doContextMenu_closure(t0) {
      this.$this = t0;
    },
    PythonTrack__initMidi_closure: function PythonTrack__initMidi_closure(t0) {
      this.$this = t0;
    },
    PythonTrack_toggleContextMenu_closure: function PythonTrack_toggleContextMenu_closure(t0) {
      this.menu = t0;
    },
    _PythonTrack_PythonCell_PythonListener: function _PythonTrack_PythonCell_PythonListener() {
    },
    _PythonTrack_PythonCell_PythonListener_EditorListener: function _PythonTrack_PythonCell_PythonListener_EditorListener() {
    },
    _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener: function _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener() {
    },
    _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber: function _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber() {
    },
    _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome: function _PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome() {
    }
  },
  Z = {EditorListener: function EditorListener() {
    }, OutlineView: function OutlineView(t0, t1) {
      this.dropbook = t0;
      this.datastore = t1;
    }, OutlineView_loadProject_closure: function OutlineView_loadProject_closure(t0) {
      this.$this = t0;
    }, OutlineView_loadProject__closure: function OutlineView_loadProject__closure(t0) {
      this.$this = t0;
    }, OutlineView_createItem_closure: function OutlineView_createItem_closure(t0, t1) {
      this.$this = t0;
      this.gadget = t1;
    }, OutlineView_createItem_closure0: function OutlineView_createItem_closure0(t0, t1) {
      this.$this = t0;
      this.gadget = t1;
    }, OutlineView_createItem_closure1: function OutlineView_createItem_closure1(t0, t1) {
      this.$this = t0;
      this.gadget = t1;
    }, OutlineView_createItem_closure2: function OutlineView_createItem_closure2(t0, t1, t2) {
      this.$this = t0;
      this.list = t1;
      this.item = t2;
    }, OutlineView_updateItem_closure: function OutlineView_updateItem_closure() {
    }, OutlineView__reorder_closure: function OutlineView__reorder_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.minY = t1;
      _.maxY = t2;
      _.startY = t3;
      _.item = t4;
      _.scrollY = t5;
      _.offY = t6;
      _.list = t7;
    }, OutlineView__reorder_closure0: function OutlineView__reorder_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.sub = t2;
      _.item = t3;
      _.list = t4;
    }},
  A = {
    QuillEditor_onEditorUpdate: function(editor, change) {
      H._asStringNullable(editor);
      H._asStringNullable(change);
      if ($.$get$QuillEditor_editorUpdateMap().containsKey$1(0, editor))
        P.Function_apply($.$get$QuillEditor_editorUpdateMap().$index(0, editor), [C.C_JsonCodec.decode$2$reviver(0, change, null)], null);
    },
    QuillEditor: function QuillEditor(t0, t1) {
      var _ = this;
      _.id = t0;
      _.listener = t1;
      _._noEvents = _._dirty = false;
    },
    QuillEditor_initialize_closure: function QuillEditor_initialize_closure(t0) {
      this.$this = t0;
    },
    QuillEditor_initialize_closure0: function QuillEditor_initialize_closure0(t0, t1) {
      this.$this = t0;
      this.toolbar = t1;
    },
    TunePadCell: function TunePadCell() {
    },
    TunePadCell_insert_closure: function TunePadCell_insert_closure(t0) {
      this.$this = t0;
    },
    TunePadCell_insert_closure0: function TunePadCell_insert_closure0(t0) {
      this.$this = t0;
    },
    TunePadCell_insert_closure1: function TunePadCell_insert_closure1(t0) {
      this.$this = t0;
    },
    TunePadCell_insert_closure2: function TunePadCell_insert_closure2(t0) {
      this.$this = t0;
    },
    _TunePadCell_Object_EditorListener: function _TunePadCell_Object_EditorListener() {
    },
    Dropbook$: function(project, datastore) {
      var t1 = new A.Dropbook(datastore, project, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_SynthPatch), H.setRuntimeTypeInfo([], type$.JSArray_TunePadCell));
      t1.Dropbook$2(project, datastore);
      return t1;
    },
    Dropbook: function Dropbook(t0, t1, t2, t3) {
      var _ = this;
      _.datastore = t0;
      _.project = t1;
      _.patches = t2;
      _.cells = t3;
      _._loading = false;
      _._art_cache = "";
    },
    Dropbook_closure: function Dropbook_closure(t0) {
      this.$this = t0;
    },
    Dropbook_closure0: function Dropbook_closure0(t0) {
      this.$this = t0;
    },
    Dropbook_playAll_closure: function Dropbook_playAll_closure() {
    },
    Dropbook_pauseAll_closure: function Dropbook_pauseAll_closure() {
    },
    Dropbook__registerEvents_closure: function Dropbook__registerEvents_closure(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents__closure0: function Dropbook__registerEvents__closure0(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure0: function Dropbook__registerEvents_closure0(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure1: function Dropbook__registerEvents_closure1() {
    },
    Dropbook__registerEvents_closure2: function Dropbook__registerEvents_closure2(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure3: function Dropbook__registerEvents_closure3(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure4: function Dropbook__registerEvents_closure4(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure5: function Dropbook__registerEvents_closure5(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure6: function Dropbook__registerEvents_closure6(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure7: function Dropbook__registerEvents_closure7(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure8: function Dropbook__registerEvents_closure8(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure9: function Dropbook__registerEvents_closure9(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure10: function Dropbook__registerEvents_closure10(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure11: function Dropbook__registerEvents_closure11(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure12: function Dropbook__registerEvents_closure12() {
    },
    Dropbook__registerEvents_closure13: function Dropbook__registerEvents_closure13(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure14: function Dropbook__registerEvents_closure14(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure15: function Dropbook__registerEvents_closure15(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure16: function Dropbook__registerEvents_closure16() {
    },
    Dropbook__registerEvents_closure17: function Dropbook__registerEvents_closure17(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure18: function Dropbook__registerEvents_closure18(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure19: function Dropbook__registerEvents_closure19(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure20: function Dropbook__registerEvents_closure20(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure21: function Dropbook__registerEvents_closure21() {
    },
    Dropbook__registerEvents_closure22: function Dropbook__registerEvents_closure22(t0, t1, t2) {
      this.$this = t0;
      this.numField = t1;
      this.denField = t2;
    },
    Dropbook__registerEvents_closure23: function Dropbook__registerEvents_closure23(t0) {
      this.bpmField = t0;
    },
    Dropbook__registerEvents_closure24: function Dropbook__registerEvents_closure24(t0) {
      this.numField = t0;
    },
    Dropbook__registerEvents_closure25: function Dropbook__registerEvents_closure25(t0) {
      this.denField = t0;
    },
    Dropbook__registerEvents_closure26: function Dropbook__registerEvents_closure26(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure27: function Dropbook__registerEvents_closure27(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure28: function Dropbook__registerEvents_closure28(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure29: function Dropbook__registerEvents_closure29(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure30: function Dropbook__registerEvents_closure30(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure31: function Dropbook__registerEvents_closure31(t0) {
      this.$this = t0;
    },
    Dropbook__registerEvents_closure32: function Dropbook__registerEvents_closure32(t0) {
      this.artInput = t0;
    },
    Dropbook__registerEvents_closure33: function Dropbook__registerEvents_closure33(t0, t1) {
      this.$this = t0;
      this.artInput = t1;
    },
    Dropbook__registerEvents__closure: function Dropbook__registerEvents__closure(t0, t1) {
      this.$this = t0;
      this.reader = t1;
    },
    Dropbook__bindSpinnerButton_closure: function Dropbook__bindSpinnerButton_closure(t0, t1) {
      this._box_0 = t0;
      this.releaseAction = t1;
    },
    Dropbook__bindSpinnerButton_closure0: function Dropbook__bindSpinnerButton_closure0(t0, t1) {
      this._box_0 = t0;
      this.spinAction = t1;
    },
    Dropbook__bindSpinnerButton__closure: function Dropbook__bindSpinnerButton__closure(t0, t1) {
      this._box_0 = t0;
      this.spinAction = t1;
    },
    Dropbook__bindSpinnerButton___closure: function Dropbook__bindSpinnerButton___closure(t0, t1) {
      this._box_0 = t0;
      this.spinAction = t1;
    },
    Dropbook__toggleContextMenu_closure: function Dropbook__toggleContextMenu_closure(t0) {
      this.menu = t0;
    },
    _Dropbook_Object_ClockSubscriber: function _Dropbook_Object_ClockSubscriber() {
    }
  },
  Y = {
    BassFret$: function(bass, midi, $name, i, j) {
      var _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement;
      t1 = new Y.BassFret(bass, midi, $name, i, j, type$.TextElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text"))), type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))));
      t1.BassFret$5(bass, midi, $name, i, j);
      return t1;
    },
    BassGuitar: function BassGuitar(t0, t1, t2, t3, t4) {
      var _ = this;
      _._frets = t0;
      _._bass$_strings = t1;
      _.fretboard = null;
      _.name = t2;
      _._stream = t3;
      _.container = _.root = null;
      _.parent = t4;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    BassFret: function BassFret(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bass = t0;
      _.midi = t1;
      _.name = t2;
      _.keyboardCode = "";
      _.i = t3;
      _.j = t4;
      _.keyHint = t5;
      _.el = t6;
      _._bass$_down = false;
    },
    BassFret_closure: function BassFret_closure(t0) {
      this.$this = t0;
    },
    BassFret_closure0: function BassFret_closure0(t0) {
      this.$this = t0;
    },
    BassFret_closure1: function BassFret_closure1(t0) {
      this.$this = t0;
    },
    BassFret_closure2: function BassFret_closure2(t0) {
      this.$this = t0;
    },
    TraceEvent$fromJSON: function(json) {
      var t1 = new Y.TraceEvent(null, 0, new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic));
      t1.TraceEvent$fromJSON$1(json);
      return t1;
    },
    Trace: function Trace(t0) {
      var _ = this;
      _.trace = t0;
      _._beats = _._timer = _.bug = 0;
      _._maxNote = _._minNote = -1;
    },
    TraceEvent: function TraceEvent(t0, t1, t2) {
      var _ = this;
      _.command = t0;
      _.time = t1;
      _.duration = 1;
      _.params = t2;
    }
  },
  F = {
    DrumKit$: function(selector, patch) {
      var t1 = new F.DrumKit(H.setRuntimeTypeInfo([], type$.JSArray_Drum), selector, "drumkit", P.StreamController_StreamController(false, type$.NoteEvent), type$.GElement._as(type$.SvgElement._as(C.HtmlDocument_methods.createElementNS$2(document, "http://www.w3.org/2000/svg", "g"))));
      t1.DrumKit$2(selector, patch);
      return t1;
    },
    DrumKit: function DrumKit(t0, t1, t2, t3, t4) {
      var _ = this;
      _.drums = t0;
      _.selector = t1;
      _.name = t2;
      _._stream = t3;
      _.container = _.root = null;
      _.parent = t4;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    DrumKit_render_closure: function DrumKit_render_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.midi = t2;
      _.drum = t3;
    },
    DrumKit_render_closure0: function DrumKit_render_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.midi = t2;
      _.drum = t3;
    },
    DrumKit_render_closure1: function DrumKit_render_closure1(t0, t1, t2) {
      this.$this = t0;
      this.drum = t1;
      this.midi = t2;
    },
    DrumKit_render_closure2: function DrumKit_render_closure2(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.midi = t2;
      _.drum = t3;
    },
    Drum: function Drum(t0, t1, t2) {
      var _ = this;
      _.selector = t0;
      _.name = t1;
      _.midi = t2;
      _.pressed = false;
    },
    GFret$: function(guitar, midi, $name, i, j) {
      var _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement;
      t1 = new F.GFret(guitar, midi, $name, i, j, type$.TextElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text"))), type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))));
      t1.GFret$5(guitar, midi, $name, i, j);
      return t1;
    },
    Guitar: function Guitar(t0, t1, t2, t3, t4) {
      var _ = this;
      _._guitar$_frets = t0;
      _._guitar$_strings = t1;
      _.fretboard = null;
      _.name = t2;
      _._stream = t3;
      _.container = _.root = null;
      _.parent = t4;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    GFret: function GFret(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.guitar = t0;
      _.midi = t1;
      _.name = t2;
      _.keyboardCode = "";
      _.i = t3;
      _.j = t4;
      _.keyHint = t5;
      _.el = t6;
      _._guitar$_down = false;
    },
    GFret_closure: function GFret_closure(t0) {
      this.$this = t0;
    },
    GFret_closure0: function GFret_closure0(t0) {
      this.$this = t0;
    },
    GFret_closure1: function GFret_closure1(t0) {
      this.$this = t0;
    },
    GFret_closure2: function GFret_closure2(t0) {
      this.$this = t0;
    },
    Note: function Note() {
      this._note = 60;
      this.duration = 1;
      this._velocity = 90;
    },
    main: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], pid, project, exception, t2, t3, t4, t5, t1, $async$exception, $async$temp1;
      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = S.Datastore$("https://tunepad.club", "wss://tunepad.club/websocket/");
              $.datastore = t1;
              t1 = t1._login_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(F.main__onLogin$closure());
              t1 = $.datastore._logout_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(F.main__onLogout$closure());
              t1 = $.datastore._created_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(F.main__onCreated$closure());
              $async$goto = 3;
              return P._asyncAwait($.datastore.connect$0(), $async$main);
            case 3:
              // returning from await.
              pid = -1;
              if (J.startsWith$1$s(window.location.hash, "#session-"))
                pid = B.toInt(J.substring$1$s(window.location.hash, 9), -1);
              project = null;
              t1 = pid;
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$ge();
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1 >= 0 ? 4 : 6;
              break;
            case 4:
              // then
              $async$handler = 8;
              P.print("Loading project " + H.S(pid));
              $async$temp1 = type$.Project;
              $async$goto = 11;
              return P._asyncAwait($.datastore.retrieve$1(K.Project$(pid)), $async$main);
            case 11:
              // returning from await.
              project = $async$temp1._as($async$result);
              $async$handler = 2;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              t1 = window.location;
              t1.hash = "";
              P.print("Invalid project id " + H.S(pid));
              project = K.Project$(null);
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 10:
              // after finally
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              project = K.Project$(pid);
            case 5:
              // join
              B.UserList$($.datastore, "#userlist", true);
              t1 = $.datastore;
              t2 = new G.ProjectList(t1);
              t3 = t1._created_stream;
              new P._BroadcastStream(t3, H._instanceType(t3)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onCreated());
              t3 = t1._updated_stream;
              new P._BroadcastStream(t3, H._instanceType(t3)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onUpdated());
              t1 = t1._deleted_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onDeleted());
              $.projectList = t2;
              t2 = $.datastore;
              $.library = new O.TrackLibrary(t2, new H.JsLinkedHashMap(type$.JsLinkedHashMap_of_String_and_Set_dynamic));
              t1 = type$.JSArray_List_Float32List;
              t3 = type$.List_num;
              t4 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t3));
              t4.reshape$2(1, 44100);
              t5 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t3));
              t5.reshape$2(1, 44100);
              t4 = new R.Recording(t4, t5, new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_num), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              t4.name = "My Recording";
              t4.type = "recording";
              t3 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t3));
              t3.reshape$2(1, 44100);
              $.rstudio = new Q.RecordingStudio(t4, t3, t2);
              t2 = $.dropbook = A.Dropbook$(project, $.datastore);
              t3 = $.datastore;
              t4 = new Z.OutlineView(t2, t3);
              t1 = t3._created_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t4.get$onCreated());
              t1 = t3._updated_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t4.get$onUpdated());
              t1 = t3._deleted_stream;
              new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t4.get$onDeleted());
              t3 = t3._reordered_stream;
              new P._BroadcastStream(t3, H._instanceType(t3)._eval$1("_BroadcastStream<1>")).listen$1(t4.get$onReordered());
              t4.loadProject$1(t2.project);
              $.outline = t4;
              if (project.get$hasValidId())
                F._showWelcomeMessage(project);
              else if (!$.datastore.user.anonymous)
                F._showProjectList();
              else {
                t1 = pid;
                if (typeof t1 !== "number") {
                  $async$returnValue = t1.$gt();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (t1 > 0)
                  E.Dialog_message("Oops! We couldn't load session ID " + H.S(pid) + ".<br>It might have been deleted or unshared.", "Missing Jam Session", "OK");
              }
              t1 = window;
              t2 = type$.void_Function_Event._as(new F.main_closure());
              type$.void_Function._as(null);
              W._EventStreamSubscription$(t1, "hashchange", t2, false, type$.Event);
              t2 = type$.Element;
              t1 = document;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              t4 = type$.ElementList_Element;
              t5 = type$._ElementListEventStreamImpl_MouseEvent;
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#projects-button"), t3)), false, "click", t5).listen$1(new F.main_closure0());
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#help-button"), t3)), false, "click", t5).listen$1(new F.main_closure1());
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#library-button"), t3)), false, "click", t5).listen$1(new F.main_closure2());
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#recorder-button"), t3)), false, "click", t5).listen$1(new F.main_closure3());
              W._EventStreamSubscription$(t1, "mousedown", type$.void_Function_MouseEvent._as(new F.main_closure4()), false, type$.MouseEvent);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$main, $async$completer);
    },
    onCreated: function($event) {
      var t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof K.Project) {
        if (t1.get$hasValidId())
          window.location.hash = "session-" + H.S(t1.id);
        $.dropbook.loadProject$1(t1);
        $.outline.loadProject$1(t1);
        E.Dialog_message("You have created a new jam session.<br>Use this link to invite others to perform with you.<br><br>" + $.datastore.host + "/#session-" + H.S(t1.id), "Jam Session Created", "OK");
      }
    },
    _onHashChange: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], pid, project, t1, exception, hash, $async$exception, $async$temp1;
      var $async$_onHashChange = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              hash = window.location.hash;
              $async$goto = J.getInterceptor$s(hash).startsWith$1(hash, "#session-") ? 3 : 4;
              break;
            case 3:
              // then
              pid = B.toInt(C.JSString_methods.substring$1(hash, 9), -1);
              project = $.dropbook.project;
              t1 = pid;
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$gt();
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1 > 0 && !J.$eq$(project.id, pid) ? 5 : 6;
              break;
            case 5:
              // then
              E.Dialog_showLoader();
              $async$handler = 8;
              $async$temp1 = type$.Project;
              $async$goto = 11;
              return P._asyncAwait($.datastore.retrieve$1(K.Project$(pid)), $async$_onHashChange);
            case 11:
              // returning from await.
              project = $async$temp1._as($async$result);
              $.dropbook.loadProject$1(project);
              $.outline.loadProject$1(project);
              $async$next.push(10);
              // goto finally
              $async$goto = 9;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              E.Dialog_message("Oops! We couldn't load session ID " + H.S(pid) + ".<br>It might have been deleted or unshared.", "Missing Session", "OK");
              $async$next.push(10);
              // goto finally
              $async$goto = 9;
              break;
            case 7:
              // uncaught
              $async$next = [2];
            case 9:
              // finally
              $async$handler = 2;
              E.Dialog_hideLoader();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 10:
              // after finally
            case 6:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_onHashChange, $async$completer);
    },
    _createNewProject: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$handler = 1, $async$currentError, $async$next = [], project, exception, $async$exception;
      var $async$_createNewProject = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              E.Dialog_closeModal();
              $async$goto = $.datastore.user.anonymous ? 2 : 4;
              break;
            case 2:
              // then
              window.location.hash = "";
              $.dropbook.loadProject$1(K.Project$(-1));
              $.outline.loadProject$1($.dropbook.project);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              E.Dialog_showLoader();
              $async$handler = 6;
              project = K.Project$(-1);
              project.$public = true;
              $async$goto = 9;
              return P._asyncAwait($.datastore.create$1(0, project), $async$_createNewProject);
            case 9:
              // returning from await.
              $async$next.push(8);
              // goto finally
              $async$goto = 7;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error creating project.");
              $async$next.push(8);
              // goto finally
              $async$goto = 7;
              break;
            case 5:
              // uncaught
              $async$next = [1];
            case 7:
              // finally
              $async$handler = 1;
              E.Dialog_hideLoader();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 8:
              // after finally
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_createNewProject, $async$completer);
    },
    _showWelcomeMessage: function(project) {
      var t1, t2, tagHtml, _i, t3, t4, welcome, el,
        _s16_ = "querySelectorAll";
      for (t1 = project.tags, t2 = t1.length, tagHtml = "", _i = 0; _i < t2; ++_i)
        tagHtml += "<li>#" + t1[_i] + "</li>";
      t1 = project.$public ? "shared" : "private";
      t2 = project.clock;
      t3 = t2._bpm;
      t3 = "" + t3 + " bpm | ";
      t4 = t2._meter;
      t3 = t3 + t4 + " time | ";
      t2 = t2._key;
      t2 = t3 + H.S(t2.name);
      t3 = project.name;
      t4 = project.author;
      welcome = E.Dialog_openModal("#welcome-template", P.LinkedHashMap_LinkedHashMap$_literal([".shared-status", t1, ".music-info", t2, ".name", t3, ".author", "by " + (t4 == null ? "Unknown" : t4), ".summary", project.summary, ".created", "Created: " + project.formatDateTime$1(project.created), ".tags", tagHtml], type$.String, type$.dynamic));
      el = type$.HtmlElement._as(welcome.querySelector(".artwork"));
      if (el != null) {
        t1 = el.style;
        t2 = project.color;
        t1.toString;
        t1.backgroundColor = t2 == null ? "" : t2;
        t1 = project.artwork;
        if (t1 != null) {
          t2 = el.style;
          t1 = "url(" + t1 + ")";
          t2.backgroundImage = t1;
        }
      }
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      t3 = type$.ElementList_Element;
      t4 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(welcome.querySelectorAll(".confirm-button"), t2)), false, "click", t4).listen$1(new F._showWelcomeMessage_closure(project));
      H.checkTypeBound(t1, t1, "T", _s16_);
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(welcome.querySelectorAll(".new-button"), t2)), false, "click", t4).listen$1(new F._showWelcomeMessage_closure0());
    },
    _showProjectList: function() {
      var dialog = $.projectList.show$0(0),
        t1 = type$.Element;
      dialog.toString;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(".new-project-button"), type$._FrozenElementList_Element)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new F._showProjectList_closure());
    },
    onLogin: function($event) {
      var t1, el, t2, t3,
        _s13_ = "#login-button",
        _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s6_ = "hidden",
        _s14_ = "#logout-button",
        _s16_0 = "#projects-button",
        _s31_ = '.menu-item[data-action="login"]',
        _s32_ = '.menu-item[data-action="logout"]',
        _s33_ = '.menu-item[data-action="profile"]',
        _s4_ = "main";
      type$.DatastoreEvent._as($event);
      t1 = document;
      el = type$.HtmlElement._as(t1.querySelector("#profile-button .menu-item .username"));
      if (el != null)
        J.setInnerHtml$1$x(el, $.datastore.user.displayName);
      t2 = type$.Element;
      t3 = type$._FrozenElementList_Element;
      if ($.datastore.user.anonymous) {
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s16_0), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s31_), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s32_), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s33_), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s4_), t3)).clear$0(0);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s4_), t3)).add$1(0, "anonymous");
        if ($._first_login)
          E.Dialog_message("Welcome to TunePad", "", "OK");
      } else {
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".system-warning"), t3)).remove$1(0, "show");
        if (!$._first_login)
          E.Dialog_message("Successfully logged in as <b>" + H.S($.datastore.user.displayName) + "</b>.", "", "OK");
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s16_0), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s31_), t3)).add$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s32_), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s33_), t3)).remove$1(0, _s6_);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s4_), t3)).clear$0(0);
        H.checkTypeBound(t2, t2, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s4_), t3)).add$1(0, "authenticated");
      }
      $._first_login = false;
    },
    onLogout: function($event) {
      var t1, t2, t3, _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s6_ = "hidden";
      type$.DatastoreEvent._as($event);
      t1 = type$.Element;
      t2 = document;
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#login-button"), t3)).remove$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#logout-button"), t3)).add$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#projects-button"), t3)).add$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll('.menu-item[data-action="login"]'), t3)).remove$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll('.menu-item[data-action="logout"]'), t3)).add$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll('.menu-item[data-action="profile"]'), t3)).add$1(0, _s6_);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("main"), t3)).clear$0(0);
    },
    main_closure: function main_closure() {
    },
    main_closure0: function main_closure0() {
    },
    main_closure1: function main_closure1() {
    },
    main_closure2: function main_closure2() {
    },
    main_closure3: function main_closure3() {
    },
    main_closure4: function main_closure4() {
    },
    _showWelcomeMessage_closure: function _showWelcomeMessage_closure(t0) {
      this.project = t0;
    },
    _showWelcomeMessage_closure0: function _showWelcomeMessage_closure0() {
    },
    _showProjectList_closure: function _showProjectList_closure() {
    }
  },
  B = {
    PianoKey$: function(key, piano) {
      var _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement;
      t1 = new B.PianoKey(key, piano, type$.TextElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text"))), H.setRuntimeTypeInfo([0, 0.45, 1, 1.55, 2, 3, 3.4, 4, 4.5, 5, 5.6, 6], type$.JSArray_num), type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))), type$.RectElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect"))));
      t1.PianoKey$2(key, piano);
      return t1;
    },
    Piano: function Piano(t0, t1, t2, t3, t4) {
      var _ = this;
      _.keys = t0;
      _.offset = 0;
      _.mini = null;
      _.allKeys = t1;
      _.name = t2;
      _._stream = t3;
      _.container = _.root = null;
      _.parent = t4;
      _.width = 700;
      _.height = 300;
      _._armed = false;
      _._ports = null;
    },
    Piano_render_closure: function Piano_render_closure(t0) {
      this.$this = t0;
    },
    Piano_render_closure0: function Piano_render_closure0(t0) {
      this.$this = t0;
    },
    Piano__slideKeyboard_closure: function Piano__slideKeyboard_closure() {
    },
    MiniPiano: function MiniPiano(t0, t1, t2, t3, t4) {
      var _ = this;
      _.piano = t0;
      _.el = t1;
      _.bkeys = t2;
      _.wkeys = t3;
      _.highlight = t4;
      _._piano$_timer = null;
    },
    MiniPiano_slide_closure: function MiniPiano_slide_closure(t0) {
      this.$this = t0;
    },
    PianoKey: function PianoKey(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.key = t0;
      _.piano = t1;
      _.keyHint = t2;
      _._key_offsets = t3;
      _.el = t4;
      _.rect = t5;
      _._piano$_down = false;
    },
    PianoKey_closure: function PianoKey_closure(t0) {
      this.$this = t0;
    },
    PianoKey_closure0: function PianoKey_closure0(t0) {
      this.$this = t0;
    },
    PianoKey_closure1: function PianoKey_closure1(t0) {
      this.$this = t0;
    },
    PianoKey_closure2: function PianoKey_closure2(t0) {
      this.$this = t0;
    },
    SynthNode$: function(context, config) {
      var t1 = new B.SynthNode(context);
      t1.SynthNode$2(context, config);
      return t1;
    },
    DistNode$: function(context, config) {
      var t1 = new B.DistNode(context);
      t1.SynthNode$2(context, config);
      t1.DistNode$2(context, config);
      return t1;
    },
    SynthNode: function SynthNode(t0) {
      var _ = this;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    ADSRNode: function ADSRNode(t0, t1, t2, t3) {
      var _ = this;
      _.A = t0;
      _.D = t1;
      _.S = 1;
      _.R = t2;
      _.adsr = null;
      _.context = t3;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    FMNode: function FMNode(t0) {
      var _ = this;
      _.fIn = _.dIn = _.osc = null;
      _.frequency = 1;
      _.relative = true;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    LFONode: function LFONode(t0) {
      var _ = this;
      _.osc = null;
      _.frequency = 1;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    DistNode: function DistNode(t0) {
      var _ = this;
      _.preGainNode = _.spn = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    DistNode_closure: function DistNode_closure() {
    },
    DistNode__closure: function DistNode__closure() {
    },
    SynthSampleNode: function SynthSampleNode(t0) {
      var _ = this;
      _.samples = _.pIn = _.dIn = _.source = null;
      _.sampleDuration = 0;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    SynthSampleNode_schedulePitchBend_closure: function SynthSampleNode_schedulePitchBend_closure(t0) {
      this.semitoneRatio = t0;
    },
    SynthDelayNode: function SynthDelayNode(t0, t1) {
      var _ = this;
      _.delay = null;
      _.delayTime = t0;
      _.context = t1;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    SynthCompressorNode: function SynthCompressorNode(t0) {
      var _ = this;
      _.compressor = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    FilterNode: function FilterNode(t0) {
      var _ = this;
      _.filter = null;
      _.context = t0;
      _.level = null;
      _._level = 1;
      _.enabled = true;
      _.id = 0;
    },
    SchedulerSynth: function SchedulerSynth(t0, t1, t2) {
      var _ = this;
      _._synth$_bpm = 120;
      _.effects = t0;
      _.notes = t1;
      _.config = null;
      _._bank = t2;
      _.voice = "";
    },
    GraphicEq$: function(container, onColor) {
      var t1 = new B.GraphicEq(container, H.setRuntimeTypeInfo([], type$.JSArray_CircleElement), onColor);
      t1.GraphicEq$2(container, onColor);
      return t1;
    },
    GraphicEq: function GraphicEq(t0, t1, t2) {
      var _ = this;
      _.container = t0;
      _.parent = null;
      _.dots = t1;
      _.onColor = t2;
    },
    UserList$: function(datastore, listSelector, focused) {
      var t1 = new B.UserList(datastore, H.setRuntimeTypeInfo([], type$.JSArray_Collaborator), listSelector, focused);
      t1.UserList$3(datastore, listSelector, focused);
      return t1;
    },
    Collaborator: function Collaborator(t0) {
      this.user = t0;
      this.checkin = null;
    },
    UserList: function UserList(t0, t1, t2, t3) {
      var _ = this;
      _.datastore = t0;
      _.collaborators = t1;
      _.listSelector = t2;
      _.focused = t3;
    },
    UserList_closure: function UserList_closure(t0) {
      this.$this = t0;
    },
    UserList_closure0: function UserList_closure0(t0) {
      this.$this = t0;
    },
    toInt1: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toNum0: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (typeof d == "number")
        return d;
      else
        try {
          t1 = P.num_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toBool0: function(b, defaultValue) {
      var s;
      if (b == null)
        return true;
      else if (H._isBool(b))
        return b;
      else {
        s = J.toString$0$(b);
        if (s.toLowerCase() === "true" || s.toLowerCase() === "t")
          return true;
        else if (s.toLowerCase() === "false" || s.toLowerCase() === "f")
          return false;
      }
      return true;
    },
    toInt0: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toNum: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (typeof d == "number")
        return d;
      else
        try {
          t1 = P.num_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    },
    toDateTime: function(d) {
      var t1, exception;
      if (d == null)
        return new P.DateTime(Date.now(), false);
      else if (H._isInt(d)) {
        t1 = new P.DateTime(d, false);
        t1.DateTime$_withValue$2$isUtc(d, false);
        return t1;
      } else if (typeof d == "string")
        try {
          t1 = P.DateTime_parse(d);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          P.print("unable to parse datetime");
        }
      return new P.DateTime(Date.now(), false);
    },
    toBool: function(b, defaultValue) {
      var s;
      if (b == null)
        return defaultValue;
      else if (H._isBool(b))
        return b;
      else {
        s = J.toString$0$(b);
        if (s.toLowerCase() === "true" || s.toLowerCase() === "t")
          return true;
        else if (s.toLowerCase() === "false" || s.toLowerCase() === "f")
          return false;
      }
      return defaultValue;
    },
    toInt: function(d, defaultValue) {
      var t1, exception;
      if (d == null)
        return defaultValue;
      else if (H._isInt(d))
        return d;
      else if (typeof d == "number")
        return C.JSNumber_methods.round$0(d);
      else
        try {
          t1 = P.int_parse(J.toString$0$(d));
          return t1;
        } catch (exception) {
          if (type$.Exception._is(H.unwrapException(exception)))
            return defaultValue;
          else
            throw exception;
        }
    }
  },
  E = {ClockSubscriber: function ClockSubscriber() {
    }, Metronome: function Metronome() {
    }, PlayClock: function PlayClock(t0, t1, t2, t3) {
      var _ = this;
      _._elapsedBeats = _._start = 0;
      _._bpm = 120;
      _._meter = "4/4";
      _._beatValue = _._beatsPerMeasure = 4;
      _._key = t0;
      _._subscribers = t1;
      _._listeners = t2;
      _.context = null;
      _._metronomes = t3;
      _._clock$_timer = null;
    }, PlayClock_stopAll_closure: function PlayClock_stopAll_closure() {
    }, PlayClock_setTime_closure: function PlayClock_setTime_closure() {
    }, PlayClock_setTempo_closure: function PlayClock_setTempo_closure() {
    }, PlayClock_setTimeSignature_closure: function PlayClock_setTimeSignature_closure() {
    }, PlayClock_startMetronome_closure: function PlayClock_startMetronome_closure() {
    }, PlayClock_startMetronome_closure0: function PlayClock_startMetronome_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.start_time = t2;
    }, PlayClock_startMetronome__closure: function PlayClock_startMetronome__closure(t0) {
      this._box_0 = t0;
    },
    Dialog_message: function(message, title, $confirm) {
      var t1,
        dialog = document.createElement("div");
      dialog.className = "dialog";
      C.DivElement_methods.setInnerHtml$1(dialog, '    <button class="close-button"><i class="fas fa-times"></i></button>\n    <h1 class="dialog-title">' + title + "</h1>\n    <p>" + message + '</p>\n    <div class="dialog-button-row">\n      <button class="confirm-button">' + $confirm + "</button>\n    </div>");
      E.Dialog__showModal(dialog);
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(".confirm-button"), type$._FrozenElementList_Element)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new E.Dialog_message_closure());
      return dialog;
    },
    Dialog_showLoader: function() {
      var overlay,
        t1 = document,
        template = type$.TemplateElement._as(t1.querySelector("#loading-template"));
      if (template != null) {
        overlay = type$.DivElement._as(type$.DocumentFragment._as(template.content.cloneNode(true)).querySelector(".loading-overlay"));
        if (overlay != null)
          t1.body.appendChild(overlay);
      }
    },
    Dialog_hideLoader: function() {
      var t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      t2 = new W._FrozenElementList(t2.querySelectorAll(".loading-overlay"), type$._FrozenElementList_Element);
      t2.forEach$1(t2, new E.Dialog_hideLoader_closure());
    },
    Dialog_openModal: function(templateSelector, fieldValues) {
      var dialog, t1, t2, t3, el,
        template = type$.TemplateElement._as(document.querySelector(templateSelector));
      if (template != null) {
        dialog = type$.DivElement._as(type$.DocumentFragment._as(template.content.cloneNode(true)).querySelector(".dialog"));
        if (dialog != null && fieldValues != null)
          for (t1 = fieldValues.get$keys(fieldValues), t1 = t1.get$iterator(t1), t2 = type$.HtmlElement; t1.moveNext$0();) {
            t3 = t1.get$current(t1);
            el = t2._as(dialog.querySelector(t3));
            if (el != null)
              J.setInnerHtml$1$x(el, H.S(fieldValues.$index(0, t3)));
          }
        E.Dialog__showModal(dialog);
        return dialog;
      }
      return null;
    },
    Dialog_closeModal: function() {
      var t3, t4,
        _s16_ = "querySelectorAll",
        t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      t4 = new W._FrozenElementList(t2.querySelectorAll(".overlay"), t3);
      t4.forEach$1(t4, new E.Dialog_closeModal_closure());
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("body"), t3)).remove$1(0, "modal-open");
    },
    Dialog__showModal: function(dialog) {
      var t1, overlay, t2, t3, t4, t5,
        _s16_ = "querySelectorAll",
        _s9_ = "mousedown";
      E.Dialog_closeModal();
      if (dialog != null) {
        t1 = document;
        overlay = t1.createElement("div");
        overlay.className = "overlay";
        t2 = type$.Element;
        H.checkTypeBound(t2, t2, "T", _s16_);
        t3 = type$._FrozenElementList_Element;
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("body"), t3)).add$1(0, "modal-open");
        H.checkTypeBound(t2, t2, "T", _s16_);
        t4 = type$.ElementList_Element;
        t5 = type$._ElementListEventStreamImpl_MouseEvent;
        new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(dialog.querySelectorAll(".close-button"), t3)), false, "click", t5).listen$1(new E.Dialog__showModal_closure());
        H.checkTypeBound(t2, t2, "T", _s16_);
        new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(dialog.querySelectorAll(".cancel-button"), t3)), false, "click", t5).listen$1(new E.Dialog__showModal_closure0());
        t5 = type$._ElementEventStreamImpl_MouseEvent;
        t3 = t5._eval$1("~(1)");
        t4 = t3._as(new E.Dialog__showModal_closure1());
        type$.void_Function._as(null);
        t5 = t5._precomputed1;
        W._EventStreamSubscription$(overlay, _s9_, t4, false, t5);
        W._EventStreamSubscription$(dialog, _s9_, t3._as(new E.Dialog__showModal_closure2()), false, t5);
        overlay.appendChild(dialog);
        t1.body.appendChild(overlay);
      }
    },
    Dialog_message_closure: function Dialog_message_closure() {
    },
    Dialog_hideLoader_closure: function Dialog_hideLoader_closure() {
    },
    Dialog_closeModal_closure: function Dialog_closeModal_closure() {
    },
    Dialog__showModal_closure: function Dialog__showModal_closure() {
    },
    Dialog__showModal_closure0: function Dialog__showModal_closure0() {
    },
    Dialog__showModal_closure1: function Dialog__showModal_closure1() {
    },
    Dialog__showModal_closure2: function Dialog__showModal_closure2() {
    }
  },
  K = {
    Effect_Effect: function($name, params) {
      var t1, t2;
      if ($name === "lowpass" || $name === "filter")
        return K.BiquadFilter$("lowpass", params);
      else if ($name === "highpass")
        return K.BiquadFilter$("highpass", params);
      else if ($name === "bandpass")
        return K.BiquadFilter$("bandpass", params);
      else if ($name === "notch")
        return K.BiquadFilter$("notch", params);
      else if ($name === "pan") {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_List_num);
        t2 = new K.PanEffect("pan", t1);
        t2.Effect$_internal$2("pan", params);
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t2.clampParam$3(t1[0], -1, 1);
        return t2;
      } else if ($name === "gain") {
        t1 = new K.GainEffect("gain", H.setRuntimeTypeInfo([], type$.JSArray_List_num));
        t1.Effect$_internal$2("gain", params);
        return t1;
      } else if ($name === "bend") {
        t1 = new K.PitchBendEffect("bend", H.setRuntimeTypeInfo([], type$.JSArray_List_num));
        t1.Effect$_internal$2("bend", params);
        return t1;
      } else
        return null;
    },
    BiquadFilter$: function($name, params) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_List_num),
        t2 = new K.BiquadFilter($name, t1);
      t2.Effect$_internal$2($name, params);
      t2.type = $name;
      if (t1.length === 0) {
        C.JSArray_methods.add$1(t1, H.setRuntimeTypeInfo([], type$.JSArray_num));
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        C.JSArray_methods.add$1(t1[0], 1000);
      }
      if (t1.length < 2) {
        C.JSArray_methods.add$1(t1, H.setRuntimeTypeInfo([], type$.JSArray_num));
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        C.JSArray_methods.add$1(t1[1], 0.8);
      }
      if (t1.length < 3) {
        C.JSArray_methods.add$1(t1, H.setRuntimeTypeInfo([], type$.JSArray_num));
        if (2 >= t1.length)
          return H.ioore(t1, 2);
        C.JSArray_methods.add$1(t1[2], 1);
      }
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t2.clampParam$3(t1[0], 10, 22050);
      if ($name === "highpass" || $name === "lowpass") {
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        t2.clampParam$3(t1[1], -20, 20);
      }
      return t2;
    },
    EffectCurve$: function(values, duration) {
      var t1 = new K.EffectCurve(values, duration);
      t1.EffectCurve$2(values, duration);
      return t1;
    },
    Effect: function Effect() {
    },
    BiquadFilter: function BiquadFilter(t0, t1) {
      var _ = this;
      _.type = "lowpass";
      _.name = t0;
      _.params = t1;
      _.start = 0;
      _.beats = -1;
      _.oparams = _.node = null;
    },
    PitchBendEffect: function PitchBendEffect(t0, t1) {
      var _ = this;
      _.name = t0;
      _.params = t1;
      _.start = 0;
      _.beats = -1;
      _.oparams = _.node = null;
    },
    PanEffect: function PanEffect(t0, t1) {
      var _ = this;
      _.name = t0;
      _.params = t1;
      _.start = 0;
      _.beats = -1;
      _.oparams = _.node = null;
    },
    GainEffect: function GainEffect(t0, t1) {
      var _ = this;
      _.name = t0;
      _.params = t1;
      _.start = 0;
      _.beats = -1;
      _.oparams = _.node = null;
    },
    EffectCurve: function EffectCurve(t0, t1) {
      this.values = t0;
      this.curve = null;
      this.duration = t1;
    },
    Project$: function(id) {
      var colors,
        t1 = type$.ClockSubscriber,
        t2 = type$.dynamic;
      t2 = new K.Project(new E.PlayClock(new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], type$.JSArray_int), "C major"), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(type$.Metronome)), H.setRuntimeTypeInfo([], type$.JSArray_String), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), id, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      t2.type = "projects";
      t2.name = "New Jam Session";
      colors = ["black", "#46d753", "#5bc6fc", "#934ee0", "#aecad5", "#f067d1", "#fc3e74", "#fd7d23", "#fed330"];
      t1 = C.C__JSRandom.nextInt$1(9);
      if (t1 < 0 || t1 >= 9)
        return H.ioore(colors, t1);
      t2.color = colors[t1];
      return t2;
    },
    Project: function Project(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clock = t0;
      _.bars = 20;
      _.summary = _.description = "";
      _.color = "black";
      _.preview = _.author = _.artwork = null;
      _.deleted = _.$public = false;
      _.remix_parent = null;
      _.tags = t1;
      _.settings = t2;
      _.id = t3;
      _.name = _.type = "";
      _.username = null;
      _.created = t4;
      _.modified = t5;
    },
    Uuid$: function() {
      var options, t2, t1 = {};
      t1.options = options;
      t1.options = null;
      t2 = new K.Uuid();
      t2.Uuid$1$options(t1);
      return t2;
    },
    Uuid: function Uuid() {
      var _ = this;
      _._clockSeq = _._nodeId = _._seedBytes = null;
      _._lastNSecs = _._lastMSecs = 0;
      _._hexToByte = _._byteToHex = null;
    }
  },
  L = {Synthesizer: function Synthesizer(t0, t1, t2) {
      var _ = this;
      _._synth$_bpm = 120;
      _.effects = t0;
      _.notes = t1;
      _.config = null;
      _._bank = t2;
      _.voice = "";
    }, Synthesizer_loadPatch_closure: function Synthesizer_loadPatch_closure(t0) {
      this._box_0 = t0;
    }, Synthesizer__play_closure: function Synthesizer__play_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.event = t2;
    }, Synthesizer__schedule_closure: function Synthesizer__schedule_closure(t0, t1, t2) {
      this.$this = t0;
      this.nodes = t1;
      this.event = t2;
    }, Synthesizer_pitchBend_closure: function Synthesizer_pitchBend_closure(t0) {
      this.cents = t0;
    }, Synthesizer_loadAudioBuffer_closure: function Synthesizer_loadAudioBuffer_closure(t0, t1, t2, t3) {
      var _ = this;
      _.context = t0;
      _.request = t1;
      _.name = t2;
      _.onLoaded = t3;
    }, Synthesizer_loadAudioBuffer_closure0: function Synthesizer_loadAudioBuffer_closure0() {
    }, Synthesizer_loadCustomSound_closure: function Synthesizer_loadCustomSound_closure(t0, t1, t2) {
      this.context = t0;
      this.request = t1;
      this.url = t2;
    }, Synthesizer_loadCustomSound_closure0: function Synthesizer_loadCustomSound_closure0() {
    }, Gadget: function Gadget(t0, t1, t2, t3) {
      var _ = this;
      _.beats = 4;
      _.instrument = "piano";
      _.color = "#2f9aef";
      _.voice = "piano";
      _.idata = t0;
      _.description = "";
      _.deleted = _.$public = false;
      _.remix_parent = null;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    },
    SynthPatch$piano: function() {
      var t1 = type$.dynamic;
      t1 = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t1, t1), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      t1.voice = "Piano";
      t1.type = "patch";
      t1.patch = C.Map_b8Sgx;
      return t1;
    },
    SynthPatch: function SynthPatch(t0, t1, t2, t3) {
      var _ = this;
      _.voice = "";
      _.instrument = "piano";
      _.patch = t0;
      _.SynthPatch_username = _.description = "";
      _.remix_count = _.star_count = _.like_count = 0;
      _.deleted = _.$public = false;
      _.id = t1;
      _.name = _.type = "";
      _.username = null;
      _.created = t2;
      _.modified = t3;
    },
    TextCell: function TextCell(t0, t1) {
      var _ = this;
      _.editor = null;
      _.gadget = t0;
      _.datastore = t1;
      _.collaborators = _.root = null;
    },
    TextCell_insert_closure: function TextCell_insert_closure(t0) {
      this.$this = t0;
    },
    TextCell__doContextMenu_closure: function TextCell__doContextMenu_closure(t0) {
      this.$this = t0;
    },
    _TextCell_TunePadCell_EditorListener: function _TextCell_TunePadCell_EditorListener() {
    }
  },
  V = {NoteRecorder: function NoteRecorder(t0, t1) {
      var _ = this;
      _.clock = t0;
      _.start = -1;
      _.recording = false;
      _.quantize = true;
      _.notes = t1;
    }, NoteSpacer: function NoteSpacer(t0) {
      var _ = this;
      _.type = "on";
      _.midi = t0;
      _.velocity = 80;
      _.start = 0;
      _.sustain = _.duration = -1;
      _.next = null;
    }, _NoteRecorder_Object_ClockSubscriber: function _NoteRecorder_Object_ClockSubscriber() {
    }, AudioRecorder: function AudioRecorder(t0) {
      var _ = this;
      _._recorder$_stream = null;
      _._recording = false;
      _.recorder = _.analyzer = _.input = null;
      _.context = t0;
      _.fftData = null;
    }, WaveformTrace: function WaveformTrace(t0, t1, t2, t3) {
      var _ = this;
      _.w = t0;
      _.h = t1;
      _.bw = 5;
      _.info = _.rclip = _.lclip = _.clip = _.playhead = _.bars = null;
      _.color = t2;
      _.recorder = t3;
      _.disabled = false;
    }, WaveformTrace__buildClipLine_closure: function WaveformTrace__buildClipLine_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.clip = t2;
    }, WaveformTrace__buildClipLine_closure0: function WaveformTrace__buildClipLine_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.clip = t2;
    }, WaveformTrace__buildClipLine_closure1: function WaveformTrace__buildClipLine_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    EffectsDial$: function($name) {
      var _s26_ = "http://www.w3.org/2000/svg",
        t1 = new V.EffectsDial(),
        t2 = document,
        t3 = type$.SvgElement,
        t4 = type$.PathElement,
        t5 = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "path"))),
        t6 = type$.String;
      (t5 && C.PathElement_methods).set$attributes(t5, P.LinkedHashMap_LinkedHashMap$_literal(["class", "dial-track", "d", t1._describeArc$5(0, 0, 37, 0, 4.71238898038469)], t6, t6));
      t1._track = t5;
      t4 = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "path")));
      (t4 && C.PathElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["class", "dial-track-fill", "d", t1._describeArc$5(0, 0, 37, 0, t1._dial$_value * 4.71238898038469)], t6, t6));
      t1._arc = t4;
      t2 = type$.LineElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "line")));
      (t2 && C.LineElement_methods).set$attributes(t2, P.LinkedHashMap_LinkedHashMap$_literal(["class", "dial-pointer", "x1", "0", "y1", "0", "x2", H.S(25 * Math.cos(t1._dial$_value * 4.71238898038469)), "y2", H.S(25 * Math.sin(t1._dial$_value * 4.71238898038469))], t6, t6));
      t1._line = t2;
      t1.name = $name;
      return t1;
    },
    EffectsDial: function EffectsDial() {
      var _ = this;
      _.name = "LEVEL";
      _.minValue = 0;
      _.maxValue = 1;
      _.onAdjusted = _.onChanged = _.values = _.step = null;
      _._dragging = false;
      _._dial$_value = 0;
      _._disabled = false;
      _._touchY = 0;
      _.knob = _._track = _._line = _._arc = null;
    },
    EffectsDial_buildUI_closure: function EffectsDial_buildUI_closure(t0) {
      this.$this = t0;
    },
    EffectsDial_buildUI_closure0: function EffectsDial_buildUI_closure0(t0) {
      this.$this = t0;
    },
    EffectsDial_buildUI_closure1: function EffectsDial_buildUI_closure1(t0) {
      this.$this = t0;
    },
    ToggleButton: function ToggleButton(t0, t1, t2) {
      var _ = this;
      _.cx = t0;
      _.cy = t1;
      _.radius = t2;
      _.onChanged = _._button = null;
      _._dial$_value = true;
      _._color = "cyan";
    },
    ToggleButton_buildUI_closure: function ToggleButton_buildUI_closure(t0) {
      this.outline = t0;
    },
    ToggleButton_buildUI_closure0: function ToggleButton_buildUI_closure0(t0, t1) {
      this.$this = t0;
      this.outline = t1;
    },
    ToggleButton_buildUI_closure1: function ToggleButton_buildUI_closure1(t0) {
      this.$this = t0;
    },
    ToggleButton_buildUI_closure2: function ToggleButton_buildUI_closure2(t0) {
      this.$this = t0;
    }
  },
  Q = {RecordingStudio: function RecordingStudio(t0, t1, t2) {
      var _ = this;
      _.recording = t0;
      _.buffer = t1;
      _.dialog = _.context = _.synth = _.recorder = _.wf = _.eq = null;
      _.datastore = t2;
      _._looping = false;
      _._studio$_lastTime = _._lastPosition = 0;
      _._studio$_dirty = _._clean = false;
      _.rightTrim = _.leftTrim = -1;
      _.saving = false;
    }, RecordingStudio_show_closure: function RecordingStudio_show_closure(t0) {
      this.$this = t0;
    }, RecordingStudio_loadUserRecordings_closure: function RecordingStudio_loadUserRecordings_closure(t0) {
      this.$this = t0;
    }, RecordingStudio_uploadAudioFile_closure: function RecordingStudio_uploadAudioFile_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.reader = t2;
    }, RecordingStudio__registerEvents_closure: function RecordingStudio__registerEvents_closure(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure0: function RecordingStudio__registerEvents_closure0(t0, t1) {
      this.$this = t0;
      this.fileInput = t1;
    }, RecordingStudio__registerEvents_closure1: function RecordingStudio__registerEvents_closure1(t0, t1) {
      this.$this = t0;
      this.fileInput = t1;
    }, RecordingStudio__registerEvents_closure2: function RecordingStudio__registerEvents_closure2(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure3: function RecordingStudio__registerEvents_closure3(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure4: function RecordingStudio__registerEvents_closure4(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure5: function RecordingStudio__registerEvents_closure5(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure6: function RecordingStudio__registerEvents_closure6(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure7: function RecordingStudio__registerEvents_closure7(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure8: function RecordingStudio__registerEvents_closure8(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure9: function RecordingStudio__registerEvents_closure9(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure10: function RecordingStudio__registerEvents_closure10(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure11: function RecordingStudio__registerEvents_closure11(t0) {
      this.$this = t0;
    }, RecordingStudio__registerEvents_closure12: function RecordingStudio__registerEvents_closure12(t0) {
      this.$this = t0;
    }, RecordingStudio__registerRowEvents_closure: function RecordingStudio__registerRowEvents_closure(t0) {
      this.$this = t0;
    }, RecordingStudio__registerRowEvents_closure0: function RecordingStudio__registerRowEvents_closure0(t0, t1) {
      this.$this = t0;
      this.item = t1;
    }, RecordingStudio__registerRowEvents_closure1: function RecordingStudio__registerRowEvents_closure1(t0) {
      this.item = t0;
    }, RecordingStudio__registerRowEvents_closure2: function RecordingStudio__registerRowEvents_closure2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.$this = t0;
      _.list = t1;
      _.item = t2;
      _.id = t3;
      _.rec = t4;
      _.count = t5;
    }, RecordingStudio__playPreview_closure: function RecordingStudio__playPreview_closure(t0, t1) {
      this.$this = t0;
      this.item = t1;
    }, RecordingStudio__playPreview_closure0: function RecordingStudio__playPreview_closure0(t0, t1) {
      this.$this = t0;
      this.item = t1;
    }, RecordingStudio__playPreview_closure1: function RecordingStudio__playPreview_closure1(t0, t1) {
      this.$this = t0;
      this.item = t1;
    }},
  O = {TrackLibrary: function TrackLibrary(t0, t1) {
      var _ = this;
      _.datastore = t0;
      _.filters = t1;
      _.filter = null;
      _.tab = "tracks";
      _.sort = "modified";
      _._library$_dialog = null;
    }, TrackLibrary_show_closure: function TrackLibrary_show_closure(t0) {
      this.$this = t0;
    }, TrackLibrary_show__closure: function TrackLibrary_show__closure(t0, t1) {
      this.$this = t0;
      this.el = t1;
    }, TrackLibrary_show__closure0: function TrackLibrary_show__closure0(t0, t1) {
      this.$this = t0;
      this.t = t1;
    }, TrackLibrary_show___closure: function TrackLibrary_show___closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.t = t1;
      _.f = t2;
      _.el = t3;
    }, TrackLibrary_show_closure0: function TrackLibrary_show_closure0(t0) {
      this.$this = t0;
    }, TrackLibrary__buildTrack_closure: function TrackLibrary__buildTrack_closure(t0, t1) {
      this.$this = t0;
      this.track = t1;
    }, TrackLibrary__buildTrack_closure0: function TrackLibrary__buildTrack_closure0() {
    }, TrackLibrary__buildTrack_closure1: function TrackLibrary__buildTrack_closure1(t0, t1) {
      this.$this = t0;
      this.track = t1;
    }, TrackLibrary__buildTrack_closure2: function TrackLibrary__buildTrack_closure2(t0) {
      this.track = t0;
    }, TrackLibrary__buildTrack_closure3: function TrackLibrary__buildTrack_closure3(t0, t1) {
      this.$this = t0;
      this.track = t1;
    }, TrackLibrary__buildTrack_closure4: function TrackLibrary__buildTrack_closure4(t0, t1, t2) {
      this.$this = t0;
      this.collection = t1;
      this.data = t2;
    }, TrackLibrary__playTrackPreview_closure: function TrackLibrary__playTrackPreview_closure(t0) {
      this.track = t0;
    }, TrackLibrary__playTrackPreview_closure0: function TrackLibrary__playTrackPreview_closure0(t0) {
      this.track = t0;
    }, TrackLibrary__playTrackPreview_closure1: function TrackLibrary__playTrackPreview_closure1(t0) {
      this.track = t0;
    }},
  G = {ProjectList: function ProjectList(t0) {
      this.datastore = t0;
      this._dialog = null;
      this.sort = "modified";
    }, ProjectList_show_closure: function ProjectList_show_closure(t0) {
      this.$this = t0;
    }, ProjectList__buildItem_closure: function ProjectList__buildItem_closure(t0) {
      this.project = t0;
    }, ProjectList__buildItem_closure0: function ProjectList__buildItem_closure0(t0, t1) {
      this.$this = t0;
      this.item = t1;
    }, ProjectList__buildItem_closure1: function ProjectList__buildItem_closure1(t0) {
      this.item = t0;
    }, ProjectList__buildProjectBadge_closure: function ProjectList__buildProjectBadge_closure(t0) {
      this.project = t0;
    }, ProjectList__buildProjectBadge_closure0: function ProjectList__buildProjectBadge_closure0(t0, t1) {
      this.$this = t0;
      this.project = t1;
    }, ProjectList__buildProjectBadge_closure1: function ProjectList__buildProjectBadge_closure1(t0, t1) {
      this.$this = t0;
      this.project = t1;
    }, ProjectList__playPreview_closure: function ProjectList__playPreview_closure(t0) {
      this.item = t0;
    }, ProjectList__playPreview_closure0: function ProjectList__playPreview_closure0(t0) {
      this.item = t0;
    }, ProjectList__playPreview_closure1: function ProjectList__playPreview_closure1(t0) {
      this.item = t0;
    }},
  T = {
    UuidUtil_mathRNG: function() {
      var b, rand, i,
        t1 = new Array(16);
      t1.fixed$length = Array;
      b = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
      for (rand = null, i = 0; i < 16; ++i) {
        t1 = i & 3;
        if (t1 === 0)
          rand = C.JSInt_methods.toInt$0(C.JSNumber_methods.floor$0(C.C__JSRandom.nextDouble$0() * 4294967296));
        if (typeof rand !== "number")
          return rand.$shr();
        C.JSArray_methods.$indexSet(b, i, C.JSInt_methods._shrOtherPositive$1(rand, t1 << 3) & 255);
      }
      return b;
    }
  };
  var holders = [C, H, J, P, W, D, U, X, S, N, R, Z, A, Y, F, B, E, K, L, V, Q, O, G, T];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'";
    },
    noSuchMethod$1: function(receiver, invocation) {
      type$.Invocation._as(invocation);
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $and: function(receiver, other) {
      H._asBoolNullable(other);
      return other && receiver;
    },
    $or: function(receiver, other) {
      H._asBoolNullable(other);
      return other || receiver;
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    noSuchMethod$1: function(receiver, invocation) {
      return this.super$Interceptor$noSuchMethod(receiver, type$.Invocation._as(invocation));
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isJSObject: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $signature: function() {
      return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1: function(receiver, value) {
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1: function(receiver, index) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    addAll$1: function(receiver, collection) {
      var t1;
      H._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("addAll"));
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    forEach$1: function(receiver, f) {
      var end, i;
      H._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H._arrayInstanceType(receiver);
      return new H.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1: function(receiver, separator) {
      var i,
        list = new Array(receiver.length);
      list.fixed$length = Array;
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, H.S(receiver[i]));
      return list.join(separator);
    },
    fold$1$2: function(receiver, initialValue, combine, $T) {
      var $length, value, i;
      $T._as(false);
      H._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
      $length = receiver.length;
      for (value = false, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    sublist$2: function(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
      end = receiver.length;
      if (start === end)
        return H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));
      return H.setRuntimeTypeInfo(receiver.slice(start, end), H._arrayInstanceType(receiver));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, t2, i,
        t1 = H._arrayInstanceType(receiver);
      t1._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      t1._eval$1("List<1>")._as(iterable);
      t1 = J.getInterceptor$asx(iterable);
      t2 = t1.get$length(iterable);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (skipCount + $length > t2)
        throw H.wrapException(H.IterableElementError_tooFew());
      if (skipCount < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1: function(receiver, test) {
      var end, i;
      H._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (H.boolConversionCheck(test.call$1(receiver[i])))
          return true;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    indexOf$1: function(receiver, element) {
      var i;
      if (0 >= receiver.length)
        return -1;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element))
          return i;
      return -1;
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, H._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      var _s9_ = "newLength";
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      if (!H._isInt(newLength))
        throw H.wrapException(P.ArgumentError$value(newLength, _s9_, null));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, _s9_, null));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var totalLength,
        t1 = H._arrayInstanceType(receiver);
      t1._eval$1("List<1>")._as(other);
      totalLength = C.JSInt_methods.$add(receiver.length, other.get$length(other));
      t1 = H.setRuntimeTypeInfo([], t1);
      this.set$length(t1, totalLength);
      this.setRange$3(t1, 0, receiver.length, receiver);
      this.setRange$3(t1, receiver.length, totalLength, other);
      return t1;
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function(_) {
      return this.__interceptors$_current;
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this.__interceptors$_iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this.__interceptors$_index;
      if (t2 >= $length) {
        _this.set$__interceptors$_current(null);
        return false;
      }
      _this.set$__interceptors$_current(t1[t2]);
      ++_this.__interceptors$_index;
      return true;
    },
    set$__interceptors$_current: function(_current) {
      this.__interceptors$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    ceil$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647) {
          truncated = receiver | 0;
          return receiver === truncated ? truncated : truncated + 1;
        }
      } else if (receiver >= -2147483648)
        return receiver | 0;
      d = Math.ceil(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".ceil()"));
    },
    floor$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0: function(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
    },
    clamp$2: function(receiver, lowerLimit, upperLimit) {
      if (typeof upperLimit != "number")
        throw H.wrapException(H.argumentErrorValue(upperLimit));
      if (this.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toStringAsFixed$1: function(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw H.wrapException(P.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1: function(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return H.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return H.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + C.JSString_methods.$mul("0", exponent);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return 536870911 & intValue;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;
    },
    $add: function(receiver, other) {
      H._asNumNullable(other);
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver - other;
    },
    $div: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver / other;
    },
    $mod: function(receiver, other) {
      var result;
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv: function(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + H.S(other)));
    },
    $shl: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    $shr: function(receiver, other) {
      var t1;
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $and: function(receiver, other) {
      return (receiver & other) >>> 0;
    },
    $or: function(receiver, other) {
      H._asNumNullable(other);
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver | other) >>> 0;
    },
    $lt: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver < other;
    },
    $gt: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver > other;
    },
    $le: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver <= other;
    },
    $ge: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver >= other;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSDouble.prototype = {};
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1: function(receiver, index) {
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add: function(receiver, other) {
      H._asStringNullable(other);
      if (typeof other != "string")
        throw H.wrapException(P.ArgumentError$value(other, null, null));
      return receiver + other;
    },
    split$1: function(receiver, pattern) {
      var t1 = H.setRuntimeTypeInfo(receiver.split(pattern), type$.JSArray_String);
      return t1;
    },
    startsWith$1: function(receiver, pattern) {
      var otherLength = pattern.length;
      if (otherLength > receiver.length)
        return false;
      return pattern === receiver.substring(0, otherLength);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (endIndex == null)
        endIndex = receiver.length;
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    toLowerCase$0: function(receiver) {
      return receiver.toLowerCase();
    },
    trim$0: function(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    indexOf$2: function(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1: function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$1: function(receiver, pattern) {
      var start = receiver.length,
        t1 = pattern.length;
      if (start + t1 > start)
        start -= t1;
      return receiver.lastIndexOf(pattern, start);
    },
    contains$2: function(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw H.wrapException(P.RangeError$range(startIndex, 0, t1, null, null));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isPattern: 1,
    $isString: 1
  };
  H.CodeUnits.prototype = {
    get$length: function(_) {
      return this._string.length;
    },
    $index: function(_, i) {
      return C.JSString_methods.codeUnitAt$1(this._string, H._asIntNullable(i));
    }
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new H.ListIterator(_this, _this.get$length(_this), H._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    where$1: function(_, test) {
      return this.super$Iterable$where(0, H._instanceType(this)._eval$1("bool(ListIterable.E)")._as(test));
    }
  };
  H.ListIterator.prototype = {
    get$current: function(_) {
      return this._current;
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length != $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this._index;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t3 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t2.elementAt$1(t1, t3));
      ++_this._index;
      return true;
    },
    set$_current: function(_current) {
      this._current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      var t1 = H._instanceType(this);
      return new H.MappedIterator(J.get$iterator$ax(this._iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length: function(_) {
      return J.get$length$asx(this._iterable);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._iterable, index));
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$_current(_this._f.call$1(t1.get$current(t1)));
        return true;
      }
      _this.set$_current(null);
      return false;
    },
    get$current: function(_) {
      return this._current;
    },
    set$_current: function(_current) {
      this._current = this.$ti._rest[1]._as(_current);
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereIterator(J.get$iterator$ax(this._iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (H.boolConversionCheck(t2.call$1(t1.get$current(t1))))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return new H.TakeIterator(J.get$iterator$ax(this._iterable), this._takeCount, H._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this._iterable),
        t1 = this._takeCount;
      if (typeof iterableLength !== "number")
        return iterableLength.$gt();
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    moveNext$0: function() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current: function(_) {
      var t1;
      if (this._remaining < 0)
        return null;
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipIterable.prototype = {
    get$iterator: function(_) {
      return new H.SkipIterator(J.get$iterator$ax(this._iterable), this._skipCount, H._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length,
        t1 = J.get$length$asx(this._iterable);
      if (typeof t1 !== "number")
        return t1.$sub();
      $length = t1 - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    moveNext$0: function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      H.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  H.UnmodifiableListMixin.prototype = {
    $indexSet: function(_, index, value) {
      H._asIntNullable(index);
      H._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1: function(_, value) {
      H._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }
  };
  H.UnmodifiableListBase.prototype = {};
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this.__internal$_name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  H.ConstantMapView.prototype = {};
  H.ConstantMap.prototype = {
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $indexSet: function(_, key, val) {
      var t1 = H._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(val);
      return H.ConstantMap__throwUnmodifiable();
    },
    $isMap: 1
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this._length;
    },
    containsKey$1: function(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[H._asStringNullable(key)];
    },
    forEach$1: function(_, f) {
      var keys, t2, i, key,
        t1 = H._instanceType(this);
      t1._eval$1("~(1,2)")._as(f);
      keys = this._keys;
      for (t2 = keys.length, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        key = keys[i];
        f.call$2(key, t1._as(this._fetch$1(key)));
      }
    },
    get$keys: function(_) {
      return new H._ConstantMapKeyIterable(this, H._instanceType(this)._eval$1("_ConstantMapKeyIterable<1>"));
    }
  };
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length: function(_) {
      return this._map._keys.length;
    }
  };
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this._memberName;
      return t1;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return C.List_empty;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return C.List_empty;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (index >= t1.length)
          return H.ioore(t1, index);
        list.push(t1[index]);
      }
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return C.Map_empty;
      map = new H.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (t4 < 0 || t4 >= t2.length)
          return H.ioore(t2, t4);
        map.$indexSet(0, new H.Symbol(t3), t2[t4]);
      }
      return new H.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    },
    $isInvocation: 1
  };
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1;
      H._asStringNullable($name);
      t1 = this._box_0;
      t1.names = t1.names + "$" + H.S($name);
      C.JSArray_methods.add$1(this.namedArgumentList, $name);
      C.JSArray_methods.add$1(this.$arguments, argument);
      ++t1.argumentCount;
    },
    $signature: 61
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this.__js_helper$_message);
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(_this.__js_helper$_message);
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + H.S(_this.__js_helper$_message) + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + H.S(_this.__js_helper$_message) + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.ExceptionAndStackTrace.prototype = {};
  H.unwrapException_saveStackTrace.prototype = {
    call$1: function(error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex;
      return error;
    },
    $signature: 9
  };
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + H.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this.__js_helper$_target === other.__js_helper$_target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this.__js_helper$_target)) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this._name) + "' of " + ("Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'");
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    }
  };
  H._AssertionError.prototype = {
    toString$0: function(_) {
      return "Assertion failed: " + P.Error_safeToString(this.message);
    }
  };
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this._length;
    },
    get$isEmpty: function(_) {
      return this._length === 0;
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    get$keys: function(_) {
      return new H.LinkedHashMapKeyIterable(this, H._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var _this = this,
        t1 = H._instanceType(_this);
      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return false;
      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this, _null = null;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return _null;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return _null;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this.__js_helper$_addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        _this.__js_helper$_addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this.__js_helper$_newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this.__js_helper$_newLinkedCell$2(key, value));
      }
    },
    remove$1: function(_, key) {
      if (typeof key == "number" && (key & 0x3ffffff) === key)
        return this.__js_helper$_removeHashTableEntry$2(this._nums, key);
      else
        return this.internalRemove$1(key);
    },
    internalRemove$1: function(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this.__js_helper$_unlinkCell$1(cell);
      if (bucket.length === 0)
        _this._deleteTableEntry$2(rest, hash);
      return cell.hashMapCellValue;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this.__js_helper$_last = null;
        _this._length = 0;
        _this.__js_helper$_modified$0();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this;
      H._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    __js_helper$_addHashTableEntry$3: function(table, key, value) {
      var cell, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = _this._getTableCell$2(table, key);
      if (cell == null)
        _this._setTableEntry$3(table, key, _this.__js_helper$_newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    __js_helper$_removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = this._getTableCell$2(table, key);
      if (cell == null)
        return null;
      this.__js_helper$_unlinkCell$1(cell);
      this._deleteTableEntry$2(table, key);
      return cell.hashMapCellValue;
    },
    __js_helper$_modified$0: function() {
      this._modifications = this._modifications + 1 & 67108863;
    },
    __js_helper$_newLinkedCell$2: function(key, value) {
      var last, _this = this,
        t1 = H._instanceType(_this),
        cell = new H.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this.__js_helper$_last = cell;
      else {
        last = _this.__js_helper$_last;
        cell.__js_helper$_previous = last;
        _this.__js_helper$_last = last._next = cell;
      }
      ++_this._length;
      _this.__js_helper$_modified$0();
      return cell;
    },
    __js_helper$_unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell.__js_helper$_previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this.__js_helper$_last = previous;
      else
        next.__js_helper$_previous = previous;
      --_this._length;
      _this.__js_helper$_modified$0();
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    },
    $isLinkedHashMap: 1
  };
  H.JsLinkedHashMap_values_closure.prototype = {
    call$1: function(each) {
      var t1 = this.$this;
      return t1.$index(0, H._instanceType(t1)._precomputed1._as(each));
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H.LinkedHashMapCell.prototype = {};
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._map._length;
    },
    get$isEmpty: function(_) {
      return this._map._length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._map,
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(0, element);
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    get$current: function(_) {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._cell;
        if (t1 == null) {
          _this.set$__js_helper$_current(null);
          return false;
        } else {
          _this.set$__js_helper$_current(t1.hashMapCellKey);
          _this._cell = _this._cell._next;
          return true;
        }
      }
    },
    set$__js_helper$_current: function(_current) {
      this.__js_helper$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 9
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 51
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(H._asStringNullable(tag));
    },
    $signature: 45
  };
  H.JSSyntaxRegExp.prototype = {
    toString$0: function(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion: function() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = H.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1: function(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new H._MatchImplementation(m);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  H._MatchImplementation.prototype = {
    $index: function(_, index) {
      return C.JSArray_methods.$index(this._match, H._asIntNullable(index));
    }
  };
  H.NativeByteBuffer.prototype = {$isNativeByteBuffer: 1, $isByteBuffer: 1};
  H.NativeTypedData.prototype = {$isNativeTypedData: 1, $isTypedData: 1};
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asDoubleNullable(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asIntNullable(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeFloat32List.prototype = {$isFloat32List: 1};
  H.NativeInt16List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt32List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt8List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint16List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint32List.prototype = {
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8ClampedList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8List.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H.Rti.prototype = {
    _eval$1: function(recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1: function(typeOrTuple) {
      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  H._FunctionParameters.prototype = {};
  H._Error.prototype = {
    toString$0: function(_) {
      return this._message;
    }
  };
  H._TypeError.prototype = {};
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 8
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 52
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("Periodic timer."));
    },
    cancel$0: function(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._TimerImpl$periodic_closure.prototype = {
    call$0: function() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = C.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._AsyncAwaitCompleter.prototype = {
    complete$1: function(_, value) {
      var t2, t3,
        t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      t2 = !this.isSync || t1._eval$1("Future<1>")._is(value);
      t3 = this._future;
      if (t2)
        t3._asyncComplete$1(value);
      else
        t3._completeWithValue$1(t1._precomputed1._as(value));
    },
    completeError$2: function(e, st) {
      var t1;
      if (st == null)
        st = P.AsyncError_defaultStackTrace(e);
      t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  P._awaitOnObject_closure.prototype = {
    call$1: function(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 14
  };
  P._awaitOnObject_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 81
  };
  P._wrapJsFunctionForAsync_closure.prototype = {
    call$2: function(errorCode, result) {
      this.$protected(H._asIntNullable(errorCode), result);
    },
    $signature: 59
  };
  P._BroadcastStream.prototype = {};
  P._BroadcastSubscription.prototype = {
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    set$_async$_next: function(_next) {
      this._async$_next = this.$ti._as(_next);
    },
    set$_async$_previous: function(_previous) {
      this._async$_previous = this.$ti._as(_previous);
    }
  };
  P._BroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return this._state < 4;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      return this._doneFuture = new P._Future($.Zone__current, type$._Future_dynamic);
    },
    _removeListener$1: function(subscription) {
      var previous, next;
      H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, oldLast, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      if ((_this._state & 4) !== 0) {
        if (onDone == null)
          onDone = P.async___nullDoneHandler$closure();
        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, t1._eval$1("_DoneStreamSubscription<1>"));
        t1._async$_schedule$0();
        return t1;
      }
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = t1._eval$1("_BroadcastSubscription<1>");
      subscription = new P._BroadcastSubscription(_this, t2, t3, t4);
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1._precomputed1);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
      t4._as(subscription);
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
      if (_this._firstSubscription == _this._lastSubscription)
        P._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1: function(sub) {
      var _this = this,
        t1 = H._instanceType(_this);
      sub = t1._eval$1("_BroadcastSubscription<1>")._as(t1._eval$1("StreamSubscription<1>")._as(sub));
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _recordPause$1: function(subscription) {
      H._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _recordResume$1: function(subscription) {
      H._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _addEventError$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    },
    add$1: function(_, data) {
      var _this = this;
      H._instanceType(_this)._precomputed1._as(data);
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    close$0: function(_) {
      var doneFuture, _this = this;
      if ((_this._state & 4) !== 0)
        return _this._doneFuture;
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._ensureDoneFuture$0();
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1: function(action) {
      var t1, subscription, id, next, _this = this;
      H._instanceType(_this)._eval$1("~(_BufferingStreamSubscription<1>)")._as(action);
      t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0: function() {
      var _this = this;
      if ((_this._state & 4) !== 0 && _this._doneFuture._state === 0)
        _this._doneFuture._asyncComplete$1(null);
      P._runGuarded(_this.onCancel);
    },
    set$_firstSubscription: function(_firstSubscription) {
      this._firstSubscription = H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(_firstSubscription);
    },
    set$_lastSubscription: function(_lastSubscription) {
      this._lastSubscription = H._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(_lastSubscription);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  P._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0: function() {
      if ((this._state & 2) !== 0)
        return new P.StateError("Cannot fire new event. Controller is already firing an event");
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1: function(data) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(data);
      t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._async$_add$1(0, data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendDone$0: function() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  P._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1: function(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._async$_add$1(0, this.data);
    },
    $signature: function() {
      return this.$this.$ti._eval$1("Null(_BufferingStreamSubscription<1>)");
    }
  };
  P._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1: function(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._close$0();
    },
    $signature: function() {
      return this.$this.$ti._eval$1("Null(_BufferingStreamSubscription<1>)");
    }
  };
  P._AsyncBroadcastStreamController.prototype = {
    _sendData$1: function(data) {
      var subscription,
        t1 = this.$ti;
      t1._precomputed1._as(data);
      for (subscription = this._firstSubscription, t1 = t1._eval$1("_DelayedData<1>"); subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new P._DelayedData(data, t1));
    },
    _sendDone$0: function() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  P.Future.prototype = {};
  P.Future_Future$delayed_closure.prototype = {
    call$0: function() {
      this.result._complete$1(null);
    },
    $signature: 1
  };
  P._Completer.prototype = {
    completeError$2: function(error, stackTrace) {
      P.ArgumentError_checkNotNull(error, "error", type$.Object);
      if (this.future._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      this._completeError$2(error, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    completeError$1: function(error) {
      return this.completeError$2(error, null);
    }
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      this.$ti._eval$1("1/")._as(value);
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  P._SyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      this.$ti._eval$1("1/")._as(value);
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._complete$1(value);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._completeError$2(error, stackTrace);
    }
  };
  P._FutureListener.prototype = {
    matchesErrorTest$1: function(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1: function(asyncError) {
      var errorCallback = this.errorCallback,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = this.$ti._eval$1("2/"),
        t4 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        return t3._as(t4.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, t1, t2, type$.StackTrace));
      else
        return t3._as(t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), asyncError.error, t1, t2));
    }
  };
  P._Future.prototype = {
    then$1$2$onError: function(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone !== C.C__RootZone) {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = P._registerErrorHandler(onError, currentZone);
      }
      result = new P._Future($.Zone__current, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new P._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1: function(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2: function(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new P._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new P._FutureListener(result, 19, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    whenComplete$1: function(action) {
      var t1, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      result = new P._Future($.Zone__current, t1);
      this._addListener$1(new P._FutureListener(result, 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _addListener$1: function(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 1) {
        listener._nextListener = type$._FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if (t1 === 2) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          t1 = source._state;
          if (t1 < 4) {
            source._addListener$1(listener);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1: function(listeners) {
      var t1, existingListeners, cursor, cursor0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 1) {
        existingListeners = type$._FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        cursor = _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          for (; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
            ;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (t1 === 2) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          t1 = source._state;
          if (t1 < 4) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0: function() {
      var current = type$._FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          P._Future__chainCoreFuture(value, _this);
        else
          P._Future__chainForeignFuture(value, _this);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 4;
        _this._resultOrListeners = value;
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 4;
      _this._resultOrListeners = value;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2: function(error, stackTrace) {
      var listeners, t1, _this = this;
      type$.StackTrace._as(stackTrace);
      listeners = _this._removeListeners$0();
      t1 = P.AsyncError$(error, stackTrace);
      _this._state = 8;
      _this._resultOrListeners = t1;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$1: function(error) {
      return this._completeError$2(error, null);
    },
    _asyncComplete$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        _this._chainFuture$1(value);
        return;
      }
      _this._state = 1;
      P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__asyncComplete_closure(_this, value)));
    },
    _chainFuture$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if (value._state === 8) {
          _this._state = 1;
          P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new P._Future__chainFuture_closure(_this, value)));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      P._Future__chainForeignFuture(value, _this);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new P._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 1
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 1
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.target;
      t1._state = 0;
      t1._complete$1(value);
    },
    $signature: 8
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this.target._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 50
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.target._completeError$2(this.e, this.s);
    },
    $signature: 1
  };
  P._Future__asyncComplete_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._completeWithValue$1(t1.$ti._precomputed1._as(this.value));
    },
    $signature: 1
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 1
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (_this.hasError) {
          t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners).error;
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        if (completeResult instanceof P._Future && completeResult._state >= 4) {
          if (completeResult._state === 8) {
            t1 = _this._box_0;
            t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
            t1.listenerHasError = true;
          }
          return;
        }
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 3
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 88
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, t1, t2, t3, t4, exception, _this = this;
      try {
        t1 = _this.listener;
        t2 = t1.$ti;
        t3 = t2._precomputed1;
        t4 = t3._as(_this.sourceResult);
        _this._box_0.listenerValueOrError = t1.result._zone.runUnary$2$2(t2._eval$1("2/(1)")._as(t1.callback), t4, t2._eval$1("2/"), t3);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_0;
        t1.listenerValueOrError = P.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 3
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, t2, exception, t3, t4, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this.listener;
        if (H.boolConversionCheck(t1.matchesErrorTest$1(asyncError)) && t1.errorCallback != null) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1.handleError$1(asyncError);
          t2.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = t1.error;
        t3 = e;
        t4 = _this._box_0;
        if (t2 == null ? t3 == null : t2 === t3)
          t4.listenerValueOrError = t1;
        else
          t4.listenerValueOrError = P.AsyncError$(e, s);
        t4.listenerHasError = true;
      }
    },
    $signature: 3
  };
  P._AsyncCallbackEntry.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, H._instanceType(this)._eval$1("_Future<1>"));
      t1.subscription = null;
      t1.subscription = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      H._instanceType(this.$this)._precomputed1._as(_);
      ++this._box_0.count;
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1)");
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P.Stream_first_closure.prototype = {
    call$1: function(value) {
      H._instanceType(this.$this)._precomputed1._as(value);
      P._cancelAndValue(this._box_0.subscription, this.future, value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1)");
    }
  };
  P.Stream_first_closure0.prototype = {
    call$0: function() {
      var e, s, t1, exception;
      try {
        t1 = H.IterableElementError_noElement();
        throw H.wrapException(t1);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._completeWithErrorCallback(this.future, e, s);
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P.StreamSubscription.prototype = {};
  P.StreamTransformerBase.prototype = {};
  P._StreamController.prototype = {
    get$_pendingEvents: function() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return H._instanceType(_this)._eval$1("_PendingEvents<1>")._as(_this._varData);
      t1 = H._instanceType(_this);
      return t1._eval$1("_PendingEvents<1>")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$varData());
    },
    _ensurePendingEvents$0: function() {
      var t1, state, _this = this;
      if ((_this._state & 8) === 0) {
        t1 = _this._varData;
        if (t1 == null)
          t1 = _this._varData = new P._StreamImplEvents(H._instanceType(_this)._eval$1("_StreamImplEvents<1>"));
        return H._instanceType(_this)._eval$1("_StreamImplEvents<1>")._as(t1);
      }
      t1 = H._instanceType(_this);
      state = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      state.get$varData();
      return t1._eval$1("_StreamImplEvents<1>")._as(state.get$varData());
    },
    get$_subscription: function() {
      var t1, _this = this;
      if ((_this._state & 8) !== 0) {
        t1 = H._instanceType(_this);
        return t1._eval$1("_ControllerSubscription<1>")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$varData());
      }
      return H._instanceType(_this)._eval$1("_ControllerSubscription<1>")._as(_this._varData);
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    add$1: function(_, value) {
      var t2, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(value);
      t2 = _this._state;
      if (t2 >= 4)
        throw H.wrapException(_this._badEventState$0());
      if ((t2 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, subscription, pendingEvents, addState, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      subscription = new P._ControllerSubscription(_this, t2, t3, t1._eval$1("_ControllerSubscription<1>"));
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1._precomputed1);
      pendingEvents = _this.get$_pendingEvents();
      t3 = _this._state |= 1;
      if ((t3 & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState.set$varData(subscription);
        addState.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var result, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = C.JSNull_methods.cancel$0(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData));
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      t1 = new P._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    _recordPause$1: function(subscription) {
      var _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        C.JSNull_methods.pause$0(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData));
      P._runGuarded(_this.onPause);
    },
    _recordResume$1: function(subscription) {
      var _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        C.JSNull_methods.resume$0(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData));
      P._runGuarded(_this.onResume);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  P._StreamController__subscribe_closure.prototype = {
    call$0: function() {
      P._runGuarded(this.$this.onListen);
    },
    $signature: 1
  };
  P._StreamController__recordCancel_complete.prototype = {
    call$0: function() {
      var t1 = this.$this._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    },
    $signature: 3
  };
  P._SyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      this.$ti._precomputed1._as(data);
      this.get$_subscription()._async$_add$1(0, data);
    }
  };
  P._AsyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      var t1 = this.$ti;
      t1._precomputed1._as(data);
      this.get$_subscription()._addPending$1(new P._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    }
  };
  P._AsyncStreamController.prototype = {};
  P._SyncStreamController.prototype = {};
  P._ControllerStream.prototype = {
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P._ControllerStream && other._controller === this._controller;
    }
  };
  P._ControllerSubscription.prototype = {
    _onCancel$0: function() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0: function() {
      this._controller._recordPause$1(this);
    },
    _onResume$0: function() {
      this._controller._recordResume$1(this);
    }
  };
  P._BufferingStreamSubscription.prototype = {
    _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
      var handleError, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(onData);
      _this.set$_async$_onData(type$.$env_1_1_dynamic._bind$1(t1._precomputed1)._eval$1("1(2)")._as(onData));
      handleError = onError == null ? P.async___nullErrorHandler$closure() : onError;
      if (type$.void_Function_Object_StackTrace._is(handleError))
        _this._onError = _this._zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      else if (type$.void_Function_Object._is(handleError))
        _this._onError = type$.dynamic_Function_Object._as(handleError);
      else
        H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
      t1 = type$.void_Function;
      t1._as(onDone);
      _this.set$_onDone(t1._as(onDone == null ? P.async___nullDoneHandler$closure() : onDone));
    },
    _setPendingEvents$1: function(pendingEvents) {
      var _this = this;
      H._instanceType(_this)._eval$1("_PendingEvents<1>")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 64) >>> 0;
        _this._pending.schedule$1(_this);
      }
    },
    pause$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128 && _this._pending != null) {
        t3 = _this._pending;
        if (t3._state === 1)
          t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    resume$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128)
          if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0: function(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0: function() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _async$_add$1: function(_, data) {
      var t2, _this = this,
        t1 = H._instanceType(_this);
      t1._precomputed1._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 32)
        _this._sendData$1(data);
      else
        _this._addPending$1(new P._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _close$0: function() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 32)
        _this._sendDone$0();
      else
        _this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _onCancel$0: function() {
      return null;
    },
    _addPending$1: function($event) {
      var _this = this,
        t1 = H._instanceType(_this)._eval$1("_StreamImplEvents<1>"),
        pending = t1._as(_this._pending);
      if (pending == null) {
        pending = new P._StreamImplEvents(t1);
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          _this._pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var t2, _this = this,
        t1 = H._instanceType(_this)._precomputed1;
      t1._as(data);
      t2 = _this._state;
      _this._state = (t2 | 32) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._async$_onData, data, t1);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendDone$0: function() {
      var t2, _this = this,
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      t2 = _this._cancelFuture;
      if (t2 != null && t2 !== $.$get$Future__nullFuture())
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var t1, _this = this;
      type$.void_Function._as(callback);
      t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null || t2.lastPendingEvent == null;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967263) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_async$_onData: function(_onData) {
      this._async$_onData = H._instanceType(this)._eval$1("~(1)")._as(_onData);
    },
    set$_onDone: function(_onDone) {
      this._onDone = type$.void_Function._as(_onDone);
    },
    set$_pending: function(_pending) {
      this._pending = H._instanceType(this)._eval$1("_PendingEvents<1>")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventDispatch: 1
  };
  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 3
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = H._instanceType(this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)")._as(onData), onError, onDone, true === cancelOnError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  P._DelayedEvent.prototype = {
    set$next: function(_, next) {
      this.next = type$._DelayedEvent_dynamic._as(next);
    },
    get$next: function(receiver) {
      return this.next;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  P._DelayedDone.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function(_) {
      return null;
    },
    set$next: function(_, _0) {
      throw H.wrapException(P.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  P._PendingEvents.prototype = {
    schedule$1: function(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t2, $event, t3,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      t3 = $event.get$next($event);
      t1.firstPendingEvent = t3;
      if (t3 == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 1
  };
  P._StreamImplEvents.prototype = {
    add$1: function(_, $event) {
      var t1, _this = this;
      type$._DelayedEvent_dynamic._as($event);
      t1 = _this.lastPendingEvent;
      if (t1 == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        t1.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  P._DoneStreamSubscription.prototype = {
    _async$_schedule$0: function() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      P._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(_this.get$_sendDone()));
      _this._state = (_this._state | 2) >>> 0;
    },
    pause$0: function(_) {
      this._state += 4;
    },
    resume$0: function(_) {
      var t1 = this._state;
      if (t1 >= 4) {
        t1 = this._state = t1 - 4;
        if (t1 < 4 && (t1 & 1) === 0)
          this._async$_schedule$0();
      }
    },
    cancel$0: function(_) {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0: function() {
      var _this = this,
        t1 = _this._state = (_this._state & 4294967293) >>> 0;
      if (t1 >= 4)
        return;
      _this._state = (t1 | 1) >>> 0;
      _this._zone.runGuarded$1(_this._onDone);
    },
    $isStreamSubscription: 1
  };
  P._StreamIterator.prototype = {
    get$current: function(_) {
      var _this = this;
      if (_this._subscription != null && _this._isPaused)
        return _this.$ti._precomputed1._as(_this._stateData);
      return null;
    },
    moveNext$0: function() {
      var future, _this = this,
        t1 = _this._subscription;
      if (t1 != null) {
        if (_this._isPaused) {
          future = new P._Future($.Zone__current, type$._Future_bool);
          _this._stateData = future;
          _this._isPaused = false;
          t1.resume$0(0);
          return future;
        }
        throw H.wrapException(P.StateError$("Already waiting for next."));
      }
      return _this._initializeOrDone$0();
    },
    _initializeOrDone$0: function() {
      var _this = this,
        stateData = _this._stateData;
      if (stateData != null) {
        _this._subscription = _this.$ti._eval$1("Stream<1>")._as(stateData).listen$4$cancelOnError$onDone$onError(_this.get$_async$_onData(), true, _this.get$_onDone(), _this.get$_onError());
        return _this._stateData = new P._Future($.Zone__current, type$._Future_bool);
      }
      return $.$get$Future__falseFuture();
    },
    cancel$0: function(_) {
      var _this = this,
        subscription = _this.$ti._eval$1("StreamSubscription<1>")._as(_this._subscription),
        stateData = _this._stateData;
      _this._stateData = null;
      if (subscription != null) {
        _this._subscription = null;
        if (!_this._isPaused)
          type$._Future_bool._as(stateData)._asyncComplete$1(false);
        return subscription.cancel$0(0);
      }
      return $.$get$Future__nullFuture();
    },
    _async$_onData$1: function(data) {
      var moveNextFuture, t1, _this = this;
      _this.$ti._precomputed1._as(data);
      moveNextFuture = type$._Future_bool._as(_this._stateData);
      _this._stateData = data;
      _this._isPaused = true;
      moveNextFuture._complete$1(true);
      t1 = _this._subscription;
      if (t1 != null && _this._isPaused)
        t1.pause$0(0);
    },
    _onError$2: function(error, stackTrace) {
      var moveNextFuture;
      type$.StackTrace._as(stackTrace);
      moveNextFuture = type$._Future_bool._as(this._stateData);
      this._stateData = this._subscription = null;
      moveNextFuture._completeError$2(error, stackTrace);
    },
    _onError$1: function(error) {
      return this._onError$2(error, null);
    },
    _onDone$0: function() {
      var moveNextFuture = type$._Future_bool._as(this._stateData);
      this._stateData = this._subscription = null;
      moveNextFuture._complete$1(false);
    }
  };
  P._cancelAndValue_closure.prototype = {
    call$0: function() {
      return this.future._complete$1(this.value);
    },
    $signature: 3
  };
  P.Timer.prototype = {};
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1,
    get$stackTrace: function() {
      return this.stackTrace;
    }
  };
  P._Zone.prototype = {$isZone: 1};
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var error,
        t1 = this._box_0,
        t2 = t1.stackTrace;
      if (t2 == null)
        throw H.wrapException(t1.error);
      error = H.wrapException(t1.error);
      error.stack = t2.toString$0(0);
      throw error;
    },
    $signature: 1
  };
  P._RootZone.prototype = {
    runGuarded$1: function(f) {
      var e, s, exception, _null = null;
      type$.void_Function._as(f);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(_null, _null, this, f, type$.void);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2: function(f, arg, $T) {
      var e, s, exception, _null = null;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(_null, _null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, type$.StackTrace._as(s));
      }
    },
    bindCallback$1$1: function(f, $R) {
      return new P._RootZone_bindCallback_closure(this, $R._eval$1("0()")._as(f), $R);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    $index: function(_, key) {
      return null;
    },
    run$1$1: function(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2: function(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1: function(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  P._RootZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1$1(this.f, this.R);
    },
    $signature: function() {
      return this.R._eval$1("0()");
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 3
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature: function() {
      return this.T._eval$1("~(0)");
    }
  };
  P._LinkedHashSet.prototype = {
    get$iterator: function(_) {
      var _this = this,
        t1 = new P._LinkedHashSetIterator(_this, _this._collection$_modifications, H._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: function(_, object) {
      var strings, t1;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return type$._LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("~(1)")._as(action);
      cell = _this._collection$_first;
      modifications = _this._collection$_modifications;
      for (t1 = t1._precomputed1; cell != null;) {
        action.call$1(t1._as(cell._collection$_element));
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      H._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1: function(_, element) {
      var rest, hash, bucket, _this = this;
      H._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._newLinkedCell$1(element));
      }
      return true;
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._unlinkCell$1(cell);
      return true;
    },
    _filterWhere$2: function(test, removeMatching) {
      var cell, element, next, modifications, t2, _this = this,
        t1 = H._instanceType(_this);
      t1._eval$1("bool(1)")._as(test);
      cell = _this._collection$_first;
      for (t1 = t1._precomputed1; cell != null; cell = next) {
        element = t1._as(cell._collection$_element);
        next = cell._collection$_next;
        modifications = _this._collection$_modifications;
        t2 = test.call$1(element);
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        if (true === t2)
          _this.remove$1(0, element);
      }
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_first = _this._last = null;
        _this._collection$_length = 0;
        _this._modified$0();
      }
    },
    _addHashTableEntry$2: function(table, element) {
      H._instanceType(this)._precomputed1._as(element);
      if (type$._LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    },
    _removeHashTableEntry$2: function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$._LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _modified$0: function() {
      this._collection$_modifications = 1073741823 & this._collection$_modifications + 1;
    },
    _newLinkedCell$1: function(element) {
      var last, _this = this,
        cell = new P._LinkedHashSetCell(H._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._last = cell;
      else {
        last = _this._last;
        cell._previous = last;
        _this._last = last._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this._collection$_length;
      _this._modified$0();
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._collection$_cell;
        if (t1 == null) {
          _this.set$_collection$_current(null);
          return false;
        } else {
          _this.set$_collection$_current(_this.$ti._precomputed1._as(t1._collection$_element));
          _this._collection$_cell = _this._collection$_cell._collection$_next;
          return true;
        }
      }
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  P.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 5
  };
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), H.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var $length, i;
      H.instanceType(receiver)._eval$1("~(ListMixin.E)")._as(action);
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty: function(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !this.get$isEmpty(receiver);
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.instanceType(receiver);
      return new H.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    toList$1$growable: function(receiver, growable) {
      var i, t1,
        result = H.setRuntimeTypeInfo([], H.instanceType(receiver)._eval$1("JSArray<ListMixin.E>"));
      C.JSArray_methods.set$length(result, this.get$length(receiver));
      i = 0;
      while (true) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, this.$index(receiver, i));
        ++i;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1: function(receiver, element) {
      var t1;
      H.instanceType(receiver)._eval$1("ListMixin.E")._as(element);
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return t1.$add();
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    $add: function(receiver, other) {
      var result, t2,
        t1 = H.instanceType(receiver);
      t1._eval$1("List<ListMixin.E>")._as(other);
      result = H.setRuntimeTypeInfo([], t1._eval$1("JSArray<ListMixin.E>"));
      t1 = this.get$length(receiver);
      t2 = other.get$length(other);
      if (typeof t1 !== "number")
        return t1.$add();
      C.JSArray_methods.set$length(result, C.JSInt_methods.$add(t1, t2));
      C.JSArray_methods.setRange$3(result, 0, this.get$length(receiver), receiver);
      C.JSArray_methods.setRange$3(result, this.get$length(receiver), result.length, other);
      return result;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 5
  };
  P.MapMixin.prototype = {
    forEach$1: function(receiver, action) {
      var t1, key;
      H.instanceType(receiver)._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        action.call$2(key, this.$index(receiver, key));
      }
    },
    containsKey$1: function(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length: function(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty: function(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    toString$0: function(receiver) {
      return P.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  P._UnmodifiableMapMixin.prototype = {
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  P.MapView.prototype = {
    $index: function(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      this._collection$_map.$indexSet(0, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1: function(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1: function(_, action) {
      this._collection$_map.forEach$1(0, this.$ti._eval$1("~(1,2)")._as(action));
    },
    get$isEmpty: function(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$length: function(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys: function(_) {
      var t1 = this._collection$_map;
      return t1.get$keys(t1);
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this._collection$_map);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {};
  P.ListQueue.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new P._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    elementAt$1: function(_, index) {
      var t1, t2, t3, _this = this,
        $length = _this.get$length(_this);
      if (typeof index !== "number")
        return H.iae(index);
      if (0 > index || index >= $length)
        H.throwExpression(P.IndexError$(index, _this, "index", null, $length));
      t1 = _this._table;
      t2 = t1.length;
      t3 = (_this._head + index & t2 - 1) >>> 0;
      if (t3 < 0 || t3 >= t2)
        return H.ioore(t1, t3);
      return t1[t3];
    },
    add$1: function(_, value) {
      this._add$1(0, this.$ti._precomputed1._as(value));
    },
    clear$0: function(_) {
      var _this = this,
        i = _this._head;
      if (i !== _this._tail) {
        for (; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0)
          C.JSArray_methods.$indexSet(_this._table, i, null);
        _this._head = _this._tail = 0;
        ++_this._modificationCount;
      }
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    _add$1: function(_, element) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(element);
      C.JSArray_methods.$indexSet(_this._table, _this._tail, element);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        t2 = new Array(t3 * 2);
        t2.fixed$length = Array;
        newTable = H.setRuntimeTypeInfo(t2, t1._eval$1("JSArray<1>"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        C.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this.set$_table(newTable);
      }
      ++_this._modificationCount;
    },
    set$_table: function(_table) {
      this._table = this.$ti._eval$1("List<1>")._as(_table);
    },
    $isQueue: 1
  };
  P._ListQueueIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t2, t3, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = _this._position;
      if (t2 === _this._end) {
        _this.set$_collection$_current(null);
        return false;
      }
      t3 = t1._table;
      if (t2 >= t3.length)
        return H.ioore(t3, t2);
      _this.set$_collection$_current(t3[t2]);
      _this._position = (_this._position + 1 & t1._table.length - 1) >>> 0;
      return true;
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  P.SetMixin.prototype = {
    toList$1$growable: function(_, growable) {
      var t1, i, i0, _this = this,
        result = H.setRuntimeTypeInfo([], H._instanceType(_this)._eval$1("JSArray<SetMixin.E>"));
      C.JSArray_methods.set$length(result, _this.get$length(_this));
      for (t1 = _this.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H._instanceType(t1)._precomputed1), i = 0; t1.moveNext$0(); i = i0) {
        i0 = i + 1;
        C.JSArray_methods.$indexSet(result, i, t1._collection$_current);
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H._instanceType(t1)._precomputed1), elementIndex = 0; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  P.SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P._SetBase.prototype = {
    addAll$1: function(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(H._instanceType(this)._eval$1("Iterable<1>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    toList$1$growable: function(_, growable) {
      var i, i0, _this = this,
        t1 = H._instanceType(_this),
        result = H.setRuntimeTypeInfo([], t1._eval$1("JSArray<1>"));
      C.JSArray_methods.set$length(result, _this._collection$_length);
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, t1._precomputed1), i = 0; t1.moveNext$0(); i = i0) {
        i0 = i + 1;
        C.JSArray_methods.$indexSet(result, i, t1._collection$_current);
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    join$1: function(_, separator) {
      var t1,
        iterator = P._LinkedHashSetIterator$(this, this._collection$_modifications, H._instanceType(this)._precomputed1);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(iterator._collection$_current);
        while (iterator.moveNext$0());
      } else {
        t1 = H.S(iterator._collection$_current);
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(iterator._collection$_current);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _this = this, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H._instanceType(_this)._precomputed1), elementIndex = 0; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, _this, _s5_, null, elementIndex));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P._SetBase_Object_SetMixin.prototype = {};
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  P._JsonMap.prototype = {
    $index: function(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        t1 = t1.get$length(t1);
      } else
        t1 = this._computeKeys$0().length;
      return t1;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$keys: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        return t1.get$keys(t1);
      }
      return new P._JsonMapKeyIterable(this);
    },
    $indexSet: function(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1: function(_, key) {
      if (this._processed == null)
        return this._data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    forEach$1: function(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = P._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var keys = type$.List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = H.setRuntimeTypeInfo(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0: function() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        C.JSArray_methods.add$1(keys, null);
      else
        C.JSArray_methods.set$length(keys, 0);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1: function(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = P._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  P._JsonMapKeyIterable.prototype = {
    get$length: function(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1: function(_, index) {
      var t1 = this._parent;
      return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : C.JSArray_methods.$index(t1._computeKeys$0(), index);
    },
    get$iterator: function(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1: function(_, key) {
      return this._parent.containsKey$1(0, key);
    }
  };
  P.Base64Codec.prototype = {
    get$encoder: function() {
      return C.C_Base64Encoder;
    }
  };
  P.Base64Encoder.prototype = {
    convert$1: function(input) {
      type$.List_int._as(input);
      if (J.get$isEmpty$asx(input))
        return "";
      return P.String_String$fromCharCodes(new P._Base64Encoder("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/").encode$4(input, 0, input.length, true));
    }
  };
  P._Base64Encoder.prototype = {
    encode$4: function(bytes, start, end, isLast) {
      var byteCount, fullChunks, bufferLength, output, _this = this;
      type$.List_int._as(bytes);
      byteCount = (_this._convert$_state & 3) + (end - start);
      fullChunks = C.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = new Uint8Array(bufferLength);
      _this._convert$_state = P._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, true, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  P.Codec.prototype = {};
  P.Converter.prototype = {};
  P.JsonUnsupportedObjectError.prototype = {
    toString$0: function(_) {
      var safeString = P.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  P.JsonCyclicError.prototype = {
    toString$0: function(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  P.JsonCodec.prototype = {
    decode$2$reviver: function(_, source, reviver) {
      var t1;
      type$.dynamic_Function_Object_Object._as(reviver);
      t1 = P._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable: function(value, toEncodable) {
      var t1;
      type$.dynamic_Function_dynamic._as(toEncodable);
      t1 = P._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    get$encoder: function() {
      return C.JsonEncoder_null;
    },
    get$decoder: function() {
      return C.JsonDecoder_null;
    }
  };
  P.JsonEncoder.prototype = {};
  P.JsonDecoder.prototype = {};
  P._JsonStringifier.prototype = {
    writeStringContent$1: function(s) {
      var t1, t2, offset, i, charCode, t3,
        $length = s.length;
      for (t1 = J.getInterceptor$s(s), t2 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = t1._codeUnitAt$1(s, i);
        if (charCode > 92)
          continue;
        if (charCode < 32) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          switch (charCode) {
            case 8:
              t2._contents += H.Primitives_stringFromCharCode(98);
              break;
            case 9:
              t2._contents += H.Primitives_stringFromCharCode(116);
              break;
            case 10:
              t2._contents += H.Primitives_stringFromCharCode(110);
              break;
            case 12:
              t2._contents += H.Primitives_stringFromCharCode(102);
              break;
            case 13:
              t2._contents += H.Primitives_stringFromCharCode(114);
              break;
            default:
              t2._contents += H.Primitives_stringFromCharCode(117);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t3 = charCode >>> 4 & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t3 = charCode & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          t2._contents += H.Primitives_stringFromCharCode(charCode);
        }
      }
      if (offset === 0)
        t2._contents += H.S(s);
      else if (offset < $length)
        t2._contents += t1.substring$2(s, offset, $length);
    },
    _checkCycle$1: function(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw H.wrapException(new P.JsonCyclicError(object, null));
      }
      C.JSArray_methods.add$1(t1, object);
    },
    writeObject$1: function(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = P.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw H.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw H.wrapException(t1);
      }
    },
    writeJsonValue$1: function(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += C.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1: function(list) {
      var t2, i, t3,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        i = 1;
        while (true) {
          t3 = t2.get$length(list);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
          ++i;
        }
      }
      t1._contents += "]";
    },
    writeMap$1: function(map) {
      var t2, keyValueList, i, separator, t3, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t2 = t1.get$length(map);
      if (typeof t2 !== "number")
        return t2.$mul();
      t2 *= 2;
      keyValueList = new Array(t2);
      keyValueList.fixed$length = Array;
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t1 = _this._sink;
      t1._contents += "{";
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        t1._contents += separator;
        _this.writeStringContent$1(H._asStringNullable(keyValueList[i]));
        t1._contents += '":';
        t3 = i + 1;
        if (t3 >= t2)
          return H.ioore(keyValueList, t3);
        _this.writeObject$1(keyValueList[t3]);
      }
      t1._contents += "}";
      return true;
    }
  };
  P._JsonStringifier_writeMap_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      C.JSArray_methods.$indexSet(t1, t2.i++, key);
      C.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 5
  };
  P._JsonStringStringifier.prototype = {
    get$_partialResult: function() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P._symbolMapToStringMap_closure.prototype = {
    call$2: function(key, value) {
      this.result.$indexSet(0, type$.Symbol._as(key).__internal$_name, value);
    },
    $signature: 33
  };
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2, t3;
      type$.Symbol._as(key);
      t1 = this.sb;
      t2 = this._box_0;
      t1._contents += t2.comma;
      t3 = t1._contents += H.S(key.__internal$_name);
      t1._contents = t3 + ": ";
      t1._contents += P.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 33
  };
  P.bool.prototype = {};
  P.DateTime.prototype = {
    add$1: function(_, duration) {
      return P.DateTime$_withValue(C.JSInt_methods.$add(this._value, type$.Duration._as(duration).get$inMilliseconds()), this.isUtc);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    DateTime$_withValue$2$isUtc: function(_value, isUtc) {
      var t2,
        t1 = this._value;
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
      P.ArgumentError_checkNotNull(this.isUtc, "isUtc", type$.bool);
    },
    get$hashCode: function(_) {
      var t1 = this._value;
      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),
        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),
        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),
        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this));
      if (_this.isUtc)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    }
  };
  P.DateTime_parse_parseIntOrZero.prototype = {
    call$1: function(matched) {
      if (matched == null)
        return 0;
      return P.int_parse(matched);
    },
    $signature: 35
  };
  P.DateTime_parse_parseMilliAndMicroseconds.prototype = {
    call$1: function(matched) {
      var t1, result, i;
      if (matched == null)
        return 0;
      for (t1 = matched.length, result = 0, i = 0; i < 6; ++i) {
        result *= 10;
        if (i < t1)
          result += C.JSString_methods._codeUnitAt$1(matched, i) ^ 48;
      }
      return result;
    },
    $signature: 35
  };
  P.double.prototype = {};
  P.Duration.prototype = {
    $add: function(_, other) {
      return new P.Duration(C.JSInt_methods.$add(this._duration, type$.Duration._as(other).get$_duration()));
    },
    $sub: function(_, other) {
      return new P.Duration(C.JSInt_methods.$sub(this._duration, type$.Duration._as(other).get$_duration()));
    },
    $lt: function(_, other) {
      return C.JSInt_methods.$lt(this._duration, type$.Duration._as(other).get$_duration());
    },
    $gt: function(_, other) {
      return C.JSInt_methods.$gt(this._duration, type$.Duration._as(other).get$_duration());
    },
    $le: function(_, other) {
      return C.JSInt_methods.$le(this._duration, type$.Duration._as(other).get$_duration());
    },
    $ge: function(_, other) {
      return C.JSInt_methods.$ge(this._duration, type$.Duration._as(other).get$_duration());
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,
        t1 = new P.Duration_toString_twoDigits(),
        t2 = this._duration;
      if (t2 < 0)
        return "-" + new P.Duration(0 - t2).toString$0(0);
      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    },
    $signature: 36
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    $signature: 36
  };
  P.Error.prototype = {
    get$stackTrace: function() {
      return H.getTraceFromException(this.$thrownJsError);
    }
  };
  P.AssertionError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + P.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var message, prefix, explanation, errorValue, _this = this,
        t1 = _this.name,
        nameString = t1 != null ? " (" + t1 + ")" : "";
      t1 = _this.message;
      message = t1 == null ? "" : ": " + H.S(t1);
      prefix = _this.get$_errorName() + nameString + message;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation, t2,
        t1 = this.start;
      if (t1 == null) {
        t1 = this.end;
        explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
      } else {
        t2 = this.end;
        if (t2 == null)
          explanation = ": Not greater than or equal to " + H.S(t1);
        else if (t2 > t1)
          explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
        else
          explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
      }
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var t1,
        invalidValue = H._asIntNullable(this.invalidValue);
      if (typeof invalidValue !== "number")
        return invalidValue.$lt();
      if (invalidValue < 0)
        return ": index must not be negative";
      t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + H.S(t1);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t1, t2, _i, t3, t4, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new P.StringBuffer("");
      _box_0.comma = "";
      for (t1 = _this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
        argument = t1[_i];
        sb._contents = t3 + t4;
        t3 = sb._contents += P.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      t1 = "NoSuchMethodError: method not found: '" + H.S(_this._core$_memberName.__internal$_name) + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {
    toString$0: function(_) {
      return "Out of Memory";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,
        t1 = this.message,
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException",
        offset = this.offset,
        objectSource = this.source;
      if (typeof objectSource == "string") {
        if (offset != null)
          t1 = offset > objectSource.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          source = objectSource.length > 78 ? C.JSString_methods.substring$2(objectSource, 0, 75) + "..." : objectSource;
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = objectSource.length;
        for (i = offset; i < lineEnd; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(objectSource, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
    },
    $isException: 1
  };
  P.Function.prototype = {};
  P.int.prototype = {};
  P.Iterable.prototype = {
    where$1: function(_, test) {
      var t1 = H._instanceType(this);
      return new H.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1;
      H._instanceType(this)._eval$1("~(Iterable.E)")._as(f);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$from(this, true, H._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$single: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw H.wrapException(H.IterableElementError_tooMany());
      return result;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Iterator.prototype = {};
  P.List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.Map.prototype = {};
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.num.prototype = {};
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(this)) + "'";
    },
    noSuchMethod$1: function(_, invocation) {
      type$.Invocation._as(invocation);
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.Set.prototype = {};
  P.StackTrace.prototype = {};
  P._StringStackTrace.prototype = {
    toString$0: function(_) {
      return "";
    },
    $isStackTrace: 1
  };
  P.String.prototype = {$isPattern: 1};
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  P.Symbol0.prototype = {};
  W.HtmlElement.prototype = {$isHtmlElement: 1};
  W.AccessibleNodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.AnchorElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isAnchorElement: 1
  };
  W.Animation.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.AudioElement.prototype = {$isAudioElement: 1};
  W.BackgroundFetchEvent.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.BackgroundFetchRegistration.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.BaseElement.prototype = {$isBaseElement: 1};
  W.BeforeUnloadEvent.prototype = {$isBeforeUnloadEvent: 1};
  W.Blob.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isBlob: 1
  };
  W.BlobEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.BodyElement.prototype = {
    get$onBlur: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "blur", false, type$._ElementEventStreamImpl_Event);
    },
    get$onFocus: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "focus", false, type$._ElementEventStreamImpl_Event);
    },
    $isBodyElement: 1
  };
  W.ButtonElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isButtonElement: 1
  };
  W.CacheStorage.prototype = {
    keys$0: function(receiver) {
      return P.promiseToFuture(receiver.keys(), type$.dynamic);
    }
  };
  W.CharacterData.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Client.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.CompositionEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.Credential.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.CryptoKey.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.CssNumericValue.prototype = {
    add$1: function(receiver, value) {
      return receiver.add(type$.CssNumericValue._as(value));
    },
    $isCssNumericValue: 1
  };
  W.CssPerspective.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssRule.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isCssRule: 1
  };
  W.CssStyleDeclaration.prototype = {
    _browserPropertyName$1: function(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1: function(receiver, propertyName) {
      var prefixed;
      if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
        return letter.toUpperCase();
      }) in receiver)
        return propertyName;
      prefixed = P.Device_cssPrefix() + propertyName;
      if (prefixed in receiver)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
      receiver.setProperty(propertyName, value, priority);
    },
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssStyleDeclarationBase.prototype = {};
  W.CssStyleValue.prototype = {};
  W.CssTransformComponent.prototype = {};
  W.CssTransformValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssUnitValue.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.CssUnparsedValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.DataTransferItem.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.DataTransferItemList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    add$1: function(receiver, data_OR_file) {
      return receiver.add(data_OR_file);
    },
    $index: function(receiver, index) {
      return receiver[H._asIntNullable(index)];
    }
  };
  W.DivElement.prototype = {$isDivElement: 1};
  W.Document.prototype = {
    createElementNS$2: function(receiver, namespaceURI, qualifiedName) {
      var t1 = receiver.createElementNS(namespaceURI, qualifiedName);
      return t1;
    },
    $isDocument: 1
  };
  W.DocumentFragment.prototype = {
    get$innerHtml: function(receiver) {
      var e = document.createElement("div");
      e.appendChild(receiver.cloneNode(true));
      return e.innerHTML;
    },
    set$_docChildren: function(receiver, _docChildren) {
      receiver._docChildren = type$.List_Element._as(_docChildren);
    },
    $isDocumentFragment: 1
  };
  W.DomException.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isDomException: 1
  };
  W.DomRectList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Rectangle_num._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomRectReadOnly.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other))
        if (receiver.left == other.left)
          if (receiver.top == other.top) {
            t1 = J.getInterceptor$x(other);
            t1 = this.get$width(receiver) == t1.get$width(other) && this.get$height(receiver) == t1.get$height(other);
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(this.get$width(receiver)), J.get$hashCode$(this.get$height(receiver)));
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$width: function(receiver) {
      return receiver.width;
    },
    $isRectangle: 1
  };
  W.DomStringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asStringNullable(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomTokenList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    add$1: function(receiver, tokens) {
      return receiver.add(tokens);
    }
  };
  W._ChildrenElementList.prototype = {
    get$isEmpty: function(_) {
      return this._html$_element.firstElementChild == null;
    },
    get$length: function(_) {
      return this._childElements.length;
    },
    $index: function(_, index) {
      return type$.Element._as(J.$index$asx(this._childElements, H._asIntNullable(index)));
    },
    $indexSet: function(_, index, value) {
      H._asIntNullable(index);
      this._html$_element.replaceChild(type$.Element._as(value), J.$index$asx(this._childElements, index));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: function(_, value) {
      type$.Element._as(value);
      this._html$_element.appendChild(value);
      return value;
    },
    get$iterator: function(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    addAll$1: function(_, iterable) {
      var t1, t2;
      type$.Iterable_Element._as(iterable);
      for (t1 = iterable.get$iterator(iterable), t2 = this._html$_element; t1.moveNext$0();)
        t2.appendChild(t1.__interceptors$_current);
    },
    clear$0: function(_) {
      J._clearChildren$0$x(this._html$_element);
    },
    get$first: function(_) {
      var result = this._html$_element.firstElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    get$last: function(_) {
      var result = this._html$_element.lastElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    }
  };
  W._FrozenElementList.prototype = {
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: function(_, index) {
      return this.$ti._precomputed1._as(C.NodeList_methods.$index(this._nodeList, H._asIntNullable(index)));
    },
    $indexSet: function(_, index, value) {
      H._asIntNullable(index);
      this.$ti._precomputed1._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    $isElementList: 1
  };
  W.Element.prototype = {
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    set$attributes: function(receiver, value) {
      var t1, t2;
      type$.Map_String_String._as(value);
      new W._ElementAttributeMap(receiver).clear$0(0);
      for (t1 = value.get$keys(value), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        receiver.setAttribute(t2, value.$index(0, t2));
      }
    },
    get$children: function(receiver) {
      return new W._ChildrenElementList(receiver, receiver.children);
    },
    get$classes: function(receiver) {
      return new W._ElementCssClassSet(receiver);
    },
    get$dataset: function(receiver) {
      return new W._DataAttributeMap(new W._ElementAttributeMap(receiver));
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    insertAdjacentHtml$4$treeSanitizer$validator: function(receiver, where, html, treeSanitizer, validator) {
      this._insertAdjacentNode$2(receiver, where, this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator));
    },
    insertAdjacentElement$2: function(receiver, where, element) {
      if (!!receiver.insertAdjacentElement)
        receiver.insertAdjacentElement(where, element);
      else
        this._insertAdjacentNode$2(receiver, where, element);
      return element;
    },
    _insertAdjacentNode$2: function(receiver, where, node) {
      var t1;
      switch (where.toLowerCase()) {
        case "beforebegin":
          receiver.parentNode.insertBefore(node, receiver);
          break;
        case "afterbegin":
          t1 = receiver.childNodes;
          receiver.insertBefore(node, t1.length > 0 ? t1[0] : null);
          break;
        case "beforeend":
          receiver.appendChild(node);
          break;
        case "afterend":
          receiver.parentNode.insertBefore(node, receiver.nextSibling);
          break;
        default:
          throw H.wrapException(P.ArgumentError$("Invalid position " + where));
      }
    },
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, t2, contextElement, fragment;
      if (treeSanitizer == null) {
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
          t2 = new W.NodeValidatorBuilder(t1);
          C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
          C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        $.Element__parseDocument = t2;
        $.Element__parseRange = t2.createRange();
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t2.href = t1.baseURI;
        $.Element__parseDocument.head.appendChild(t2);
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = type$.BodyElement._as(t2);
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver))
        contextElement = t1.body;
      else {
        contextElement = t1.createElement(receiver.tagName);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
        $.Element__parseRange.selectNodeContents(contextElement);
        fragment = $.Element__parseRange.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      t1 = $.Element__parseDocument.body;
      if (contextElement == null ? t1 != null : contextElement !== t1)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    },
    createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    set$innerHtml: function(receiver, html) {
      this.setInnerHtml$1(receiver, html);
    },
    setInnerHtml$1: function(receiver, html) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, null));
    },
    get$innerHtml: function(receiver) {
      return receiver.innerHTML;
    },
    blur$0: function(receiver) {
      return receiver.blur();
    },
    get$id: function(receiver) {
      return receiver.id;
    },
    get$tagName: function(receiver) {
      return receiver.tagName;
    },
    scrollTo$2: function(receiver, options_OR_x, y) {
      receiver.scrollTo(options_OR_x, y);
      return;
    },
    get$onBlur: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "blur", false, type$._ElementEventStreamImpl_Event);
    },
    get$onClick: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onFocus: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "focus", false, type$._ElementEventStreamImpl_Event);
    },
    get$onMouseDown: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "mousedown", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    $isElement: 1
  };
  W.Element_Element$html_closure.prototype = {
    call$1: function(e) {
      return type$.Element._is(type$.Node._as(e));
    },
    $signature: 41
  };
  W.EmbedElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Entry.prototype = {
    _html$_remove$2: function(receiver, successCallback, errorCallback) {
      type$.void_Function._as(successCallback);
      type$.void_Function_DomException._as(errorCallback);
      return receiver.remove(H.convertDartClosureToJS(successCallback, 0), H.convertDartClosureToJS(errorCallback, 1));
    },
    remove$0: function(receiver) {
      var t1 = new P._Future($.Zone__current, type$._Future_dynamic),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_dynamic);
      this._html$_remove$2(receiver, new W.Entry_remove_closure(completer), new W.Entry_remove_closure0(completer));
      return t1;
    }
  };
  W.Entry_remove_closure.prototype = {
    call$0: function() {
      this.completer.complete$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  W.Entry_remove_closure0.prototype = {
    call$1: function(error) {
      this.completer.completeError$1(type$.DomException._as(error));
    },
    $signature: 42
  };
  W.Event.prototype = {
    get$currentTarget: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.currentTarget);
    },
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    get$type: function(receiver) {
      return receiver.type;
    },
    preventDefault$0: function(receiver) {
      return receiver.preventDefault();
    },
    $isEvent: 1
  };
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      type$.dynamic_Function_Event._as(listener);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, false);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(type$.dynamic_Function_Event._as(listener), 1), false);
    },
    _removeEventListener$3: function(receiver, type, listener, options) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(type$.dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  W.ExtendableEvent.prototype = {};
  W.ExtendableMessageEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.FieldSetElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.File.prototype = {$isFile: 1};
  W.FileList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.File._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isFileList: 1
  };
  W.FileReader.prototype = {
    get$result: function(receiver) {
      var res = receiver.result;
      if (type$.ByteBuffer._is(res))
        return H.NativeUint8List_NativeUint8List$view(res, 0, null);
      return res;
    },
    readAsDataUrl$1: function(receiver, blob) {
      return receiver.readAsDataURL(blob);
    }
  };
  W.FileWriter.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.FontFace.prototype = {$isFontFace: 1};
  W.FontFaceSet.prototype = {
    add$1: function(receiver, arg) {
      return receiver.add(type$.FontFace._as(arg));
    }
  };
  W.FormElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isFormElement: 1
  };
  W.Gamepad.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    $isGamepad: 1
  };
  W.History.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isHtmlCollection: 1
  };
  W.HtmlDocument.prototype = {};
  W.HttpRequest.prototype = {
    open$3$async: function(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    send$1: function(receiver, body_OR_data) {
      return receiver.send(body_OR_data);
    },
    send$0: function($receiver) {
      return $receiver.send();
    },
    $isHttpRequest: 1
  };
  W.HttpRequest_getString_closure.prototype = {
    call$1: function(xhr) {
      return type$.HttpRequest._as(xhr).responseText;
    },
    $signature: 71
  };
  W.HttpRequest_request_closure.prototype = {
    call$1: function(e) {
      var t1, t2, accepted, unknownRedirect, t3;
      type$.ProgressEvent._as(e);
      t1 = this.xhr;
      t2 = t1.status;
      if (typeof t2 !== "number")
        return t2.$ge();
      accepted = t2 >= 200 && t2 < 300;
      unknownRedirect = t2 > 307 && t2 < 400;
      t2 = accepted || t2 === 0 || t2 === 304 || unknownRedirect;
      t3 = this.completer;
      if (t2)
        t3.complete$1(0, t1);
      else
        t3.completeError$1(e);
    },
    $signature: 73
  };
  W.HttpRequestEventTarget.prototype = {};
  W.ImageData.prototype = {$isImageData: 1};
  W.InputElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isInputElement: 1
  };
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.LIElement.prototype = {$isLIElement: 1};
  W.LinkElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Location.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isLocation: 1
  };
  W.MediaElement.prototype = {};
  W.MediaKeySession.prototype = {
    remove$0: function(receiver) {
      return P.promiseToFuture(receiver.remove(), type$.dynamic);
    }
  };
  W.MediaList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.MediaStream.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    $isMediaStream: 1
  };
  W.MediaStreamTrack.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.MessageEvent.prototype = {
    get$data: function(receiver) {
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(receiver.data, true);
    },
    $isMessageEvent: 1
  };
  W.MessagePort.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      type$.dynamic_Function_Event._as(listener);
      if (type === "message")
        receiver.start();
      this.super$EventTarget$addEventListener(receiver, type, listener, false);
    },
    $isMessagePort: 1
  };
  W.MidiInputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H._asStringNullable(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiInputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 16
  };
  W.MidiMessageEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.MidiOutputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H._asStringNullable(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiOutputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 16
  };
  W.MidiPort.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.MimeType.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isMimeType: 1
  };
  W.MimeTypeArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.MimeType._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.MouseEvent.prototype = {$isMouseEvent: 1};
  W.MutationRecord.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.Navigator.prototype = {
    getUserMedia$1$audio: function(receiver, audio) {
      var t1 = new P._Future($.Zone__current, type$._Future_MediaStream),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_MediaStream),
        options = P.LinkedHashMap_LinkedHashMap$_literal(["audio", true, "video", false], type$.String, type$.dynamic);
      if (!receiver.getUserMedia)
        receiver.getUserMedia = receiver.getUserMedia || receiver.webkitGetUserMedia || receiver.mozGetUserMedia || receiver.msGetUserMedia;
      this._getUserMedia$3(receiver, new P._StructuredCloneDart2Js([], []).walk$1(options), new W.Navigator_getUserMedia_closure(completer), new W.Navigator_getUserMedia_closure0(completer));
      return t1;
    },
    _getUserMedia$3: function(receiver, options, success, error) {
      type$.void_Function_MediaStream._as(success);
      type$.void_Function_NavigatorUserMediaError._as(error);
      return receiver.getUserMedia(options, H.convertDartClosureToJS(success, 1), H.convertDartClosureToJS(error, 1));
    }
  };
  W.Navigator_getUserMedia_closure.prototype = {
    call$1: function(stream) {
      this.completer.complete$1(0, type$.MediaStream._as(stream));
    },
    $signature: 86
  };
  W.Navigator_getUserMedia_closure0.prototype = {
    call$1: function(error) {
      this.completer.completeError$1(type$.NavigatorUserMediaError._as(error));
    },
    $signature: 46
  };
  W.NavigatorConcurrentHardware.prototype = {};
  W.NavigatorUserMediaError.prototype = {$isNavigatorUserMediaError: 1};
  W.NetworkInformation.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W._ChildNodeListLazy.prototype = {
    get$single: function(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw H.wrapException(P.StateError$("No elements"));
      if (l > 1)
        throw H.wrapException(P.StateError$("More than one element"));
      return t1.firstChild;
    },
    add$1: function(_, value) {
      this._this.appendChild(type$.Node._as(value));
    },
    addAll$1: function(_, iterable) {
      var t1, t2, len, i;
      type$.Iterable_Node._as(iterable);
      t1 = iterable._this;
      t2 = this._this;
      if (t1 !== t2)
        for (len = t1.childNodes.length, i = 0; i < len; ++i)
          t2.appendChild(t1.firstChild);
      return;
    },
    $indexSet: function(_, index, value) {
      var t1;
      H._asIntNullable(index);
      t1 = this._this;
      t1.replaceChild(type$.Node._as(value), C.NodeList_methods.$index(t1.childNodes, index));
    },
    get$iterator: function(_) {
      var t1 = this._this.childNodes;
      return new W.FixedSizeListIterator(t1, t1.length, H.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      H._asIntNullable(index);
      return C.NodeList_methods.$index(this._this.childNodes, index);
    }
  };
  W.Node.prototype = {
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    replaceWith$1: function(receiver, otherNode) {
      var $parent, exception;
      try {
        $parent = receiver.parentNode;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return receiver;
    },
    _clearChildren$0: function(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1);
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    _replaceChild$2: function(receiver, node, child) {
      return receiver.replaceChild(node, child);
    },
    $isNode: 1
  };
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.OListElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.ObjectElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.OutputElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.PaymentInstruments.prototype = {
    keys$0: function(receiver) {
      return P.promiseToFuture(receiver.keys(), type$.List_dynamic);
    }
  };
  W.PaymentRequest.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.PerformanceEntry.prototype = {};
  W.PerformanceNavigation.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.PerformanceNavigationTiming.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.PerformanceResourceTiming.prototype = {};
  W.Plugin.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isPlugin: 1
  };
  W.PluginArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Plugin._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.PreElement.prototype = {$isPreElement: 1};
  W.PresentationConnection.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.ProgressEvent.prototype = {$isProgressEvent: 1};
  W.PushEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.RelatedApplication.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.RtcDataChannel.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.RtcLegacyStatsReport.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.RtcSessionDescription.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.RtcStatsReport.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H._asStringNullable(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.RtcStatsReport_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 16
  };
  W.ScreenOrientation.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.ScriptElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.SelectElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$type: function(receiver) {
      return receiver.type;
    },
    $isSelectElement: 1
  };
  W.Selection.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.ShadowRoot.prototype = {
    get$innerHtml: function(receiver) {
      return receiver.innerHTML;
    },
    $isShadowRoot: 1
  };
  W.SourceBuffer.prototype = {$isSourceBuffer: 1};
  W.SourceBufferList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.SourceBuffer._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SourceElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.SpanElement.prototype = {$isSpanElement: 1};
  W.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  W.SpeechGrammarList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.SpeechGrammar._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SpeechRecognitionResult.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  W.Storage.prototype = {
    containsKey$1: function(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index: function(receiver, key) {
      return receiver.getItem(H._asStringNullable(key));
    },
    $indexSet: function(receiver, key, value) {
      receiver.setItem(key, H._asStringNullable(value));
    },
    remove$1: function(receiver, key) {
      var value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1: function(receiver, f) {
      var i, key;
      type$.void_Function_String_String._as(f);
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        f.call$2(key, receiver.getItem(key));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    get$isEmpty: function(receiver) {
      return receiver.key(0) == null;
    },
    $isMap: 1
  };
  W.Storage_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 17
  };
  W.StyleElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.StyleMedia.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.StyleSheet.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isStyleSheet: 1
  };
  W.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var table, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = W.Element_Element$html("<table>" + H.S(html) + "</table>", treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      fragment.toString;
      table.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(table));
      return fragment;
    }
  };
  W.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section, row;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      section.toString;
      t1 = new W._ChildNodeListLazy(section);
      row = t1.get$single(t1);
      fragment.toString;
      row.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(row));
      return fragment;
    }
  };
  W.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      fragment.toString;
      section.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(section));
      return fragment;
    }
  };
  W.TemplateElement.prototype = {
    setInnerHtml$1: function(receiver, html) {
      var t1, fragment;
      receiver.textContent = null;
      t1 = receiver.content;
      t1.toString;
      J._clearChildren$0$x(t1);
      fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, null, null);
      receiver.content.appendChild(fragment);
    },
    $isTemplateElement: 1
  };
  W.TextAreaElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isTextAreaElement: 1
  };
  W.TextEvent.prototype = {
    get$data: function(receiver) {
      return receiver.data;
    }
  };
  W.TextTrack.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    $isTextTrack: 1
  };
  W.TextTrackCue.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    },
    $isTextTrackCue: 1
  };
  W.TextTrackCueList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.TextTrackCue._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TextTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.TextTrack._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TimeRanges.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Touch.prototype = {$isTouch: 1};
  W.TouchList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Touch._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TrackDefault.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W.TrackDefaultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.UIEvent.prototype = {};
  W.UListElement.prototype = {$isUListElement: 1};
  W.Url.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.VideoTrack.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.VideoTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.VttRegion.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  W.WebSocket.prototype = {$isWebSocket: 1};
  W.Window.prototype = {
    get$animationFrame: function(receiver) {
      var t1 = new P._Future($.Zone__current, type$._Future_num);
      this.requestAnimationFrame$1(receiver, new W.Window_animationFrame_closure(new P._SyncCompleter(t1, type$._SyncCompleter_num)));
      return t1;
    },
    open$2: function(receiver, url, $name) {
      var t1 = W._DOMWindowCrossFrame__createSafe(receiver.open(url, $name));
      return t1;
    },
    requestAnimationFrame$1: function(receiver, callback) {
      type$.void_Function_num._as(callback);
      this._ensureRequestAnimationFrame$0(receiver);
      return this._requestAnimationFrame$1(receiver, W._wrapZone(callback, type$.num));
    },
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(type$.void_Function_num._as(callback), 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
      (function($this) {
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
          $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    scrollBy$1: function(receiver, options_OR_x) {
      receiver.scrollBy(P.convertDartToNative_Dictionary(options_OR_x));
      return;
    },
    $isWindow: 1,
    $isWindowBase: 1
  };
  W.Window_animationFrame_closure.prototype = {
    call$1: function(time) {
      this.completer.complete$1(0, H._asNumNullable(time));
    },
    $signature: 60
  };
  W._BeforeUnloadEvent.prototype = {$isBeforeUnloadEvent: 1};
  W._BeforeUnloadEventStreamProvider.prototype = {
    forTarget$1: function(e) {
      var t1 = type$.BeforeUnloadEvent,
        controller = P.StreamController_StreamController(true, t1),
        t2 = type$.void_Function_BeforeUnloadEvent._as(new W._BeforeUnloadEventStreamProvider_forTarget_closure(controller));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(e, "beforeunload", t2, false, t1);
      return new P._ControllerStream(controller, H._instanceType(controller)._eval$1("_ControllerStream<1>"));
    }
  };
  W._BeforeUnloadEventStreamProvider_forTarget_closure.prototype = {
    call$1: function($event) {
      this.controller.add$1(0, new W._BeforeUnloadEvent(type$.BeforeUnloadEvent._as($event)));
    },
    $signature: 74
  };
  W.Worker.prototype = {
    postMessage$1: function(receiver, message) {
      type$.List_Object._as(null);
      receiver.postMessage(new P._StructuredCloneDart2Js([], []).walk$1(message));
      return;
    }
  };
  W.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  W._Attr.prototype = {$is_Attr: 1};
  W._CssRuleList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.CssRule._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._DomRect.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other))
        if (receiver.left == other.left)
          if (receiver.top == other.top) {
            t1 = J.getInterceptor$x(other);
            t1 = receiver.width == t1.get$width(other) && receiver.height == t1.get$height(other);
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(receiver.width), J.get$hashCode$(receiver.height));
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$width: function(receiver) {
      return receiver.width;
    }
  };
  W._GamepadList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Gamepad._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._NamedNodeMap.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Node._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._Report.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  W._SpeechRecognitionResultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.SpeechRecognitionResult._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._StyleSheetList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.StyleSheet._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._AttributeMap.prototype = {
    clear$0: function(_) {
      var t1, t2, t3, _i, key;
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        if (typeof key == "string")
          t3.removeAttribute(key);
      }
    },
    forEach$1: function(_, f) {
      var t1, t2, t3, _i, key;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        f.call$2(key, t3.getAttribute(key));
      }
    },
    get$keys: function(_) {
      var len, t1, i, attr,
        attributes = this._html$_element.attributes,
        keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = attributes.length, t1 = type$._Attr, i = 0; i < len; ++i) {
        if (i >= attributes.length)
          return H.ioore(attributes, i);
        attr = t1._as(attributes[i]);
        if (attr.namespaceURI == null)
          C.JSArray_methods.add$1(keys, attr.name);
      }
      return keys;
    },
    get$isEmpty: function(_) {
      return this.get$keys(this).length === 0;
    }
  };
  W._ElementAttributeMap.prototype = {
    containsKey$1: function(_, key) {
      return this._html$_element.hasAttribute(key);
    },
    $index: function(_, key) {
      return this._html$_element.getAttribute(H._asStringNullable(key));
    },
    $indexSet: function(_, key, value) {
      this._html$_element.setAttribute(key, H._asStringNullable(value));
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    }
  };
  W._DataAttributeMap.prototype = {
    containsKey$1: function(_, key) {
      return this._attributes._html$_element.hasAttribute("data-" + this._toHyphenedName$1(key));
    },
    $index: function(_, key) {
      return this._attributes._html$_element.getAttribute("data-" + this._toHyphenedName$1(H._asStringNullable(key)));
    },
    $indexSet: function(_, key, value) {
      H._asStringNullable(value);
      this._attributes._html$_element.setAttribute("data-" + this._toHyphenedName$1(key), value);
    },
    forEach$1: function(_, f) {
      this._attributes.forEach$1(0, new W._DataAttributeMap_forEach_closure(this, type$.void_Function_String_String._as(f)));
    },
    get$keys: function(_) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this._attributes.forEach$1(0, new W._DataAttributeMap_keys_closure(this, keys));
      return keys;
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    },
    get$isEmpty: function(_) {
      return this.get$keys(this).length === 0;
    },
    _toCamelCase$1: function(hyphenedName) {
      var i, segment,
        segments = H.setRuntimeTypeInfo(hyphenedName.split("-"), type$.JSArray_String);
      for (i = 1; i < segments.length; ++i) {
        segment = segments[i];
        if (segment.length > 0)
          C.JSArray_methods.$indexSet(segments, i, segment[0].toUpperCase() + J.substring$1$s(segment, 1));
      }
      return C.JSArray_methods.join$1(segments, "");
    },
    _toHyphenedName$1: function(word) {
      var t1, i, t2, t3, lower;
      for (t1 = word.length, i = 0, t2 = ""; i < t1; ++i) {
        t3 = word[i];
        lower = t3.toLowerCase();
        t2 = (t3 !== lower && i > 0 ? t2 + "-" : t2) + lower;
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    }
  };
  W._DataAttributeMap_forEach_closure.prototype = {
    call$2: function(key, value) {
      if (J.getInterceptor$s(key).startsWith$1(key, "data-"))
        this.f.call$2(this.$this._toCamelCase$1(C.JSString_methods.substring$1(key, 5)), value);
    },
    $signature: 27
  };
  W._DataAttributeMap_keys_closure.prototype = {
    call$2: function(key, value) {
      if (J.getInterceptor$s(key).startsWith$1(key, "data-"))
        C.JSArray_methods.add$1(this.keys, this.$this._toCamelCase$1(C.JSString_methods.substring$1(key, 5)));
    },
    $signature: 27
  };
  W.CssClassSet.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  W._MultiElementCssClassSet.prototype = {
    readClasses$0: function() {
      var s = P.LinkedHashSet_LinkedHashSet(type$.String);
      C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_readClasses_closure(s));
      return s;
    },
    writeClasses$1: function(s) {
      var t1,
        classes = type$.Set_String._as(s).join$1(0, " ");
      for (t1 = this._elementIterable, t1 = new H.ListIterator(t1, t1.get$length(t1), t1.$ti._eval$1("ListIterator<ListMixin.E>")); t1.moveNext$0();)
        t1._current.className = classes;
    },
    modify$1: function(_, f) {
      C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_modify_closure(type$.dynamic_Function_Set_String._as(f)));
    },
    toggle$2: function(_, value, shouldAdd) {
      return C.JSArray_methods.fold$1$2(this._sets, false, new W._MultiElementCssClassSet_toggle_closure(value, shouldAdd), type$.bool);
    },
    toggle$1: function($receiver, value) {
      return this.toggle$2($receiver, value, null);
    },
    remove$1: function(_, value) {
      return C.JSArray_methods.fold$1$2(this._sets, false, new W._MultiElementCssClassSet_remove_closure(value), type$.bool);
    }
  };
  W._MultiElementCssClassSet__MultiElementCssClassSet_closure.prototype = {
    call$1: function(e) {
      return J.get$classes$x(type$.Element._as(e));
    },
    $signature: 72
  };
  W._MultiElementCssClassSet_readClasses_closure.prototype = {
    call$1: function(e) {
      return this.s.addAll$1(0, type$.CssClassSetImpl._as(e).readClasses$0());
    },
    $signature: 53
  };
  W._MultiElementCssClassSet_modify_closure.prototype = {
    call$1: function(e) {
      return type$.CssClassSetImpl._as(e).modify$1(0, this.f);
    },
    $signature: 57
  };
  W._MultiElementCssClassSet_toggle_closure.prototype = {
    call$2: function(changed, e) {
      H._asBoolNullable(changed);
      return H.boolConversionCheck(type$.CssClassSetImpl._as(e).toggle$2(0, this.value, this.shouldAdd)) || H.boolConversionCheck(changed);
    },
    $signature: 28
  };
  W._MultiElementCssClassSet_remove_closure.prototype = {
    call$2: function(changed, e) {
      H._asBoolNullable(changed);
      return H.boolConversionCheck(type$.CssClassSetImpl._as(e).remove$1(0, this.value)) || H.boolConversionCheck(changed);
    },
    $signature: 28
  };
  W._ElementCssClassSet.prototype = {
    readClasses$0: function() {
      var t1, t2, _i, trimmed,
        s = P.LinkedHashSet_LinkedHashSet(type$.String);
      for (t1 = this._html$_element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1: function(s) {
      this._html$_element.className = type$.Set_String._as(s).join$1(0, " ");
    },
    get$length: function(_) {
      return this._html$_element.classList.length;
    },
    contains$1: function(_, value) {
      return typeof value == "string" && this._html$_element.classList.contains(value);
    },
    add$1: function(_, value) {
      var list = this._html$_element.classList,
        t1 = list.contains(value);
      list.add(value);
      return !t1;
    },
    remove$1: function(_, value) {
      var list, removed, t1;
      if (typeof value == "string") {
        list = this._html$_element.classList;
        removed = list.contains(value);
        list.remove(value);
        t1 = removed;
      } else
        t1 = false;
      return t1;
    },
    toggle$2: function(_, value, shouldAdd) {
      var t1 = this._html$_element.classList.toggle(value);
      return t1;
    },
    toggle$1: function($receiver, value) {
      return this.toggle$2($receiver, value, null);
    }
  };
  W.EventStreamProvider.prototype = {};
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = H._instanceType(this);
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      return W._EventStreamSubscription$(this._target, this._eventType, onData, false, t1._precomputed1);
    }
  };
  W._ElementEventStreamImpl.prototype = {};
  W._ElementListEventStreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var pool, t2, t3,
        t1 = this.$ti;
      t1._eval$1("~(1)")._as(onData);
      type$.void_Function._as(onDone);
      pool = new W._StreamPool(new H.JsLinkedHashMap(t1._eval$1("@<Stream<1>>")._bind$1(t1._eval$1("StreamSubscription<1>"))._eval$1("JsLinkedHashMap<1,2>")), t1._eval$1("_StreamPool<1>"));
      pool.set$_html$_controller(P.StreamController_StreamController$broadcast(pool.get$close(pool), true, t1._precomputed1));
      for (t2 = this._targetList, t2 = new H.ListIterator(t2, t2.get$length(t2), t2.$ti._eval$1("ListIterator<ListMixin.E>")), t3 = this._eventType, t1 = t1._eval$1("_EventStream<1>"); t2.moveNext$0();)
        pool.add$1(0, new W._EventStream(t2._current, t3, false, t1));
      t1 = pool._html$_controller;
      t1.toString;
      return new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  W._EventStreamSubscription.prototype = {
    cancel$0: function(_) {
      var _this = this;
      if (_this._target == null)
        return null;
      _this._unlisten$0();
      _this._target = null;
      _this.set$_onData(null);
      return null;
    },
    pause$0: function(_) {
      if (this._target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    resume$0: function(_) {
      var _this = this;
      if (_this._target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0: function() {
      var _this = this,
        t1 = _this._onData;
      if (t1 != null && _this._pauseCount <= 0)
        J.addEventListener$3$x(_this._target, _this._eventType, t1, false);
    },
    _unlisten$0: function() {
      var t3,
        t1 = this._onData,
        t2 = t1 != null;
      if (t2) {
        t3 = this._target;
        t3.toString;
        type$.dynamic_Function_Event._as(t1);
        if (t2)
          J._removeEventListener$3$x(t3, this._eventType, t1, false);
      }
    },
    set$_onData: function(_onData) {
      this._onData = type$.dynamic_Function_Event._as(_onData);
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 87
  };
  W._StreamPool.prototype = {
    add$1: function(_, stream) {
      var t1, t2, t3, _this = this;
      _this.$ti._eval$1("Stream<1>")._as(stream);
      t1 = _this._subscriptions;
      if (t1.containsKey$1(0, stream))
        return;
      t2 = _this._html$_controller;
      t2 = t2.get$add(t2);
      stream.toString;
      t3 = stream.$ti;
      t3._eval$1("~(1)")._as(t2);
      type$.void_Function._as(new W._StreamPool_add_closure(_this, stream));
      t1.$indexSet(0, stream, W._EventStreamSubscription$(stream._target, stream._eventType, t2, false, t3._precomputed1));
    },
    close$0: function(_) {
      var t1, t2;
      for (t1 = this._subscriptions, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t2.get$current(t2).cancel$0(0);
      t1.clear$0(0);
      this._html$_controller.close$0(0);
    },
    set$_html$_controller: function(_controller) {
      this._html$_controller = this.$ti._eval$1("StreamController<1>")._as(_controller);
    }
  };
  W._StreamPool_add_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        subscription = t1._subscriptions.remove$1(0, t1.$ti._eval$1("Stream<1>")._as(this.stream));
      if (subscription != null)
        subscription.cancel$0(0);
      return null;
    },
    $signature: 3
  };
  W._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.get$isEmpty($._Html5NodeValidator__attributeValidators)) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1: function(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, H.S(W.Element__safeTagName(element)) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return H._asBoolNullable(validator.call$4(element, attributeName, value, this));
    },
    $isNodeValidator: 1
  };
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver), H.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1: function(receiver, value) {
      H.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }
  };
  W.NodeValidatorBuilder.prototype = {
    add$1: function(_, validator) {
      C.JSArray_methods.add$1(this._validators, type$.NodeValidator._as(validator));
    },
    allowsElement$1: function(element) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  W.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1: function(v) {
      return type$.NodeValidator._as(v).allowsElement$1(this.element);
    },
    $signature: 30
  };
  W.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1: function(v) {
      return type$.NodeValidator._as(v).allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 30
  };
  W._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, C.List_empty0);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1: function(element) {
      return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var _this = this,
        tagName = W.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes;
      if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t1 = _this.allowedAttributes;
        if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, H.S(tagName) + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    },
    $isNodeValidator: 1
  };
  W._SimpleNodeValidator_closure.prototype = {
    call$1: function(x) {
      return !C.JSArray_methods.contains$1(C.List_yrN, H._asStringNullable(x));
    },
    $signature: 11
  };
  W._SimpleNodeValidator_closure0.prototype = {
    call$1: function(x) {
      return C.JSArray_methods.contains$1(C.List_yrN, H._asStringNullable(x));
    },
    $signature: 11
  };
  W._TemplatingNodeValidator.prototype = {
    allowsAttribute$3: function(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  W._TemplatingNodeValidator_closure.prototype = {
    call$1: function(attr) {
      return "TEMPLATE::" + H.S(H._asStringNullable(attr));
    },
    $signature: 63
  };
  W._SvgNodeValidator.prototype = {
    allowsElement$1: function(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && W.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3: function(element, attributeName, value) {
      if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = _this._html$_position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._html$_position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._html$_position = t1;
      return false;
    },
    get$current: function(_) {
      return this._html$_current;
    },
    set$_html$_current: function(_current) {
      this._html$_current = this.$ti._precomputed1._as(_current);
    },
    $isIterator: 1
  };
  W._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  W._WrappedEvent.prototype = {
    get$currentTarget: function(_) {
      return J.get$currentTarget$x(this.wrapped);
    },
    get$target: function(_) {
      return J.get$target$x(this.wrapped);
    },
    get$type: function(_) {
      return J.get$type$x(this.wrapped);
    },
    preventDefault$0: function(_) {
      J.preventDefault$0$x(this.wrapped);
    },
    $isEvent: 1
  };
  W.NodeValidator.prototype = {};
  W._SameOriginUriPolicy.prototype = {$isUriPolicy: 1};
  W._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
      var _this = this,
        walk = new W._ValidatingTreeSanitizer_sanitizeTree_walk(_this);
      _this.modifiedTree = false;
      walk.call$2(node, null);
      for (; _this.modifiedTree;) {
        _this.modifiedTree = false;
        walk.call$2(node, null);
      }
    },
    _removeNode$2: function(node, $parent) {
      var t1 = this.modifiedTree = true;
      if ($parent != null ? $parent !== node.parentNode : t1)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node);
    },
    _sanitizeUntrustedElement$2: function(element, $parent) {
      var corruptedTest1, elementText, elementTagName, exception, t1,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        type$.Element._as(element);
        corruptedTest1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == 'lastChild' || element.name == 'lastChild' || element.id == 'previousSibling' || element.name == 'previousSibling' || element.id == 'children' || element.name == 'children')
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'previousSibling' || child.name == 'previousSibling' || child.id == 'children' || child.name == 'children')
              return true;
          }
          return false;
        }(element);
        corrupted = H.boolConversionCheck(corruptedTest1) ? true : !(element.attributes instanceof NamedNodeMap);
      } catch (exception) {
        H.unwrapException(exception);
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      try {
        elementTagName = W.Element__safeTagName(element);
        this._sanitizeElement$7(type$.Element._as(element), $parent, corrupted, elementText, elementTagName, type$.Map_dynamic_dynamic._as(attrs), H._asStringNullable(isAttr));
      } catch (exception) {
        if (H.unwrapException(exception) instanceof P.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing corrupted element " + H.S(elementText);
          if (typeof console != "undefined")
            window.console.warn(t1);
        }
      }
    },
    _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, keys, i, $name, t2, t3, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing element due to corrupted attributes on <" + text + ">";
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing disallowed element <" + H.S(tag) + "> from " + H.S($parent);
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed type extension <" + H.S(tag) + ' is="' + isAttr + '">';
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element; i >= 0; --i) {
        if (i >= keys.length)
          return H.ioore(keys, i);
        $name = keys[i];
        t2 = _this.validator;
        t3 = J.toLowerCase$0$s($name);
        H._asStringNullable($name);
        if (!t2.allowsAttribute$3(element, t3, t1.getAttribute($name))) {
          window;
          t2 = "Removing disallowed attribute <" + H.S(tag) + " " + $name + '="' + H.S(t1.getAttribute($name)) + '">';
          if (typeof console != "undefined")
            window.console.warn(t2);
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element))
        _this.sanitizeTree$1(element.content);
    },
    $isNodeTreeSanitizer: 1
  };
  W._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2: function(node, $parent) {
      var child, nextChild, t2, t3, t4, exception,
        t1 = this.$this;
      switch (node.nodeType) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (t2 = type$.Node; null != child;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t3 = nextChild.nextSibling;
            t4 = child;
            t4 = t3 == null ? t4 != null : t3 !== t4;
            t3 = t4;
          } else
            t3 = false;
          if (t3) {
            t3 = P.StateError$("Corrupt HTML");
            throw H.wrapException(t3);
          }
        } catch (exception) {
          H.unwrapException(exception);
          t3 = t2._as(child);
          t1.modifiedTree = true;
          t4 = t3.parentNode;
          t4 = node == null ? t4 != null : node !== t4;
          if (t4) {
            t4 = t3.parentNode;
            if (t4 != null)
              t4.removeChild(t3);
          } else
            node.removeChild(t3);
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 66
  };
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {};
  W._DomRectList_Interceptor_ListMixin.prototype = {};
  W._DomRectList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._MidiInputMap_Interceptor_MapMixin.prototype = {};
  W._MidiOutputMap_Interceptor_MapMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._RtcStatsReport_Interceptor_MapMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._Storage_Interceptor_MapMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      C.JSArray_methods.add$1(t1, value);
      C.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1: function(e) {
      var slot, t2, copy, _this = this, t1 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof P.DateTime)
        return new Date(e._value);
      if (type$.RegExp._is(e))
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (type$.File._is(e))
        return e;
      if (type$.Blob._is(e))
        return e;
      if (type$.FileList._is(e))
        return e;
      if (type$.ImageData._is(e))
        return e;
      if (type$.NativeByteBuffer._is(e) || type$.NativeTypedData._is(e) || type$.MessagePort._is(e))
        return e;
      if (type$.Map_dynamic_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (slot >= t2.length)
          return H.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        C.JSArray_methods.$indexSet(t2, slot, copy);
        J.forEach$1$ax(e, new P._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (type$.List_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      if (type$.JSObject._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (slot >= t2.length)
          return H.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        C.JSArray_methods.$indexSet(t2, slot, copy);
        _this.forEachObjectKey$2(e, new P._StructuredClone_walk_closure0(t1, _this));
        return t1.copy;
      }
      throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
    },
    copyList$2: function(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        copy = new Array($length);
      C.JSArray_methods.$indexSet(this.copies, slot, copy);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i)
        C.JSArray_methods.$indexSet(copy, i, this.walk$1(t1.$index(e, i)));
      return copy;
    }
  };
  P._StructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 5
  };
  P._StructuredClone_walk_closure0.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 5
  };
  P._AcceptStructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      C.JSArray_methods.add$1(t1, value);
      C.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1: function(e) {
      var millisSinceEpoch, t1, proto, slot, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date) {
        millisSinceEpoch = e.getTime();
        t1 = new P.DateTime(millisSinceEpoch, true);
        t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
        return t1;
      }
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return P.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        C.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        C.JSArray_methods.$indexSet(t1, slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = J.getInterceptor$ax(copy);
        i = 0;
        for (; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    },
    convertNativeToDart_AcceptStructuredClone$2$mustCopy: function(object, mustCopy) {
      this.mustCopy = mustCopy;
      return this.walk$1(object);
    }
  };
  P._AcceptStructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 68
  };
  P.convertDartToNative_Dictionary_closure.prototype = {
    call$2: function(key, value) {
      this.object[key] = value;
    },
    $signature: 5
  };
  P._StructuredCloneDart2Js.prototype = {
    forEachObjectKey$2: function(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2: function(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P.CssClassSetImpl.prototype = {
    _validateToken$1: function(value) {
      var t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
      if (typeof value != "string")
        H.throwExpression(H.argumentErrorValue(value));
      if (t1.test(value))
        return value;
      throw H.wrapException(P.ArgumentError$value(value, "value", "Not a valid class token"));
    },
    toString$0: function(_) {
      return this.readClasses$0().join$1(0, " ");
    },
    toggle$2: function(_, value, shouldAdd) {
      var s, t1, result;
      this._validateToken$1(value);
      s = this.readClasses$0();
      t1 = s.contains$1(0, value);
      if (!t1) {
        s.add$1(0, value);
        result = true;
      } else {
        s.remove$1(0, value);
        result = false;
      }
      this.writeClasses$1(s);
      return result;
    },
    toggle$1: function($receiver, value) {
      return this.toggle$2($receiver, value, null);
    },
    get$iterator: function(_) {
      var t1 = this.readClasses$0();
      return P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H._instanceType(t1)._precomputed1);
    },
    get$length: function(_) {
      return this.readClasses$0()._collection$_length;
    },
    contains$1: function(_, value) {
      if (typeof value != "string")
        return false;
      this._validateToken$1(value);
      return this.readClasses$0().contains$1(0, value);
    },
    add$1: function(_, value) {
      this._validateToken$1(value);
      return H._asBoolNullable(this.modify$1(0, new P.CssClassSetImpl_add_closure(value)));
    },
    remove$1: function(_, value) {
      var s, result;
      this._validateToken$1(value);
      if (typeof value != "string")
        return false;
      s = this.readClasses$0();
      result = s.remove$1(0, value);
      this.writeClasses$1(s);
      return result;
    },
    removeWhere$1: function(_, test) {
      this.modify$1(0, new P.CssClassSetImpl_removeWhere_closure(type$.bool_Function_String._as(test)));
    },
    toList$1$growable: function(_, growable) {
      return this.readClasses$0().toList$1$growable(0, true);
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    elementAt$1: function(_, index) {
      return this.readClasses$0().elementAt$1(0, index);
    },
    clear$0: function(_) {
      this.modify$1(0, new P.CssClassSetImpl_clear_closure());
    },
    modify$1: function(_, f) {
      var s, ret;
      type$.dynamic_Function_Set_String._as(f);
      s = this.readClasses$0();
      ret = f.call$1(s);
      this.writeClasses$1(s);
      return ret;
    }
  };
  P.CssClassSetImpl_add_closure.prototype = {
    call$1: function(s) {
      return type$.Set_String._as(s).add$1(0, this.value);
    },
    $signature: 70
  };
  P.CssClassSetImpl_removeWhere_closure.prototype = {
    call$1: function(s) {
      type$.Set_String._as(s);
      s._filterWhere$2(H._instanceType(s)._eval$1("bool(1)")._as(this.test), true);
      return null;
    },
    $signature: 32
  };
  P.CssClassSetImpl_clear_closure.prototype = {
    call$1: function(s) {
      return type$.Set_String._as(s).clear$0(0);
    },
    $signature: 32
  };
  P.FilteredElementList.prototype = {
    get$_html_common$_iterable: function() {
      var t1 = this._childNodes,
        t2 = H._instanceType(t1);
      return new H.MappedIterable(new H.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new P.FilteredElementList__iterable_closure()), t2._eval$1("WhereIterable<ListMixin.E>")), t2._eval$1("Element(ListMixin.E)")._as(new P.FilteredElementList__iterable_closure0()), t2._eval$1("MappedIterable<ListMixin.E,Element>"));
    },
    forEach$1: function(_, f) {
      type$.void_Function_Element._as(f);
      C.JSArray_methods.forEach$1(P.List_List$from(this.get$_html_common$_iterable(), false, type$.Element), f);
    },
    $indexSet: function(_, index, value) {
      var t1;
      H._asIntNullable(index);
      type$.Element._as(value);
      t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1._iterable, index)), value);
    },
    set$length: function(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable()._iterable);
      if (typeof len !== "number")
        return H.iae(len);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw H.wrapException(P.ArgumentError$("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: function(_, value) {
      this._childNodes._this.appendChild(type$.Element._as(value));
    },
    removeRange$2: function(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = H.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      if (typeof end !== "number")
        return end.$sub();
      C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H._instanceType(t1)._eval$1("Iterable.E")), true, type$.dynamic), new P.FilteredElementList_removeRange_closure());
    },
    clear$0: function(_) {
      J._clearChildren$0$x(this._childNodes._this);
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_html_common$_iterable()._iterable);
    },
    $index: function(_, index) {
      var t1;
      H._asIntNullable(index);
      t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1._iterable, index));
    },
    get$iterator: function(_) {
      var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    }
  };
  P.FilteredElementList__iterable_closure.prototype = {
    call$1: function(n) {
      return type$.Element._is(type$.Node._as(n));
    },
    $signature: 41
  };
  P.FilteredElementList__iterable_closure0.prototype = {
    call$1: function(n) {
      return type$.Element._as(type$.Node._as(n));
    },
    $signature: 83
  };
  P.FilteredElementList_removeRange_closure.prototype = {
    call$1: function(el) {
      return J.remove$0$ax(el);
    },
    $signature: 9
  };
  P._completeRequest_closure.prototype = {
    call$1: function(e) {
      this.completer.complete$1(0, this.T._as(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(this.request.result, false)));
    },
    $signature: 2
  };
  P.KeyRange.prototype = {$isKeyRange: 1};
  P.ObjectStore.prototype = {
    add$1: function(receiver, value) {
      var request, e, stacktrace, t1, exception, key = null;
      try {
        request = null;
        if (key != null)
          request = this._indexed_db$_add$2(receiver, value, key);
        else
          request = this._indexed_db$_add$1(receiver, value);
        t1 = P._completeRequest(type$.Request._as(request), type$.dynamic);
        return t1;
      } catch (exception) {
        e = H.unwrapException(exception);
        stacktrace = H.getTraceFromException(exception);
        t1 = P.Future_Future$error(e, stacktrace, type$.dynamic);
        return t1;
      }
    },
    _indexed_db$_add$2: function(receiver, value, key) {
      return receiver.add(new P._StructuredCloneDart2Js([], []).walk$1(value));
    },
    _indexed_db$_add$1: function($receiver, value) {
      return this._indexed_db$_add$2($receiver, value, null);
    }
  };
  P.Observation.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.Request.prototype = {$isRequest: 1};
  P.VersionChangeEvent.prototype = {
    get$target: function(receiver) {
      return receiver.target;
    }
  };
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction;
      type$.Function._as(o);
      jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 9
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 9
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return new P.JsFunction(o);
    },
    $signature: 44
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return new P.JsArray(o, type$.JsArray_dynamic);
    },
    $signature: 47
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return new P.JsObject(o);
    },
    $signature: 48
  };
  P.JsObject.prototype = {
    $index: function(_, property) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._js$_jsObject[property] = P._convertToJS(value);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(0);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t2,
        t1 = this._js$_jsObject;
      if (args == null)
        t2 = null;
      else {
        t2 = H._arrayInstanceType(args);
        t2 = P.List_List$from(new H.MappedListIterable(args, t2._eval$1("@(1)")._as(P.js___convertToJS$closure()), t2._eval$1("MappedListIterable<1,@>")), true, type$.dynamic);
      }
      return P._convertToDart(t1[method].apply(t1, t2));
    },
    get$hashCode: function(_) {
      return 0;
    }
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (typeof index == "number" && index === C.JSInt_methods.toInt$0(index))
        this._checkIndex$1(H._asIntNullable(index));
      return this.$ti._precomputed1._as(this.super$JsObject$$index(0, index));
    },
    $indexSet: function(_, index, value) {
      this.$ti._precomputed1._as(value);
      if (typeof index == "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(H._asIntNullable(index));
      this.super$JsObject$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$JsObject$$indexSet(0, "length", $length);
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [this.$ti._precomputed1._as(value)]);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._JsArray_JsObject_ListMixin.prototype = {};
  P.promiseToFuture_closure.prototype = {
    call$1: function(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/")._as(r));
    },
    $signature: 14
  };
  P.promiseToFuture_closure0.prototype = {
    call$1: function(e) {
      return this.completer.completeError$1(e);
    },
    $signature: 14
  };
  P._JSRandom.prototype = {
    nextInt$1: function(max) {
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
      return Math.random() * max >>> 0;
    },
    nextDouble$0: function() {
      return Math.random();
    },
    $isRandom: 1
  };
  P._RectangleBase.prototype = {};
  P.Rectangle.prototype = {};
  P.CircleElement.prototype = {$isCircleElement: 1};
  P.FEColorMatrixElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.FETurbulenceElement.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.GElement.prototype = {$isGElement: 1};
  P.GeometryElement.prototype = {};
  P.GraphicsElement.prototype = {};
  P.ImageElement0.prototype = {$isImageElement0: 1};
  P.Length.prototype = {$isLength: 1};
  P.LengthList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Length._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.LineElement.prototype = {$isLineElement: 1};
  P.Number.prototype = {$isNumber: 1};
  P.NumberList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Number._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.PathElement.prototype = {$isPathElement: 1};
  P.PointList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.RectElement.prototype = {$isRectElement: 1};
  P.ScriptElement0.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isScriptElement0: 1
  };
  P.StringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      H._asStringNullable(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.StyleElement0.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.AttributeClassSet.prototype = {
    readClasses$0: function() {
      var t1, t2, _i, trimmed,
        classname = this._element.getAttribute("class"),
        s = P.LinkedHashSet_LinkedHashSet(type$.String);
      if (classname == null)
        return s;
      for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1: function(s) {
      this._element.setAttribute("class", s.join$1(0, " "));
    }
  };
  P.SvgElement.prototype = {
    get$classes: function(receiver) {
      return new P.AttributeClassSet(receiver);
    },
    get$children: function(receiver) {
      return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
    },
    get$innerHtml: function(receiver) {
      var container = document.createElement("div"),
        cloned = type$.SvgElement._as(receiver.cloneNode(true)),
        t1 = container.children;
      cloned.toString;
      new W._ChildrenElementList(container, t1).addAll$1(0, new P.FilteredElementList(cloned, new W._ChildNodeListLazy(cloned)));
      return container.innerHTML;
    },
    set$innerHtml: function(receiver, value) {
      this.setInnerHtml$1(receiver, value);
    },
    createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
      var html, t2, fragment, svgFragment, root,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
      C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
      C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
      C.JSArray_methods.add$1(t1, new W._SvgNodeValidator());
      treeSanitizer = new W._ValidatingTreeSanitizer(new W.NodeValidatorBuilder(t1));
      html = '<svg version="1.1">' + H.S(svg) + "</svg>";
      t1 = document;
      t2 = t1.body;
      fragment = (t2 && C.BodyElement_methods).createFragment$2$treeSanitizer(t2, html, treeSanitizer);
      svgFragment = t1.createDocumentFragment();
      fragment.toString;
      t1 = new W._ChildNodeListLazy(fragment);
      root = t1.get$single(t1);
      for (; t1 = root.firstChild, t1 != null;)
        svgFragment.appendChild(t1);
      return svgFragment;
    },
    insertAdjacentHtml$4$treeSanitizer$validator: function(receiver, where, text, treeSanitizer, validator) {
      throw H.wrapException(P.UnsupportedError$("Cannot invoke insertAdjacentHtml on SVG."));
    },
    insertAdjacentElement$2: function(receiver, where, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot invoke insertAdjacentElement on SVG."));
    },
    blur$0: function(receiver) {
      return receiver.blur();
    },
    get$onBlur: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "blur", false, type$._ElementEventStreamImpl_Event);
    },
    get$onClick: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onFocus: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "focus", false, type$._ElementEventStreamImpl_Event);
    },
    get$onMouseDown: function(receiver) {
      return new W._ElementEventStreamImpl(receiver, "mousedown", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    $isSvgElement: 1
  };
  P.SvgSvgElement.prototype = {$isSvgSvgElement: 1};
  P.TextContentElement.prototype = {};
  P.TextElement.prototype = {$isTextElement: 1};
  P.TextPositioningElement.prototype = {};
  P.Transform.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isTransform: 1
  };
  P.TransformList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Transform._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._LengthList_Interceptor_ListMixin.prototype = {};
  P._LengthList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P.Float32List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.AnalyserNode.prototype = {$isAnalyserNode: 1};
  P.AudioBuffer.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    copyToChannel$3: function(receiver, source, channelNumber, startInChannel) {
      return receiver.copyToChannel(source, channelNumber, startInChannel);
    },
    getChannelData$1: function(receiver, channelIndex) {
      return receiver.getChannelData(channelIndex);
    },
    $isAudioBuffer: 1
  };
  P.AudioBufferSourceNode.prototype = {$isAudioBufferSourceNode: 1};
  P.AudioContext.prototype = {
    createGain$0: function(receiver) {
      if (receiver.createGain !== undefined)
        return receiver.createGain();
      else
        return receiver.createGainNode();
    },
    createScriptProcessor$3: function(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
      var t1,
        $function = receiver.createScriptProcessor || receiver.createJavaScriptNode;
      if (numberOfOutputChannels != null)
        return $function.call(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels);
      else if (numberOfInputChannels != null)
        return $function.call(receiver, bufferSize, numberOfInputChannels);
      else {
        t1 = $function.call(receiver, bufferSize);
        return t1;
      }
    },
    _decodeAudioData$3: function(receiver, audioData, successCallback, errorCallback) {
      type$.void_Function_AudioBuffer._as(successCallback);
      type$.void_Function_DomException._as(errorCallback);
      return receiver.decodeAudioData(audioData, H.convertDartClosureToJS(successCallback, 1), H.convertDartClosureToJS(errorCallback, 1));
    },
    decodeAudioData$1: function(receiver, audioData) {
      var t1, completer;
      type$.void_Function_AudioBuffer._as(null);
      type$.void_Function_DomException._as(null);
      t1 = new P._Future($.Zone__current, type$._Future_AudioBuffer);
      completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_AudioBuffer);
      this._decodeAudioData$3(receiver, audioData, new P.AudioContext_decodeAudioData_closure(completer), new P.AudioContext_decodeAudioData_closure0(completer));
      return t1;
    },
    $isAudioContext: 1
  };
  P.AudioContext_decodeAudioData_closure.prototype = {
    call$1: function(value) {
      this.completer.complete$1(0, type$.AudioBuffer._as(value));
    },
    $signature: 49
  };
  P.AudioContext_decodeAudioData_closure0.prototype = {
    call$1: function(error) {
      var t1;
      type$.DomException._as(error);
      t1 = this.completer;
      if (error == null)
        t1.completeError$1("");
      else
        t1.completeError$1(error);
    },
    $signature: 42
  };
  P.AudioNode.prototype = {
    _connect$3: function(receiver, destination, output, input) {
      return receiver.connect(destination, output, input);
    },
    disconnect$0: function(receiver) {
      return receiver.disconnect();
    },
    $isAudioNode: 1
  };
  P.AudioParam.prototype = {
    setValueCurveAtTime$3: function(receiver, values, time, duration) {
      return receiver.setValueCurveAtTime(type$.List_num._as(values), time, duration);
    },
    $isAudioParam: 1
  };
  P.AudioParamMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H._asStringNullable(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  P.AudioParamMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 16
  };
  P.AudioProcessingEvent.prototype = {$isAudioProcessingEvent: 1};
  P.AudioScheduledSourceNode.prototype = {};
  P.AudioTrack.prototype = {
    get$id: function(receiver) {
      return receiver.id;
    }
  };
  P.AudioTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.BaseAudioContext.prototype = {
    createGain$0: function(receiver) {
      return receiver.createGain();
    },
    createScriptProcessor$3: function(receiver, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
      return receiver.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
    },
    $isBaseAudioContext: 1
  };
  P.BiquadFilterNode.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isBiquadFilterNode: 1
  };
  P.ConvolverNode.prototype = {$isConvolverNode: 1};
  P.DelayNode.prototype = {$isDelayNode: 1};
  P.DynamicsCompressorNode.prototype = {$isDynamicsCompressorNode: 1};
  P.GainNode.prototype = {$isGainNode: 1};
  P.MediaStreamAudioSourceNode.prototype = {$isMediaStreamAudioSourceNode: 1};
  P.OfflineAudioContext.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.OscillatorNode.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    },
    $isOscillatorNode: 1
  };
  P.ScriptProcessorNode.prototype = {$isScriptProcessorNode: 1};
  P.StereoPannerNode.prototype = {$isStereoPannerNode: 1};
  P._AudioParamMap_Interceptor_MapMixin.prototype = {};
  P.ActiveInfo.prototype = {
    get$type: function(receiver) {
      return receiver.type;
    }
  };
  P.SqlResultSetRowList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._asIntNullable(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return P.convertNativeToDart_Dictionary(receiver.item(index));
    },
    $indexSet: function(receiver, index, value) {
      H._asIntNullable(index);
      type$.Map_dynamic_dynamic._as(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._SqlResultSetRowList_Interceptor_ListMixin.prototype = {};
  P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  D.GrowableAudioBuffer.prototype = {
    clone$0: function(_) {
      var t1 = this._channels.length,
        t2 = this.sampleRate,
        b = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], type$.JSArray_List_Float32List), P.ListQueue$(type$.List_num));
      b.reshape$2(t1, t2);
      b.append$1(0, this.toAudioBuffer$0());
      return b;
    },
    clear$0: function(_) {
      var t1, t2, _this = this,
        _i = _this.samples = 0;
      _this.waveform.clear$0(0);
      _this._buffer = null;
      for (t1 = _this._channels, t2 = t1.length; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        C.JSArray_methods.clear$0(t1[_i]);
    },
    reshape$2: function(channels, sampleRate) {
      var t1, t2, c;
      this.clear$0(0);
      this.sampleRate = sampleRate;
      t1 = this._channels;
      C.JSArray_methods.set$length(t1, 0);
      if (typeof channels !== "number")
        return channels.$lt();
      if (channels < 0)
        channels = 1;
      for (t2 = type$.JSArray_Float32List, c = 0; c < channels; ++c)
        C.JSArray_methods.add$1(t1, H.setRuntimeTypeInfo([], t2));
    },
    trim$2: function(_, start, end) {
      var $A, len, _i, channel, c, src, dst, i, _this = this,
        t1 = _this.samples,
        t2 = _this.sampleRate;
      if (typeof t2 !== "number")
        return H.iae(t2);
      end = J.clamp$2$n(end, 0, t1 / t2);
      t2 = _this.samples;
      t1 = _this.sampleRate;
      if (typeof t1 !== "number")
        return H.iae(t1);
      start = J.clamp$2$n(start, 0, t2 / t1);
      if (end <= start || _this.samples <= 0) {
        _this.clear$0(0);
        return;
      }
      if (_this._buffer == null)
        _this.toAudioBuffer$0();
      if (_this._buffer == null)
        return null;
      t1 = _this.sampleRate;
      if (typeof t1 !== "number")
        return H.iae(t1);
      $A = C.JSNumber_methods.round$0(start * t1);
      len = C.JSNumber_methods.round$0(end * t1) - $A;
      for (t1 = _this._channels, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        channel = t1[_i];
        C.JSArray_methods.clear$0(channel);
        C.JSArray_methods.add$1(channel, new Float32Array(len));
      }
      _this.waveform.clear$0(0);
      for (c = 0; c < t1.length; ++c) {
        src = _this._buffer.getChannelData(c);
        if (c >= t1.length)
          return H.ioore(t1, c);
        t2 = t1[c];
        if (0 >= t2.length)
          return H.ioore(t2, 0);
        dst = t2[0];
        for (i = 0; i < len; ++i) {
          t2 = i + $A;
          if (t2 < 0 || t2 >= src.length)
            return H.ioore(src, t2);
          t2 = src[t2];
          if (i >= dst.length)
            return H.ioore(dst, i);
          dst[i] = t2;
        }
      }
      _this.samples = len;
      _this._buffer = null;
    },
    append$1: function(_, b) {
      var t1, t2, t3, t4, amax, amin, c, t5, src, dest, t6, t7, i, t8, t9, _this = this;
      if (b == null)
        return;
      _this._buffer = null;
      t1 = _this._channels;
      t2 = _this.waveform;
      t3 = type$.JSArray_num;
      t4 = t2.$ti._precomputed1;
      amax = 0;
      amin = 0;
      c = 0;
      while (true) {
        if (c < t1.length) {
          t5 = b.numberOfChannels;
          if (typeof t5 !== "number")
            return H.iae(t5);
          t5 = c < t5;
        } else
          t5 = false;
        if (!t5)
          break;
        src = b.getChannelData(c);
        t5 = src.length;
        dest = new Float32Array(t5);
        for (t6 = c === 0, t7 = dest.length, i = 0; i < t5; ++i) {
          t8 = src[i];
          if (i >= t7)
            return H.ioore(dest, i);
          dest[i] = t8;
          if (t6) {
            t8 = ++_this.samples;
            t9 = src[i];
            amax = Math.max(amax, t9);
            amin = Math.min(amin, t9);
            if (C.JSInt_methods.$mod(t8 + 1, 2205) === 0) {
              t2._add$1(0, t4._as(H.setRuntimeTypeInfo([amin, amax], t3)));
              amax = 0;
              amin = 0;
            }
          }
        }
        if (c >= t1.length)
          return H.ioore(t1, c);
        C.JSArray_methods.add$1(t1[c], dest);
        ++c;
      }
    },
    loadAudio$2: function(context, url) {
      return this.loadAudio$body$GrowableAudioBuffer(context, url);
    },
    loadAudio$body$GrowableAudioBuffer: function(context, url) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, request, buffer, e, exception, $async$exception;
      var $async$loadAudio$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(W.HttpRequest_request(url, "GET", null, "arraybuffer", null, null), $async$loadAudio$2);
            case 7:
              // returning from await.
              request = $async$result;
              $async$goto = 8;
              return P._asyncAwait((context && C.AudioContext_methods).decodeAudioData$1(context, type$.ByteBuffer._as(W._convertNativeToDart_XHR_Response(request.response))), $async$loadAudio$2);
            case 8:
              // returning from await.
              buffer = $async$result;
              if (buffer != null) {
                $async$self.reshape$2(buffer.numberOfChannels, H._asIntNullable(buffer.sampleRate));
                $async$self.append$1(0, buffer);
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              P.print(e);
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadAudio$2, $async$completer);
    },
    toAudioBuffer$0: function() {
      var t2, t3, c, index, _i, b, t4, _this = this,
        t1 = _this._buffer;
      if (t1 != null)
        return t1;
      t1 = _this.samples;
      if (t1 <= 0)
        return null;
      t2 = _this._channels;
      t3 = type$.dynamic;
      _this._buffer = new AudioBuffer(P.convertDartToNative_Dictionary(P.LinkedHashMap_LinkedHashMap$_literal(["length", t1, "numberOfChannels", t2.length, "sampleRate", _this.sampleRate], t3, t3)));
      for (c = 0; c < t2.length; ++c)
        for (t1 = t2[c], t3 = t1.length, index = 0, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          b = t1[_i];
          t4 = _this._buffer;
          (t4 && C.AudioBuffer_methods).copyToChannel$3(t4, b, c, index);
          index += J.get$length$asx(b);
        }
      return _this._buffer;
    },
    toMP3$0: function() {
      var t1, channels, stereo, left, right, c, src, dest, t2, i, t3, _this = this;
      if (_this._buffer == null)
        _this.toAudioBuffer$0();
      t1 = _this._buffer;
      if (t1 == null)
        return null;
      channels = Math.min(2, H.checkNum(t1.numberOfChannels));
      stereo = channels === 2;
      t1 = t1.length;
      t1 = H._isInt(t1) ? t1 : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(t1)));
      left = new Int16Array(t1);
      if (stereo) {
        t1 = _this._buffer.length;
        t1 = H._isInt(t1) ? t1 : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(t1)));
        right = new Int16Array(t1);
      } else
        right = left;
      for (c = 0; c < channels; ++c) {
        src = _this._buffer.getChannelData(c);
        dest = c === 0 ? left : right;
        for (t1 = src.length, t2 = dest.length, i = 0; i < t1; ++i) {
          t3 = C.JSNumber_methods.round$0(Math.max(-1, Math.min(1, src[i])) * 32768);
          if (i >= t2)
            return H.ioore(dest, i);
          dest[i] = t3;
        }
      }
      t1 = type$.Uint8List;
      if (stereo)
        return t1._as($.$get$_context().callMethod$2("encodeMP3Stereo", [left, right, _this.sampleRate]));
      else
        return t1._as($.$get$_context().callMethod$2("encodeMP3Mono", [left, _this.sampleRate]));
    },
    toWAV$0: function() {
      var t1, channels, len, wav, t2, t3, leftSource, rightSource, i, c, sample, t4, _this = this;
      if (_this._buffer == null)
        _this.toAudioBuffer$0();
      t1 = _this._buffer;
      if (t1 == null)
        return null;
      channels = Math.min(2, H.checkNum(t1.numberOfChannels));
      len = t1.length;
      if (typeof len !== "number")
        return len.$mul();
      wav = new Int16Array(len * channels + 23);
      t1 = wav.length;
      if (0 >= t1)
        return H.ioore(wav, 0);
      wav[0] = 18770;
      if (1 >= t1)
        return H.ioore(wav, 1);
      wav[1] = 17990;
      t2 = 2 * len * channels;
      t3 = t2 + 15;
      if (2 >= t1)
        return H.ioore(wav, 2);
      wav[2] = t3 & 65535;
      if (3 >= t1)
        return H.ioore(wav, 3);
      wav[3] = (t3 & 4294901760) >>> 16;
      if (4 >= t1)
        return H.ioore(wav, 4);
      wav[4] = 16727;
      if (5 >= t1)
        return H.ioore(wav, 5);
      wav[5] = 17750;
      if (6 >= t1)
        return H.ioore(wav, 6);
      wav[6] = 28006;
      if (7 >= t1)
        return H.ioore(wav, 7);
      wav[7] = 8308;
      if (8 >= t1)
        return H.ioore(wav, 8);
      wav[8] = 18;
      if (9 >= t1)
        return H.ioore(wav, 9);
      wav[9] = 0;
      if (10 >= t1)
        return H.ioore(wav, 10);
      wav[10] = 1;
      if (11 >= t1)
        return H.ioore(wav, 11);
      wav[11] = channels;
      t3 = _this.sampleRate;
      if (typeof t3 !== "number")
        return t3.$and();
      if (12 >= t1)
        return H.ioore(wav, 12);
      wav[12] = t3 & 65535;
      if (13 >= t1)
        return H.ioore(wav, 13);
      wav[13] = (t3 & 4294901760) >>> 16;
      t3 = 2 * channels * t3;
      if (14 >= t1)
        return H.ioore(wav, 14);
      wav[14] = t3 & 65535;
      if (15 >= t1)
        return H.ioore(wav, 15);
      wav[15] = (t3 & 4294901760) >>> 16;
      if (16 >= t1)
        return H.ioore(wav, 16);
      wav[16] = channels * 2;
      if (17 >= t1)
        return H.ioore(wav, 17);
      wav[17] = 16;
      if (18 >= t1)
        return H.ioore(wav, 18);
      wav[18] = 0;
      if (19 >= t1)
        return H.ioore(wav, 19);
      wav[19] = 24932;
      if (20 >= t1)
        return H.ioore(wav, 20);
      wav[20] = 24948;
      if (21 >= t1)
        return H.ioore(wav, 21);
      wav[21] = t2 & 65535;
      if (22 >= t1)
        return H.ioore(wav, 22);
      wav[22] = (t2 & 4294901760) >>> 16;
      leftSource = _this._buffer.getChannelData(0);
      rightSource = channels === 2 ? _this._buffer.getChannelData(1) : leftSource;
      for (i = 0; i < len; ++i)
        for (t2 = i * channels, c = 0; c < channels; ++c) {
          if (c === 0) {
            if (i >= leftSource.length)
              return H.ioore(leftSource, i);
            sample = leftSource[i];
          } else {
            if (i >= rightSource.length)
              return H.ioore(rightSource, i);
            sample = rightSource[i];
          }
          sample = Math.max(-1, Math.min(1, sample));
          sample = sample < 0 ? sample * 32768 : sample * 32767;
          t3 = t2 + c + 23;
          t4 = C.JSNumber_methods.round$0(sample);
          if (t3 < 0 || t3 >= t1)
            return H.ioore(wav, t3);
          wav[t3] = t4;
        }
      return H.NativeUint8List_NativeUint8List$view(wav.buffer, 0, null);
    },
    downloadWAV$1: function(filename) {
      var objectUrl = (self.URL || self.webkitURL).createObjectURL(W.Blob_Blob([this.toWAV$0()], "audio/wav")),
        link = W.AnchorElement_AnchorElement();
      link.href = objectUrl;
      link.download = filename;
      link.click();
      (self.URL || self.webkitURL).revokeObjectURL(objectUrl);
    },
    downloadMP3$1: function(filename) {
      var objectUrl = (self.URL || self.webkitURL).createObjectURL(W.Blob_Blob([this.toMP3$0()], "audio/mp3")),
        link = W.AnchorElement_AnchorElement();
      link.href = objectUrl;
      link.download = filename;
      link.click();
      (self.URL || self.webkitURL).revokeObjectURL(objectUrl);
    },
    toWAVBase64$0: function() {
      var t1,
        wav = this.toWAV$0();
      if (wav != null) {
        type$.Base64Codec._eval$1("Codec.S")._as(wav);
        t1 = "data:audio/wav;base64," + C.C_Base64Codec.get$encoder().convert$1(wav);
      } else
        t1 = null;
      return t1;
    },
    generateWaveform$1: function(samples) {
      var ab, left, t2, right, stride, t3, t4, amax, amin, i, t5, t6,
        t1 = this.waveform;
      t1.clear$0(0);
      ab = this.toAudioBuffer$0();
      if (ab == null)
        return;
      left = ab.getChannelData(0);
      t2 = ab.numberOfChannels;
      if (typeof t2 !== "number")
        return t2.$gt();
      right = t2 > 1 ? ab.getChannelData(1) : left;
      t2 = left.length;
      stride = C.JSInt_methods.$tdiv(t2, samples);
      for (t3 = type$.JSArray_num, t4 = t1.$ti._precomputed1, amax = 0, amin = 0, i = 0; i < t2;) {
        t5 = left[i];
        if (i >= right.length)
          return H.ioore(right, i);
        t6 = right[i];
        amax = Math.max(amax, Math.max(t5, t6));
        amin = Math.min(amin, Math.min(t5, t6));
        ++i;
        if (i % stride === 0) {
          t1._add$1(0, t4._as(H.setRuntimeTypeInfo([amin, amax], t3)));
          amax = 0;
          amin = 0;
        }
      }
    },
    trimWaveform$1: function(samples) {
      var t1, t2, t3, t4, t5;
      for (t1 = this.waveform; t2 = t1._tail, t3 = t1._head, t4 = t1._table, t5 = t4.length, (t2 - t3 & t5 - 1) >>> 0 > samples;) {
        if (t3 === t2)
          H.throwExpression(H.IterableElementError_noElement());
        ++t1._modificationCount;
        if (t3 >= t5)
          return H.ioore(t4, t3);
        C.JSArray_methods.$indexSet(t4, t3, null);
        t1._head = (t1._head + 1 & t1._table.length - 1) >>> 0;
      }
    }
  };
  U.MIDIManager.prototype = {
    exportMidi$2: function(bpm, trace) {
      var bytes = H._asStringNullable($.$get$_context().callMethod$2("exportMidi", [bpm, C.C_JsonCodec.encode$2$toEncodable(trace, null)]));
      if (bytes != null)
        return W.Blob_Blob([new Uint8Array(H._ensureNativeList(new H.CodeUnits(bytes)))], "audio/midi");
      else
        return null;
    },
    _midiConnection$1: function(jsonString) {
      var _this = this, _s4_ = "type", _s5_ = "state",
        _s9_ = "connected",
        _s12_ = "disconnected",
        midi = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(jsonString), null)),
        t1 = J.getInterceptor$asx(midi),
        port = U._toInt(t1.$index(midi, "port"), 0);
      if (J.$eq$(t1.$index(midi, _s4_), "input") && J.$eq$(t1.$index(midi, _s5_), _s9_) && port !== 0)
        _this.inputs.$indexSet(0, port, midi);
      else if (J.$eq$(t1.$index(midi, _s4_), "input") && J.$eq$(t1.$index(midi, _s5_), _s12_) && port !== 0)
        _this.inputs.remove$1(0, port);
      else if (J.$eq$(t1.$index(midi, _s4_), "output") && J.$eq$(t1.$index(midi, _s5_), _s9_) && port !== 0)
        _this.outputs.$indexSet(0, port, midi);
      else if (J.$eq$(t1.$index(midi, _s4_), "output") && J.$eq$(t1.$index(midi, _s5_), _s12_) && port !== 0)
        _this.outputs.remove$1(0, port);
      _this._stateStream.add$1(0, new U.MIDIEvent(midi));
    },
    _midiEvent$1: function(jsonString) {
      var midi = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(jsonString), null));
      this._messageStream.add$1(0, new U.MIDIEvent(midi));
    },
    set$_stateStream: function(_stateStream) {
      this._stateStream = type$.StreamController_MIDIEvent._as(_stateStream);
    },
    set$_messageStream: function(_messageStream) {
      this._messageStream = type$.StreamController_MIDIEvent._as(_messageStream);
    }
  };
  U.MIDIEvent.prototype = {
    toString$0: function(_) {
      return J.toString$0$(this.data);
    }
  };
  X.PythonListener.prototype = {};
  X.PythonCompiler.prototype = {
    compile$2: function(code, boilerplate) {
      return this.compile$body$PythonCompiler(code, boilerplate);
    },
    compile$body$PythonCompiler: function(code, boilerplate) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, pcode, modules, worker, message, error, e, e0, t1, t2, imports, t3, t4, import_code, t5, t6, t7, t8, t9, t10, line, name_el, desc_el, exception, $async$exception, $async$temp1, $async$temp2;
      var $async$compile$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._compiling = true;
              t1 = $async$self.pp;
              pcode = t1.process$2(code, boilerplate.split("\n").length);
              modules = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_String);
              t2 = $async$self.listener;
              $async$temp1 = J;
              $async$temp2 = modules;
              $async$goto = 3;
              return P._asyncAwait(t2.getPythonModule$1("tunepad"), $async$compile$2);
            case 3:
              // returning from await.
              $async$temp1.$indexSet$ax($async$temp2, "tunepad", $async$result);
              $async$goto = t1.hasImports ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = type$.Set_String;
              $async$goto = 6;
              return P._asyncAwait($async$self._loadImports$2(C.JSString_methods.$add(boilerplate, code), modules), $async$compile$2);
            case 6:
              // returning from await.
              imports = $async$temp1._as($async$result);
              t3 = imports.get$iterator(imports);
            case 7:
              // for condition
              if (!t3.moveNext$0()) {
                // goto after for
                $async$goto = 8;
                break;
              }
              t4 = t3._collection$_current;
              $async$goto = 9;
              return P._asyncAwait(t2.getPythonModule$1(t4), $async$compile$2);
            case 9:
              // returning from await.
              import_code = $async$result;
              J.$indexSet$ax(modules, t4, C.JSString_methods.$add(boilerplate + "\n", import_code));
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
            case 5:
              // join
              worker = new Worker("packages/compiler/js/skulpt-webworker.js");
              $async$handler = 11;
              message = C.C_JsonCodec.decode$2$reviver(0, C.C_JsonCodec.encode$2$toEncodable([C.JSString_methods.$add(boilerplate + "\n", pcode), modules], null), null);
              J.postMessage$1$x(worker, message);
              error = false;
              t3 = P._StreamIterator$(new W._EventStream(type$.EventTarget._as(worker), "message", false, type$._EventStream_MessageEvent), type$.MessageEvent);
              $async$handler = 14;
              t1 = t1.linemap, t4 = type$.Element, t5 = type$._FrozenElementList_Element, t6 = t2.gadget;
            case 17:
              // for condition
              $async$temp1 = H;
              $async$goto = 19;
              return P._asyncAwait(t3.moveNext$0(), $async$compile$2);
            case 19:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto after for
                $async$goto = 18;
                break;
              }
              e = t3.get$current(t3);
              t7 = e.data;
              t8 = new P._AcceptStructuredCloneDart2Js([], []);
              t8.mustCopy = true;
              if (J.$eq$(J.$index$asx(t8.walk$1(t7), 0), "error")) {
                t7 = e.data;
                t8 = new P._AcceptStructuredCloneDart2Js([], []);
                t8.mustCopy = true;
                t7 = H._asStringNullable(J.$index$asx(t8.walk$1(t7), 1));
                t8 = e.data;
                t9 = new P._AcceptStructuredCloneDart2Js([], []);
                t9.mustCopy = true;
                message = H._asStringNullable(J.$index$asx(t9.walk$1(t8), 2));
                t8 = e.data;
                t9 = new P._AcceptStructuredCloneDart2Js([], []);
                t9.mustCopy = true;
                t8 = H._asStringNullable(J.$index$asx(t9.walk$1(t8), 3));
                t9 = e.data;
                t10 = new P._AcceptStructuredCloneDart2Js([], []);
                t10.mustCopy = true;
                t9 = H._asIntNullable(J.$index$asx(t10.walk$1(t9), 4));
                if (message == null || message === "")
                  message = "Unknown";
                if (typeof t9 !== "number") {
                  $async$returnValue = t9.$ge();
                  $async$next = [1, 12];
                  // goto finally
                  $async$goto = 15;
                  break;
                }
                line = t9 >= 0 && t1.containsKey$1(0, t9) ? t1.$index(0, t9) : -1;
                t9 = t2.root;
                name_el = t9.querySelector(".error-name");
                desc_el = t2.root.querySelector(".error-description");
                if (name_el != null && desc_el != null) {
                  J.set$innerHtml$x(name_el, t7);
                  t7 = J.getInterceptor$x(desc_el);
                  t7.set$innerHtml(desc_el, message);
                  if (typeof line !== "number") {
                    $async$returnValue = line.$gt();
                    $async$next = [1, 12];
                    // goto finally
                    $async$goto = 15;
                    break;
                  }
                  if (line > 0)
                    t7.set$innerHtml(desc_el, J.$add$ansx(t7.get$innerHtml(desc_el), " on line " + line + "."));
                  if (t8 != null && t8 !== "")
                    t7.set$innerHtml(desc_el, J.$add$ansx(t7.get$innerHtml(desc_el), "<br>" + H.S(t8)));
                  t7 = t2.root;
                  t7.toString;
                  H.checkTypeBound(t4, t4, "T", "querySelectorAll");
                  W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t7.querySelectorAll(".error-container"), t5)).remove$1(0, "hidden");
                  t2.root.classList.add("error");
                  t7 = "#cell-nav-" + H.S(t6.id) + " .shortcut-error";
                  t8 = document;
                  H.checkTypeBound(t4, t4, "T", "querySelectorAll");
                  W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t8.querySelectorAll(t7), t5)).remove$1(0, "hidden");
                }
                if (typeof line !== "number") {
                  $async$returnValue = line.$gt();
                  $async$next = [1, 12];
                  // goto finally
                  $async$goto = 15;
                  break;
                }
                if (line > 0) {
                  t7 = t2.editor;
                  t7.toString;
                  $.$get$_context().callMethod$2("setErrorMarker", [t7.id, line]);
                }
                error = true;
              } else {
                t7 = e.data;
                t8 = new P._AcceptStructuredCloneDart2Js([], []);
                t8.mustCopy = true;
                if (J.$eq$(J.$index$asx(t8.walk$1(t7), 0), "done")) {
                  $async$self._compiling = false;
                  t1 = e.data;
                  t4 = new P._AcceptStructuredCloneDart2Js([], []);
                  t4.mustCopy = true;
                  t2.onPythonDone$1(type$.List_dynamic._as(J.$index$asx(t4.walk$1(t1), 1)));
                  t1 = H.boolConversionCheck(error);
                  $async$returnValue = !t1;
                  $async$next = [1, 12];
                  // goto finally
                  $async$goto = 15;
                  break;
                }
              }
              // goto for condition
              $async$goto = 17;
              break;
            case 18:
              // after for
              $async$next.push(16);
              // goto finally
              $async$goto = 15;
              break;
            case 14:
              // uncaught
              $async$next = [11];
            case 15:
              // finally
              $async$handler = 11;
              $async$goto = 20;
              return P._asyncAwait(t3.cancel$0(0), $async$compile$2);
            case 20:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 16:
              // after finally
              $async$next.push(13);
              // goto finally
              $async$goto = 12;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception = $async$currentError;
              e0 = H.unwrapException($async$exception);
              P.print(J.toString$0$(e0));
              $async$next.push(13);
              // goto finally
              $async$goto = 12;
              break;
            case 10:
              // uncaught
              $async$next = [2];
            case 12:
              // finally
              $async$handler = 2;
              $async$self._compiling = false;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 13:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$compile$2, $async$completer);
    },
    _loadImports$2: function(code, modules) {
      type$.Map_String_String._as(modules);
      return this._loadImports$body$PythonCompiler(code, modules);
    },
    _loadImports$body$PythonCompiler: function(code, modules) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Set_dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], message, e, module, e0, t1, t2, t3, exception, worker, imports, $async$exception, $async$temp1;
      var $async$_loadImports$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              worker = new Worker("packages/compiler/js/skulpt-webworker.js");
              imports = P.LinkedHashSet_LinkedHashSet(type$.String);
              $async$handler = 4;
              message = C.C_JsonCodec.decode$2$reviver(0, C.C_JsonCodec.encode$2$toEncodable([code, modules], null), null);
              J.postMessage$1$x(worker, message);
              t1 = P._StreamIterator$(new W._EventStream(type$.EventTarget._as(worker), "message", false, type$._EventStream_MessageEvent), type$.MessageEvent);
              $async$handler = 7;
            case 10:
              // for condition
              $async$temp1 = H;
              $async$goto = 12;
              return P._asyncAwait(t1.moveNext$0(), $async$_loadImports$2);
            case 12:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto after for
                $async$goto = 11;
                break;
              }
              e = t1.get$current(t1);
              t2 = e.data;
              t3 = new P._AcceptStructuredCloneDart2Js([], []);
              t3.mustCopy = true;
              if (!J.$eq$(J.$index$asx(t3.walk$1(t2), 0), "error")) {
                t2 = e.data;
                t3 = new P._AcceptStructuredCloneDart2Js([], []);
                t3.mustCopy = true;
                if (J.$eq$(J.$index$asx(t3.walk$1(t2), 0), "done")) {
                  $async$returnValue = imports;
                  $async$next = [1];
                  // goto finally
                  $async$goto = 8;
                  break;
                } else {
                  t2 = e.data;
                  t3 = new P._AcceptStructuredCloneDart2Js([], []);
                  t3.mustCopy = true;
                  if (J.$eq$(J.$index$asx(t3.walk$1(t2), 0), "import")) {
                    t2 = e.data;
                    t3 = new P._AcceptStructuredCloneDart2Js([], []);
                    t3.mustCopy = true;
                    module = H._asStringNullable(J.$index$asx(t3.walk$1(t2), 1));
                    if (J.startsWith$1$s(module, "tunepad_"))
                      J.add$1$ax(imports, module);
                  }
                }
              }
              // goto for condition
              $async$goto = 10;
              break;
            case 11:
              // after for
              $async$next.push(9);
              // goto finally
              $async$goto = 8;
              break;
            case 7:
              // uncaught
              $async$next = [4];
            case 8:
              // finally
              $async$handler = 4;
              $async$goto = 13;
              return P._asyncAwait(t1.cancel$0(0), $async$_loadImports$2);
            case 13:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 9:
              // after finally
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e0 = H.unwrapException($async$exception);
              P.print(J.toString$0$(e0));
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_loadImports$2, $async$completer);
    }
  };
  S.Preprocessor.prototype = {
    process$2: function(code, lineOffset) {
      var t1, i, i0, _this = this,
        lines = code.split("\n");
      _this.linemap.clear$0(0);
      C.JSArray_methods.set$length(_this._matchings, 0);
      t1 = _this._output;
      C.JSArray_methods.set$length(t1, 0);
      _this._multiline = false;
      _this._lastValidIndent = "";
      _this.hasImports = false;
      for (i = 0; i < lines.length; i = i0) {
        i0 = i + 1;
        _this.processLine$3(lines[i], i0, lineOffset);
      }
      return C.JSArray_methods.join$1(t1, "\n");
    },
    processLine$3: function(line, lineNumber, lineOffset) {
      var indent, t2, continuation, commentOnly, t3, t4, hasColon, lineExtender, closeMultiline, matchingPlayNote, returnLine, i, t5, c, inject, _this = this,
        t1 = _this._output;
      _this.linemap.$indexSet(0, t1.length + 1 + lineOffset, lineNumber);
      indent = _this.getIndentation$1(line);
      t2 = indent.length;
      if (t2 > 0)
        line = C.JSString_methods.trim$0(J.substring$1$s(line, t2));
      t2 = _this._matchings;
      continuation = t2.length !== 0 || _this._multiline;
      commentOnly = J.startsWith$1$s(line, "#");
      t3 = line.length;
      _this._multiline = false;
      if (!continuation)
        _this._lastValidIndent = indent;
      for (t4 = type$.JSArray_String, hasColon = false, lineExtender = false, closeMultiline = false, matchingPlayNote = false, returnLine = false, i = 0; t5 = line.length, i < t5; ++i) {
        if (i < 0)
          return H.ioore(line, i);
        c = line[i];
        if (C.JSString_methods.indexOf$2(line, '"""', i) === i) {
          if (_this.matches$1(0, '"""')) {
            if (0 >= t2.length)
              return H.ioore(t2, -1);
            t2.pop();
            i += 2;
            closeMultiline = true;
          } else if (!(t2.length !== 0 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2)))) {
            C.JSArray_methods.add$1(t2, '"""');
            i += 2;
          }
        } else if (C.JSString_methods.indexOf$2(line, "'''", i) === i) {
          if (_this.matches$1(0, "'''")) {
            if (0 >= t2.length)
              return H.ioore(t2, -1);
            t2.pop();
            i += 2;
            closeMultiline = true;
          } else if (!(t2.length !== 0 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2)))) {
            C.JSArray_methods.add$1(t2, "'''");
            i += 2;
          }
        } else {
          if (!(t2.length !== 0 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2))))
            t5 = H.stringContainsUnchecked("[({\"'", c, 0);
          else
            t5 = false;
          if (t5) {
            C.JSArray_methods.add$1(t2, c);
            lineExtender = false;
            closeMultiline = false;
          } else if (H.stringContainsUnchecked("])}", c, 0) && _this.matches$1(0, c)) {
            if (0 >= t2.length)
              return H.ioore(t2, -1);
            t2.pop();
            if (c === ")" && matchingPlayNote && t2.length === 0) {
              inject = ", line=" + lineNumber;
              line = C.JSString_methods.substring$2(line, 0, i) + inject + C.JSString_methods.substring$1(line, i);
              i += inject.length;
              lineExtender = false;
              closeMultiline = false;
              matchingPlayNote = false;
            }
          } else if (H.stringContainsUnchecked("'\"", c, 0) && _this.matches$1(0, c)) {
            if (0 >= t2.length)
              return H.ioore(t2, -1);
            t2.pop();
          } else if (c === ":" && t2.length === 0) {
            hasColon = true;
            lineExtender = false;
            closeMultiline = false;
          } else {
            if (c === "\\")
              t5 = !(t2.length !== 0 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2)));
            else
              t5 = false;
            if (t5)
              lineExtender = true;
            else {
              if (!(t2.length !== 0 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2))) && c === "#")
                break;
              else if (H.stringContainsUnchecked(" \t\r\v\f", c, 0))
                continue;
              lineExtender = false;
              closeMultiline = false;
            }
          }
        }
        t5 = t2.length === 0;
        if (t5 && C.JSString_methods.indexOf$2(line, "playNote(", i) === i)
          matchingPlayNote = true;
        else if (t5 && C.JSString_methods.indexOf$2(line, "playSound(", i) === i)
          matchingPlayNote = true;
        else if (t5 && C.JSString_methods.indexOf$2(line, "import ", i) === i)
          _this.hasImports = true;
        else if (t5 && C.JSString_methods.indexOf$2(line, "from ", i) === i)
          _this.hasImports = true;
        if (!(!t5 && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], t4), C.JSArray_methods.get$last(t2))) && C.JSString_methods.indexOf$2(line, "return", i) === i)
          returnLine = true;
      }
      C.JSArray_methods.add$1(t1, indent + line);
      if (t2.length === 0 && !hasColon && !lineExtender && t3 !== 0 && !commentOnly && !closeMultiline && !returnLine)
        if (continuation)
          C.JSArray_methods.add$1(t1, _this._lastValidIndent + "trace(" + lineNumber + ")");
        else
          C.JSArray_methods.add$1(t1, indent + "trace(" + lineNumber + ")");
      _this._multiline = lineExtender || t2.length !== 0;
    },
    matches$1: function(_, c) {
      var l,
        t1 = this._matchings;
      if (t1.length === 0)
        return false;
      l = C.JSArray_methods.get$last(t1);
      if (c === "]" && l === "[")
        return true;
      if (c === "}" && l === "{")
        return true;
      if (c === ")" && l === "(")
        return true;
      if (c === l && C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(['"', "'", "'''", '"""'], type$.JSArray_String), c))
        return true;
      return false;
    },
    getIndentation$1: function(line) {
      var t1, indent, i, c;
      if (this._matchings.length === 0)
        for (t1 = line.length, indent = "", i = 0; i < t1; ++i) {
          c = line[i];
          if (c === " " || c === "\t")
            indent += c;
          else
            return indent;
        }
      else
        indent = "";
      return indent;
    }
  };
  N.HexCodec.prototype = {
    get$encoder: function() {
      return C.C_HexEncoder;
    }
  };
  R.HexEncoder.prototype = {
    convert$1: function(bytes) {
      type$.List_int._as(bytes);
      return R._convert(bytes, 0, bytes.length);
    }
  };
  R.CodeMirror.prototype = {
    setTraceMarker$1: function(line) {
      if (line != null && line > 0)
        $.$get$_context().callMethod$2("setTraceMarker", [this.id, line]);
    },
    _codemirror$_onEditorUpdate$1: function(change) {
      var t1, t2;
      type$.Map_dynamic_dynamic._as(change);
      this._codemirror$_dirty = true;
      if (!this._codemirror$_noEvents) {
        t1 = this.listener;
        t1.onEditorUpdate$1(change);
        t2 = J.getInterceptor$asx(change);
        if (J.$gt$n(J.get$length$asx(t2.$index(change, "text")), 1))
          t1.compile$0();
        else if (!J.$eq$(J.$index$asx(t2.$index(change, "from"), "line"), J.$index$asx(t2.$index(change, "to"), "line")))
          t1.compile$0();
      }
    },
    _onCursorActivity$1: function(position) {
      var t1 = this.listener,
        line = H._asIntNullable(J.$index$asx(type$.Map_dynamic_dynamic._as(position), "line"));
      if (t1.editor._codemirror$_dirty && line != t1._lastline)
        t1.compile$0();
      t1._lastline = line;
    },
    _onEditorBlur$0: function() {
      var t2, t3,
        t1 = this.listener;
      t1.super$TunePadCell$onEditorBlur();
      t2 = t1.editor;
      if (t2._codemirror$_dirty) {
        t3 = t1.gadget;
        t3.idata.$indexSet(0, "python", H._asStringNullable($.$get$_context().callMethod$2("getCode", [t2.id])));
        t1.datastore.update$1(0, t3);
        t1.editor._codemirror$_dirty = false;
      }
    },
    _onEditorFocus$0: function() {
      this.listener.onEditorFocus$0();
    },
    get$id: function(receiver) {
      return this.id;
    }
  };
  Z.EditorListener.prototype = {};
  A.QuillEditor.prototype = {
    initialize$0: function(_) {
      var t2, $parent, editor, $toolbar, t3, t4,
        t1 = this.id;
      $.$get$_context().callMethod$2("initQuillEditor", [t1, ""]);
      t2 = document;
      $parent = t2.querySelector(t1);
      editor = t2.querySelector(t1 + " .ql-editor");
      $toolbar = $parent.parentElement.querySelector(".ql-toolbar");
      J.get$classes$x($toolbar).add$1(0, "hidden");
      t1 = J.getInterceptor$x(editor);
      t2 = t1.get$onBlur(editor);
      t3 = t2.$ti;
      t4 = t3._eval$1("~(1)")._as(new A.QuillEditor_initialize_closure(this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t2._target, t2._eventType, t4, false, t3._precomputed1);
      t1 = t1.get$onFocus(editor);
      t3 = t1.$ti;
      W._EventStreamSubscription$(t1._target, t1._eventType, t3._eval$1("~(1)")._as(new A.QuillEditor_initialize_closure0(this, $toolbar)), false, t3._precomputed1);
    },
    setRichText$1: function($content) {
      $.$get$_context().callMethod$2("setQuillContent", [this.id, C.C_JsonCodec.encode$2$toEncodable($content, null)]);
      this._dirty = true;
    },
    _onEditorUpdate$1: function(change) {
      type$.Map_dynamic_dynamic._as(change);
      if (!this._noEvents)
        this.listener.onEditorUpdate$1(change);
    },
    get$id: function(receiver) {
      return this.id;
    }
  };
  A.QuillEditor_initialize_closure.prototype = {
    call$1: function(e) {
      var t2, t3,
        t1 = this.$this.listener;
      t1.super$TunePadCell$onEditorBlur();
      t2 = t1.editor;
      if (t2._dirty) {
        t3 = t1.gadget;
        t3.idata.$indexSet(0, "content", type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable($.$get$_context().callMethod$2("getQuillContent", [t2.id])), null)));
        t1.datastore.update$1(0, t3);
        t1.editor._dirty = false;
      }
    },
    $signature: 2
  };
  A.QuillEditor_initialize_closure0.prototype = {
    call$1: function(e) {
      this.$this.listener.onEditorFocus$0();
      J.get$classes$x(this.toolbar).remove$1(0, "hidden");
    },
    $signature: 2
  };
  Y.BassGuitar.prototype = {
    noteOn$2: function(note, velocity) {
      var fret = this._noteToFret$1(J.round$0$n(note));
      if (fret != null)
        fret.press$0();
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
      var fret = this._noteToFret$1(J.round$0$n(note));
      if (fret != null)
        fret.release$0(0);
    },
    allNotesOff$0: function() {
      var t1, t2, _i, fret, t3, t4, t5;
      for (t1 = this._frets, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        fret = t1[_i];
        if (fret._bass$_down) {
          fret._bass$_down = false;
          t3 = fret.el;
          t3.toString;
          new P.AttributeClassSet(t3).remove$1(0, "pressed");
          t3 = fret.j;
          t4 = fret.bass._bass$_strings;
          t5 = t4.length;
          if (t3 < t5)
            new P.AttributeClassSet(t4[t3]).remove$1(0, "vibrating");
        }
      }
    },
    isNoteOn$1: function(note) {
      var t1,
        fret = this._noteToFret$1(C.JSNumber_methods.round$0(note));
      if (fret != null) {
        t1 = fret.el;
        t1.toString;
        t1 = new P.AttributeClassSet(t1).contains$1(0, "pressed");
      } else
        t1 = false;
      return t1;
    },
    onKeyDown$1: function(_, e) {
      var fret;
      type$.KeyboardEvent._as(e);
      if (!H.boolConversionCheck(e.repeat) && this._armed) {
        fret = this._keyToFret$1(e.key.toLowerCase());
        if (fret != null) {
          this._stream.add$1(0, new S.NoteEvent("on", "keyboard", fret.midi, 90));
          fret.press$0();
        }
      }
    },
    onKeyUp$1: function(_, e) {
      var fret, t1;
      type$.KeyboardEvent._as(e);
      if (this._armed) {
        fret = this._keyToFret$1(e.key.toLowerCase());
        if (fret != null) {
          t1 = new S.NoteEvent("on", "keyboard", fret.midi, 0);
          t1.message = "off";
          this._stream.add$1(0, t1);
          fret.release$0(0);
        }
      }
    },
    _noteToFret$1: function(midi) {
      var t1, t2, _i, fret;
      for (t1 = this._frets, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        fret = t1[_i];
        if (fret.midi === midi)
          return fret;
      }
      return null;
    },
    _keyToFret$1: function(keyboardCode) {
      var t1, t2, _i, fret;
      for (t1 = this._frets, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        fret = t1[_i];
        if (fret.keyboardCode === keyboardCode)
          return fret;
      }
      return null;
    },
    render$0: function() {
      var t1, t2, t3, i, x, w, temp, t4, t5, dot, t6, h, y, temp0, temp1, base, s, fret, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        _s6_ = "circle";
      for (t1 = type$.SvgElement, t2 = type$.RectElement, t3 = type$.String, i = 1; i < 20; ++i) {
        x = 90 * i;
        if (i === 1) {
          x -= 25;
          w = 30;
        } else
          w = 5;
        temp = document.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp = t2._as(t1._as(temp));
        C.RectElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["x", "" + x, "y", "0", "width", "" + w, "height", "220", "fill", "silver", "opacity", "0.9"], t3, t3));
        _this.fretboard.appendChild(temp);
      }
      t4 = document;
      t5 = type$.CircleElement;
      dot = t5._as(t1._as(C.HtmlDocument_methods.createElementNS$2(t4, _s26_, _s6_)));
      (dot && C.CircleElement_methods).set$attributes(dot, P.LinkedHashMap_LinkedHashMap$_literal(["cy", "100", "cx", "315", "r", "10", "fill", "silver", "stroke", "#fff9"], t3, t3));
      _this.fretboard.appendChild(dot);
      dot = t5._as(t1._as(C.HtmlDocument_methods.createElementNS$2(t4, _s26_, _s6_)));
      (dot && C.CircleElement_methods).set$attributes(dot, P.LinkedHashMap_LinkedHashMap$_literal(["cy", "100", "cx", "495", "r", "10", "fill", "silver"], t3, t3));
      _this.fretboard.appendChild(dot);
      dot = t5._as(t1._as(C.HtmlDocument_methods.createElementNS$2(t4, _s26_, _s6_)));
      (dot && C.CircleElement_methods).set$attributes(dot, P.LinkedHashMap_LinkedHashMap$_literal(["cy", "100", "cx", "675", "r", "10", "fill", "silver"], t3, t3));
      _this.fretboard.appendChild(dot);
      for (t5 = _this._bass$_strings, t6 = type$.GElement, i = 0; i < 4; ++i) {
        h = i + 2;
        y = 50 * i + 25 - h / 2;
        temp = t4.createElementNS("http://www.w3.org/2000/svg", "g");
        temp = t6._as(t1._as(temp));
        C.GElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["class", "bass-string", "transform", "translate(0, 0)"], t3, t3));
        temp0 = t4.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp0 = t2._as(t1._as(temp0));
        C.RectElement_methods.set$attributes(temp0, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", H.S(y), "width", "100%", "height", "" + h, "fill", "url(#pattern-dash)"], t3, t3));
        temp1 = t4.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp1 = t2._as(t1._as(temp1));
        C.RectElement_methods.set$attributes(temp1, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", H.S(y + 2), "width", "100%", "height", "" + (i + 3), "fill", "black", "opacity", "0.5"], t3, t3));
        temp.appendChild(temp1);
        temp.appendChild(temp0);
        _this.fretboard.appendChild(temp);
        C.JSArray_methods.add$1(t5, temp);
      }
      for (t1 = _this._frets, base = 31, s = 0; s < 4; ++s) {
        for (t2 = base + 12, i = base; i <= t2; ++i) {
          fret = Y.BassFret$(_this, i, C.List_0[C.JSInt_methods.$mod(i, 12)], i - base, s);
          C.JSArray_methods.add$1(t1, fret);
          _this.fretboard.appendChild(fret.el);
        }
        base -= 5;
      }
      _this.parent.appendChild(_this.fretboard);
    }
  };
  Y.BassFret.prototype = {
    BassFret$5: function(bass, midi, $name, i, j) {
      var t2, t3, t4, t5, t6, rect, t7, noteHint, keyHint, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = _this.j;
      if (4 > t1 && C.List_oqF[t1].length > _this.i) {
        if (t1 >= 4)
          return H.ioore(C.List_oqF, t1);
        t2 = C.List_oqF[t1];
        t3 = _this.i;
        if (t3 < 0 || t3 >= t2.length)
          return H.ioore(t2, t3);
        _this.keyboardCode = t2[t3];
      }
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.GElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      t5 = _this.i * 90;
      t1 *= 50;
      t6 = type$.String;
      (t4 && C.GElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(" + t5 + ", " + t1 + ")", "class", "bass-fret"], t6, t6));
      _this.el = t4;
      rect = type$.RectElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "rect")));
      (rect && C.RectElement_methods).set$attributes(rect, P.LinkedHashMap_LinkedHashMap$_literal(["x", "13", "y", "4", "width", "70", "height", "42", "rx", "21"], t6, t6));
      t4 = _this.midi;
      rect.setAttribute("fill", C.List_e2R[C.JSInt_methods.$mod(t4, 12)]);
      _this.el.appendChild(rect);
      t7 = type$.TextElement;
      noteHint = t7._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "text")));
      (noteHint && C.TextElement_methods).set$attributes(noteHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "note-hint", "x", "48", "y", "25"], t6, t6));
      C.TextElement_methods.setInnerHtml$1(noteHint, "" + t4 + " " + _this.name);
      _this.el.appendChild(noteHint);
      keyHint = t7._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "text")));
      (keyHint && C.TextElement_methods).set$attributes(keyHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "key-hint", "x", "" + (t5 + 18), "y", "" + (t1 + 25 - 14)], t6, t6));
      C.TextElement_methods.setInnerHtml$1(keyHint, _this.keyboardCode);
      _this.bass.fretboard.appendChild(keyHint);
      t6 = _this.el;
      t6.toString;
      t1 = type$._ElementEventStreamImpl_MouseEvent;
      t5 = t1._eval$1("~(1)");
      t2 = t5._as(new Y.BassFret_closure(_this));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(t6, "mousedown", t2, false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseup", t5._as(new Y.BassFret_closure0(_this)), false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseleave", t5._as(new Y.BassFret_closure1(_this)), false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseenter", t5._as(new Y.BassFret_closure2(_this)), false, t1);
    },
    press$0: function() {
      var t1, t2, t3, _this = this;
      _this._bass$_down = true;
      t1 = _this.el;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "pressed");
      t1 = _this.j;
      t2 = _this.bass._bass$_strings;
      t3 = t2.length;
      if (t1 < t3)
        new P.AttributeClassSet(t2[t1]).add$1(0, "vibrating");
    },
    release$0: function(_) {
      var t1, t2, t3, _this = this;
      if (_this._bass$_down) {
        _this._bass$_down = false;
        t1 = _this.el;
        t1.toString;
        new P.AttributeClassSet(t1).remove$1(0, "pressed");
        t1 = _this.j;
        t2 = _this.bass._bass$_strings;
        t3 = t2.length;
        if (t1 < t3)
          new P.AttributeClassSet(t2[t1]).remove$1(0, "vibrating");
      }
    }
  };
  Y.BassFret_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.bass._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
      t1.press$0();
    },
    $signature: 0
  };
  Y.BassFret_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
      t2.message = "off";
      t1.bass._stream.add$1(0, t2);
      t1.release$0(0);
    },
    $signature: 0
  };
  Y.BassFret_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._bass$_down) {
        t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
        t2.message = "off";
        t1.bass._stream.add$1(0, t2);
        t1.release$0(0);
      }
    },
    $signature: 0
  };
  Y.BassFret_closure2.prototype = {
    call$1: function(e) {
      var t1 = type$.MouseEvent._as(e).buttons;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = this.$this;
        t1.bass._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
        t1.press$0();
      }
    },
    $signature: 0
  };
  F.DrumKit.prototype = {
    DrumKit$2: function(selector, patch) {
      var t3, t4, t5, t6, node, t7, sample, t8, midi,
        t1 = J.getInterceptor$asx(patch),
        t2 = type$.List_dynamic;
      if (t2._is(t1.$index(patch, "nodes")))
        for (t3 = type$.Iterable_dynamic, t1 = J.get$iterator$ax(t3._as(t1.$index(patch, "nodes"))), t4 = type$.Map_dynamic_dynamic, t5 = this.selector, t6 = this.drums; t1.moveNext$0();) {
          node = t4._as(t1.get$current(t1));
          t7 = J.getInterceptor$asx(node);
          if (J.$eq$(t7.$index(node, "type"), "sample") && t2._is(t7.$index(node, "samples")))
            for (t7 = J.get$iterator$ax(t3._as(t7.$index(node, "samples"))); t7.moveNext$0();) {
              sample = t4._as(t7.get$current(t7));
              t8 = J.getInterceptor$asx(sample);
              if (H._isInt(t8.$index(sample, "step"))) {
                midi = H._asIntNullable(t8.$index(sample, "step"));
                C.JSArray_methods.add$1(t6, new F.Drum(t5, H.S(t8.$index(sample, "name")), midi));
              }
            }
        }
    },
    noteOn$2: function(note, velocity) {
      var drum = this._noteToDrum$1(J.round$0$n(note));
      if (drum != null && !drum.pressed)
        drum.press$0();
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
      var drum = this._noteToDrum$1(J.round$0$n(note));
      if (drum != null)
        drum.pressed = false;
    },
    allNotesOff$0: function() {
      var t1, t2, _i;
      for (t1 = this.drums, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].pressed = false;
    },
    isNoteOn$1: function(note) {
      var drum = this._noteToDrum$1(C.JSNumber_methods.round$0(note));
      return drum != null && drum.pressed;
    },
    onKeyDown$1: function(_, e) {
      var index, t1, drum, _this = this;
      type$.KeyboardEvent._as(e);
      if (!H.boolConversionCheck(e.repeat) && _this._armed) {
        index = C.JSString_methods.indexOf$1("brsqhoytgfcz", e.key.toLowerCase());
        if (index >= 0 && index < _this.drums.length) {
          t1 = _this.drums;
          if (index < 0 || index >= t1.length)
            return H.ioore(t1, index);
          drum = t1[index];
          _this._stream.add$1(0, new S.NoteEvent("on", "keyboard", drum.midi, 90));
          drum.press$0();
        }
      }
    },
    onKeyUp$1: function(_, e) {
      var index, t1, drum, _this = this;
      type$.KeyboardEvent._as(e);
      if (_this._armed) {
        index = C.JSString_methods.indexOf$1("brsqhoytgfcz", e.key.toLowerCase());
        if (index >= 0 && index < _this.drums.length) {
          t1 = _this.drums;
          if (index < 0 || index >= t1.length)
            return H.ioore(t1, index);
          drum = t1[index];
          t1 = new S.NoteEvent("on", "keyboard", drum.midi, 0);
          t1.message = "off";
          _this._stream.add$1(0, t1);
          drum.pressed = false;
        }
      }
    },
    _noteToDrum$1: function(midi) {
      var t1, t2, _i, drum;
      for (t1 = this.drums, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        drum = t1[_i];
        if (drum.midi === midi)
          return drum;
      }
      return null;
    },
    render$0: function() {
      var t1, t2, t3, t4, t5, t6, _i, drum, midi, selector, t7, _this = this,
        _s16_ = "querySelectorAll",
        _box_0 = {};
      _box_0._drumkit$_down = false;
      for (t1 = _this.drums, t2 = t1.length, t3 = type$.Element, t4 = type$._FrozenElementList_Element, t5 = type$.ElementList_Element, t6 = type$._ElementListEventStreamImpl_MouseEvent, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        drum = t1[_i];
        midi = drum.midi;
        selector = "#" + drum.name;
        t7 = _this.root;
        t7.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t7.querySelectorAll(selector), t4)), false, "mousedown", t6).listen$1(new F.DrumKit_render_closure(_box_0, _this, midi, drum));
        t7 = _this.root;
        t7.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t7.querySelectorAll(selector), t4)), false, "mouseup", t6).listen$1(new F.DrumKit_render_closure0(_box_0, _this, midi, drum));
        t7 = _this.root;
        t7.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t7.querySelectorAll(selector), t4)), false, "mouseenter", t6).listen$1(new F.DrumKit_render_closure1(_this, drum, midi));
        t7 = _this.root;
        t7.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t7.querySelectorAll(selector), t4)), false, "mouseleave", t6).listen$1(new F.DrumKit_render_closure2(_box_0, _this, midi, drum));
      }
    }
  };
  F.DrumKit_render_closure.prototype = {
    call$1: function(e) {
      var _this = this;
      type$.MouseEvent._as(e);
      _this.$this._stream.add$1(0, new S.NoteEvent("on", "mouse", _this.midi, 90));
      _this._box_0._drumkit$_down = true;
      _this.drum.press$0();
    },
    $signature: 0
  };
  F.DrumKit_render_closure0.prototype = {
    call$1: function(e) {
      var t1, _this = this;
      type$.MouseEvent._as(e);
      t1 = new S.NoteEvent("on", "mouse", _this.midi, 0);
      t1.message = "off";
      _this.$this._stream.add$1(0, t1);
      _this._box_0._drumkit$_down = false;
      _this.drum.pressed = false;
    },
    $signature: 0
  };
  F.DrumKit_render_closure1.prototype = {
    call$1: function(e) {
      var div, _this = this,
        t1 = type$.MouseEvent._as(e).buttons;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0 && !_this.drum.pressed) {
        _this.$this._stream.add$1(0, new S.NoteEvent("on", "mouse", _this.midi, 90));
        _this.drum.press$0();
      }
      t1 = _this.drum;
      div = type$.DivElement._as(_this.$this.root.querySelector(".drum-hint"));
      if (div != null) {
        C.DivElement_methods.setInnerHtml$1(div, t1.name.toUpperCase() + " (note " + H.S(t1.midi) + ")");
        div.classList.add("show");
      }
    },
    $signature: 0
  };
  F.DrumKit_render_closure2.prototype = {
    call$1: function(e) {
      var t1, t2, _this = this;
      type$.MouseEvent._as(e);
      if (_this._box_0._drumkit$_down) {
        t1 = new S.NoteEvent("on", "mouse", _this.midi, 0);
        t1.message = "off";
        _this.$this._stream.add$1(0, t1);
        _this.drum.pressed = false;
      }
      t1 = _this.$this.root;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".drum-hint"), type$._FrozenElementList_Element)).remove$1(0, "show");
    },
    $signature: 0
  };
  F.Drum.prototype = {
    press$0: function() {
      $.$get$_context().callMethod$2("animateDrum", [this.selector, this.name]);
      this.pressed = true;
    }
  };
  N.Drums.prototype = {
    Drums$1: function(patch) {
      var t1, t2, t3, t4, t5, t6, index, node, t7, sample, t8, pad, _this = this;
      _this.width = 900;
      _this.height = 230;
      t1 = J.getInterceptor$asx(patch);
      t2 = type$.List_dynamic;
      if (t2._is(t1.$index(patch, "nodes")))
        for (t3 = type$.Iterable_dynamic, t1 = J.get$iterator$ax(t3._as(t1.$index(patch, "nodes"))), t4 = type$.Map_dynamic_dynamic, t5 = _this.pads, t6 = _this.parent, index = 0; t1.moveNext$0();) {
          node = t4._as(t1.get$current(t1));
          t7 = J.getInterceptor$asx(node);
          if (J.$eq$(t7.$index(node, "type"), "sample") && t2._is(t7.$index(node, "samples")))
            for (t7 = J.get$iterator$ax(t3._as(t7.$index(node, "samples"))); t7.moveNext$0();) {
              sample = t4._as(t7.get$current(t7));
              t8 = J.getInterceptor$asx(sample);
              if (H._isInt(t8.$index(sample, "step"))) {
                pad = N.DrumPad$(_this, C.JSInt_methods._tdivFast$1(index, 6), C.JSInt_methods.$mod(index, 6), H._asIntNullable(t8.$index(sample, "step")), H.S(t8.$index(sample, "name")));
                C.JSArray_methods.add$1(t5, pad);
                t6.appendChild(pad._group);
                ++index;
              }
            }
        }
    },
    noteOn$2: function(note, velocity) {
      var pad = this._noteToPad$1(J.round$0$n(note));
      if (pad != null)
        pad.press$0();
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
      var pad = this._noteToPad$1(J.round$0$n(note));
      if (pad != null)
        pad.release$0(0);
    },
    allNotesOff$0: function() {
      var t1, t2, _i, pad, t3;
      for (t1 = this.pads, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        pad = t1[_i];
        if (pad._drums$_down) {
          pad._drums$_down = false;
          t3 = pad._rect;
          t3.toString;
          new P.AttributeClassSet(t3).remove$1(0, "pressed");
        }
      }
    },
    isNoteOn$1: function(note) {
      var t1,
        pad = this._noteToPad$1(C.JSNumber_methods.round$0(note));
      if (pad != null) {
        t1 = pad._rect;
        t1.toString;
        t1 = new P.AttributeClassSet(t1).contains$1(0, "pressed");
      } else
        t1 = false;
      return t1;
    },
    onKeyDown$1: function(_, e) {
      var index, t1, pad, _this = this;
      type$.KeyboardEvent._as(e);
      if (!H.boolConversionCheck(e.repeat) && _this._armed) {
        index = C.JSString_methods.indexOf$1("qwertyasdfgh", e.key.toLowerCase());
        if (index >= 0 && index < _this.pads.length) {
          t1 = _this.pads;
          if (index < 0 || index >= t1.length)
            return H.ioore(t1, index);
          pad = t1[index];
          _this._stream.add$1(0, new S.NoteEvent("on", "keyboard", pad.midi, 90));
          pad.press$0();
        }
      }
    },
    onKeyUp$1: function(_, e) {
      var index, t1, pad, _this = this;
      type$.KeyboardEvent._as(e);
      if (_this._armed) {
        index = C.JSString_methods.indexOf$1("qwertyasdfgh", e.key.toLowerCase());
        if (index >= 0 && index < _this.pads.length) {
          t1 = _this.pads;
          if (index < 0 || index >= t1.length)
            return H.ioore(t1, index);
          pad = t1[index];
          t1 = new S.NoteEvent("on", "keyboard", pad.midi, 0);
          t1.message = "off";
          _this._stream.add$1(0, t1);
          pad.release$0(0);
        }
      }
    },
    _noteToPad$1: function(midi) {
      var t1, t2, _i, pad;
      for (t1 = this.pads, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        pad = t1[_i];
        if (pad.midi === midi)
          return pad;
      }
      return null;
    },
    render$0: function() {
    }
  };
  N.DrumPad.prototype = {
    DrumPad$5: function(drums, row, col, midi, $name) {
      var t3, t4, t5, t6, t7, t8, width, height, _this = this,
        t1 = _this._rect,
        t2 = type$.String;
      (t1 && C.RectElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["class", "drum-pad", "x", "5", "y", "5"], t2, t2));
      t3 = _this._group;
      t3.appendChild(t1);
      t4 = _this._text;
      (t4 && C.TextElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["class", "drum-name"], t2, t2));
      C.TextElement_methods.setInnerHtml$1(t4, _this.name.toUpperCase());
      t3.appendChild(t4);
      t5 = _this._keyHint;
      (t5 && C.TextElement_methods).set$attributes(t5, P.LinkedHashMap_LinkedHashMap$_literal(["class", "key-hint"], t2, t2));
      t6 = _this.row;
      t7 = _this.col;
      t8 = t6 * 6 + t7;
      if (t8 >= 12)
        return H.ioore("qwertyasdfgh", t8);
      C.TextElement_methods.setInnerHtml$1(t5, "qwertyasdfgh"[t8]);
      t3.appendChild(t5);
      t8 = _this._midiHint;
      (t8 && C.TextElement_methods).set$attributes(t8, P.LinkedHashMap_LinkedHashMap$_literal(["class", "midi-hint show"], t2, t2));
      C.TextElement_methods.setInnerHtml$1(t8, H.S(_this.midi));
      t3.appendChild(t8);
      t2 = _this.drums;
      width = Math.max(20, t2.width / 6 + 0.8333333333333334);
      height = Math.max(20, t2.height / 2 + 0.8333333333333334);
      t3.setAttribute("transform", "translate(" + H.S(width * t7 - 5) + ", " + H.S(height * t6) + ")");
      t1.setAttribute("width", H.S(width - 10));
      t1.setAttribute("height", H.S(height - 10));
      t4.setAttribute("x", H.S(width / 2));
      t4.setAttribute("y", H.S(height / 2));
      t5.setAttribute("x", H.S(width - 5 - 11));
      t4 = height - 18;
      t5.setAttribute("y", H.S(t4));
      t8.setAttribute("x", "16");
      t8.setAttribute("y", H.S(t4));
      t4 = type$._ElementEventStreamImpl_MouseEvent;
      t8 = t4._eval$1("~(1)");
      t5 = t8._as(new N.DrumPad_closure(_this));
      type$.void_Function._as(null);
      t4 = t4._precomputed1;
      W._EventStreamSubscription$(t3, "mousedown", t5, false, t4);
      W._EventStreamSubscription$(t3, "mouseup", t8._as(new N.DrumPad_closure0(_this)), false, t4);
      W._EventStreamSubscription$(t3, "mouseleave", t8._as(new N.DrumPad_closure1(_this)), false, t4);
      W._EventStreamSubscription$(t3, "mouseenter", t8._as(new N.DrumPad_closure2(_this)), false, t4);
    },
    press$0: function() {
      this._drums$_down = true;
      var t1 = this._rect;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "pressed");
    },
    release$0: function(_) {
      var t1;
      if (this._drums$_down) {
        this._drums$_down = false;
        t1 = this._rect;
        t1.toString;
        new P.AttributeClassSet(t1).remove$1(0, "pressed");
      }
    }
  };
  N.DrumPad_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.drums._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
      t1.press$0();
    },
    $signature: 0
  };
  N.DrumPad_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
      t2.message = "off";
      t1.drums._stream.add$1(0, t2);
      t1.release$0(0);
    },
    $signature: 0
  };
  N.DrumPad_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._drums$_down) {
        t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
        t2.message = "off";
        t1.drums._stream.add$1(0, t2);
        t1.release$0(0);
      }
    },
    $signature: 0
  };
  N.DrumPad_closure2.prototype = {
    call$1: function(e) {
      var t1 = type$.MouseEvent._as(e).buttons;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = this.$this;
        t1.drums._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
        t1.press$0();
      }
    },
    $signature: 0
  };
  F.Guitar.prototype = {
    noteOn$2: function(note, velocity) {
      var fret = this._guitar$_noteToFret$1(J.round$0$n(note));
      if (fret != null)
        fret.press$0();
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
      var fret = this._guitar$_noteToFret$1(J.round$0$n(note));
      if (fret != null)
        fret.release$0(0);
    },
    allNotesOff$0: function() {
      var t1, t2, _i, fret, t3, t4, t5;
      for (t1 = this._guitar$_frets, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        fret = t1[_i];
        if (fret._guitar$_down) {
          fret._guitar$_down = false;
          t3 = fret.el;
          t3.toString;
          new P.AttributeClassSet(t3).remove$1(0, "pressed");
          t3 = fret.j;
          t4 = fret.guitar._guitar$_strings;
          t5 = t4.length;
          if (t3 < t5)
            new P.AttributeClassSet(t4[t3]).remove$1(0, "vibrating");
        }
      }
    },
    isNoteOn$1: function(note) {
      var t1,
        fret = this._guitar$_noteToFret$1(C.JSNumber_methods.round$0(note));
      if (fret != null) {
        t1 = fret.el;
        t1.toString;
        t1 = new P.AttributeClassSet(t1).contains$1(0, "pressed");
      } else
        t1 = false;
      return t1;
    },
    onKeyDown$1: function(_, e) {
      var fret;
      type$.KeyboardEvent._as(e);
      if (!H.boolConversionCheck(e.repeat) && this._armed) {
        fret = this._guitar$_keyToFret$1(e.key.toLowerCase());
        if (fret != null) {
          this._stream.add$1(0, new S.NoteEvent("on", "keyboard", fret.midi, 90));
          fret.press$0();
        }
      }
    },
    onKeyUp$1: function(_, e) {
      var fret, t1;
      type$.KeyboardEvent._as(e);
      if (this._armed) {
        fret = this._guitar$_keyToFret$1(e.key.toLowerCase());
        if (fret != null) {
          t1 = new S.NoteEvent("on", "keyboard", fret.midi, 0);
          t1.message = "off";
          this._stream.add$1(0, t1);
          fret.release$0(0);
        }
      }
    },
    _guitar$_noteToFret$1: function(midi) {
      var t1, t2, _i, fret;
      for (t1 = this._guitar$_frets, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        fret = t1[_i];
        if (fret.midi === midi)
          return fret;
      }
      return null;
    },
    _guitar$_keyToFret$1: function(keyboardCode) {
      var t1, t2, _i, fret;
      for (t1 = this._guitar$_frets, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        fret = t1[_i];
        if (fret.keyboardCode === keyboardCode)
          return fret;
      }
      return null;
    },
    render$0: function() {
      var t1, t2, t3, i, x, w, temp, t4, t5, h, y, t6, temp0, temp1, open_strings, s, base, fret, _this = this;
      for (t1 = type$.SvgElement, t2 = type$.RectElement, t3 = type$.String, i = 1; i < 20; ++i) {
        x = 70 * i;
        if (i === 1) {
          x -= 25;
          w = 28;
        } else
          w = 3;
        temp = document.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp = t2._as(t1._as(temp));
        C.RectElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["x", "" + x, "y", "0", "width", "" + w, "height", "220", "fill", "silver", "opacity", "0.9"], t3, t3));
        _this.fretboard.appendChild(temp);
      }
      for (t4 = type$.CircleElement, i = 3; i <= 9; i += 2) {
        temp = document.createElementNS("http://www.w3.org/2000/svg", "circle");
        temp = t4._as(t1._as(temp));
        C.CircleElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["cy", "100", "cx", H.S(70 * (i + 0.5)), "r", "10", "fill", "silver", "stroke", "#fff9"], t3, t3));
        _this.fretboard.appendChild(temp);
      }
      for (t4 = _this._guitar$_strings, t5 = type$.GElement, i = 0; i < 6; ++i) {
        h = i + 2;
        y = 33.333333333333336 * i + 16.666666666666668 - h / 2;
        t6 = document;
        temp = t6.createElementNS("http://www.w3.org/2000/svg", "g");
        temp = t5._as(t1._as(temp));
        C.GElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["class", "guitar-string", "transform", "translate(0, 0)"], t3, t3));
        temp0 = t6.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp0 = t2._as(t1._as(temp0));
        C.RectElement_methods.set$attributes(temp0, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", H.S(y), "width", "100%", "height", H.S(i * 0.5 + 2), "fill", "url(#pattern-dash)"], t3, t3));
        temp1 = t6.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp1 = t2._as(t1._as(temp1));
        C.RectElement_methods.set$attributes(temp1, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", H.S(y + 2), "width", "100%", "height", "" + h, "fill", "black", "opacity", "0.5"], t3, t3));
        temp.appendChild(temp1);
        temp.appendChild(temp0);
        _this.fretboard.appendChild(temp);
        C.JSArray_methods.add$1(t4, temp);
      }
      open_strings = [64, 59, 55, 50, 45, 40];
      for (t1 = _this._guitar$_frets, s = 0; s < 6; ++s) {
        base = open_strings[s];
        for (t2 = base + 12, i = base; i <= t2; ++i) {
          fret = F.GFret$(_this, i, C.List_0[C.JSInt_methods.$mod(i, 12)], i - base, s);
          C.JSArray_methods.add$1(t1, fret);
          _this.fretboard.appendChild(fret.el);
        }
      }
      _this.parent.appendChild(_this.fretboard);
    }
  };
  F.GFret.prototype = {
    GFret$5: function(guitar, midi, $name, i, j) {
      var t2, t3, t4, t5, t6, rect, t7, noteHint, keyHint, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        _s18_ = "16.666666666666668",
        t1 = _this.j;
      if (4 > t1 && C.List_oqF[t1].length > _this.i) {
        if (t1 >= 4)
          return H.ioore(C.List_oqF, t1);
        t2 = C.List_oqF[t1];
        t3 = _this.i;
        if (t3 < 0 || t3 >= t2.length)
          return H.ioore(t2, t3);
        _this.keyboardCode = t2[t3];
      }
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.GElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      t5 = _this.i * 70;
      t1 *= 33.333333333333336;
      t6 = type$.String;
      (t4 && C.GElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(" + t5 + ", " + H.S(t1) + ")", "class", "guitar-fret"], t6, t6));
      _this.el = t4;
      rect = type$.RectElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "rect")));
      (rect && C.RectElement_methods).set$attributes(rect, P.LinkedHashMap_LinkedHashMap$_literal(["x", "2", "y", "0", "width", "66", "height", "33.333333333333336", "rx", _s18_], t6, t6));
      t4 = _this.midi;
      rect.setAttribute("fill", C.List_e2R[C.JSInt_methods.$mod(t4, 12)]);
      _this.el.appendChild(rect);
      t7 = type$.TextElement;
      noteHint = t7._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "text")));
      (noteHint && C.TextElement_methods).set$attributes(noteHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "note-hint", "x", "35", "y", _s18_], t6, t6));
      C.TextElement_methods.setInnerHtml$1(noteHint, "" + t4 + " " + _this.name);
      _this.el.appendChild(noteHint);
      keyHint = t7._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "text")));
      (keyHint && C.TextElement_methods).set$attributes(keyHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "key-hint", "x", "" + (t5 + 18), "y", H.S(t1 + 16.666666666666668 - 14)], t6, t6));
      C.TextElement_methods.setInnerHtml$1(keyHint, _this.keyboardCode);
      t6 = _this.el;
      t6.toString;
      t1 = type$._ElementEventStreamImpl_MouseEvent;
      t5 = t1._eval$1("~(1)");
      t2 = t5._as(new F.GFret_closure(_this));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(t6, "mousedown", t2, false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseup", t5._as(new F.GFret_closure0(_this)), false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseleave", t5._as(new F.GFret_closure1(_this)), false, t1);
      t2 = _this.el;
      t2.toString;
      W._EventStreamSubscription$(t2, "mouseenter", t5._as(new F.GFret_closure2(_this)), false, t1);
    },
    press$0: function() {
      var t1, t2, t3, _this = this;
      _this._guitar$_down = true;
      t1 = _this.el;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "pressed");
      t1 = _this.j;
      t2 = _this.guitar._guitar$_strings;
      t3 = t2.length;
      if (t1 < t3)
        new P.AttributeClassSet(t2[t1]).add$1(0, "vibrating");
    },
    release$0: function(_) {
      var t1, t2, t3, _this = this;
      if (_this._guitar$_down) {
        _this._guitar$_down = false;
        t1 = _this.el;
        t1.toString;
        new P.AttributeClassSet(t1).remove$1(0, "pressed");
        t1 = _this.j;
        t2 = _this.guitar._guitar$_strings;
        t3 = t2.length;
        if (t1 < t3)
          new P.AttributeClassSet(t2[t1]).remove$1(0, "vibrating");
      }
    }
  };
  F.GFret_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.guitar._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
      t1.press$0();
    },
    $signature: 0
  };
  F.GFret_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
      t2.message = "off";
      t1.guitar._stream.add$1(0, t2);
      t1.release$0(0);
    },
    $signature: 0
  };
  F.GFret_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._guitar$_down) {
        t2 = new S.NoteEvent("on", "mouse", t1.midi, 0);
        t2.message = "off";
        t1.guitar._stream.add$1(0, t2);
        t1.release$0(0);
      }
    },
    $signature: 0
  };
  F.GFret_closure2.prototype = {
    call$1: function(e) {
      var t1 = type$.MouseEvent._as(e).buttons;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = this.$this;
        t1.guitar._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.midi, 90));
        t1.press$0();
      }
    },
    $signature: 0
  };
  S.Instrument.prototype = {
    isMidiArmed$1: function(port) {
      var t1;
      if (this._ports != null)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    isMidiArmed$0: function() {
      return this.isMidiArmed$1(0);
    },
    insert$1: function(_, element) {
      var t2, t3, _this = this,
        t1 = "#" + _this.name + "-template",
        template = type$.TemplateElement._as(document.querySelector(t1));
      if (template == null || false)
        return;
      if ((element.shadowRoot || element.webkitShadowRoot) == null) {
        t1 = type$.dynamic;
        t1 = _this.root = element.attachShadow(P.convertDartToNative_Dictionary(P.LinkedHashMap_LinkedHashMap$_literal(["mode", "open"], t1, t1)));
      } else
        t1 = _this.root = element.shadowRoot || element.webkitShadowRoot;
      t1.appendChild(template.content.cloneNode(true));
      t1 = type$.SvgSvgElement._as(_this.root.querySelector("svg.container"));
      _this.container = t1;
      t1.appendChild(_this.parent);
      _this.render$0();
      t1 = type$._ElementEventStreamImpl_KeyboardEvent;
      t2 = t1._eval$1("~(1)");
      t3 = t2._as(_this.get$onKeyDown(_this));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(element, "keydown", t3, false, t1);
      W._EventStreamSubscription$(element, "keyup", t2._as(_this.get$onKeyUp(_this)), false, t1);
    },
    unload$0: function() {
      var t1 = this.root;
      if (t1 != null) {
        if (t1._docChildren == null)
          C.ShadowRoot_methods.set$_docChildren(t1, new P.FilteredElementList(t1, new W._ChildNodeListLazy(t1)));
        J.forEach$1$ax(t1._docChildren, new S.Instrument_unload_closure());
      }
    },
    set$_ports: function(_ports) {
      this._ports = type$.List_int._as(_ports);
    }
  };
  S.Instrument_unload_closure.prototype = {
    call$1: function(child) {
      return J.remove$0$ax(type$.Element._as(child));
    },
    $signature: 54
  };
  S.NoteEvent.prototype = {
    toString$0: function(_) {
      var _this = this;
      return _this.message + " (" + _this.source + ") [" + J.round$0$n(_this.note) + ", " + _this.velocity + ", 0]";
    }
  };
  B.Piano.prototype = {
    noteOn$2: function(note, velocity) {
      var key = this._noteToKey$1(J.round$0$n(note));
      if (key != null)
        key.press$0();
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
      var key = this._noteToKey$1(J.round$0$n(note));
      if (key != null)
        key.release$0(0);
    },
    allNotesOff$0: function() {
      var t1, t2, _i, key, t3;
      for (t1 = this.keys, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        if (key._piano$_down) {
          key._piano$_down = false;
          t3 = key.rect;
          t3.toString;
          new P.AttributeClassSet(t3).remove$1(0, "pressed");
        }
      }
    },
    isNoteOn$1: function(note) {
      var t1,
        key = this._noteToKey$1(C.JSNumber_methods.round$0(note));
      if (key != null) {
        t1 = key.rect;
        t1.toString;
        t1 = new P.AttributeClassSet(t1).contains$1(0, "pressed");
      } else
        t1 = false;
      return t1;
    },
    onKeyDown$1: function(_, e) {
      var index, t1, t2, key, _this = this;
      type$.KeyboardEvent._as(e);
      if (!H.boolConversionCheck(e.repeat) && _this._armed) {
        index = C.JSString_methods.indexOf$1("awsedftgyhujkolp;']", e.key.toLowerCase());
        if (index >= 0 && index + _this.offset < _this.keys.length) {
          t1 = _this.keys;
          t2 = index + _this.offset;
          if (t2 < 0 || t2 >= t1.length)
            return H.ioore(t1, t2);
          key = t1[t2];
          _this._stream.add$1(0, new S.NoteEvent("on", "keyboard", key.key + 12, 90));
          key.press$0();
        } else {
          t1 = e.keyCode;
          if (t1 === 37)
            _this._slideKeyboard$1(-12);
          else if (t1 === 39)
            _this._slideKeyboard$1(12);
          else if (t1 === 187)
            P.print("pitch up");
          else if (t1 === 189)
            P.print("pitch down");
        }
      }
    },
    onKeyUp$1: function(_, e) {
      var index, t1, t2, key, _this = this;
      type$.KeyboardEvent._as(e);
      if (_this._armed) {
        index = C.JSString_methods.indexOf$1("awsedftgyhujkolp;']", e.key.toLowerCase());
        if (index >= 0 && index + _this.offset < _this.keys.length) {
          t1 = _this.keys;
          t2 = index + _this.offset;
          if (t2 < 0 || t2 >= t1.length)
            return H.ioore(t1, t2);
          key = t1[t2];
          t2 = new S.NoteEvent("on", "keyboard", key.key + 12, 0);
          t2.message = "off";
          _this._stream.add$1(0, t2);
          key.release$0(0);
        }
      }
    },
    _noteToKey$1: function(midi) {
      var t1,
        index = midi - 12;
      if (index < 0 || index >= this.keys.length)
        t1 = null;
      else {
        t1 = this.keys;
        if (index < 0 || index >= t1.length)
          return H.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    render$0: function() {
      var t5, t6, t7, whiteKeys, blackKeys, t8, t9, i, key, t10, t11, shelf, _this = this, _s4_ = "rect",
        _s26_ = "http://www.w3.org/2000/svg",
        _s16_ = "querySelectorAll",
        t1 = document,
        t2 = type$.SvgElement,
        t3 = type$.RectElement,
        backdrop = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_))),
        t4 = type$.String;
      (backdrop && C.RectElement_methods).set$attributes(backdrop, P.LinkedHashMap_LinkedHashMap$_literal(["class", "backdrop", "width", "100%", "height", "100%"], t4, t4));
      t5 = _this.parent;
      t5.appendChild(backdrop);
      t6 = _this.allKeys;
      t6.toString;
      new P.AttributeClassSet(t6).add$1(0, "animated-slide");
      t7 = type$.GElement;
      whiteKeys = t7._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      blackKeys = t7._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      for (t8 = type$.JSArray_int, t9 = _this.keys, i = 0; i < 96; ++i) {
        key = B.PianoKey$(i, _this);
        C.JSArray_methods.add$1(t9, key);
        t10 = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t8), (key.key + 12) % 12);
        t11 = key.el;
        if (t10)
          blackKeys.appendChild(t11);
        else
          whiteKeys.appendChild(t11);
      }
      t6.appendChild(whiteKeys);
      t6.appendChild(blackKeys);
      t5.appendChild(t6);
      shelf = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_)));
      (shelf && C.RectElement_methods).set$attributes(shelf, P.LinkedHashMap_LinkedHashMap$_literal(["width", "100%", "height", "5", "x", "0", "y", "0", "fill", "black", "fill-opacity", "0.2"], t4, t4));
      t5.appendChild(shelf);
      t1 = new B.MiniPiano(_this, t7._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))), t7._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))), t7._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))), t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, _s4_))));
      _this.mini = t1;
      t1.render$0();
      _this._slideKeyboard$1(36);
      t1 = _this.root;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      t4 = type$.ElementList_Element;
      t6 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#up-octave"), t3)), false, "click", t6).listen$1(new B.Piano_render_closure(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#down-octave"), t3)), false, "click", t6).listen$1(new B.Piano_render_closure0(_this));
      t6 = _this.mini.el;
      t6.toString;
      new P.AttributeClassSet(t6).remove$1(0, "show");
      t5.appendChild(_this.mini.el);
    },
    _slideKeyboard$1: function(delta) {
      var t2, dx, _this = this,
        t1 = _this.keys;
      C.JSArray_methods.forEach$1(t1, new B.Piano__slideKeyboard_closure());
      t2 = _this.offset += delta;
      t2 = H._asIntNullable(C.JSInt_methods.clamp$2(t2, 0, t1.length - 24));
      _this.offset = t2;
      if (t2 < 0 || t2 >= t1.length)
        return H.ioore(t1, t2);
      t2 = t1[t2];
      dx = t2.get$offset(t2) * 45;
      _this._updateKeymap$0();
      t2 = _this.allKeys.style;
      t1 = "translateX(" + H.S(-dx) + "px)";
      t2.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform"), t1, "");
      t1 = _this.mini;
      t2 = t1.highlight;
      t2.toString;
      t2.setAttribute("width", "" + t1.piano.width);
      t1 = t1.el;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "show");
      _this.mini.slide$1(dx);
    },
    _updateKeymap$0: function() {
      var t1, i, t2, midi, t3,
        _s19_ = "awsedftgyhujkolp;']";
      for (t1 = this.keys, i = 0; i < t1.length; ++i) {
        t2 = t1[i].keyHint;
        t2.toString;
        C.TextElement_methods.setInnerHtml$1(t2, "");
        if (i >= t1.length)
          return H.ioore(t1, i);
        t2 = t1[i];
        midi = t2.key + 12 - (this.offset + 12);
        if (midi >= 0 && midi < 19) {
          if (midi < 0 || midi >= 19)
            return H.ioore(_s19_, midi);
          t3 = _s19_[midi];
          t2 = t2.keyHint;
          t2.toString;
          C.TextElement_methods.setInnerHtml$1(t2, t3);
        }
      }
    },
    get$keys: function(receiver) {
      return this.keys;
    }
  };
  B.Piano_render_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._slideKeyboard$1(12);
    },
    $signature: 0
  };
  B.Piano_render_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._slideKeyboard$1(-12);
    },
    $signature: 0
  };
  B.Piano__slideKeyboard_closure.prototype = {
    call$1: function(key) {
      var t1, t2;
      type$.PianoKey._as(key);
      if (key._piano$_down) {
        t1 = key.piano;
        t2 = new S.NoteEvent("on", "system", key.key + 12, 0);
        t2.message = "off";
        t1._stream.add$1(0, t2);
        key._piano$_down = false;
        t2 = key.rect;
        t2.toString;
        new P.AttributeClassSet(t2).remove$1(0, "pressed");
      }
      return null;
    },
    $signature: 55
  };
  B.MiniPiano.prototype = {
    slide$1: function(dx) {
      var t1, t2, _this = this;
      dx = Math.max(0, dx);
      t1 = _this.highlight.style;
      t2 = "translateX(" + H.S(dx) + "px)";
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
      t1 = _this._piano$_timer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._piano$_timer = P.Timer_Timer(C.Duration_2000000, new B.MiniPiano_slide_closure(_this));
    },
    render$0: function() {
      var t2, t3, t4, backdrop, t5, t6, t7, t8, t9, t10, t11, _i, key, t12, t13, pad, fill, temp, t14, _this = this,
        t1 = _this.el;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "mini-piano");
      t1.setAttribute("transform", "translate(2, 2) scale(0.2)");
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.RectElement;
      backdrop = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, "http://www.w3.org/2000/svg", "rect")));
      t5 = _this.piano;
      t6 = t5.keys;
      t7 = C.JSArray_methods.get$last(t6);
      t8 = type$.String;
      (backdrop && C.RectElement_methods).set$attributes(backdrop, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "fill", "black", "width", H.S(t7.get$offset(t7) * 45 + 45), "height", "" + (t5.height + 5)], t8, t8));
      t1.appendChild(backdrop);
      for (t7 = t6.length, t9 = _this.wkeys, t10 = type$.JSArray_int, t11 = _this.bkeys, _i = 0; _i < t6.length; t6.length === t7 || (0, H.throwConcurrentModificationError)(t6), ++_i) {
        key = t6[_i];
        t12 = key.key;
        t13 = (t12 + 12) % 12;
        pad = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t10), t13) ? 6 : 1;
        fill = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t10), t13) ? "black" : "white";
        temp = t2.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp = t4._as(t3._as(temp));
        t12 = H.S((C.JSInt_methods._tdivFast$1(t12, 12) * 7 + key._key_offsets[t13]) * 45 + pad);
        t14 = "" + (45 - pad * 2);
        C.RectElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["fill", fill, "x", t12, "y", "0", "width", t14, "height", "" + (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t10), t13) ? 125 : 195)], t8, t8));
        if (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t10), t13))
          t11.appendChild(temp);
        else
          t9.appendChild(temp);
      }
      t1.appendChild(t9);
      t1.appendChild(t11);
      t2 = _this.highlight;
      (t2 && C.RectElement_methods).set$attributes(t2, P.LinkedHashMap_LinkedHashMap$_literal(["fill", "#900", "fill-opacity", "0.35", "stroke", "#900", "width", "" + t5.width, "height", "" + (t5.height + 5), "x", "0", "y", "0"], t8, t8));
      new P.AttributeClassSet(t2).add$1(0, "animated-slide");
      t1.appendChild(t2);
    }
  };
  B.MiniPiano_slide_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1.el;
      t2.toString;
      new P.AttributeClassSet(t2).remove$1(0, "show");
      t1._piano$_timer = null;
    },
    $signature: 1
  };
  B.PianoKey.prototype = {
    get$offset: function(_) {
      var t1 = this.key;
      return C.JSInt_methods._tdivFast$1(t1, 12) * 7 + this._key_offsets[(t1 + 12) % 12];
    },
    PianoKey$2: function(key, piano) {
      var t5, t6, t7, pad, w, h, t8, t9, x0, r, noteHint, midiHint, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement,
        t3 = type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))),
        t4 = type$.String;
      (t3 && C.GElement_methods).set$attributes(t3, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(" + H.S(_this.get$offset(_this) * 45) + ", 0)"], t4, t4));
      _this.el = t3;
      t3 = type$.JSArray_int;
      t5 = _this.key;
      t6 = t5 + 12;
      t7 = t6 % 12;
      pad = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t3), t7) ? 6 : 1.5;
      w = 45 - pad * 2;
      h = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t3), t7) ? 125 : 195;
      t8 = _this.rect;
      t9 = C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t3), t7) ? "piano-key black" : "piano-key white";
      (t8 && C.RectElement_methods).set$attributes(t8, P.LinkedHashMap_LinkedHashMap$_literal(["class", t9, "x", H.S(pad), "y", "-8", "width", H.S(w), "height", "" + h, "rx", "3"], t4, t4));
      _this.el.appendChild(t8);
      if (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t3), t7)) {
        x0 = pad + 2;
        w -= 4;
        r = type$.RectElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
        (r && C.RectElement_methods).set$attributes(r, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(x0), "y", "-5", "width", H.S(w), "height", "" + (h - 12), "fill", "#334", "pointer-events", "none"], t4, t4));
        _this.el.appendChild(r);
      } else {
        t8 = type$.TextElement;
        noteHint = t8._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text")));
        t9 = pad + w / 2;
        (noteHint && C.TextElement_methods).set$attributes(noteHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "note-hint", "x", H.S(t9), "y", "" + (h - 17)], t4, t4));
        C.TextElement_methods.setInnerHtml$1(noteHint, $.PianoKey_NOTES[t7] + C.JSInt_methods._tdivFast$1(t5, 12));
        if (t7 === 0)
          new P.AttributeClassSet(noteHint).add$1(0, "always-show");
        _this.el.appendChild(noteHint);
        midiHint = t8._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text")));
        (midiHint && C.TextElement_methods).set$attributes(midiHint, P.LinkedHashMap_LinkedHashMap$_literal(["class", "midi-hint show", "x", H.S(t9), "y", "" + (h - 35)], t4, t4));
        C.TextElement_methods.setInnerHtml$1(midiHint, "" + t6);
        _this.el.appendChild(midiHint);
        x0 = pad;
      }
      t1 = _this.keyHint;
      (t1 && C.TextElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["class", "key-hint", "x", H.S(x0 + w / 2), "y", "" + (h - 57)], t4, t4));
      if (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 3, 6, 8, 10], t3), t7))
        new P.AttributeClassSet(t1).add$1(0, "black");
      _this.el.appendChild(t1);
      t1 = _this.el;
      t1.toString;
      t2 = type$._ElementEventStreamImpl_MouseEvent;
      t3 = t2._eval$1("~(1)");
      t4 = t3._as(new B.PianoKey_closure(_this));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(t1, "mousedown", t4, false, t2);
      t4 = _this.el;
      t4.toString;
      W._EventStreamSubscription$(t4, "mouseup", t3._as(new B.PianoKey_closure0(_this)), false, t2);
      t4 = _this.el;
      t4.toString;
      W._EventStreamSubscription$(t4, "mouseleave", t3._as(new B.PianoKey_closure1(_this)), false, t2);
      t4 = _this.el;
      t4.toString;
      W._EventStreamSubscription$(t4, "mouseenter", t3._as(new B.PianoKey_closure2(_this)), false, t2);
    },
    press$0: function() {
      this._piano$_down = true;
      var t1 = this.rect;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, "pressed");
    },
    release$0: function(_) {
      var t1;
      if (this._piano$_down) {
        this._piano$_down = false;
        t1 = this.rect;
        t1.toString;
        new P.AttributeClassSet(t1).remove$1(0, "pressed");
      }
    }
  };
  B.PianoKey_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.piano._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.key + 12, 90));
      t1.press$0();
    },
    $signature: 0
  };
  B.PianoKey_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = new S.NoteEvent("on", "mouse", t1.key + 12, 0);
      t2.message = "off";
      t1.piano._stream.add$1(0, t2);
      t1.release$0(0);
    },
    $signature: 0
  };
  B.PianoKey_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._piano$_down) {
        t2 = new S.NoteEvent("on", "mouse", t1.key + 12, 0);
        t2.message = "off";
        t1.piano._stream.add$1(0, t2);
        t1.release$0(0);
      }
    },
    $signature: 0
  };
  B.PianoKey_closure2.prototype = {
    call$1: function(e) {
      var t1 = type$.MouseEvent._as(e).buttons;
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = this.$this;
        t1.piano._stream.add$1(0, new S.NoteEvent("on", "mouse", t1.key + 12, 90));
        t1.press$0();
      }
    },
    $signature: 0
  };
  D.Sequencer.prototype = {
    noteOn$2: function(note, velocity) {
    },
    noteOn$1: function(note) {
      return this.noteOn$2(note, 90);
    },
    noteOff$1: function(note) {
    },
    allNotesOff$0: function() {
    },
    isNoteOn$1: function(note) {
      return false;
    },
    onKeyDown$1: function(_, e) {
      type$.KeyboardEvent._as(e);
    },
    onKeyUp$1: function(_, e) {
      type$.KeyboardEvent._as(e);
    },
    render$0: function() {
      var t1, t2, w, container, t3, t4, chassis, controls, t5, t6, label, i, t7, t8, temp, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        _s4_ = "text";
      _this.steps = 16;
      t1 = _this.steps;
      t2 = Math.min(50, 600 / t1);
      $.SequencerButton_WIDTH = t2;
      w = t2 * t1 + 260;
      t1 = _this.parent;
      if (t1 != null) {
        t1.removeAttribute("tabindex");
        new P.AttributeClassSet(t1).add$1(0, "sequencer");
        C.GElement_methods._clearChildren$0(t1);
        container = P.SvgSvgElement_SvgSvgElement();
        t2 = type$.String;
        C.SvgSvgElement_methods.set$attributes(container, P.LinkedHashMap_LinkedHashMap$_literal(["width", "100%", "viewBox", "0 0 " + H.S(w) + " 250", "preserveAspectRatio", "none"], t2, t2));
        t3 = document;
        t4 = type$.SvgElement;
        chassis = type$.RectElement._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, "rect")));
        (chassis && C.RectElement_methods).set$attributes(chassis, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", "0", "width", H.S(w), "height", "250", "fill", "#111"], t2, t2));
        controls = type$.GElement._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, "g")));
        (controls && C.GElement_methods).set$attributes(controls, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(20, 30)"], t2, t2));
        container.appendChild(chassis);
        container.appendChild(controls);
        t5 = _this.rows;
        C.JSArray_methods.set$length(t5, 0);
        C.JSArray_methods.add$1(t5, D.SequencerRow$(_this, 0, 4, "hat", "gold"));
        C.JSArray_methods.add$1(t5, D.SequencerRow$(_this, 1, 7, "tom", "#2f2"));
        C.JSArray_methods.add$1(t5, D.SequencerRow$(_this, 2, 2, "snare", "magenta"));
        C.JSArray_methods.add$1(t5, D.SequencerRow$(_this, 3, 1, "kick", "cyan"));
        C.JSArray_methods.forEach$1(t5, new D.Sequencer_render_closure(controls));
        t6 = type$.TextElement;
        label = t6._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s4_)));
        (label && C.TextElement_methods).set$attributes(label, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(w - 38), "y", "20", "class", "sequencer-text"], t2, t2));
        C.TextElement_methods.setInnerHtml$1(label, "PITCH");
        container.appendChild(label);
        label = t6._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s4_)));
        (label && C.TextElement_methods).set$attributes(label, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(w - 100), "y", "20", "class", "sequencer-text"], t2, t2));
        C.TextElement_methods.setInnerHtml$1(label, "VOLUME");
        container.appendChild(label);
        label = t6._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s4_)));
        (label && C.TextElement_methods).set$attributes(label, P.LinkedHashMap_LinkedHashMap$_literal(["x", "109", "y", "20", "class", "sequencer-text"], t2, t2));
        C.TextElement_methods.setInnerHtml$1(label, "MUTE");
        container.appendChild(label);
        if (0 >= t5.length)
          return H.ioore(t5, 0);
        for (t5 = t5[0].buttons, i = 1; i <= _this.steps; ++i) {
          t7 = i - 1;
          if (t7 >= t5.length)
            return H.ioore(t5, t7);
          t7 = t5[t7];
          t8 = $.SequencerButton_WIDTH;
          temp = t3.createElementNS("http://www.w3.org/2000/svg", "text");
          temp = t6._as(t4._as(temp));
          C.TextElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(18 + t7.x + t8 / 2), "y", "20", "class", "sequencer-text"], t2, t2));
          C.TextElement_methods.setInnerHtml$1(temp, "" + i);
          container.appendChild(temp);
        }
        t1.appendChild(container);
      }
    }
  };
  D.Sequencer_render_closure.prototype = {
    call$1: function(row) {
      this.controls.appendChild(type$.SequencerRow._as(row).container);
    },
    $signature: 56
  };
  D.SequencerRow.prototype = {
    SequencerRow$5: function(instrument, position, sound, $name, color) {
      var x, c, sb, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        w = $.SequencerButton_WIDTH,
        t1 = document,
        t2 = type$.SvgElement,
        t3 = type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g"))),
        t4 = type$.String;
      (t3 && C.GElement_methods).set$attributes(t3, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(0, " + 50 * _this.position + ")"], t4, t4));
      _this.container = t3;
      t3 = D.SequencerDrumButton$(_this);
      _this.dbutton = t3;
      _this.container.appendChild(t3.container);
      t3 = new V.ToggleButton(90, 25, 10);
      t1 = type$.CircleElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "circle")));
      (t1 && C.CircleElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "90", "cy", "25", "r", "7", "fill", "cyan", "class", "mute-button"], t4, t4));
      t3._button = t1;
      t4 = _this.color;
      t3._color = t4;
      t1.setAttribute("fill", t4);
      _this.muteButton = t3;
      t3.buildUI$1(_this.container);
      _this.muteButton.onChanged = new D.SequencerRow_closure(_this);
      for (t1 = _this.instrument, t2 = _this.buttons, x = 110, c = 0; c < t1.steps; ++c) {
        sb = D.SequencerButton$(_this, c, x);
        _this.container.appendChild(sb.container);
        C.JSArray_methods.add$1(t2, sb);
        x += w;
      }
      t1 = V.EffectsDial$("VOLUME");
      t1.set$value(0, 1);
      _this.volumeDial = t1;
      t1.buildUI$1(_this.container);
      _this.volumeDial.onChanged = new D.SequencerRow_closure0(_this);
      t1 = V.EffectsDial$("PITCH");
      t1.minValue = -1;
      t1.maxValue = 1;
      t1.set$value(0, 0);
      _this.pitchDial = t1;
      t1.buildUI$1(_this.container);
      _this.pitchDial.onChanged = new D.SequencerRow_closure1(_this);
    },
    mute$0: function() {
      var _this = this,
        t1 = _this.muteButton;
      if (t1._dial$_value)
        t1.set$value(0, false);
      t1 = _this.volumeDial;
      t1._disabled = true;
      t1._updateDrawing$0();
      t1 = _this.pitchDial;
      t1._disabled = true;
      t1._updateDrawing$0();
      C.JSArray_methods.forEach$1(_this.buttons, new D.SequencerRow_mute_closure());
    },
    unmute$0: function() {
      var _this = this,
        t1 = _this.muteButton;
      if (!t1._dial$_value)
        t1.set$value(0, true);
      t1 = _this.volumeDial;
      t1._disabled = false;
      t1._updateDrawing$0();
      t1 = _this.pitchDial;
      t1._disabled = false;
      t1._updateDrawing$0();
      C.JSArray_methods.forEach$1(_this.buttons, new D.SequencerRow_unmute_closure());
    }
  };
  D.SequencerRow_closure.prototype = {
    call$2: function(button, value) {
      var t1 = this.$this;
      if (H.boolConversionCheck(H._asBoolNullable(value)))
        t1.unmute$0();
      else
        t1.mute$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  D.SequencerRow_closure0.prototype = {
    call$2: function(dial, value) {
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  D.SequencerRow_closure1.prototype = {
    call$2: function(dial, value) {
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  D.SequencerRow_mute_closure.prototype = {
    call$1: function(button) {
      type$.SequencerButton._as(button);
      button._sequencer$_disabled = true;
      button.setVelocity$1(button.velocity);
    },
    $signature: 34
  };
  D.SequencerRow_unmute_closure.prototype = {
    call$1: function(button) {
      type$.SequencerButton._as(button);
      button._sequencer$_disabled = false;
      button.setVelocity$1(button.velocity);
    },
    $signature: 34
  };
  D.SequencerDrumButton.prototype = {
    SequencerDrumButton$1: function(row) {
      var t3, t4, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement;
      _this.container = type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      t3 = type$.RectElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
      t4 = type$.String;
      (t3 && C.RectElement_methods).set$attributes(t3, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", "0", "rx", "4", "width", "70", "height", "45", "fill", "#fff", "fill-opacity", "0.1", "class", "sequencer-button"], t4, t4));
      _this.backing = t3;
      t1 = type$.TextElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text")));
      (t1 && C.TextElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["x", "5", "y", "5", "fill", "#fff", "text-anchor", "left", "dominant-baseline", "hanging", "font-family", "sans-serif", "font-weight", "100", "font-size", "12px", "style", "user-select: none; pointer-events: none;"], t4, t4));
      _this.label = t1;
      C.TextElement_methods.setInnerHtml$1(t1, "" + _this.row.sound);
      _this.container.appendChild(_this.backing);
      _this.container.appendChild(_this.label);
      t1 = _this.backing;
      t4 = type$._ElementEventStreamImpl_MouseEvent;
      t2 = t4._eval$1("~(1)")._as(new D.SequencerDrumButton_closure(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "click", t2, false, t4._precomputed1);
    }
  };
  D.SequencerDrumButton_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
    },
    $signature: 0
  };
  D.SequencerButton.prototype = {
    SequencerButton$3: function(row, col, x) {
      var fill, t3, t4, t5, t6, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = document,
        t2 = type$.SvgElement;
      _this.container = type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      fill = C.JSInt_methods.$mod(C.JSInt_methods._tdivFast$1(_this.col, 4), 2) === 1 ? 0.1 : 0.2;
      t3 = type$.RectElement;
      t4 = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
      t5 = _this.x;
      t6 = type$.String;
      (t4 && C.RectElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(t5), "y", "0", "rx", "4", "width", H.S($.SequencerButton_WIDTH - 5), "height", "45", "fill", "#fff", "fill-opacity", H.S(fill)], t6, t6));
      _this.backing = t4;
      t1 = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
      (t1 && C.RectElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["x", H.S(t5), "y", "0", "rx", "4", "width", H.S($.SequencerButton_WIDTH - 5), "height", "45", "fill", _this.row.color, "fill-opacity", "0.0", "class", "sequencer-button"], t6, t6));
      _this.light = t1;
      _this.container.appendChild(_this.backing);
      _this.container.appendChild(_this.light);
      t1 = _this.light;
      t6 = type$._ElementEventStreamImpl_MouseEvent;
      t5 = t6._eval$1("~(1)");
      t2 = t5._as(new D.SequencerButton_closure(_this));
      type$.void_Function._as(null);
      t6 = t6._precomputed1;
      W._EventStreamSubscription$(t1, "mousedown", t2, false, t6);
      W._EventStreamSubscription$(_this.light, "mouseup", t5._as(new D.SequencerButton_closure0(_this)), false, t6);
      W._EventStreamSubscription$(_this.light, "mouseenter", t5._as(new D.SequencerButton_closure1(_this)), false, t6);
    },
    setVelocity$1: function(v) {
      var t1, t2, _this = this,
        _s12_ = "fill-opacity";
      _this.velocity = v;
      if (v > 100)
        _this.velocity = 0;
      t1 = _this._sequencer$_disabled;
      t2 = _this.light;
      if (t1) {
        t2.setAttribute("fill", "#777");
        _this.light.setAttribute(_s12_, "1.0");
      } else {
        t2.setAttribute("fill", _this.row.color);
        _this.light.setAttribute(_s12_, H.S(_this.velocity / 100));
      }
    }
  };
  D.SequencerButton_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (!t1._sequencer$_disabled) {
        t2 = t1.row;
        t2.brushing = true;
        t1.setVelocity$1(t1.velocity + 50);
        t2.instrument._stream.add$1(0, new S.NoteEvent("on", "system", t2.sound, t1.velocity));
        t2.brushVelocity = t1.velocity;
      }
    },
    $signature: 0
  };
  D.SequencerButton_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this.row;
      t1.brushing = false;
      t2 = new S.NoteEvent("on", "system", t1.sound, 0);
      t2.message = "off";
      t1.instrument._stream.add$1(0, t2);
    },
    $signature: 0
  };
  D.SequencerButton_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (!t1._sequencer$_disabled)
        if (t1.row.brushing) {
          t2 = e.buttons;
          if (typeof t2 !== "number")
            return t2.$gt();
          t2 = t2 > 0;
        } else
          t2 = false;
      else
        t2 = false;
      if (t2)
        t1.setVelocity$1(t1.row.brushVelocity);
    },
    $signature: 0
  };
  U.SynthChain.prototype = {
    loadPatch$1: function(config) {
      var t1, t2, t3, t4, t5, t6, t7, node, t8, t9, t10, t11, adsr, r, source, dest, _this = this,
        _s9_ = "frequency",
        _s6_ = "detune",
        _s8_ = "waveform";
      _this.out = null;
      t1 = J.getInterceptor$asx(config);
      t2 = type$.List_dynamic;
      if (t2._is(t1.$index(config, "nodes")))
        for (t3 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "nodes"))), t4 = type$.Map_dynamic_dynamic, t5 = _this.context, t6 = _this.nodes, t7 = J.getInterceptor$x(t5); t3.moveNext$0();) {
          node = t3.get$current(t3);
          if (t4._is(node)) {
            t8 = J.getInterceptor$asx(node);
            switch (t8.$index(node, "type")) {
              case "sample":
                t9 = new B.SynthSampleNode(t5);
                t9.SynthNode$2(t5, node);
                t9.samples = t2._as(t8.$index(node, "samples"));
                t8 = t7.createGain$0(t5);
                t9.dIn = t8;
                t8.gain.value = 1;
                t8 = t7.createGain$0(t5);
                t9.pIn = t8;
                t8.gain.value = 1;
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "fm":
                t9 = new B.FMNode(t5);
                t9.SynthNode$2(t5, node);
                t9.frequency = B.toNum0(t8.$index(node, _s9_), 220);
                t9.relative = B.toBool0(t8.$index(node, "relative"), true);
                t10 = t5.createOscillator();
                t9.osc = t10;
                t10.frequency.value = 1800;
                t9.osc.detune.value = B.toNum0(t8.$index(node, _s6_), 0);
                t10 = t9.osc;
                t11 = t8.$index(node, _s8_);
                t10.type = t11 == null ? "sine" : J.toString$0$(t11);
                t9.osc.start();
                t10 = t7.createGain$0(t5);
                t9.dIn = t10;
                t10.gain.value = B.toNum0(t8.$index(node, "dIn"), 400);
                t10 = t7.createGain$0(t5);
                t9.fIn = t10;
                t10.gain.value = B.toNum0(t8.$index(node, "fIn"), 100);
                t9.dIn.connect(t9.osc.detune, 0);
                t9.fIn.connect(t9.osc.frequency, 0);
                t9.osc.connect(t9.level, 0, 0);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "lfo":
                t9 = new B.LFONode(t5);
                t9.SynthNode$2(t5, node);
                t9.frequency = B.toNum0(t8.$index(node, _s9_), 1);
                t10 = t5.createOscillator();
                t9.osc = t10;
                t10.frequency.value = t9.frequency;
                t9.osc.detune.value = B.toNum0(t8.$index(node, _s6_), 0);
                t10 = t9.osc;
                t8 = t8.$index(node, _s8_);
                t10.type = t8 == null ? "sine" : J.toString$0$(t8);
                t9.osc.start();
                t9.osc.connect(t9.level, 0, 0);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "delay":
                t9 = new B.SynthDelayNode(0.1, t5);
                t9.SynthNode$2(t5, node);
                t9.delay = t5.createDelay();
                t9.delayTime = B.toNum0(t8.$index(node, "delay"), 0.1);
                t9.delay.connect(t9.level, 0, 0);
                t9.delay.delayTime.value = t9.delayTime;
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "adsr":
                adsr = new B.ADSRNode(0.1, 0.2, 0.2, t5);
                adsr.SynthNode$2(t5, node);
                adsr.adsr = t7.createGain$0(t5);
                adsr.A = B.toNum0(t8.$index(node, "A"), adsr.A);
                adsr.D = B.toNum0(t8.$index(node, "D"), adsr.D);
                adsr.S = B.toNum0(t8.$index(node, "S"), adsr.S);
                adsr.R = B.toNum0(t8.$index(node, "R"), adsr.R);
                adsr.adsr.connect(adsr.level, 0, 0);
                adsr.adsr.gain.value = 0;
                t8 = adsr.R;
                t9 = _this.release;
                _this.release = Math.max(H.checkNum(t8), t9);
                adsr.enabled = false;
                t6.$indexSet(0, adsr.id, adsr);
                break;
              case "compressor":
                t9 = new B.SynthCompressorNode(t5);
                t9.SynthNode$2(t5, node);
                t10 = t5.createDynamicsCompressor();
                t9.compressor = t10;
                t10.connect(t9.level, 0, 0);
                t9.compressor.threshold.value = B.toNum0(t8.$index(node, "threshold"), -24);
                t9.compressor.knee.value = B.toNum0(t8.$index(node, "knee"), 30);
                t9.compressor.ratio.value = B.toNum0(t8.$index(node, "ratio"), 12);
                t9.compressor.release.value = B.toNum0(t8.$index(node, "release"), 0.25);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "filter":
                t9 = new B.FilterNode(t5);
                t9.SynthNode$2(t5, node);
                t10 = t5.createBiquadFilter();
                t9.filter = t10;
                t10.connect(t9.level, 0, 0);
                t9.filter.frequency.value = B.toNum0(t8.$index(node, _s9_), 350);
                t9.filter.detune.value = B.toNum0(t8.$index(node, _s6_), 0);
                t9.filter.Q.value = B.toNum0(t8.$index(node, "Q"), 1);
                t9.filter.gain.value = B.toNum0(t8.$index(node, "gain"), 0);
                t10 = t9.filter;
                t8 = t8.$index(node, "filter type");
                t10.type = t8 == null ? "lowpass" : J.toString$0$(t8);
                t9.enabled = false;
                t6.$indexSet(0, t9.id, t9);
                break;
              case "distortion":
                t8 = B.DistNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
              case "out":
                t8 = _this.out = B.SynthNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
              default:
                t8 = B.SynthNode$(t5, node);
                t8.enabled = false;
                t6.$indexSet(0, t8.id, t8);
                break;
            }
          }
        }
      for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(config, "routing"))), t2 = _this.nodes; t1.moveNext$0();) {
        r = t1.get$current(t1);
        t3 = J.getInterceptor$asx(r);
        source = t2.$index(0, t3.$index(r, "source"));
        dest = t2.$index(0, t3.$index(r, "dest"));
        if (source != null && dest != null) {
          source.enabled = true;
          dest.connectFromSource$2(source, H._asStringNullable(t3.$index(r, "type")));
        }
      }
    },
    loadCustomPatch$1: function(soundURL) {
      if (typeof soundURL != "string")
        H.throwExpression(H.argumentErrorValue(soundURL));
      this.loadPatch$1(type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H.stringReplaceAllUnchecked('    {\n      "nodes": [\n        { "type": "out", "id": 0 },\n        {\n          "type": "sample",\n          "samples": [\n            {\n              "sample": "<SOUNDURL>",\n              "step": 60\n            }\n          ],\n          "id": 1,\n          "level": 1\n        },\n        {\n          "type": "adsr",\n          "A": 0.01,\n          "D": 0.1,\n          "S": 1,\n          "R": 0.3,\n          "level": 1,\n          "id": 2\n        }\n      ],\n      "routing": [\n        { "source": 1, "dest": 2, "type": "in" },\n        { "source": 2, "dest": 0, "type": "out" }\n      ]\n    }', "<SOUNDURL>", soundURL), null)));
    },
    playNote$6: function(note, dest, when, offset, duration, sustain) {
      var _this = this,
        t1 = _this.out;
      if (t1 == null)
        return 0;
      t1.level.connect(dest, 0, 0);
      _this.maxD = duration;
      t1 = _this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_playNote_closure(_this, note, when, offset, duration, sustain));
      return _this.release + _this.maxD;
    },
    pitchBend$1: function(cents) {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_pitchBend_closure(cents));
    },
    schedulePitchBend$2: function(start, cents) {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_schedulePitchBend_closure(start, cents));
    },
    releaseNote$0: function() {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_releaseNote_closure());
    },
    destroy$0: function() {
      var t1 = this.nodes;
      t1.get$values(t1).forEach$1(0, new U.SynthChain_destroy_closure());
    }
  };
  U.SynthChain_playNote_closure.prototype = {
    call$1: function(node) {
      var t1, _this = this;
      type$.SynthNode._as(node);
      node.start$5(0, _this.note, _this.when, _this.offset, _this.duration, _this.sustain);
      if (node instanceof B.SynthSampleNode) {
        t1 = _this.$this;
        t1.maxD = Math.max(t1.maxD, node.sampleDuration);
      }
    },
    $signature: 25
  };
  U.SynthChain_pitchBend_closure.prototype = {
    call$1: function(node) {
      return type$.SynthNode._as(node).pitchBend$1(this.cents);
    },
    $signature: 23
  };
  U.SynthChain_schedulePitchBend_closure.prototype = {
    call$1: function(node) {
      return type$.SynthNode._as(node).schedulePitchBend$2(this.start, this.cents);
    },
    $signature: 23
  };
  U.SynthChain_releaseNote_closure.prototype = {
    call$1: function(node) {
      type$.SynthNode._as(node).release$0(0);
    },
    $signature: 25
  };
  U.SynthChain_destroy_closure.prototype = {
    call$1: function(node) {
      return type$.SynthNode._as(node).destroy$0();
    },
    $signature: 23
  };
  E.ClockSubscriber.prototype = {};
  E.Metronome.prototype = {};
  E.PlayClock.prototype = {
    get$time: function(_) {
      var _this = this,
        t1 = _this._subscribers._collection$_length === 0 || _this.context == null,
        t2 = _this._start;
      if (t1)
        t1 = t2;
      else {
        t1 = _this.context.currentTime;
        if (typeof t1 !== "number")
          return t1.$sub();
        t2 = t1 - t2;
        t1 = t2;
      }
      return t1;
    },
    get$beats: function() {
      var _this = this,
        t1 = _this.get$time(_this),
        t2 = _this._bpm,
        t3 = _this._elapsedBeats;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return t1 * t2 / 60 + t3;
    },
    pause$1: function(_, subscriber) {
      var t1, t2, _this = this;
      _this._listeners.add$1(0, subscriber);
      t1 = _this._subscribers;
      if (t1.contains$1(0, subscriber)) {
        t1.remove$1(0, subscriber);
        if (t1._collection$_length === 0 && _this.context != null) {
          t1 = _this.context.currentTime;
          t2 = _this._start;
          if (typeof t1 !== "number")
            return t1.$sub();
          _this._start = t1 - t2;
        }
      }
    },
    stopAll$0: function() {
      var _this = this;
      _this._start = _this._elapsedBeats = 0;
      _this._subscribers.clear$0(0);
      _this._listeners.forEach$1(0, new E.PlayClock_stopAll_closure());
    },
    setTime$1: function(elapsedBeats) {
      var _this = this;
      _this._elapsedBeats = elapsedBeats;
      _this._start = 0;
      _this._listeners.forEach$1(0, new E.PlayClock_setTime_closure());
      _this._subscribers.clear$0(0);
    },
    setTempo$1: function(tempo) {
      var t1, t2, _this = this,
        lastBeats = _this.get$beats();
      _this.set$_bpm(Math.max(1, H.checkNum(tempo)));
      t1 = _this.context;
      if (t1 != null) {
        t2 = _this._bpm;
        t1 = t1.currentTime;
        if (typeof t1 !== "number")
          return H.iae(t1);
        _this._elapsedBeats = lastBeats * 60 / t2 - t1;
      }
      _this._listeners.forEach$1(0, new E.PlayClock_setTempo_closure());
    },
    setTimeSignature$1: function(s) {
      var t1, t2, _this = this;
      if (s == null || s.split("/").length !== 2)
        s = "4/4";
      t1 = H.setRuntimeTypeInfo(s.split("/"), type$.JSArray_String);
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      _this._beatsPerMeasure = B.toInt1(t1[0], -1);
      t1 = s.split("/");
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      t1 = B.toInt1(t1[1], -1);
      _this._beatValue = t1;
      t2 = _this._beatsPerMeasure;
      if (typeof t2 !== "number")
        return t2.$lt();
      if (t2 >= 0) {
        if (typeof t1 !== "number")
          return t1.$lt();
        t1 = t1 < 0;
      } else
        t1 = true;
      if (t1)
        t1 = _this._beatValue = _this._beatsPerMeasure = 4;
      else
        t1 = t2;
      _this._meter = "" + t1 + "/" + H.S(_this._beatValue);
      _this._listeners.forEach$1(0, new E.PlayClock_setTimeSignature_closure());
    },
    startMetronome$1: function(metronome) {
      var start_time, _this = this, t1 = {},
        t2 = _this.context;
      if (t2 != null) {
        t2 = _this._metronomes;
        t2.add$1(0, metronome);
        if (_this._clock$_timer == null) {
          start_time = _this.context.currentTime;
          t1.beat = 0;
          t2.forEach$1(0, new E.PlayClock_startMetronome_closure());
          _this._clock$_timer = P.Timer_Timer$periodic(C.Duration_30000, new E.PlayClock_startMetronome_closure0(t1, _this, start_time));
        }
      }
    },
    set$_bpm: function(_bpm) {
      this._bpm = H._asIntNullable(_bpm);
    }
  };
  E.PlayClock_stopAll_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onClockReset$0();
    },
    $signature: 19
  };
  E.PlayClock_setTime_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onClockTimeChange$0();
    },
    $signature: 19
  };
  E.PlayClock_setTempo_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onTempoChange$0();
    },
    $signature: 19
  };
  E.PlayClock_setTimeSignature_closure.prototype = {
    call$1: function(s) {
      return type$.ClockSubscriber._as(s).onTimeSignatureChange$0();
    },
    $signature: 19
  };
  E.PlayClock_startMetronome_closure.prototype = {
    call$1: function(m) {
      return type$.Metronome._as(m).pulse$1(0);
    },
    $signature: 37
  };
  E.PlayClock_startMetronome_closure0.prototype = {
    call$1: function(t) {
      var t1, t2, t3, t4, t5, b;
      type$.Timer._as(t);
      t1 = this.$this;
      t2 = t1._metronomes;
      if (t2._collection$_length === 0) {
        t1._clock$_timer.cancel$0(0);
        t1._clock$_timer = null;
      } else {
        t3 = t1._bpm;
        t4 = t1.context.currentTime;
        t5 = this.start_time;
        if (typeof t4 !== "number")
          return t4.$sub();
        if (typeof t5 !== "number")
          return H.iae(t5);
        t3 = C.JSNumber_methods.$tdiv(t4 - t5, 60 / t3);
        t1 = t1._beatsPerMeasure;
        if (typeof t1 !== "number")
          return H.iae(t1);
        b = C.JSInt_methods.$mod(t3, t1);
        t1 = this._box_0;
        if (b !== t1.beat) {
          t1.beat = b;
          t2.forEach$1(0, new E.PlayClock_startMetronome__closure(t1));
        }
      }
    },
    $signature: 38
  };
  E.PlayClock_startMetronome__closure.prototype = {
    call$1: function(m) {
      return type$.Metronome._as(m).pulse$1(this._box_0.beat);
    },
    $signature: 37
  };
  K.Effect.prototype = {
    Effect$_internal$2: function($name, params) {
      var t1, t2, t3, t4, c, values, t5, _this = this;
      _this.start = Math.max(0, H.checkNum(B.toNum0(params.$index(0, "start"), 0)));
      _this.beats = B.toNum0(params.$index(0, "beats"), 0);
      _this.set$oparams(params);
      for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(params.$index(0, "values"))), t2 = _this.params, t3 = type$.List_dynamic, t4 = type$.JSArray_num; t1.moveNext$0();) {
        c = t1.get$current(t1);
        values = H.setRuntimeTypeInfo([], t4);
        if (t3._is(c))
          for (t5 = J.get$iterator$ax(c); t5.moveNext$0();)
            C.JSArray_methods.add$1(values, B.toNum0(t5.get$current(t5), 0));
        else if (typeof c == "number")
          C.JSArray_methods.add$1(values, c);
        C.JSArray_methods.add$1(t2, values);
      }
    },
    connect$4: function(dest, bpm, delay, offset) {
      var t1 = J.createGain$0$x(dest.context);
      t1.gain.value = 1;
      this.node = t1;
      t1.connect(dest, 0, 0);
      return this.node;
    },
    afterEffect$4: function($event, bpm, delay, offset) {
    },
    clampParam$3: function(param, minVal, maxVal) {
      var i;
      type$.List_num._as(param);
      for (i = 0; i < param.length; ++i)
        C.JSArray_methods.$indexSet(param, i, J.clamp$2$n(param[i], minVal, maxVal));
    },
    set$oparams: function(oparams) {
      this.oparams = type$.Map_String_dynamic._as(oparams);
    }
  };
  K.BiquadFilter.prototype = {
    connect$4: function(dest, bpm, delay, offset) {
      var fp, qp, gp, t2, t3, t4, fcurve, qcurve, gcurve, delta, _this = this,
        t1 = dest.context.createBiquadFilter();
      t1.type = _this.type;
      _this.node = t1;
      t1.connect(dest, 0, 0);
      t1 = type$.BiquadFilterNode._as(_this.node);
      fp = t1.frequency;
      qp = t1.Q;
      gp = t1.gain;
      t1 = _this.params;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t2 = t1[0];
      t3 = _this.beats;
      t4 = 60 / bpm;
      if (typeof t3 !== "number")
        return t3.$mul();
      fcurve = K.EffectCurve$(t2, t3 * t4);
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      t3 = t1[1];
      t2 = _this.beats;
      if (typeof t2 !== "number")
        return t2.$mul();
      qcurve = K.EffectCurve$(t3, t2 * t4);
      if (2 >= t1.length)
        return H.ioore(t1, 2);
      t1 = t1[2];
      t2 = _this.beats;
      if (typeof t2 !== "number")
        return t2.$mul();
      gcurve = K.EffectCurve$(t1, t2 * t4);
      delta = delay + _this.start * t4 - offset;
      t4 = type$.AudioContext;
      fcurve.apply$3(fp, delta, t4._as(dest.context));
      qcurve.apply$3(qp, delta, t4._as(dest.context));
      gcurve.apply$3(gp, delta, t4._as(dest.context));
      return _this.node;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  K.PitchBendEffect.prototype = {
    afterEffect$4: function($event, bpm, delay, offset) {
      var t2, t3, t4, curve, _this = this,
        t1 = _this.params;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t2 = t1[0];
      t3 = t2.length;
      if (t3 === 0)
        return;
      t4 = _this.beats;
      if (typeof t4 !== "number")
        return t4.$le();
      if (t4 <= 0) {
        if (0 >= t3)
          return H.ioore(t2, 0);
        $event.pitchBend$1(t2[0]);
      } else {
        if (t3 === 1) {
          H._arrayInstanceType(t2)._precomputed1._as(0);
          if (!!t2.fixed$length)
            H.throwExpression(P.UnsupportedError$("insert"));
          t2.splice(0, 0, 0);
        }
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1 = t1[0];
        t2 = _this.beats;
        t3 = 60 / bpm;
        if (typeof t2 !== "number")
          return t2.$mul();
        curve = K.EffectCurve$(t1, t2 * t3);
        t2 = _this.start;
        t1 = $event.chain;
        if (t1 != null)
          t1.schedulePitchBend$2(delay + t2 * t3 - offset, curve);
      }
    }
  };
  K.PanEffect.prototype = {
    connect$4: function(dest, bpm, delay, offset) {
      var p, t2, t3, _this = this,
        t1 = dest.context.createStereoPanner();
      _this.node = t1;
      t1.connect(dest, 0, 0);
      p = type$.StereoPannerNode._as(_this.node).pan;
      t1 = _this.params;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1 = t1[0];
      t2 = _this.beats;
      t3 = 60 / bpm;
      if (typeof t2 !== "number")
        return t2.$mul();
      K.EffectCurve$(t1, t2 * t3).apply$3(p, delay + _this.start * t3 - offset, type$.AudioContext._as(dest.context));
      return _this.node;
    }
  };
  K.GainEffect.prototype = {
    connect$4: function(dest, bpm, delay, offset) {
      var param, t2, t3, _this = this,
        t1 = J.createGain$0$x(dest.context);
      _this.node = t1;
      t1.connect(dest, 0, 0);
      param = type$.GainNode._as(_this.node).gain;
      t1 = _this.params;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1 = t1[0];
      t2 = _this.beats;
      t3 = 60 / bpm;
      if (typeof t2 !== "number")
        return t2.$mul();
      K.EffectCurve$(t1, t2 * t3).apply$3(param, delay + _this.start * t3 - offset, type$.AudioContext._as(dest.context));
      return _this.node;
    }
  };
  K.EffectCurve.prototype = {
    EffectCurve$2: function(values, duration) {
      var t2, samples, srci, dsti, y0, y1, t10, index, t00, t, i, t11, y10, _this = this,
        t1 = _this.values;
      if (t1.length > 1) {
        t2 = _this.duration;
        if (typeof t2 !== "number")
          return t2.$gt();
        t2 = t2 > 0;
      } else
        t2 = false;
      if (t2) {
        t2 = _this.duration;
        if (typeof t2 !== "number")
          return H.iae(t2);
        samples = C.JSNumber_methods.ceil$0(200 * t2);
        t2 = new Array(samples);
        t2.fixed$length = Array;
        _this.set$curve(0, H.setRuntimeTypeInfo(t2, type$.JSArray_num));
        t2 = t1.length;
        srci = 1 / (t2 - 1);
        dsti = 1 / (samples - 1);
        if (0 >= t2)
          return H.ioore(t1, 0);
        y0 = t1[0];
        if (1 >= t2)
          return H.ioore(t1, 1);
        y1 = t1[1];
        for (t10 = srci, index = 1, t00 = 0, t = 0, i = 0; i < samples; ++i) {
          t2 = _this.curve;
          if (typeof y1 !== "number")
            return y1.$sub();
          if (typeof y0 !== "number")
            return H.iae(y0);
          (t2 && C.JSArray_methods).$indexSet(t2, i, y0 + (y1 - y0) * ((t - t00) / srci));
          t += dsti;
          if (t >= t10) {
            t11 = t10 + srci;
            ++index;
            if (index < t1.length)
              y10 = t1[index];
            else
              y10 = y1;
            t00 = t10;
            t10 = t11;
            y0 = y1;
            y1 = y10;
          }
        }
      }
    },
    apply$3: function(param, timeDelta, context) {
      var t3, p, i, _this = this,
        time = context.currentTime,
        t1 = _this.values,
        t2 = t1.length;
      if (t2 === 0)
        return;
      else {
        if (t2 > 1) {
          t3 = _this.duration;
          if (typeof t3 !== "number")
            return t3.$gt();
          t3 = t3 > 0;
        } else
          t3 = false;
        if (t3) {
          param.cancelScheduledValues(0);
          t1 = _this.duration;
          if (timeDelta >= 0) {
            t2 = _this.curve;
            if (typeof time !== "number")
              return time.$add();
            C.AudioParam_methods.setValueCurveAtTime$3(param, t2, time + timeDelta, t1);
          } else {
            if (typeof t1 !== "number")
              return H.iae(t1);
            p = -timeDelta / t1;
            if (p < 1) {
              t2 = _this.curve;
              t3 = t2.length;
              i = C.JSNumber_methods.round$0(t3 * p);
              if (i < t3)
                C.AudioParam_methods.setValueCurveAtTime$3(param, (t2 && C.JSArray_methods).sublist$1(t2, i), time, t1);
            }
          }
        } else {
          if (0 >= t2)
            return H.ioore(t1, 0);
          param.value = t1[0];
        }
      }
    },
    set$curve: function(_, curve) {
      this.curve = type$.List_num._as(curve);
    }
  };
  X.SynthEvent.prototype = {
    releaseNote$0: function() {
      var t1 = this.chain;
      if (t1 != null) {
        t1.releaseNote$0();
        P.Timer_Timer(P.Duration$(C.JSNumber_methods.round$0(this.chain.release * 1000) + 200), new X.SynthEvent_releaseNote_closure(this));
      }
    },
    scheduleNote$4: function(dest, when, offset, duration) {
      var now, _this = this,
        t1 = _this.chain;
      if (t1 != null) {
        t1.playNote$6(_this.note, dest, when, offset, duration, false);
        _this.start = when;
        now = _this.context.currentTime;
        if (typeof now !== "number")
          return H.iae(now);
        P.Timer_Timer(P.Duration$(C.JSNumber_methods.round$0((when - now + duration + _this.chain.release) * 1000) + 200), new X.SynthEvent_scheduleNote_closure(_this));
      }
    },
    pitchBend$1: function(cents) {
      var t1 = this.chain;
      if (t1 != null)
        t1.pitchBend$1(cents);
    }
  };
  X.SynthEvent_releaseNote_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.onEnded;
      if (t1 != null)
        P.Function_apply(t1, [], null);
    },
    $signature: 1
  };
  X.SynthEvent_scheduleNote_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.onEnded;
      if (t1 != null)
        P.Function_apply(t1, [], null);
    },
    $signature: 1
  };
  D.Key.prototype = {};
  B.SynthNode.prototype = {
    SynthNode$2: function(context, config) {
      var _this = this,
        t1 = J.getInterceptor$asx(config);
      _this.id = B.toInt1(t1.$index(config, "id"), 0);
      _this.level = J.createGain$0$x(_this.context);
      _this.enabled = B.toBool0(t1.$index(config, "enabled"), true);
      t1 = B.toNum0(t1.$index(config, "level"), 1);
      _this._level = t1;
      _this.level.gain.value = t1;
    },
    connectFromSource$2: function(source, type) {
      source.level.connect(this.level, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
    },
    release$0: function(_) {
    },
    destroy$0: function() {
      var t1 = this.level;
      if (t1 != null)
        t1.disconnect();
      this.level = null;
    },
    pitchBend$1: function(cents) {
    },
    schedulePitchBend$2: function(start, cents) {
    },
    get$id: function(receiver) {
      return this.id;
    }
  };
  B.ADSRNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.adsr, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, t2, t3, t4, _this = this,
        param = _this.adsr.gain,
        d = duration - offset;
      param.cancelScheduledValues(0);
      param.setValueAtTime(0, when);
      if (sustain) {
        t1 = _this.A;
        if (typeof t1 !== "number")
          return t1.$div();
        param.setTargetAtTime(1, when, t1 / 2);
        t1 = _this.D;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          t2 = _this.S;
          t3 = _this.A;
          if (typeof t3 !== "number")
            return t3.$add();
          param.setTargetAtTime(t2, t3 + when, t1 / 2);
        }
      } else if (d <= 0)
        return;
      else {
        t1 = _this.A;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (d < t1) {
          param.setTargetAtTime(d / t1, when, d / 2);
          t1 = _this.R;
          if (typeof t1 !== "number")
            return t1.$div();
          param.setTargetAtTime(0, when + d, t1 / 2);
        } else {
          t2 = _this.D;
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (d < t1 + t2) {
            param.setTargetAtTime(1, when, t1 / 2);
            t1 = _this.A;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t2 = _this.R;
            if (typeof t2 !== "number")
              return t2.$div();
            param.setTargetAtTime(0, when + t1, t2 / 2);
          } else {
            t3 = when + d;
            t1 /= 2;
            if (t2 <= 0) {
              param.setTargetAtTime(1, when, t1);
              t1 = _this.R;
              if (typeof t1 !== "number")
                return t1.$div();
              param.setTargetAtTime(0, t3, t1 / 2);
            } else {
              param.setTargetAtTime(1, when, t1);
              t1 = _this.S;
              t2 = _this.A;
              if (typeof t2 !== "number")
                return H.iae(t2);
              t4 = _this.D;
              if (typeof t4 !== "number")
                return t4.$div();
              param.setTargetAtTime(t1, when + t2, t4 / 2);
              t4 = _this.R;
              if (typeof t4 !== "number")
                return t4.$div();
              param.setTargetAtTime(0, t3, t4 / 2);
            }
          }
        }
      }
    },
    release$0: function(_) {
      var t1, param, now;
      this.super$SynthNode$release(0);
      t1 = this.adsr;
      if (t1 != null) {
        param = t1.gain;
        now = t1.context.currentTime;
        t1 = this.R;
        if (typeof t1 !== "number")
          return t1.$div();
        param.setTargetAtTime(0, now, t1 / 3);
      }
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.adsr;
      if (t1 != null)
        t1.disconnect();
      this.adsr = null;
    }
  };
  B.FMNode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, t2, f, _this = this;
      if (_this.osc == null || !_this.enabled)
        return;
      if (_this.relative) {
        t1 = note._note;
        t1 = Math.pow(2, C.JSNumber_methods._tdivFast$1(t1, 12) + C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1), 12) / 12);
        t2 = _this.frequency;
        if (typeof t2 !== "number")
          return H.iae(t2);
        f = 16.3516 * t1 * t2;
      } else
        f = _this.frequency;
      _this.osc.frequency.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.frequency.setValueAtTime(f, t1.context.currentTime);
      _this.osc.detune.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.detune.setValueAtTime(0, t1.context.currentTime);
    },
    pitchBend$1: function(cents) {
      var t1 = this.osc,
        when = t1.context.currentTime;
      t1 = t1.detune;
      if (typeof when !== "number")
        return when.$add();
      t1.linearRampToValueAtTime(cents, when + 0.01);
    },
    schedulePitchBend$2: function(start, cents) {
      var t1 = this.osc;
      cents.apply$3(t1.detune, start, type$.AudioContext._as(t1.context));
    },
    destroy$0: function() {
      var t1, _this = this;
      _this.super$SynthNode$destroy();
      t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.stop();
      _this.dIn.disconnect();
      _this.fIn.disconnect();
      _this.osc.disconnect();
      _this.osc = _this.fIn = _this.dIn = null;
    },
    connectFromSource$2: function(source, type) {
      if (type === "detune")
        source.level.connect(this.dIn, 0, 0);
      else if (type === "frequency")
        source.level.connect(this.fIn, 0, 0);
      else if (type === "amplitude")
        source.level.connect(this.level.gain, 0);
    }
  };
  B.LFONode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var _this = this,
        t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.frequency.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.frequency.setValueAtTime(_this.frequency, t1.context.currentTime);
      _this.osc.detune.cancelScheduledValues(0);
      t1 = _this.osc;
      t1.detune.setValueAtTime(0, t1.context.currentTime);
    },
    destroy$0: function() {
      var t1, _this = this;
      _this.super$SynthNode$destroy();
      t1 = _this.osc;
      if (t1 == null || !_this.enabled)
        return;
      t1.stop();
      _this.osc.disconnect();
      _this.osc = null;
    },
    connectFromSource$2: function(incoming, type) {
      var t1 = this.osc;
      if (t1 == null)
        return;
      if (type === "detune")
        incoming.level.connect(t1.detune, 0);
      else if (type === "frequency")
        incoming.level.connect(t1.frequency, 0);
      else if (type === "amplitude")
        incoming.level.connect(this.level.gain, 0);
    }
  };
  B.DistNode.prototype = {
    DistNode$2: function(context, config) {
      var t3, _this = this,
        t1 = J.getInterceptor$x(context),
        t2 = t1.createScriptProcessor$3(context, 1024, 2, 2);
      _this.spn = t2;
      t2.toString;
      t3 = type$.void_Function_AudioProcessingEvent._as(new B.DistNode_closure());
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t2, "audioprocess", t3, false, type$.AudioProcessingEvent);
      t1 = t1.createGain$0(context);
      _this.preGainNode = t1;
      t1.gain.value = B.toNum0(J.$index$asx(config, "pre-gain"), 1);
      _this.preGainNode.connect(_this.spn, 0, 0);
      _this.spn.connect(_this.level, 0, 0);
    },
    start$5: function(_, note, when, offset, duration, sustain) {
    },
    destroy$0: function() {
      var _this = this;
      _this.super$SynthNode$destroy();
      _this.spn.disconnect();
      _this.preGainNode.disconnect();
      _this.preGainNode = _this.spn = null;
    },
    connectFromSource$2: function(incoming, type) {
      incoming.level.connect(this.preGainNode, 0, 0);
    }
  };
  B.DistNode_closure.prototype = {
    call$1: function($event) {
      var atan, input, output, c, t1, channelData, outputData, t2, i;
      type$.AudioProcessingEvent._as($event);
      atan = new B.DistNode__closure();
      input = $event.inputBuffer;
      output = $event.outputBuffer;
      c = 0;
      while (true) {
        t1 = input.numberOfChannels;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(c < t1))
          break;
        channelData = input.getChannelData(c);
        outputData = output.getChannelData(c);
        for (t1 = channelData.length, t2 = outputData && C.NativeFloat32List_methods, i = 0; i < t1; ++i)
          t2.$indexSet(outputData, i, atan.call$1(channelData[i]));
        ++c;
      }
    },
    $signature: 39
  };
  B.DistNode__closure.prototype = {
    call$1: function(signal) {
      var e2x = Math.pow(2.71828, 2 * signal);
      return (e2x - 1) / (e2x + 1);
    },
    $signature: 64
  };
  B.SynthSampleNode.prototype = {
    start$5: function(_, note, when, offset, duration, sustain) {
      var t1, step, score, delta, sample, s, t2, t3, t4, d, buffer, playback, _this = this;
      if (!_this.enabled)
        return;
      t1 = _this.source;
      if (t1 != null)
        t1.disconnect();
      t1 = _this.context.createBufferSource();
      _this.source = t1;
      t1.connect(_this.level, 0, 0);
      _this.dIn.connect(_this.source.detune, 0);
      _this.pIn.connect(_this.source.playbackRate, 0);
      for (t1 = J.get$iterator$ax(_this.samples), step = -1, score = 100000, delta = 0, sample = null; t1.moveNext$0();) {
        s = t1.get$current(t1);
        t2 = note._note;
        t3 = J.getInterceptor$asx(s);
        t4 = H._asNumNullable(t3.$index(s, "step"));
        if (typeof t4 !== "number")
          return H.iae(t4);
        d = t2 - t4;
        if (d < 0)
          d = d * -1 + 12;
        if (d < score) {
          step = H._asNumNullable(t3.$index(s, "step"));
          t2 = note._note;
          if (typeof step !== "number")
            return H.iae(step);
          delta = t2 - step;
          sample = H._asStringNullable(t3.$index(s, "sample"));
          score = d;
        }
      }
      buffer = sample != null ? type$.AudioBuffer._as($.$get$Synthesizer_sounds().$index(0, sample)) : null;
      if (buffer != null) {
        playback = Math.pow(2, delta / 12);
        _this.source.buffer = buffer;
        _this.source.playbackRate.value = playback;
        _this.source.start(when, offset);
        t1 = buffer.duration;
        if (typeof t1 !== "number")
          return t1.$div();
        _this.sampleDuration = t1 / playback;
      }
    },
    pitchBend$1: function(cents) {
      var when, semitoneRatio, t2, exception, t3,
        t1 = this.source;
      if (t1 != null && this.enabled) {
        when = t1.context.currentTime;
        try {
          t1 = t1.detune;
          t2 = when;
          if (typeof t2 !== "number")
            return t2.$add();
          t1.linearRampToValueAtTime(cents, t2 + 0.01);
        } catch (exception) {
          H.unwrapException(exception);
          window;
          if (typeof console != "undefined")
            window.console.info("The browser does not support detune; Using playbackrate");
          semitoneRatio = Math.pow(2, 0.0008333333333333334);
          t1 = this.source.playbackRate;
          t2 = semitoneRatio;
          H.checkNum(t2);
          H.checkNum(cents);
          t2 = Math.pow(t2, cents);
          t3 = when;
          if (typeof t3 !== "number")
            return t3.$add();
          t1.linearRampToValueAtTime(t2, t3 + 0.01);
        }
      }
    },
    schedulePitchBend$2: function(start, cents) {
      var semitoneRatio, exception, fx, t2, t3,
        t1 = this.source;
      if (t1 != null && this.enabled)
        try {
          cents.apply$3(t1.detune, start, type$.AudioContext._as(t1.context));
        } catch (exception) {
          H.unwrapException(exception);
          window;
          if (typeof console != "undefined")
            window.console.info("The browser does not support detune; Using playbackrate");
          semitoneRatio = Math.pow(2, 0.0008333333333333334);
          t1 = cents;
          fx = K.EffectCurve$(t1.values, t1.duration);
          t1 = t1.curve;
          t2 = type$.dynamic_Function_num._as(new B.SynthSampleNode_schedulePitchBend_closure(semitoneRatio));
          t1.toString;
          t3 = H._arrayInstanceType(t1);
          fx.set$curve(0, type$.List_num._as(new H.MappedListIterable(t1, t3._eval$1("@(1)")._as(t2), t3._eval$1("MappedListIterable<1,@>"))));
          cents = fx;
          t3 = cents;
          t2 = this.source;
          t3.apply$3(t2.playbackRate, start, type$.AudioContext._as(t2.context));
        }
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.source;
      if (t1 != null)
        t1.disconnect();
      this.source = null;
    },
    connectFromSource$2: function(incoming, type) {
      if (type === "detune")
        incoming.level.connect(this.dIn, 0, 0);
      else if (type === "playbackRate")
        incoming.level.connect(this.pIn, 0, 0);
    }
  };
  B.SynthSampleNode_schedulePitchBend_closure.prototype = {
    call$1: function(cent) {
      H._asNumNullable(cent);
      H.checkNum(cent);
      return Math.pow(this.semitoneRatio, cent);
    },
    $signature: 65
  };
  B.SynthDelayNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.delay, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.delay;
      if (t1 != null)
        t1.disconnect();
      this.delay = null;
    }
  };
  B.SynthCompressorNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.compressor, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.compressor;
      if (t1 != null)
        t1.disconnect();
      this.compressor = null;
    }
  };
  B.FilterNode.prototype = {
    connectFromSource$2: function(source, type) {
      source.level.connect(this.filter, 0, 0);
    },
    destroy$0: function() {
      this.super$SynthNode$destroy();
      var t1 = this.filter;
      if (t1 != null)
        t1.disconnect();
      this.filter = null;
    }
  };
  F.Note.prototype = {
    get$gain: function(_) {
      var t1 = this._velocity;
      return t1 * t1 / 16129;
    }
  };
  B.SchedulerSynth.prototype = {
    scheduleNotes$4$delay$offset: function(trace, dest, delay, offset) {
      var delta, t1, t2, t3, t4, t5, t6, t7, _i, t, t8, t9, t10, t11, generator, _this = this, _s4_ = "name";
      if (delay > 0)
        delta = delay;
      else {
        if (typeof offset !== "number")
          return offset.$gt();
        delta = offset > 0 ? -offset : 0;
      }
      for (t1 = trace.trace, t2 = t1.length, t3 = _this.effects, t4 = type$.Map_dynamic_dynamic, t5 = type$.AudioContext, t6 = type$.JsLinkedHashMap_int_SynthNode, t7 = type$.Note, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        t = t1[_i];
        t8 = t.command;
        if (t8 === "start")
          C.JSArray_methods.set$length(t3, 0);
        else {
          if (t8 === "play") {
            t9 = t.time;
            t10 = t.duration;
            if (typeof t9 !== "number")
              return t9.$add();
            if (typeof t10 !== "number")
              return H.iae(t10);
            if (typeof offset !== "number")
              return H.iae(offset);
            t10 = t9 + t10 >= offset;
            t9 = t10;
          } else
            t9 = false;
          if (t9)
            _this._schedule$5(t7._as(t.params.$index(0, "note")), dest, t.time, delta, null);
          else {
            if (t8 === "sound") {
              t9 = t.time;
              t10 = t.duration;
              if (typeof t9 !== "number")
                return t9.$add();
              if (typeof t10 !== "number")
                return H.iae(t10);
              if (typeof offset !== "number")
                return H.iae(offset);
              t10 = t9 + t10 >= offset;
              t9 = t10;
            } else
              t9 = false;
            if (t9) {
              t8 = t.params;
              t9 = t7._as(t8.$index(0, "note"));
              t8 = H._asStringNullable(t8.$index(0, "sound-url"));
              t10 = t.time;
              t11 = dest.context;
              generator = new U.SynthChain(t11, new H.JsLinkedHashMap(t6));
              if (typeof t8 != "string")
                H.throwExpression(H.argumentErrorValue(t8));
              generator.loadPatch$1(t4._as(C.C_JsonCodec.decode$2$reviver(0, H.stringReplaceAllUnchecked('    {\n      "nodes": [\n        { "type": "out", "id": 0 },\n        {\n          "type": "sample",\n          "samples": [\n            {\n              "sample": "<SOUNDURL>",\n              "step": 60\n            }\n          ],\n          "id": 1,\n          "level": 1\n        },\n        {\n          "type": "adsr",\n          "A": 0.01,\n          "D": 0.1,\n          "S": 1,\n          "R": 0.3,\n          "level": 1,\n          "id": 2\n        }\n      ],\n      "routing": [\n        { "source": 1, "dest": 2, "type": "in" },\n        { "source": 2, "dest": 0, "type": "out" }\n      ]\n    }', "<SOUNDURL>", t8), null)));
              _this._schedule$5(t9, dest, t10, delta, generator);
            } else if (t8 === "patch") {
              t8 = t.params;
              if (typeof t8.$index(0, _s4_) == "string" && t4._is(t8.$index(0, "patch")))
                if (!J.$eq$(t8.$index(0, _s4_), _this.voice))
                  _this.loadPatch$3(H._asStringNullable(t8.$index(0, _s4_)), t4._as(t8.$index(0, "patch")), t5._as(dest.context));
            } else if (t8 === "push_fx") {
              t8 = t.params;
              t8 = K.Effect_Effect(H._asStringNullable(t8.$index(0, "effect")), t8);
              if (t8 != null)
                C.JSArray_methods.add$1(t3, t8);
            } else if (t8 === "pop_fx") {
              t8 = t3.length;
              if (t8 !== 0) {
                if (0 >= t8)
                  return H.ioore(t3, -1);
                t3.pop();
              }
            } else if (t8 === "stop")
              C.JSArray_methods.set$length(t3, 0);
          }
        }
      }
    },
    scheduleNotes$3$offset: function(trace, dest, offset) {
      return this.scheduleNotes$4$delay$offset(trace, dest, 0, offset);
    },
    scheduleNotes$3$delay: function(trace, dest, delay) {
      return this.scheduleNotes$4$delay$offset(trace, dest, delay, 0);
    },
    scheduleNotes$2: function(trace, dest) {
      return this.scheduleNotes$4$delay$offset(trace, dest, 0, 0);
    }
  };
  L.Synthesizer.prototype = {
    loadPatch$3: function($name, patch, context) {
      return this.loadPatch$body$Synthesizer($name, patch, context);
    },
    loadPatch$body$Synthesizer: function($name, patch, context) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, t2, t3, t4, node, t5, sample, t6, _box_0;
      var $async$loadPatch$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              $async$self.voice = $name;
              $async$self.cancelAllNotes$0();
              $async$self.config = patch;
              _box_0.load_count = 0;
              t1 = type$.List_dynamic;
              if (t1._is(J.$index$asx(patch, "nodes")))
                for (t2 = type$.Iterable_dynamic, t3 = J.get$iterator$ax(t2._as(J.$index$asx($async$self.config, "nodes"))), t4 = type$.Map_dynamic_dynamic; t3.moveNext$0();) {
                  node = t4._as(t3.get$current(t3));
                  t5 = J.getInterceptor$asx(node);
                  if (J.$eq$(t5.$index(node, "type"), "sample"))
                    if (t1._is(t5.$index(node, "samples")))
                      for (t5 = J.get$iterator$ax(t2._as(t5.$index(node, "samples"))); t5.moveNext$0();) {
                        sample = t4._as(t5.get$current(t5));
                        t6 = J.getInterceptor$asx(sample);
                        if (t6.$index(sample, "sample") != null) {
                          ++_box_0.load_count;
                          $async$self.loadAudioBuffer$3(H._asStringNullable(t6.$index(sample, "sample")), context, new L.Synthesizer_loadPatch_closure(_box_0));
                        }
                      }
                }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadPatch$3, $async$completer);
    },
    playSound$3: function(note, soundURL, dest) {
      var t1 = dest.context,
        generator = new U.SynthChain(t1, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_SynthNode));
      generator.loadCustomPatch$1(soundURL);
      return this._play$3(note, dest, generator);
    },
    _play$3: function(note, dest, generator) {
      var t2, $event, gain, t3, _this = this, t1 = {};
      if (_this.config == null)
        return null;
      t2 = dest.context;
      $event = new X.SynthEvent(note, t2);
      t2 = generator != null ? $event.chain = generator : $event.chain = _this.allocateGenerator$1(t2);
      if (t2 == null)
        return null;
      gain = J.createGain$0$x(dest.context);
      gain.gain.value = note.get$gain(note);
      t1.gain = gain;
      gain.connect(dest, 0, 0);
      t3 = t2.context;
      $event.start = t3.currentTime;
      t2.playNote$6(note, gain, 0, 0, 0, true);
      C.JSArray_methods.add$1(_this.notes, $event);
      $event.onEnded = new L.Synthesizer__play_closure(t1, _this, $event);
      return $event;
    },
    releaseNote$1: function(note) {
      var t1, i, t2;
      for (t1 = this.notes, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t2 = t1[i];
        if (t2.note._note === note._note)
          t2.releaseNote$0();
      }
    },
    releaseAllNotes$0: function() {
      var t1, i;
      for (t1 = this.notes, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].releaseNote$0();
      }
    },
    _schedule$5: function(note, dest, start, delta, generator) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, now, t2, t3, offset, off, delay, $event, fx, t4, t5, _i, e, slept, nodes, i, gain;
      var $async$_schedule$5 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                if ($async$self.config == null) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = dest.context;
                now = t1.currentTime;
                t2 = note.duration;
                t3 = 60 / $async$self._synth$_bpm;
                if (typeof t2 !== "number") {
                  $async$returnValue = t2.$mul();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                offset = Math.max(0, -delta);
                if (typeof start !== "number") {
                  $async$returnValue = H.iae(start);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                off = Math.max(0, offset - start) * t3;
                delay = Math.max(0, delta) * t3;
                start = (start + delta) * t3;
                offset *= t3;
                $event = new X.SynthEvent(note, t1);
                t1 = $async$self.notes;
                C.JSArray_methods.add$1(t1, $event);
                fx = H.setRuntimeTypeInfo([], type$.JSArray_Effect);
                for (t4 = $async$self.effects, t5 = t4.length, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
                  e = t4[_i];
                  C.JSArray_methods.add$1(fx, K.Effect_Effect(e.name, e.oparams));
                }
                $async$goto = start > 0.3 && off <= 0 ? 3 : 5;
                break;
              case 3:
                // then
                $async$goto = 6;
                return P._asyncAwait(P.Future_Future$delayed(P.Duration$(C.JSNumber_methods.floor$0((start - 0.25) * 1000)), type$.dynamic), $async$_schedule$5);
              case 6:
                // returning from await.
                t4 = dest.context.currentTime;
                if (typeof t4 !== "number") {
                  $async$returnValue = t4.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (typeof now !== "number") {
                  $async$returnValue = H.iae(now);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                delta = t4 - now;
                delay = Math.max(0, delay - delta);
                offset += delta;
                start -= delta;
                now += delta;
                slept = true;
                // goto join
                $async$goto = 4;
                break;
              case 5:
                // else
                slept = false;
              case 4:
                // join
                if (slept && start < -0.05 || $event.canceled) {
                  C.JSArray_methods.remove$1(t1, $event);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if ((generator != null ? $event.chain = generator : $event.chain = $async$self.allocateGenerator$1(dest.context)) == null) {
                  C.JSArray_methods.remove$1(t1, $event);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                nodes = H.setRuntimeTypeInfo([], type$.JSArray_AudioNode);
                for (i = fx.length - 1; i >= 0; --i) {
                  if (i >= fx.length) {
                    $async$returnValue = H.ioore(fx, i);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  dest = fx[i].connect$4(dest, $async$self._synth$_bpm, delay, offset);
                  C.JSArray_methods.add$1(nodes, dest);
                }
                gain = J.createGain$0$x(dest.context);
                gain.gain.value = note.get$gain(note);
                gain.connect(dest, 0, 0);
                C.JSArray_methods.add$1(nodes, gain);
                if (typeof now !== "number") {
                  $async$returnValue = now.$add();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $event.scheduleNote$4(gain, now + start, off, t2 * t3);
                for (t1 = fx.length, _i = 0; _i < fx.length; fx.length === t1 || (0, H.throwConcurrentModificationError)(fx), ++_i)
                  fx[_i].afterEffect$4($event, $async$self._synth$_bpm, delay, offset);
                $event.onEnded = new L.Synthesizer__schedule_closure($async$self, nodes, $event);
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$_schedule$5, $async$completer);
    },
    cancelAllNotes$0: function() {
      var t1, i, t2, t3;
      for (t1 = this.notes, i = t1.length - 1; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t2 = t1[i];
        t2.canceled = true;
        t3 = t2.onEnded;
        if (t3 != null)
          H.Primitives_applyFunction(t3, [], null);
        t2.onEnded = null;
      }
      this.destroyAllGenerators$0();
    },
    pitchBend$1: function(cents) {
      C.JSArray_methods.forEach$1(this.notes, new L.Synthesizer_pitchBend_closure(cents));
    },
    allocateGenerator$1: function(context) {
      var _i, chain, t3,
        t1 = this._bank,
        t2 = t1.length;
      if (t2 !== 0) {
        if (0 >= t2)
          return H.ioore(t1, 0);
        t2 = t1[0].context;
        t2 = t2 == null ? context != null : t2 !== context;
      } else
        t2 = false;
      if (t2)
        this.destroyAllGenerators$0();
      for (t2 = t1.length, _i = 0; _i < t2; ++_i) {
        chain = t1[_i];
        if (chain.free) {
          t3 = chain.context;
          t3 = t3 == null ? context == null : t3 === context;
        } else
          t3 = false;
        if (t3) {
          chain.free = false;
          return chain;
        }
      }
      if (t2 < 16) {
        chain = new U.SynthChain(context, new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_SynthNode));
        chain.loadPatch$1(this.config);
        chain.free = false;
        C.JSArray_methods.add$1(t1, chain);
        return chain;
      }
      return null;
    },
    destroyAllGenerators$0: function() {
      var t1, t2, _i;
      for (t1 = this._bank, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].destroy$0();
      C.JSArray_methods.set$length(t1, 0);
    },
    loadAudioBuffer$3: function($name, context, onLoaded) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, audio, t1, formats, supportsFormat, url, request, t2, t3;
      var $async$loadAudioBuffer$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.$get$Synthesizer_sounds().$index(0, $name) != null) {
                // goto return
                $async$goto = 1;
                break;
              }
              audio = W.AudioElement_AudioElement$_(null);
              audio.id = "test-audio-node";
              t1 = type$.String;
              formats = P.LinkedHashMap_LinkedHashMap$_literal(["mp3", "audio/mpeg", "mp4", "audio/mp4", "ogg", "audio/ogg", "aif", "audio/x-aiff", "wav", "audio/wav"], t1, t1);
              t1 = document;
              t1.body.appendChild(audio);
              if (audio.canPlayType(formats.$index(0, "ogg")) === "probably" || audio.canPlayType(formats.$index(0, "ogg")) === "maybe") {
                J.remove$0$ax(t1.querySelector("#test-audio-node"));
                supportsFormat = true;
              } else
                supportsFormat = false;
              url = supportsFormat ? H.S($name) + ".ogg" : H.S($name) + ".wav";
              request = new XMLHttpRequest();
              C.HttpRequest_methods.open$3$async(request, "GET", url, true);
              request.responseType = "arraybuffer";
              t1 = type$.void_Function_ProgressEvent;
              t2 = t1._as(new L.Synthesizer_loadAudioBuffer_closure(context, request, $name, onLoaded));
              type$.void_Function._as(null);
              t3 = type$.ProgressEvent;
              W._EventStreamSubscription$(request, "load", t2, false, t3);
              W._EventStreamSubscription$(request, "error", t1._as(new L.Synthesizer_loadAudioBuffer_closure0()), false, t3);
              request.send();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadAudioBuffer$3, $async$completer);
    },
    loadCustomSound$2: function(url, context) {
      var request, t1, t2, t3;
      if ($.$get$Synthesizer_sounds().$index(0, url) != null)
        return;
      request = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(request, "GET", url, true);
      request.responseType = "arraybuffer";
      t1 = type$.void_Function_ProgressEvent;
      t2 = t1._as(new L.Synthesizer_loadCustomSound_closure(context, request, url));
      type$.void_Function._as(null);
      t3 = type$.ProgressEvent;
      W._EventStreamSubscription$(request, "load", t2, false, t3);
      W._EventStreamSubscription$(request, "error", t1._as(new L.Synthesizer_loadCustomSound_closure0()), false, t3);
      request.send();
    }
  };
  L.Synthesizer_loadPatch_closure.prototype = {
    call$1: function(n) {
      --this._box_0.load_count;
    },
    $signature: 8
  };
  L.Synthesizer__play_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.event;
      C.JSArray_methods.remove$1(this.$this.notes, t1);
      t2 = t1.chain;
      if (t2 != null) {
        t2.free = true;
        t1.chain = null;
      }
      t1 = this._box_0;
      t2 = t1.gain;
      if (t2 != null) {
        t2.disconnect();
        t1.gain = null;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  L.Synthesizer__schedule_closure.prototype = {
    call$0: function() {
      var t1, t2, _i;
      for (t1 = this.nodes, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].disconnect();
      t1 = this.event;
      C.JSArray_methods.remove$1(this.$this.notes, t1);
      t2 = t1.chain;
      if (t2 != null) {
        t2.free = true;
        t1.chain = null;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  L.Synthesizer_pitchBend_closure.prototype = {
    call$1: function($event) {
      return type$.SynthEvent._as($event).pitchBend$1(this.cents);
    },
    $signature: 77
  };
  L.Synthesizer_loadAudioBuffer_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$Synthesizer_loadAudioBuffer_closure(type$.ProgressEvent._as(e));
    },
    $call$body$Synthesizer_loadAudioBuffer_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, buffer;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.context;
              $async$goto = 2;
              return P._asyncAwait((t1 && C.AudioContext_methods).decodeAudioData$1(t1, type$.ByteBuffer._as(W._convertNativeToDart_XHR_Response($async$self.request.response))), $async$call$1);
            case 2:
              // returning from await.
              buffer = $async$result;
              if (buffer != null) {
                t1 = $async$self.name;
                $.$get$Synthesizer_sounds().$indexSet(0, t1, buffer);
                P.Function_apply($async$self.onLoaded, [t1], null);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 12
  };
  L.Synthesizer_loadAudioBuffer_closure0.prototype = {
    call$1: function(e) {
      type$.ProgressEvent._as(e);
      return P.print("BufferLoader: XHR error");
    },
    $signature: 24
  };
  L.Synthesizer_loadCustomSound_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$Synthesizer_loadCustomSound_closure(type$.ProgressEvent._as(e));
    },
    $call$body$Synthesizer_loadCustomSound_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, buffer;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.context;
              $async$goto = 2;
              return P._asyncAwait((t1 && C.AudioContext_methods).decodeAudioData$1(t1, type$.ByteBuffer._as(W._convertNativeToDart_XHR_Response($async$self.request.response))), $async$call$1);
            case 2:
              // returning from await.
              buffer = $async$result;
              if (buffer != null)
                $.$get$Synthesizer_sounds().$indexSet(0, $async$self.url, buffer);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 12
  };
  L.Synthesizer_loadCustomSound_closure0.prototype = {
    call$1: function(e) {
      type$.ProgressEvent._as(e);
      return P.print("BufferLoader: XHR error");
    },
    $signature: 24
  };
  Y.Trace.prototype = {
    get$length: function(_) {
      return this.trace.length;
    },
    $index: function(_, index) {
      return C.JSArray_methods.$index(this.trace, H._asIntNullable(index));
    },
    advance$0: function(_) {
      var t1 = this.bug,
        t2 = this.trace,
        t3 = t2.length;
      if (t1 < t3)
        t1 = this.bug = t1 + 1;
      return t1 < t3 ? t2[t1] : null;
    },
    advanceToEvent$1: function(t) {
      var t1, t2, i, t3;
      for (t1 = this.trace, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (t3 === t) {
          this.bug = i;
          if (i >= t1.length)
            return H.ioore(t1, i);
          return t3;
        }
      }
      this.bug = 0;
      return null;
    },
    advanceToBeat$1: function(beats) {
      var t1, t2, target, _i, t, t3, t4;
      for (t1 = this.trace, t2 = t1.length, target = null, _i = 0; _i < t2; ++_i) {
        t = t1[_i];
        if (t.command === "trace") {
          t3 = t.time;
          if (typeof t3 !== "number")
            return t3.$le();
          if (typeof beats !== "number")
            return H.iae(beats);
          if (t3 <= beats) {
            if (target != null) {
              t4 = target.time;
              if (typeof t4 !== "number")
                return H.iae(t4);
              t4 = t3 > t4;
              t3 = t4;
            } else
              t3 = true;
            if (t3)
              target = t;
          }
        }
      }
      return this.advanceToEvent$1(target);
    },
    addEvent$1: function(jsonString) {
      var json, cmd, t1, t2, exception, _this = this, _s4_ = "note", $event = null;
      try {
        json = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, jsonString, null));
        $event = Y.TraceEvent$fromJSON(json);
        C.JSArray_methods.add$1(_this.trace, $event);
        cmd = $event.command;
        if (J.$eq$(cmd, "trace"))
          _this._timer = $event.time;
        else if (J.$eq$(cmd, "play")) {
          t1 = $event.time;
          t2 = $event.duration;
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return H.iae(t2);
          _this._beats = Math.max(t1 + t2, _this._beats);
          if (_this._minNote < 0 || type$.Note._as($event.params.$index(0, _s4_))._note < _this._minNote)
            _this._minNote = type$.Note._as($event.params.$index(0, _s4_))._note;
          _this._maxNote = Math.max(_this._maxNote, type$.Note._as($event.params.$index(0, _s4_))._note);
        } else if (J.$eq$(cmd, "sound")) {
          t1 = $event.time;
          t2 = $event.duration;
          if (typeof t1 !== "number")
            return t1.$add();
          if (typeof t2 !== "number")
            return H.iae(t2);
          _this._beats = Math.max(t1 + t2, _this._beats);
        }
      } catch (exception) {
        H.unwrapException(exception);
        P.print("error decoding trace event: " + jsonString);
      }
    },
    toJSON$0: function() {
      var t1, t2, _i, json = [];
      for (t1 = this.trace, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        json.push(t1[_i].toJSON$0());
      return json;
    }
  };
  Y.TraceEvent.prototype = {
    $index: function(_, key) {
      return this.params.$index(0, H._asStringNullable(key));
    },
    $indexSet: function(_, key, value) {
      this.params.$indexSet(0, key, value);
    },
    TraceEvent$fromJSON$1: function(json) {
      var t3, note, key, pitch, sustain, _this = this, _s6_ = "params",
        _s8_ = "velocity",
        t1 = J.getInterceptor$asx(json),
        t2 = t1.$index(json, "command");
      _this.command = t2 == null ? "" : J.toString$0$(t2);
      _this.time = B.toNum0(t1.$index(json, "time"), 0);
      _this.duration = B.toNum0(t1.$index(json, "duration"), 1);
      if (type$.Map_dynamic_dynamic._is(t1.$index(json, _s6_)))
        for (t2 = J.get$iterator$ax(type$.Iterable_dynamic._as(J.get$keys$x(t1.$index(json, _s6_)))), t3 = _this.params, note = null; t2.moveNext$0();) {
          key = H._asStringNullable(t2.get$current(t2));
          if (key === "note") {
            note = new F.Note();
            note._note = Math.max(0, H.checkNum(B.toNum0(J.$index$asx(t1.$index(json, _s6_), key), 60)));
            note.duration = _this.duration;
            t3.$indexSet(0, key, note);
          } else if (key === "sound") {
            pitch = B.toNum0(J.$index$asx(t1.$index(json, _s6_), "pitch"), 60);
            if (typeof pitch !== "number")
              return H.iae(pitch);
            note = new F.Note();
            note._note = Math.max(0, 60 + pitch);
            note.duration = _this.duration;
            t3.$indexSet(0, "note", note);
            t3.$indexSet(0, key, J.$index$asx(t1.$index(json, _s6_), key));
          } else
            t3.$indexSet(0, key, J.$index$asx(t1.$index(json, _s6_), key));
        }
      else
        note = null;
      t1 = note != null;
      if (t1 && _this.params.containsKey$1(0, _s8_))
        note._velocity = J.clamp$2$n(B.toInt1(_this.params.$index(0, _s8_), 100), 0, 127);
      if (t1 && _this.params.containsKey$1(0, "sustain")) {
        sustain = B.toNum0(_this.params.$index(0, "sustain"), 0);
        _this.duration = note.duration = Math.max(H.checkNum(note.duration), H.checkNum(sustain));
      }
    },
    toJSON$0: function() {
      var t2, t3, t4, t5, _this = this,
        t1 = type$.dynamic,
        json = P.LinkedHashMap_LinkedHashMap$_literal(["command", _this.command, "time", _this.time, "duration", _this.duration, "params", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)], type$.String, t1);
      for (t1 = _this.params, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2), t3 = type$.Map_dynamic_dynamic, t4 = type$.Note; t2.moveNext$0();) {
        t5 = t2.get$current(t2);
        if (t5 === "note")
          J.$indexSet$ax(t3._as(json.$index(0, "params")), t5, t4._as(t1.$index(0, "note"))._note);
        else
          J.$indexSet$ax(t3._as(json.$index(0, "params")), t5, t1.$index(0, t5));
      }
      return json;
    }
  };
  R.UserAccounts_login_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
      this.datastore.loginWithGoogle$0();
    },
    $signature: 0
  };
  R.UserAccounts_login_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
      C.Window_methods.open$2(window, this.datastore.host + "/join", "_blank");
    },
    $signature: 0
  };
  R.UserAccounts_login_closure1.prototype = {
    call$1: function(e) {
      var t1;
      type$.Event._as(e);
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(this.dialog.querySelectorAll(".message"), type$._FrozenElementList_Element)).add$1(0, "hidden");
    },
    $signature: 2
  };
  R.UserAccounts_login_closure2.prototype = {
    call$1: function(e) {
      J.preventDefault$0$x(e);
      R.UserAccounts__onSubmit(this.dialog, this.datastore);
      return false;
    },
    $signature: 69
  };
  A.TunePadCell.prototype = {
    get$gadgetTemplate: function() {
      return "gadget-template";
    },
    TunePadCell$2: function(gadget, datastore) {
      var t2, _this = this,
        _s9_ = "minimized",
        t1 = _this.gadget;
      if (!t1.idata.containsKey$1(0, _s9_))
        t1.idata.$indexSet(0, _s9_, false);
      t1 = _this.datastore;
      t2 = t1._updated_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$_cell$_onUpdated());
      t2 = t1._deleted_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$_cell$_onDeleted());
      t2 = t1._reordered_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$_onReordered());
      t1 = t1._message_stream;
      new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$_onMessage());
    },
    insert$2: function(_, container, displayOrder) {
      var t3, t4, t5, _this = this,
        _s12_ = ".gadget-name",
        _s16_ = "querySelectorAll",
        t1 = "#" + _this.get$gadgetTemplate(),
        t2 = document,
        template = type$.TemplateElement._as(t2.querySelector(t1));
      if (template == null)
        return;
      t1 = t2.createElement("div");
      t2 = _this.gadget;
      t1.id = "gadget-" + H.S(t2.id);
      t1.className = "gadget-container " + H.S(t2.instrument);
      t3 = t1.style;
      t4 = "" + displayOrder;
      t3.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, "order"), t4, "");
      _this.root = t1;
      t1.appendChild(template.content.cloneNode(true));
      container.appendChild(_this.root);
      t1 = _this.root;
      t4 = type$.Element;
      t1.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      t5 = type$.ElementList_Element;
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)), false, "blur", type$._ElementListEventStreamImpl_Event).listen$1(new A.TunePadCell_insert_closure(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)), false, "keypress", type$._ElementListEventStreamImpl_KeyboardEvent).listen$1(new A.TunePadCell_insert_closure0(_this));
      _this._setName$1(t2.name);
      _this.collaborators = B.UserList$(_this.datastore, "#gadget-" + H.S(t2.id) + " .collaborators", false);
      if (H.boolConversionCheck(H._asBoolNullable(t2.idata.$index(0, "minimized"))))
        _this._collapse$0();
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      t2 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t1.querySelectorAll(".expand-cell-button"), t3)), false, "click", t2).listen$1(new A.TunePadCell_insert_closure1(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t1.querySelectorAll(".collapse-cell-button"), t3)), false, "click", t2).listen$1(new A.TunePadCell_insert_closure2(_this));
    },
    _collapse$0: function() {
      var t3,
        _s16_ = "querySelectorAll",
        _s6_ = "hidden",
        t1 = this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".expand-cell-button"), t3)).remove$1(0, _s6_);
      t1 = this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".collapse-cell-button"), t3)).add$1(0, _s6_);
      t1 = this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".cell-contents"), t3)).add$1(0, _s6_);
    },
    _expand$0: function() {
      var t3,
        _s16_ = "querySelectorAll",
        _s6_ = "hidden",
        t1 = this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".expand-cell-button"), t3)).add$1(0, _s6_);
      t1 = this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".collapse-cell-button"), t3)).remove$1(0, _s6_);
      t1 = this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".cell-contents"), t3)).remove$1(0, _s6_);
    },
    _cell$_onUpdated$1: function($event) {
      var t1, _this = this;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget && J.$eq$(t1.id, _this.gadget.id)) {
        t1 = _this.gadget;
        t1.load$1(0, $event.target.save$0(0));
        _this._setName$1(t1.name);
        if (H.boolConversionCheck(H._asBoolNullable(t1.idata.$index(0, "minimized"))))
          _this._collapse$0();
        else
          _this._expand$0();
        _this.onUpdated$1($event);
      }
    },
    _cell$_onDeleted$1: function($event) {
      var t1;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget && J.$eq$(t1.id, this.gadget.id))
        this.onDeleted$1($event);
    },
    _onReordered$1: function($event) {
      var t1, order, t2;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget && J.$eq$(t1.id, this.gadget.id)) {
        order = B.toInt0($event.payload, -1);
        if (typeof order !== "number")
          return order.$ge();
        if (order >= 0) {
          t1 = this.root.style;
          t2 = "" + order;
          t1.toString;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "order"), t2, "");
        }
      }
    },
    _onMessage$1: function($event) {
      var t1;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget && J.$eq$(t1.id, this.gadget.id)) {
        if ($event.remote && $event.type === "editor-delta")
          this.onCollaboratorEdit$1(type$.Map_dynamic_dynamic._as($event.payload));
        this.onMessage$1(0, $event);
      }
    },
    onEditorUpdate$1: function(change) {
      this.datastore.message$3(0, this.gadget, "editor-delta", change);
    },
    onEditorFocus$0: function() {
      var t2,
        t1 = this.collaborators;
      t1.focused = true;
      t2 = t1.datastore;
      t2.message$3(0, t2.user, "userlist-present", t1.listSelector);
    },
    onEditorBlur$0: function() {
      this.collaborators.focused = false;
    },
    _setName$1: function($name) {
      var nameField = type$.InputElement._as(this.root.querySelector(".gadget-name"));
      if (nameField != null)
        nameField.value = $name;
    }
  };
  A.TunePadCell_insert_closure.prototype = {
    call$1: function(e) {
      var t1, nameField, t2;
      type$.Event._as(e);
      t1 = this.$this;
      nameField = type$.InputElement._as(t1.root.querySelector(".gadget-name"));
      if (nameField != null) {
        t2 = t1.gadget;
        t2.name = nameField.value;
        t1.datastore.update$1(0, t2);
      }
    },
    $signature: 2
  };
  A.TunePadCell_insert_closure0.prototype = {
    call$1: function(e) {
      if (type$.KeyboardEvent._as(e).keyCode === 13)
        J.blur$0$x(this.$this.root.querySelector(".gadget-name"));
    },
    $signature: 13
  };
  A.TunePadCell_insert_closure1.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1._expand$0();
      t2 = t1.gadget;
      t2.idata.$indexSet(0, "minimized", false);
      t1.datastore.update$1(0, t2);
    },
    $signature: 0
  };
  A.TunePadCell_insert_closure2.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1._collapse$0();
      t2 = t1.gadget;
      t2.idata.$indexSet(0, "minimized", true);
      t1.datastore.update$1(0, t2);
    },
    $signature: 0
  };
  A._TunePadCell_Object_EditorListener.prototype = {};
  S.Datastore.prototype = {
    Datastore$2: function(host, wss) {
      var t1, t2, _this = this;
      _this.wid = K.Uuid$().v1$0();
      t1 = W.WebSocket_WebSocket(wss);
      _this.socket = t1;
      t2 = type$.void_Function_MessageEvent._as(_this.get$_handleSocketMessage());
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "message", t2, false, type$.MessageEvent);
      t2 = type$.void_Function_Event;
      t1 = type$.Event;
      W._EventStreamSubscription$(_this.socket, "error", t2._as(new S.Datastore_closure()), false, t1);
      W._EventStreamSubscription$(_this.socket, "open", t2._as(new S.Datastore_closure0(wss)), false, t1);
    },
    connect$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, data, e, t1, exception, $async$exception;
      var $async$connect$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait($async$self._sendJSON$1("/api/connect/"), $async$connect$0);
            case 6:
              // returning from await.
              data = $async$result;
              if (type$.Map_dynamic_dynamic._is(data) && H.boolConversionCheck(J.containsKey$1$x(data, "id"))) {
                t1 = J.$index$asx(data, "id");
                t1 = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                t1.type = "user";
                $async$self.user = t1;
                t1.load$1(0, data);
                $async$self._login_stream.add$1(0, new S.DatastoreEvent($async$self.user, "login", false, null));
              } else
                P.print("No existing user session");
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              P.print("Error connecting " + H.S(e));
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$connect$0, $async$completer);
    },
    login$3: function(username, email, password) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, result;
      var $async$login$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.String;
              $async$goto = 2;
              return P._asyncAwait($async$self._sendJSON$3("/api/login/", "POST", P.LinkedHashMap_LinkedHashMap$_literal(["username", username, "email", email, "password", password], t1, t1)), $async$login$3);
            case 2:
              // returning from await.
              result = $async$result;
              if (type$.Map_dynamic_dynamic._is(result) && H.boolConversionCheck(J.containsKey$1$x(result, "id"))) {
                $async$self._logout_stream.add$1(0, new S.DatastoreEvent($async$self.user, "logout", false, null));
                t1 = J.$index$asx(result, "id");
                t1 = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                t1.type = "user";
                $async$self.user = t1;
                t1.load$1(0, result);
                $async$self._login_stream.add$1(0, new S.DatastoreEvent($async$self.user, "login", false, null));
              } else
                throw H.wrapException(S.DatastoreException$(401));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$login$3, $async$completer);
    },
    loginWithGoogle$0: function() {
      $.$get$_context().$indexSet(0, "onFirebaseLogin", new S.Datastore_loginWithGoogle_closure(this));
    },
    logout$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.User),
        $async$returnValue, $async$self = this, t1;
      var $async$logout$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/logout/"), $async$logout$0);
            case 3:
              // returning from await.
              $async$self._logout_stream.add$1(0, new S.DatastoreEvent($async$self.user, "logout", false, null));
              t1 = N.User$anonymous();
              $async$self.user = t1;
              $async$self._login_stream.add$1(0, new S.DatastoreEvent(t1, "login", false, null));
              $async$returnValue = $async$self.user;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$logout$0, $async$completer);
    },
    register$3: function(_, username, email, password) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.User),
        $async$returnValue, $async$self = this, t1, result;
      var $async$register$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.String;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/register/", "POST", P.LinkedHashMap_LinkedHashMap$_literal(["username", email, "email", email, "password", password], t1, t1)), $async$register$3);
            case 3:
              // returning from await.
              result = $async$result;
              t1 = J.$index$asx(result, "id");
              t1 = new N.User(C.C__JSRandom, t1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              t1.type = "user";
              $async$self.user = t1;
              t1.load$1(0, type$.Map_dynamic_dynamic._as(result));
              $async$self._login_stream.add$1(0, new S.DatastoreEvent($async$self.user, "login", false, null));
              $async$returnValue = $async$self.user;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$register$3, $async$completer);
    },
    create$1: function(_, object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, type, data, result;
      var $async$create$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              object.set$username(0, $async$self.user.displayName);
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/", "POST", object.save$0(0)), $async$create$1);
            case 3:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              if (result != null) {
                $async$self._created_stream.add$1(0, new S.DatastoreEvent(result, "created", false, null));
                $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "created", true, null));
              }
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$create$1, $async$completer);
    },
    retrieve$1: function(object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, type, data;
      var $async$retrieve$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/" + type + "/" + H.S(object.id) + "/"), $async$retrieve$1);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              J.$indexSet$ax(data, "type", type);
              $async$returnValue = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$retrieve$1, $async$completer);
    },
    update$1: function(_, object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, data, result, type;
      var $async$update$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              object.set$username(0, $async$self.user.displayName);
              $async$goto = object.get$hasValidId() ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/" + H.S(object.id) + "/", "PUT", object.save$0(0)), $async$update$1);
            case 6:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              result = object;
            case 4:
              // join
              if (result != null) {
                $async$self._updated_stream.add$1(0, new S.DatastoreEvent(result, "updated", false, null));
                $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "updated", true, null));
              }
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$update$1, $async$completer);
    },
    delete$1: function(_, object) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.DataModel),
        $async$returnValue, $async$self = this, result, type, data;
      var $async$delete$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type = object.type;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/" + type + "/" + H.S(object.id) + "/", "DELETE", object.save$0(0)), $async$delete$1);
            case 3:
              // returning from await.
              data = $async$result;
              J.$indexSet$ax(data, "type", type);
              result = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(data));
              if (result != null) {
                $async$self._deleted_stream.add$1(0, new S.DatastoreEvent(result, "deleted", false, null));
                $async$self._broadcastEvent$1(new S.DatastoreEvent(result, "deleted", true, null));
              }
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$delete$1, $async$completer);
    },
    message$3: function(_, object, message, payload) {
      this._message_stream.add$1(0, new S.DatastoreEvent(object, "message-" + message, false, payload));
      this._broadcastEvent$1(new S.DatastoreEvent(object, "message-" + message, true, payload));
    },
    getUserProjects$1: function(ordering) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_Project),
        $async$returnValue, $async$self = this, results, t1, t2, t3, t4, t5, t6, t7, p, t8, colors, t9, data;
      var $async$getUserProjects$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 3;
                return P._asyncAwait($async$self._sendJSON$1("/api/user-projects/?sort=" + H.S(ordering)), $async$getUserProjects$1);
              case 3:
                // returning from await.
                data = $async$result;
                if (data == null)
                  throw H.wrapException(S.DatastoreException$(404));
                results = H.setRuntimeTypeInfo([], type$.JSArray_Project);
                if (type$.List_dynamic._is(data))
                  for (t1 = J.get$iterator$ax(data), t2 = type$.Map_dynamic_dynamic, t3 = type$.JSArray_int, t4 = type$.ClockSubscriber, t5 = type$.Metronome, t6 = type$.JSArray_String, t7 = type$.dynamic; t1.moveNext$0();) {
                    p = t1.get$current(t1);
                    if (t2._is(p)) {
                      t8 = J.$index$asx(p, "id");
                      t8 = new K.Project(new E.PlayClock(new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], t3), "C major"), P.LinkedHashSet_LinkedHashSet(t4), P.LinkedHashSet_LinkedHashSet(t4), P.LinkedHashSet_LinkedHashSet(t5)), H.setRuntimeTypeInfo([], t6), P.LinkedHashMap_LinkedHashMap$_empty(t7, t7), t8, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                      t8.type = "projects";
                      t8.name = "New Jam Session";
                      colors = ["black", "#46d753", "#5bc6fc", "#934ee0", "#aecad5", "#f067d1", "#fc3e74", "#fd7d23", "#fed330"];
                      t9 = C.C__JSRandom.nextInt$1(9);
                      if (t9 < 0 || t9 >= 9) {
                        $async$returnValue = H.ioore(colors, t9);
                        // goto return
                        $async$goto = 1;
                        break $async$outer;
                      }
                      t8.color = colors[t9];
                      t8.load$1(0, p);
                      C.JSArray_methods.add$1(results, t8);
                    }
                  }
                $async$returnValue = results;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$getUserProjects$1, $async$completer);
    },
    getProjectGadgets$1: function(project) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_Gadget),
        $async$returnValue, $async$self = this, data, t2, t3, g, t4, results, t1;
      var $async$getProjectGadgets$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              results = H.setRuntimeTypeInfo([], type$.JSArray_Gadget);
              t1 = project.id;
              if (t1 == null || J.$le$n(t1, 0)) {
                $async$returnValue = results;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/gadgets/project/" + H.S(project.id) + "/"), $async$getProjectGadgets$1);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              if (type$.List_dynamic._is(data))
                for (t1 = J.get$iterator$ax(data), t2 = type$.Map_dynamic_dynamic, t3 = type$.JsLinkedHashMap_dynamic_dynamic; t1.moveNext$0();) {
                  g = t1.get$current(t1);
                  if (t2._is(g)) {
                    t4 = J.$index$asx(g, "id");
                    t4 = new L.Gadget(new H.JsLinkedHashMap(t3), t4, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                    t4.type = "gadgets";
                    t4.name = "New Track";
                    t4.load$1(0, g);
                    C.JSArray_methods.add$1(results, t4);
                  }
                }
              $async$returnValue = results;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getProjectGadgets$1, $async$completer);
    },
    addProjectGadget$3: function(project, gadget, ordering) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.int),
        $async$returnValue, $async$self = this, data;
      var $async$addProjectGadget$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$2("/api/project-gadgets/" + H.S(project.id) + "/" + H.S(gadget.id) + "/" + ordering + "/", "POST"), $async$addProjectGadget$3);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              $async$returnValue = B.toInt0(data, 0);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$addProjectGadget$3, $async$completer);
    },
    deleteProjectGadget$2: function(project, gadget) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.int),
        $async$returnValue, $async$self = this, data;
      var $async$deleteProjectGadget$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$2("/api/project-gadgets/" + H.S(project.id) + "/" + H.S(gadget.id) + "/", "DELETE"), $async$deleteProjectGadget$2);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              $async$returnValue = B.toInt0(data, 0);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$deleteProjectGadget$2, $async$completer);
    },
    reorderProjectGadgets$2: function(project, ordering) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_Gadget),
        $async$returnValue, $async$self = this, gadgets, t1, t2, t3, order, t4, t5;
      var $async$reorderProjectGadgets$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$3("/api/project-gadgets/reorder/" + H.S(project.id) + "/", "PUT", ordering), $async$reorderProjectGadgets$2);
            case 3:
              // returning from await.
              $async$goto = 4;
              return P._asyncAwait($async$self.getProjectGadgets$1(project), $async$reorderProjectGadgets$2);
            case 4:
              // returning from await.
              gadgets = $async$result;
              for (t1 = J.get$iterator$ax(gadgets), t2 = $async$self._reordered_stream, t3 = H._instanceType(t2)._precomputed1, order = 0; t1.moveNext$0();) {
                t4 = t1.get$current(t1);
                t5 = t3._as(new S.DatastoreEvent(t4, "reordered", false, order));
                if (!t2.get$_mayAddEvent())
                  H.throwExpression(t2._addEventError$0());
                t2._sendData$1(t5);
                $async$self._broadcastEvent$1(new S.DatastoreEvent(t4, "reordered", true, order));
                ++order;
              }
              $async$returnValue = gadgets;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$reorderProjectGadgets$2, $async$completer);
    },
    getUserRecordings$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_Recording),
        $async$returnValue, $async$self = this, results, t1, t2, t3, t4, t5, rec, t6, t7, t8, data;
      var $async$getUserRecordings$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/recordings/"), $async$getUserRecordings$0);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              results = H.setRuntimeTypeInfo([], type$.JSArray_Recording);
              if (type$.List_dynamic._is(data))
                for (t1 = J.get$iterator$ax(data), t2 = type$.Map_dynamic_dynamic, t3 = type$.JsLinkedHashMap_String_num, t4 = type$.JSArray_List_Float32List, t5 = type$.List_num; t1.moveNext$0();) {
                  rec = t1.get$current(t1);
                  if (t2._is(rec)) {
                    t6 = H._asIntNullable(J.$index$asx(rec, "id"));
                    t7 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t4), P.ListQueue$(t5));
                    t7.reshape$2(1, 44100);
                    t8 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t4), P.ListQueue$(t5));
                    t8.reshape$2(1, 44100);
                    t6 = new R.Recording(t7, t8, new H.JsLinkedHashMap(t3), t6, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                    t6.name = "My Recording";
                    t6.type = "recording";
                    t6.load$1(0, rec);
                    C.JSArray_methods.add$1(results, t6);
                  }
                }
              $async$returnValue = results;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getUserRecordings$0, $async$completer);
    },
    getPublicSynthPatches$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_SynthPatch),
        $async$returnValue, $async$self = this;
      var $async$getPublicSynthPatches$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._getPatches$1("/api/patches/"), $async$getPublicSynthPatches$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getPublicSynthPatches$0, $async$completer);
    },
    _getPatches$1: function(api_endpoint) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_SynthPatch),
        $async$returnValue, $async$self = this, results, t1, t2, t3, p, t4, data;
      var $async$_getPatches$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1(api_endpoint), $async$_getPatches$1);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(S.DatastoreException$(404));
              results = H.setRuntimeTypeInfo([], type$.JSArray_SynthPatch);
              if (type$.List_dynamic._is(data))
                for (t1 = J.get$iterator$ax(data), t2 = type$.Map_dynamic_dynamic, t3 = type$.dynamic; t1.moveNext$0();) {
                  p = t1.get$current(t1);
                  if (t2._is(p)) {
                    t4 = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t3, t3), H._asIntNullable(J.$index$asx(p, "id")), new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
                    t4.voice = "My Patch";
                    t4.type = "patch";
                    t4.load$1(0, p);
                    C.JSArray_methods.add$1(results, t4);
                  }
                }
              $async$returnValue = results;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_getPatches$1, $async$completer);
    },
    publishTrack$2: function(gadget, preview) {
      return this.publishTrack$body$Datastore(gadget, preview);
    },
    publishTrack$body$Datastore: function(gadget, preview) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_dynamic_dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, data, result, t1, exception, $async$exception, $async$temp1;
      var $async$publishTrack$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!gadget.$public) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = type$.dynamic;
              data = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
              J.$indexSet$ax(data, "gadget_id", gadget.id);
              J.$indexSet$ax(data, "name", gadget.name);
              J.$indexSet$ax(data, "beats", gadget.beats);
              J.$indexSet$ax(data, "voice", H.S(gadget.idata.$index(0, "patch")));
              J.$indexSet$ax(data, "instrument", gadget.instrument);
              J.$indexSet$ax(data, "tempo", gadget.idata.$index(0, "tempo"));
              J.$indexSet$ax(data, "meter", gadget.idata.$index(0, "meter"));
              J.$indexSet$ax(data, "key", gadget.idata.$index(0, "key"));
              J.$indexSet$ax(data, "description", gadget.description);
              J.$indexSet$ax(data, "code", gadget.idata.$index(0, "python"));
              J.$indexSet$ax(data, "line_count", J.split$1$s(gadget.idata.$index(0, "python"), "\n").length);
              J.$indexSet$ax(data, "user_id", J.toString$0$($async$self.user.id));
              J.$indexSet$ax(data, "username", $async$self.user.displayName);
              J.$indexSet$ax(data, "preview", preview);
              J.$indexSet$ax(data, "public", true);
              J.$indexSet$ax(data, "created", gadget.created.toString$0(0));
              J.$indexSet$ax(data, "modified", new P.DateTime(Date.now(), false).toString$0(0));
              $async$handler = 4;
              $async$temp1 = type$.Map_dynamic_dynamic;
              $async$goto = 7;
              return P._asyncAwait($async$self._sendJSON$2("/api/library/lookup/" + H.S(gadget.id), "GET"), $async$publishTrack$2);
            case 7:
              // returning from await.
              result = $async$temp1._as($async$result);
              J.$indexSet$ax(data, "id", J.$index$asx(result, "id"));
              J.$indexSet$ax(data, "user_id", J.$index$asx(result, "user_id"));
              J.$indexSet$ax(data, "like_count", J.$index$asx(result, "like_count"));
              J.$indexSet$ax(data, "star_count", J.$index$asx(result, "star_count"));
              J.$indexSet$ax(data, "remix_count", J.$index$asx(result, "remix_count"));
              $async$temp1 = type$.FutureOr_Map_dynamic_dynamic;
              $async$goto = 8;
              return P._asyncAwait($async$self._sendJSON$3("/api/library/" + H.S(J.$index$asx(result, "id")), "PUT", data), $async$publishTrack$2);
            case 8:
              // returning from await.
              t1 = $async$temp1._as($async$result);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              $async$temp1 = type$.FutureOr_Map_dynamic_dynamic;
              $async$goto = 9;
              return P._asyncAwait($async$self._sendJSON$3("/api/library", "POST", data), $async$publishTrack$2);
            case 9:
              // returning from await.
              t1 = $async$temp1._as($async$result);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$publishTrack$2, $async$completer);
    },
    starTrack$1: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$starTrack$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/library/star/" + H.S(id)), $async$starTrack$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$starTrack$1, $async$completer);
    },
    unstarTrack$1: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$unstarTrack$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/library/unstar/" + H.S(id)), $async$unstarTrack$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$unstarTrack$1, $async$completer);
    },
    remixTrack$1: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$remixTrack$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/library/remix/" + H.S(id)), $async$remixTrack$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$remixTrack$1, $async$completer);
    },
    starSound$1: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$starSound$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/recordings/star/" + H.S(id)), $async$starSound$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$starSound$1, $async$completer);
    },
    unstarSound$1: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$unstarSound$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/recordings/unstar/" + H.S(id)), $async$unstarSound$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$unstarSound$1, $async$completer);
    },
    searchSoundLibrary$2: function(filter, sort) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_dynamic),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$searchSoundLibrary$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = type$.FutureOr_List_dynamic;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/recordings/search?filter=" + C.JSArray_methods.join$1(filter, ",") + "&sort=" + H.S(sort)), $async$searchSoundLibrary$2);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$searchSoundLibrary$2, $async$completer);
    },
    searchTrackLibrary$2: function(filter, sort) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.List_dynamic),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$searchTrackLibrary$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = type$.FutureOr_List_dynamic;
              $async$goto = 3;
              return P._asyncAwait($async$self._sendJSON$1("/api/library/search?filter=" + C.JSArray_methods.join$1(filter, ",") + "&sort=" + H.S(sort)), $async$searchTrackLibrary$2);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$searchTrackLibrary$2, $async$completer);
    },
    _sendJSON$3: function(url, method, data) {
      return this._sendJSON$body$Datastore(url, method, data);
    },
    _sendJSON$2: function(url, method) {
      return this._sendJSON$3(url, method, null);
    },
    _sendJSON$1: function(url) {
      return this._sendJSON$3(url, "GET", null);
    },
    _sendJSON$body$Datastore: function(url, method, data) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, request, e, t1, exception, $async$exception;
      var $async$_sendJSON$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(W.HttpRequest_request($async$self.host + url, method, null, null, C.C_JsonCodec.encode$2$toEncodable(data, null), true), $async$_sendJSON$3);
            case 7:
              // returning from await.
              request = $async$result;
              t1 = C.C_JsonCodec.decode$2$reviver(0, request.responseText, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.ProgressEvent._is(t1)) {
                e = t1;
                throw H.wrapException(S.DatastoreException$(type$.HttpRequest._as(J.get$target$x(e)).status));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_sendJSON$3, $async$completer);
    },
    _broadcastEvent$1: function($event) {
      var path,
        t1 = this.socket.readyState;
      if (t1 === 1) {
        path = J.$add$ansx(window.location.pathname, window.location.hash);
        t1 = type$.dynamic;
        this.socket.send(C.C_JsonCodec.encode$2$toEncodable(P.LinkedHashMap_LinkedHashMap$_literal(["action", "datastore-event", "clientId", this.wid, "path", path, "event", P.LinkedHashMap_LinkedHashMap$_literal(["target", $event.target.save$0(0), "type", $event.type, "remote", $event.remote, "payload", $event.payload], t1, t1)], type$.String, type$.Object), null));
      }
    },
    _handleSocketMessage$1: function(message) {
      var data, action, path, mypath, $event, t1, exception, _this = this;
      try {
        t1 = type$.Map_dynamic_dynamic;
        data = t1._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(J.get$data$x(message)), null));
        action = H._asStringNullable(J.$index$asx(data, "action"));
        path = H._asStringNullable(J.$index$asx(data, "path"));
        mypath = J.$add$ansx(window.location.pathname, window.location.hash);
        if (!J.$eq$(action, "datastore-event") || !J.$eq$(path, mypath))
          return;
        if (_this.wid === J.$index$asx(data, "clientId"))
          return;
        $event = S.DatastoreEvent$fromJson(t1._as(J.$index$asx(data, "event")));
        if ($event.target != null) {
          $event.remote = true;
          if (J.startsWith$1$s($event.type, "message-")) {
            $event.type = J.substring$1$s($event.type, 8);
            _this._message_stream.add$1(0, $event);
            return;
          }
          switch ($event.type) {
            case "created":
              _this._created_stream.add$1(0, $event);
              break;
            case "updated":
              _this._updated_stream.add$1(0, $event);
              break;
            case "deleted":
              _this._deleted_stream.add$1(0, $event);
              break;
            case "reordered":
              _this._reordered_stream.add$1(0, $event);
              break;
            case "login":
              _this._login_stream.add$1(0, $event);
              break;
            case "logout":
              _this._logout_stream.add$1(0, $event);
              break;
          }
        }
      } catch (exception) {
        H.unwrapException(exception);
        P.print("Invalid websocket message " + H.S(J.get$data$x(message)));
      }
    },
    set$user: function(user) {
      this.user = type$.User._as(user);
    }
  };
  S.Datastore_closure.prototype = {
    call$1: function(e) {
      P.print("Socket error: " + H.S(e));
    },
    $signature: 2
  };
  S.Datastore_closure0.prototype = {
    call$1: function(e) {
      P.print(this.wss + " opened.");
    },
    $signature: 2
  };
  S.Datastore_loginWithGoogle_closure.prototype = {
    call$1: function(jsonUserData) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, userData, t1, exception, $async$exception, $async$exception1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.$get$_context().$indexSet(0, "onFirebaseLogin", new S.Datastore_loginWithGoogle__closure());
              userData = type$.Map_dynamic_dynamic._as(C.C_JsonCodec.decode$2$reviver(0, H._asStringNullable(jsonUserData), null));
              $async$handler = 3;
              t1 = $async$self.$this;
              $async$goto = 6;
              return P._asyncAwait(t1.login$3("", H._asStringNullable(J.$index$asx(userData, "email")), "g00gl3"), $async$call$1);
            case 6:
              // returning from await.
              t1.user.photo = H._asStringNullable(J.$index$asx(userData, "photoURL"));
              t1.user.displayName = H._asStringNullable(J.$index$asx(userData, "displayName"));
              t1.user.email = H._asStringNullable(J.$index$asx(userData, "email"));
              t1._login_stream.add$1(0, new S.DatastoreEvent(t1.user, "login", false, null));
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              $async$handler = 8;
              t1 = $async$self.$this;
              $async$temp1 = t1;
              $async$goto = 11;
              return P._asyncAwait(t1.register$3(0, null, H._asStringNullable(J.$index$asx(userData, "email")), "g00gl3"), $async$call$1);
            case 11:
              // returning from await.
              $async$temp1.set$user($async$result);
              t1.user.photo = H._asStringNullable(J.$index$asx(userData, "photoURL"));
              t1.user.displayName = H._asStringNullable(J.$index$asx(userData, "displayName"));
              t1.user.email = H._asStringNullable(J.$index$asx(userData, "email"));
              $async$handler = 2;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception1 = $async$currentError;
              H.unwrapException($async$exception1);
              E.Dialog_message("Failed to login with Google account.", "", "OK");
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto uncaught
              $async$goto = 2;
              break;
            case 10:
              // after finally
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 43
  };
  S.Datastore_loginWithGoogle__closure.prototype = {
    call$1: function(data) {
    },
    $signature: 8
  };
  S.DataModel.prototype = {
    get$hasValidId: function() {
      var t1 = this.id;
      if (t1 != null)
        t1 = H._isInt(t1) && t1 <= 0;
      else
        t1 = true;
      return !t1;
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      return J.$eq$(this.id, t1.get$id(other)) && this.type === t1.get$type(other);
    },
    formatDateTime$1: function(d) {
      var m = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"],
        t1 = H.Primitives_getMonth(d) - 1;
      if (t1 < 0 || t1 >= 12)
        return H.ioore(m, t1);
      return m[t1] + " " + H.Primitives_getDay(d) + ", " + H.Primitives_getYear(d);
    },
    set$username: function(_, username) {
      this.username = H._asStringNullable(username);
    },
    get$id: function(receiver) {
      return this.id;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  S.DatastoreEvent.prototype = {
    DatastoreEvent$fromJson$1: function(json) {
      var t1, t2, _this = this;
      if (json == null)
        return;
      t1 = J.getInterceptor$asx(json);
      _this.target = S.DataModel_DataModel$fromJson(type$.Map_dynamic_dynamic._as(t1.$index(json, "target")));
      t2 = t1.$index(json, "type");
      _this.type = t2 == null ? "unknown" : J.toString$0$(t2);
      _this.remote = B.toBool(t1.$index(json, "remote"), true);
      _this.payload = t1.$index(json, "payload");
      if (_this.type === "unknown")
        _this.target = null;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  S.DatastoreException.prototype = {$isException: 1};
  X.PythonCell.prototype = {
    get$gadgetTemplate: function() {
      return "definitions-gadget-template";
    },
    get$default_code: function() {
      return "# Use this cell to define variables and functions for other tracks.\n# Import your definitions using this line of code:\n\n# from tunepad_" + H.S(this.gadget.id) + " import *\n\n\n";
    },
    PythonCell$3: function(gadget, datastore, clock) {
      var _s11_ = "show-output",
        t1 = type$.JSArray_String;
      this.compiler = new X.PythonCompiler(this, new S.Preprocessor(new H.JsLinkedHashMap(type$.JsLinkedHashMap_int_int), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1)));
      t1 = this.gadget;
      if (!t1.idata.containsKey$1(0, _s11_))
        t1.idata.$indexSet(0, _s11_, false);
    },
    insert$2: function(_, container, displayOrder) {
      var t2, t3, t4, t5, t6, el, code, _this = this,
        _s16_ = "querySelectorAll",
        _s14_ = "onEditorUpdate",
        t1 = {};
      _this.super$TunePadCell$insert(0, container, displayOrder);
      t2 = _this.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      t5 = type$.ElementList_Element;
      t6 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t2.querySelectorAll(".output-hint"), t4)), false, "mousedown", t6).listen$1(new X.PythonCell_insert_closure(_this));
      t2 = _this.root;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(t2.querySelectorAll(".output-container .close-button"), t4)), false, "click", t6).listen$1(new X.PythonCell_insert_closure0(_this));
      D.DropdownMenu_armMenu(_this.root.querySelector(".menu-button"), new X.PythonCell_insert_closure1(_this));
      el = type$.HtmlElement._as(_this.root.querySelector(".module-name"));
      if (el != null)
        J.setInnerHtml$1$x(el, "Module: tunepad_" + H.S(_this.gadget.id));
      t2 = _this.gadget;
      t3 = "#gadget-" + H.S(t2.id) + " .python-editor";
      t4 = new R.CodeMirror(t3, _this);
      el = document.querySelector(t3);
      if (el != null)
        el.parentElement;
      t5 = $.$get$_context();
      if (t5.$index(0, _s14_) == null) {
        t5.$indexSet(0, _s14_, R.codemirror_CodeMirror_onEditorUpdate$closure());
        t5.$indexSet(0, "onCursorActivity", R.codemirror_CodeMirror_onCursorActivity$closure());
        t5.$indexSet(0, "onFocus", R.codemirror_CodeMirror_onEditorFocus$closure());
        t5.$indexSet(0, "onBlur", R.codemirror_CodeMirror_onEditorBlur$closure());
      }
      $.$get$CodeMirror_editorUpdateMap().$indexSet(0, t3, t4.get$_codemirror$_onEditorUpdate());
      $.$get$CodeMirror_cursorActivityMap().$indexSet(0, t3, t4.get$_onCursorActivity());
      $.$get$CodeMirror_editorBlurMap().$indexSet(0, t3, t4.get$_onEditorBlur());
      $.$get$CodeMirror_editorFocusMap().$indexSet(0, t3, t4.get$_onEditorFocus());
      _this.editor = t4;
      code = H._asStringNullable(t2.idata.$index(0, "python"));
      t1.code = code;
      if (code == null || C.JSString_methods.trim$0(code).length === 0)
        t1.code = _this.get$default_code();
      P.Timer_Timer(C.Duration_100000, new X.PythonCell_insert_closure2(t1, _this));
      _this.updateView$1(false);
    },
    onUpdated$1: function($event) {
      this.updateView$1($event.remote);
    },
    onDeleted$1: function($event) {
    },
    onMessage$1: function(_, $event) {
    },
    updateView$1: function(remote) {
      var div, t2, _this = this,
        t1 = _this.gadget;
      if (B.toBool(t1.idata.$index(0, "show-output"), false))
        _this._showElement$1("output");
      else
        _this._hideElement$1("output");
      div = type$.DivElement._as(_this.root.querySelector(".gadget-info"));
      if (div != null) {
        t2 = _this.editor;
        t2.toString;
        C.DivElement_methods.setInnerHtml$1(div, "" + H._asStringNullable($.$get$_context().callMethod$2("getCode", [t2.id])).split("\n").length + " LINES");
      }
      if (remote) {
        t2 = _this.editor;
        t2._codemirror$_noEvents = true;
        t1 = H._asStringNullable(t1.idata.$index(0, "python"));
        $.$get$_context().callMethod$2("setCode", [t2.id, t1]);
        t2._codemirror$_dirty = true;
        _this.editor._codemirror$_noEvents = false;
      }
    },
    onCollaboratorEdit$1: function(change) {
      var t1 = this.editor;
      t1._codemirror$_noEvents = true;
      $.$get$_context().callMethod$2("replaceRange", [t1.id, C.C_JsonCodec.encode$2$toEncodable(change, null)]);
      t1._codemirror$_dirty = true;
      this.editor._codemirror$_noEvents = false;
    },
    getPythonModule$1: function(module) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, id, gadget, t1, exception, $async$exception, $async$temp1;
      var $async$getPythonModule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = module === "tunepad" ? 3 : 5;
              break;
            case 3:
              // then
              t1 = $.PythonCell_boilerplate;
              $async$returnValue = t1 == null ? "" : t1;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = J.startsWith$1$s(module, "tunepad_") ? 6 : 7;
              break;
            case 6:
              // then
              id = B.toInt0(C.JSString_methods.substring$1(module, 8), -1);
              t1 = id;
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$lt();
                // goto return
                $async$goto = 1;
                break;
              }
              if (t1 < 0) {
                $async$returnValue = "";
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 9;
              t1 = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), id, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              t1.type = "gadgets";
              t1.name = "New Track";
              $async$temp1 = type$.Gadget;
              $async$goto = 12;
              return P._asyncAwait($async$self.datastore.retrieve$1(t1), $async$getPythonModule$1);
            case 12:
              // returning from await.
              gadget = $async$temp1._as($async$result);
              if (gadget != null && gadget.idata.containsKey$1(0, "python")) {
                t1 = type$.FutureOr_String._as(gadget.idata.$index(0, "python"));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 2;
              // goto after finally
              $async$goto = 11;
              break;
            case 9:
              // catch
              $async$handler = 8;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error loading python module. Module not found.");
              // goto after finally
              $async$goto = 11;
              break;
            case 8:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 11:
              // after finally
            case 7:
              // join
            case 4:
              // join
              $async$returnValue = "";
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$getPythonModule$1, $async$completer);
    },
    onPythonDone$1: function(outputs) {
      var t3, out, out_count, output, t4, _this = this,
        _s12_ = ".output-hint",
        _s16_ = "querySelectorAll",
        t1 = _this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "visible");
      out = type$.PreElement._as(_this.root.querySelector(".output"));
      if (out != null)
        C.PreElement_methods.setInnerHtml$1(out, "--- PYTHON OUTPUT ---\n");
      for (t1 = J.get$iterator$ax(outputs), out_count = 0; t1.moveNext$0();) {
        output = t1.get$current(t1);
        if (output != null && typeof output == "string") {
          t4 = J.getInterceptor$s(output);
          if (!t4.startsWith$1(output, "**TRACE**"))
            if (t4.trim$0(output) !== "") {
              C.PreElement_methods.setInnerHtml$1(out, J.$add$ansx(out.innerHTML, t4.$add(output, "\n")));
              ++out_count;
            }
        }
      }
      if (out_count > 0) {
        t1 = _this.root;
        t1.toString;
        H.checkTypeBound(t2, t2, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).add$1(0, "visible");
        J.set$innerHtml$x(_this.root.querySelector(".output-count"), "" + out_count);
        P.Timer_Timer(C.Duration_3000000, new X.PythonCell_onPythonDone_closure(_this));
      }
    },
    compile$1: function(runWhenDone) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, t5, success, $async$temp1;
      var $async$compile$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $.PythonCell_boilerplate == null ? 3 : 4;
              break;
            case 3:
              // then
              $async$temp1 = $;
              $async$goto = 5;
              return P._asyncAwait(W.HttpRequest_getString("packages/compiler/python/boilerplate.py"), $async$compile$1);
            case 5:
              // returning from await.
              $async$temp1.PythonCell_boilerplate = $async$result;
            case 4:
              // join
              $async$goto = !$async$self.compiler._compiling ? 6 : 7;
              break;
            case 6:
              // then
              t1 = $async$self.editor;
              t1.toString;
              t2 = $.$get$_context();
              t2.callMethod$2("clearErrorMarkers", [t1.id]);
              t2.callMethod$2("clearTraceMarkers", [$async$self.editor.id]);
              t1 = $async$self.root;
              t3 = type$.Element;
              t1.toString;
              H.checkTypeBound(t3, t3, "T", "querySelectorAll");
              t4 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".error-container"), t4)).add$1(0, "hidden");
              t1 = "#cell-nav-" + H.S($async$self.gadget.id) + " .shortcut-error";
              t5 = document;
              H.checkTypeBound(t3, t3, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t5.querySelectorAll(t1), t4)).add$1(0, "hidden");
              $async$self.root.classList.remove("error");
              if (H._asStringNullable(t2.callMethod$2("getCode", [$async$self.editor.id])) == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait($async$self.compiler.compile$2(H._asStringNullable(t2.callMethod$2("getCode", [$async$self.editor.id])), "from tunepad import *\n\n"), $async$compile$1);
            case 8:
              // returning from await.
              success = $async$result;
              if (runWhenDone && H.boolConversionCheck(success))
                $async$self.play$0(0);
            case 7:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$compile$1, $async$completer);
    },
    compile$0: function() {
      return this.compile$1(false);
    },
    play$0: function(_) {
    },
    pause$0: function(_) {
    },
    _showElement$1: function($name) {
      var t4,
        _s16_ = "querySelectorAll",
        t1 = this.root,
        t2 = "." + $name + "-container",
        t3 = type$.Element;
      t1.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(t2), t4)).remove$1(0, "hidden");
      t2 = this.root;
      t1 = ".menu-item[data-command='show-" + $name + "'] i.fas";
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(t1), t4)).add$1(0, "fa-check");
      this.gadget.idata.$indexSet(0, "show-" + $name, true);
    },
    _hideElement$1: function($name) {
      var t4,
        _s16_ = "querySelectorAll",
        t1 = this.root,
        t2 = "." + $name + "-container",
        t3 = type$.Element;
      t1.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(t2), t4)).add$1(0, "hidden");
      t2 = this.root;
      t1 = ".menu-item[data-command='show-" + $name + "'] i.fas";
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(t1), t4)).remove$1(0, "fa-check");
      this.gadget.idata.$indexSet(0, "show-" + $name, false);
    },
    toggleElement$1: function($name) {
      var t1 = this.root,
        t2 = "." + $name + "-container",
        t3 = type$.Element;
      t1.toString;
      H.checkTypeBound(t3, t3, "T", "querySelectorAll");
      if (W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(t2), type$._FrozenElementList_Element)).contains$1(0, "hidden"))
        this._showElement$1($name);
      else
        this._hideElement$1($name);
    },
    _shareCell$0: function() {
      var dialog, t2, t3, t4, t5, t6, t7, _this = this,
        _s15_ = ".confirm-button",
        _s16_ = "querySelectorAll",
        t1 = _this.datastore.user;
      if (t1.anonymous) {
        dialog = E.Dialog_openModal("#share-login-dialog", null);
        if (dialog != null) {
          t1 = type$.Element;
          H.checkTypeBound(t1, t1, "T", _s16_);
          new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(_s15_), type$._FrozenElementList_Element)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new X.PythonCell__shareCell_closure(_this));
        }
      } else {
        t2 = _this.gadget;
        t3 = t2.name;
        t1 = t1.name;
        t4 = _this.clock;
        t5 = "" + t4._bpm + " bpm";
        t6 = t4._meter + " time";
        t4 = H.S(t4._key.name);
        t7 = _this.editor;
        t7.toString;
        dialog = E.Dialog_openModal("#share-dialog", P.LinkedHashMap_LinkedHashMap$_literal([".track-name", t3, ".track-author", t1, ".track-duration", "N/A", ".track-tempo", t5, ".track-meter", t6, ".track-key", t4, ".track-code", "" + H._asStringNullable($.$get$_context().callMethod$2("getCode", [t7.id])).split("\n").length + " lines of code", ".track-description textarea", t2.description], type$.String, type$.dynamic));
        t7 = type$.Element;
        dialog.toString;
        H.checkTypeBound(t7, t7, "T", _s16_);
        t4 = type$._FrozenElementList_Element;
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(dialog.querySelectorAll(".track-info"), t4)).add$1(0, t2.instrument);
        H.checkTypeBound(t7, t7, "T", _s16_);
        new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(_s15_), t4)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new X.PythonCell__shareCell_closure0(_this, dialog));
      }
    },
    cloneCell$0: function() {
      var clone, _s5_ = "idata",
        t1 = this.gadget,
        data = t1.save$0(0);
      data.$indexSet(0, "id", -1);
      data.$indexSet(0, "name", "Copy of " + H.S(t1.name));
      data.$indexSet(0, "remix_parent", t1.id);
      J.$indexSet$ax(data.$index(0, _s5_), "cloned", true);
      J.$indexSet$ax(data.$index(0, _s5_), "show-editor", true);
      J.$indexSet$ax(data.$index(0, _s5_), "show-instrument", true);
      J.$indexSet$ax(data.$index(0, _s5_), "show-output", false);
      J.$indexSet$ax(data.$index(0, _s5_), "show-timeline", true);
      J.$indexSet$ax(data.$index(0, _s5_), "midi-output", false);
      J.$indexSet$ax(data.$index(0, _s5_), "midi-input", false);
      clone = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      clone.type = "gadgets";
      clone.name = "New Track";
      clone.load$1(0, data);
      this.datastore.create$1(0, clone);
    },
    doContextMenu$1: function(menu) {
      var _this = this;
      menu.toString;
      switch (menu.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(menu))._toHyphenedName$1("command"))) {
        case "delete-track":
          P.Timer_Timer(C.Duration_200000, new X.PythonCell_doContextMenu_closure(_this));
          return;
        case "clone-track":
          _this.cloneCell$0();
          return;
        case "show-output":
          _this.toggleElement$1("output");
          break;
        case "share":
          _this._shareCell$0();
          break;
      }
      _this.datastore.update$1(0, _this.gadget);
    }
  };
  X.PythonCell_insert_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._showElement$1("output");
    },
    $signature: 0
  };
  X.PythonCell_insert_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._hideElement$1("output");
    },
    $signature: 0
  };
  X.PythonCell_insert_closure1.prototype = {
    call$1: function(menu) {
      this.$this.doContextMenu$1(type$.HtmlElement._as(menu));
      D.DropdownMenu_closeAllMenus();
    },
    $signature: 8
  };
  X.PythonCell_insert_closure2.prototype = {
    call$0: function() {
      var t4, div,
        t1 = this.$this,
        t2 = t1.editor,
        t3 = this._box_0.code;
      t2.toString;
      t4 = $.$get$_context();
      t4.callMethod$2("codemirror", [t2.id, t3]);
      t1.compile$0();
      div = type$.DivElement._as(t1.root.querySelector(".gadget-info"));
      if (div != null)
        C.DivElement_methods.setInnerHtml$1(div, "" + H._asStringNullable(t4.callMethod$2("getCode", [t1.editor.id])).split("\n").length + " LINES");
    },
    $signature: 1
  };
  X.PythonCell_onPythonDone_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".output-hint"), type$._FrozenElementList_Element)).remove$1(0, "visible");
    },
    $signature: 1
  };
  X.PythonCell__shareCell_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
      R.UserAccounts_login(this.$this.datastore);
    },
    $signature: 0
  };
  X.PythonCell__shareCell_closure0.prototype = {
    call$1: function(e) {
      return this.$call$body$PythonCell__shareCell_closure(type$.MouseEvent._as(e));
    },
    $call$body$PythonCell__shareCell_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, t1, t2, t3, exception, text, $async$exception;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              text = type$.TextAreaElement._as($async$self.dialog.querySelector(".track-description textarea"));
              if (text != null)
                $async$self.$this.gadget.description = text.value;
              t1 = $async$self.$this;
              t2 = t1.gadget;
              t2.$public = true;
              E.Dialog_closeModal();
              $async$handler = 3;
              t3 = t1.clock;
              t2.idata.$indexSet(0, "tempo", t3._bpm);
              t2.idata.$indexSet(0, "meter", t3._meter);
              t2.idata.$indexSet(0, "key", t3._key.name);
              t1 = t1.datastore;
              $async$goto = 6;
              return P._asyncAwait(t1.publishTrack$2(t2, null), $async$call$1);
            case 6:
              // returning from await.
              E.Dialog_message("Thanks for sharing <b>" + H.S(t2.name) + "</b>!<br>You can now see your code in the TunePad library.", "", "OK");
              t1.update$1(0, t2);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              E.Dialog_message("There was a problem publishing your code<br>in the TunePad library.", "", "OK");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  X.PythonCell_doContextMenu_closure.prototype = {
    call$0: function() {
      if (H.boolConversionCheck(window.confirm("Are you sure you want to delete this track?"))) {
        var t1 = this.$this;
        t1.datastore.delete$1(0, t1.gadget);
        t1.pause$0(0);
        t1 = t1.root;
        (t1 && C.DivElement_methods).remove$0(t1);
      }
    },
    $signature: 1
  };
  X._PythonCell_TunePadCell_PythonListener.prototype = {};
  X._PythonCell_TunePadCell_PythonListener_EditorListener.prototype = {};
  L.Gadget.prototype = {
    load$1: function(_, data) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t2, t3, t1;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.id;
              if (t1 == null || J.$lt$n(t1, 0))
                $async$self.id = B.toInt0(J.$index$asx(data, "id"), null);
              t1 = J.getInterceptor$asx(data);
              $async$self.name = H._asStringNullable(t1.$index(data, "name"));
              $async$self.beats = B.toInt0(t1.$index(data, "beats"), 4);
              t2 = t1.$index(data, "instrument");
              $async$self.instrument = t2 == null ? "piano" : J.toString$0$(t2);
              t2 = t1.$index(data, "color");
              $async$self.color = t2 == null ? "#2f9aef" : J.toString$0$(t2);
              t2 = t1.$index(data, "description");
              $async$self.description = t2 == null ? "" : J.toString$0$(t2);
              $async$self.created = B.toDateTime(t1.$index(data, "created"));
              $async$self.modified = B.toDateTime(t1.$index(data, "modified"));
              $async$self.$public = B.toBool(t1.$index(data, "public"), false);
              $async$self.deleted = B.toBool(t1.$index(data, "deleted"), false);
              $async$self.remix_parent = B.toInt0(t1.$index(data, "remix_parent"), null);
              t2 = type$.Map_dynamic_dynamic;
              if (t2._is(t1.$index(data, "idata"))) {
                t3 = type$.dynamic;
                $async$self.idata = P.LinkedHashMap_LinkedHashMap$from(t2._as(t1.$index(data, "idata")), t3, t3);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    },
    save$0: function(_) {
      var _this = this,
        t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", _this.id, "name", _this.name, "type", _this.type, "beats", _this.beats, "instrument", _this.instrument, "version", "2.0", "color", _this.color, "voice", _this.voice, "idata", _this.idata, "description", _this.description, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "public", _this.$public, "deleted", _this.deleted, "remix_parent", _this.remix_parent], t1, t1);
    }
  };
  L.SynthPatch.prototype = {
    save$0: function(_) {
      var t1, _this = this;
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", _this.id, "type", _this.type, "voice", _this.voice, "instrument", _this.instrument, "patch", _this.patch, "description", _this.description, "username", _this.SynthPatch_username, "preview", null, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "like_count", _this.like_count, "star_count", _this.star_count, "remix_count", _this.remix_count, "public", _this.$public, "deleted", _this.deleted], t1, t1);
    },
    load$1: function(_, json) {
      var t1, t2, _this = this;
      if (J.$lt$n(_this.id, 0))
        _this.id = B.toInt0(J.$index$asx(json, "id"), -1);
      t1 = J.getInterceptor$asx(json);
      t2 = t1.$index(json, "voice");
      _this.voice = t2 == null ? "My Patch" : J.toString$0$(t2);
      t2 = t1.$index(json, "instrument");
      _this.instrument = t2 == null ? "" : J.toString$0$(t2);
      _this.patch = type$.Map_dynamic_dynamic._as(t1.$index(json, "patch"));
      t2 = t1.$index(json, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(json, "username");
      _this.SynthPatch_username = t2 == null ? "" : J.toString$0$(t2);
      _this.created = B.toDateTime(t1.$index(json, "created"));
      _this.modified = B.toDateTime(t1.$index(json, "modified"));
      _this.like_count = B.toInt0(t1.$index(json, "like_count"), 0);
      _this.star_count = B.toInt0(t1.$index(json, "star_count"), 0);
      _this.remix_count = B.toInt0(t1.$index(json, "remix_count"), 0);
      _this.$public = B.toBool(t1.$index(json, "public"), false);
      _this.deleted = B.toBool(t1.$index(json, "deleted"), false);
    }
  };
  K.Project.prototype = {
    save$0: function(_) {
      var t4, t5, t6, result, _i, tag, _this = this,
        t1 = _this.settings,
        t2 = _this.clock,
        t3 = t2._key;
      J.$indexSet$ax(t1, "key", t3.name);
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = _this.id;
      t3 = _this.type;
      t4 = _this.name;
      t5 = t2._bpm;
      t2 = t2._meter;
      t6 = type$.dynamic;
      result = P.LinkedHashMap_LinkedHashMap$_literal(["id", t1, "type", t3, "name", t4, "bpm", t5, "meter", t2, "bars", _this.bars, "color", _this.color, "artwork", _this.artwork, "summary", _this.summary, "description", _this.description, "tags", [], "tracks", [], "remix_parent", _this.remix_parent, "pucks", _this.settings, "public", _this.$public, "deleted", _this.deleted, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0)], t6, t6);
      for (t1 = _this.tags, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        tag = t1[_i];
        J.add$1$ax(result.$index(0, "tags"), tag);
      }
      return result;
    },
    load$1: function(_, data) {
      var t2, t3, _this = this, _null = null, _s5_ = "pucks",
        _s8_ = "username",
        t1 = _this.id;
      if (t1 == null || J.$lt$n(t1, 0))
        _this.id = B.toInt0(J.$index$asx(data, "id"), _null);
      t1 = J.getInterceptor$asx(data);
      if (t1.$index(data, _s5_) == null || !type$.Map_dynamic_dynamic._is(t1.$index(data, _s5_))) {
        t2 = type$.dynamic;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      } else
        t2 = t1.$index(data, _s5_);
      _this.settings = type$.Map_dynamic_dynamic._as(t2);
      t2 = t1.$index(data, "name");
      _this.name = t2 == null ? "TunePad Project" : J.toString$0$(t2);
      t2 = _this.clock;
      t2.setTempo$1(B.toInt0(t1.$index(data, "bpm"), 120));
      t3 = t1.$index(data, "meter");
      t2.setTimeSignature$1(t3 == null ? "4/4" : J.toString$0$(t3));
      t3 = J.$index$asx(_this.settings, "key");
      t3 = t3 == null ? "C major" : J.toString$0$(t3);
      t2._key = new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], type$.JSArray_int), t3);
      J.$indexSet$ax(_this.settings, "key", t3);
      _this.bars = B.toInt0(t1.$index(data, "bars"), 20);
      t3 = t1.$index(data, "color");
      _this.color = t3 == null ? "#5bc6fc" : J.toString$0$(t3);
      t2 = t1.$index(data, "artwork");
      _this.artwork = t2 == null ? _null : J.toString$0$(t2);
      t2 = t1.$index(data, _s8_);
      _this.author = t2 == null ? _null : J.toString$0$(t2);
      t2 = t1.$index(data, _s8_);
      _this.username = t2 == null ? _null : J.toString$0$(t2);
      t2 = t1.$index(data, "preview");
      _this.preview = t2 == null ? _null : J.toString$0$(t2);
      t2 = t1.$index(data, "summary");
      _this.summary = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(data, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      _this.remix_parent = B.toInt0(t1.$index(data, "remix_parent"), _null);
      _this.$public = B.toBool(t1.$index(data, "public"), false);
      _this.deleted = B.toBool(t1.$index(data, "deleted"), false);
      _this.created = B.toDateTime(t1.$index(data, "created"));
      _this.modified = B.toDateTime(t1.$index(data, "modified"));
      t2 = _this.tags;
      C.JSArray_methods.set$length(t2, 0);
      if (type$.List_dynamic._is(t1.$index(data, "tags")))
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(t1.$index(data, "tags"))); t1.moveNext$0();)
          C.JSArray_methods.add$1(t2, H.S(t1.get$current(t1)));
    },
    artworkUrlToBase64$1: function(url) {
      return this.artworkUrlToBase64$body$Project(url);
    },
    artworkUrlToBase64$body$Project: function(url) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], request, reader, t1, t2, t3, exception, $async$exception;
      var $async$artworkUrlToBase64$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              request = new XMLHttpRequest();
              J.open$3$async$x(request, "GET", url, true);
              request.responseType = "blob";
              J.send$0$x(request);
              t1 = type$.EventTarget;
              t2 = type$._EventStream_ProgressEvent;
              t3 = new W._EventStream(t1._as(request), "load", false, t2);
              $async$goto = 7;
              return P._asyncAwait(t3.get$first(t3), $async$artworkUrlToBase64$1);
            case 7:
              // returning from await.
              reader = new FileReader();
              J.readAsDataUrl$1$x(reader, type$.Blob._as(W._convertNativeToDart_XHR_Response(request.response)));
              t2 = new W._EventStream(t1._as(reader), "load", false, t2);
              $async$goto = 8;
              return P._asyncAwait(t2.get$first(t2), $async$artworkUrlToBase64$1);
            case 8:
              // returning from await.
              t2 = type$.FutureOr_String._as(J.get$result$x(reader));
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$artworkUrlToBase64$1, $async$completer);
    },
    set$artwork: function(_, artwork) {
      this.artwork = H._asStringNullable(artwork);
    }
  };
  V.NoteRecorder.prototype = {
    noteOn$2: function(midi, velocity) {
      var t1, curr, prev, _this = this;
      if (_this.recording && _this.clock.context != null) {
        t1 = _this.start;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 0)
          _this.start = _this.clock.context.currentTime;
        curr = new V.NoteSpacer(midi);
        curr.start = _this.quant$1(_this.clock.context.currentTime);
        curr.velocity = velocity;
        t1 = _this.notes;
        prev = t1.length === 0 ? null : C.JSArray_methods.get$last(t1);
        if (prev != null)
          prev.next = curr;
        C.JSArray_methods.add$1(t1, curr);
      }
    },
    noteOff$1: function(midi) {
      var curr, t1, prev, _this = this;
      if (_this.recording && _this.clock.context != null) {
        curr = new V.NoteSpacer(midi);
        curr.start = _this.quant$1(_this.clock.context.currentTime);
        curr.type = "off";
        t1 = _this.notes;
        prev = t1.length === 0 ? null : C.JSArray_methods.get$last(t1);
        if (prev != null) {
          prev.next = curr;
          C.JSArray_methods.add$1(t1, curr);
        }
      }
    },
    toString$0: function(_) {
      var t2, t3, result, t, _i, n, t4, rest,
        t1 = this.clock;
      if (t1.context == null)
        return "";
      for (t2 = this.notes, t3 = t2.length, result = "", t = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        n = t2[_i];
        t4 = t1.context.currentTime;
        n.space$2(t4, this.quantize ? 0.25 : 0.0625);
        if (n.type === "on") {
          rest = n.start - t;
          if (rest > 0)
            result += "rest(" + C.JSNumber_methods.toStringAsFixed$1(rest, 2) + ")\n";
          result += n.toString$0(0) + "\n";
          t = n.start + n.duration;
        }
      }
      return result;
    },
    onTempoChange$0: function() {
    },
    onTimeSignatureChange$0: function() {
    },
    onClockReset$0: function() {
    },
    onClockTimeChange$0: function() {
    },
    quant$1: function(t) {
      var beats, quant,
        t1 = this.start;
      if (typeof t !== "number")
        return t.$sub();
      if (typeof t1 !== "number")
        return H.iae(t1);
      beats = (t - t1) * this.clock._bpm / 60;
      quant = C.JSDouble_methods.round$0(beats / 0.25) * 0.25;
      return this.quantize ? quant : beats;
    }
  };
  V.NoteSpacer.prototype = {
    toString$0: function(_) {
      var result, t1, _this = this;
      if (_this.type === "on" && _this.duration >= 0) {
        result = "playNote(" + H.S(_this.midi) + ", beats = " + C.JSNumber_methods.toStringAsFixed$1(_this.duration, 2);
        t1 = _this.velocity;
        if (t1 !== 90)
          result += ", velocity = " + H.S(t1);
        t1 = _this.sustain;
        return (t1 > 0 ? result + (", sustain = " + H.S(t1)) : result) + ")";
      }
      return "";
    },
    space$2: function(elapsedBeats, minDuration) {
      var n, t1, t2, _this = this;
      if (_this.type === "on") {
        _this.sustain = _this.duration = -1;
        n = _this.next;
        for (t1 = _this.midi; n != null;) {
          t2 = n.type;
          if (t2 === "on")
            _this.duration = n.start - _this.start;
          else if (t2 === "off" && n.midi == t1) {
            t1 = _this.duration;
            t2 = n.start - _this.start;
            if (t1 < 0)
              _this.duration = Math.max(minDuration, t2);
            else
              _this.sustain = t2;
            return true;
          }
          n = n.next;
        }
        t1 = _this.start;
        if (typeof elapsedBeats !== "number")
          return elapsedBeats.$sub();
        _this.duration = elapsedBeats - t1;
      }
      return false;
    },
    get$type: function(receiver) {
      return this.type;
    }
  };
  V._NoteRecorder_Object_ClockSubscriber.prototype = {};
  U.EffectsChain.prototype = {
    EffectsChain$2: function(color, studio) {
      var t2, _this = this,
        t1 = V.EffectsDial$(color);
      t1.minValue = 0.4;
      t1.maxValue = 2.7;
      t1.step = 0.1;
      t1.set$value(0, 1);
      t1.onAdjusted = new U.EffectsChain_closure(_this);
      _this.pitchDial = t1;
      t1 = V.EffectsDial$(color);
      t1.set$value(0, 0);
      t1.step = 0.1;
      t1.onAdjusted = new U.EffectsChain_closure0(_this);
      _this.reverbDial = t1;
      t1 = V.EffectsDial$(color);
      t1.minValue = 0;
      t1.maxValue = 14;
      t1.set$values(0, H.setRuntimeTypeInfo([16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4], type$.JSArray_num));
      t1.set$value(0, 16);
      t1.onAdjusted = new U.EffectsChain_closure1(_this);
      _this.crushDial = t1;
      t1 = V.EffectsDial$(color);
      t1.minValue = -30;
      t1.maxValue = 10;
      t1.set$value(0, 0);
      t1.step = 1;
      t1.onAdjusted = new U.EffectsChain_closure2(_this);
      _this.bassDial = t1;
      t1 = V.EffectsDial$(color);
      t1.minValue = -30;
      t1.maxValue = 10;
      t1.set$value(0, 0);
      t1.step = 1;
      t1.onAdjusted = new U.EffectsChain_closure3(_this);
      _this.midDial = t1;
      t1 = V.EffectsDial$(color);
      t1.minValue = -30;
      t1.maxValue = 10;
      t1.set$value(0, 0);
      t1.step = 1;
      t1.onAdjusted = new U.EffectsChain_closure4(_this);
      _this.trebleDial = t1;
      t1 = V.EffectsDial$(color);
      t1.minValue = 0;
      t1.maxValue = 2;
      t1.set$value(0, 1);
      t1.step = 0.1;
      t1.onAdjusted = new U.EffectsChain_closure5(_this);
      _this.masterDial = t1;
      t2 = _this.studio;
      t1.buildUI$1(t2.dialog.querySelector("#volume-dial"));
      _this.pitchDial.buildUI$1(t2.dialog.querySelector("#pitch-dial"));
      _this.bassDial.buildUI$1(t2.dialog.querySelector("#bass-dial"));
      _this.midDial.buildUI$1(t2.dialog.querySelector("#mid-dial"));
      _this.trebleDial.buildUI$1(t2.dialog.querySelector("#treble-dial"));
      _this.reverbDial.buildUI$1(t2.dialog.querySelector("#reverb-dial"));
      _this.crushDial.buildUI$1(t2.dialog.querySelector("#crush-dial"));
    },
    _updateSettings$0: function() {
      var t2, _this = this,
        t1 = _this.studio,
        out = t1.dialog.querySelector("#pitch-dial .value");
      if (out != null) {
        t2 = _this.pitchDial;
        J.set$innerHtml$x(out, C.JSNumber_methods.toStringAsFixed$1(t2.get$value(t2), 1));
      }
      out = t1.dialog.querySelector("#reverb-dial .value");
      if (out != null) {
        t2 = _this.reverbDial;
        J.set$innerHtml$x(out, "" + C.JSNumber_methods.round$0(t2.get$value(t2) * 100) + "%");
      }
      out = t1.dialog.querySelector("#bass-dial .value");
      if (out != null) {
        t2 = _this.bassDial;
        J.set$innerHtml$x(out, "" + C.JSNumber_methods.round$0(t2.get$value(t2)) + "dB");
      }
      out = t1.dialog.querySelector("#mid-dial .value");
      if (out != null) {
        t2 = _this.midDial;
        J.set$innerHtml$x(out, "" + C.JSNumber_methods.round$0(t2.get$value(t2)) + "dB");
      }
      out = t1.dialog.querySelector("#treble-dial .value");
      if (out != null) {
        t2 = _this.trebleDial;
        J.set$innerHtml$x(out, "" + C.JSNumber_methods.round$0(t2.get$value(t2)) + "dB");
      }
      out = t1.dialog.querySelector("#volume-dial .value");
      if (out != null) {
        t1 = _this.masterDial;
        J.set$innerHtml$x(out, "" + C.JSNumber_methods.round$0(t1.get$value(t1) * 100) + "%");
      }
    },
    playAudio$5: function(original, processed, dest, start, end) {
      return this.playAudio$body$EffectsChain(original, processed, dest, start, end);
    },
    playAudio$body$EffectsChain: function(original, processed, dest, start, end) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, channels, context, t1, t2, t3, countdown, _box_0, $async$temp1;
      var $async$playAudio$5 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              $async$self._adjusted = false;
              channels = original._channels.length;
              context = type$.AudioContext._as(dest.context);
              t1 = context.createBufferSource();
              t1.buffer = original.toAudioBuffer$0();
              t2 = t1.playbackRate;
              t3 = $async$self.pitchDial;
              t2.value = t3.get$value(t3);
              $async$self.source = t1;
              t1 = context.createConvolver();
              $async$self.convolve = t1;
              t1.buffer = type$.AudioBuffer._as($async$self.sounds.$index(0, "impulse"));
              t1 = C.AudioContext_methods.createGain$0(context);
              t3 = t1.gain;
              t2 = $async$self.reverbDial;
              t3.value = t2.get$value(t2);
              $async$self.rWet = t1;
              t1 = C.AudioContext_methods.createGain$0(context);
              t2 = t1.gain;
              t3 = $async$self.reverbDial;
              t2.value = 1 - t3.get$value(t3);
              $async$self.rDry = t1;
              t1 = C.AudioContext_methods.createGain$0(context);
              t1.gain.value = 1;
              $async$self.master = t1;
              $async$self.recorder = C.AudioContext_methods.createScriptProcessor$3(context, 1024, channels, channels);
              t1 = context.createBiquadFilter();
              t1.type = "lowshelf";
              t1.frequency.value = 200;
              t3 = t1.gain;
              t2 = $async$self.bassDial;
              t3.value = t2.get$value(t2);
              $async$self.bassNode = t1;
              t1 = context.createBiquadFilter();
              t1.type = "highshelf";
              t1.frequency.value = 2000;
              t2 = t1.gain;
              t3 = $async$self.trebleDial;
              t2.value = t3.get$value(t3);
              $async$self.trebleNode = t1;
              t1 = context.createBiquadFilter();
              t1.type = "peaking";
              t1.frequency.value = 440;
              t3 = t1.gain;
              t2 = $async$self.midDial;
              t3.value = t2.get$value(t2);
              $async$self.midNode = t1;
              $async$self.source.connect($async$self.bassNode, 0, 0);
              $async$self.bassNode.connect($async$self.midNode, 0, 0);
              $async$self.midNode.connect($async$self.trebleNode, 0, 0);
              $async$self.trebleNode.connect($async$self.convolve, 0, 0);
              $async$self.trebleNode.connect($async$self.rDry, 0, 0);
              $async$self.rDry.connect($async$self.master, 0, 0);
              $async$self.convolve.connect($async$self.rWet, 0, 0);
              $async$self.rWet.connect($async$self.master, 0, 0);
              $async$self.master.connect($async$self.recorder, 0, 0);
              $async$self.recorder.connect(dest, 0, 0);
              t1 = end - start;
              t2 = $async$self.pitchDial;
              t2 = t2.get$value(t2);
              t3 = original.sampleRate;
              if (typeof t3 !== "number") {
                $async$returnValue = H.iae(t3);
                // goto return
                $async$goto = 1;
                break;
              }
              countdown = C.JSDouble_methods.round$0(t1 / t2 * t3);
              _box_0.countdown = countdown;
              _box_0.countdown = countdown + 2048;
              $async$self.source.start(0, start, t1);
              t1 = $async$self.recorder;
              t1.toString;
              t3 = type$.void_Function_AudioProcessingEvent._as(new U.EffectsChain_playAudio_closure(_box_0, $async$self, processed));
              type$.void_Function._as(null);
              W._EventStreamSubscription$(t1, "audioprocess", t3, false, type$.AudioProcessingEvent);
              t3 = $async$self.source;
              t3.toString;
              t3 = P._StreamIterator$(new W._EventStream(t3, "ended", false, type$._EventStream_Event), type$.Event);
              $async$handler = 3;
              $async$temp1 = H;
              $async$goto = 6;
              return P._asyncAwait(t3.moveNext$0(), $async$playAudio$5);
            case 6:
              // returning from await.
              if ($async$temp1.boolConversionCheck($async$result)) {
                t3.get$current(t3);
                t1 = $async$self._adjusted;
                $async$returnValue = !t1;
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              $async$goto = 7;
              return P._asyncAwait(t3.cancel$0(0), $async$playAudio$5);
            case 7:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$playAudio$5, $async$completer);
    },
    _stop$0: function() {
      var _this = this,
        t1 = _this.source;
      if (t1 != null) {
        t1.stop();
        _this.convolve.disconnect();
        _this.source.disconnect();
        _this.rWet.disconnect();
        _this.rDry.disconnect();
        _this.recorder.disconnect();
        _this.master.disconnect();
        _this.bassNode.disconnect();
        _this.midNode.disconnect();
        _this.trebleNode.disconnect();
        _this.midNode = _this.trebleNode = _this.bassNode = _this.master = _this.rDry = _this.rWet = _this.recorder = _this.convolve = _this.source = null;
      }
    },
    playSlice$4: function(buffer, dest, start, duration) {
      var t1, t2, _this = this;
      if (_this._absn == null) {
        t1 = type$.AudioContext._as(dest.context).createBufferSource();
        t1.buffer = buffer.toAudioBuffer$0();
        _this._absn = t1;
        t1.connect(dest, 0, 0);
        _this._absn.start(0, start, duration);
        t1 = _this._absn;
        t1.toString;
        t2 = type$.void_Function_Event._as(new U.EffectsChain_playSlice_closure(_this));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(t1, "ended", t2, false, type$.Event);
      }
    },
    loadSoundEffects$1: function(context) {
      var t1, t2, t3,
        request = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(request, "GET", "sounds/impulses/bright-hall.wav", true);
      request.responseType = "arraybuffer";
      t1 = type$.void_Function_ProgressEvent;
      t2 = t1._as(new U.EffectsChain_loadSoundEffects_closure(this, context, request));
      type$.void_Function._as(null);
      t3 = type$.ProgressEvent;
      W._EventStreamSubscription$(request, "load", t2, false, t3);
      W._EventStreamSubscription$(request, "error", t1._as(new U.EffectsChain_loadSoundEffects_closure0()), false, t3);
      request.send();
    }
  };
  U.EffectsChain_closure.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.source;
      if (t2 != null) {
        t2.playbackRate.setTargetAtTime(H._asNumNullable(v), 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure0.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.rWet;
      if (t2 != null && t1.rDry != null) {
        t2 = t2.gain;
        H._asNumNullable(v);
        t2.setTargetAtTime(v, 0, 0.2);
        t2 = t1.rDry.gain;
        if (typeof v !== "number")
          return H.iae(v);
        t2.setTargetAtTime(1 - v, 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure1.prototype = {
    call$2: function(d, v) {
      this.$this.studio.set$dirty(true);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure2.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.bassNode;
      if (t2 != null) {
        t2.gain.setTargetAtTime(H._asNumNullable(v), 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure3.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.midNode;
      if (t2 != null) {
        t2.gain.setTargetAtTime(H._asNumNullable(v), 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure4.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.trebleNode;
      if (t2 != null) {
        t2.gain.setTargetAtTime(H._asNumNullable(v), 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_closure5.prototype = {
    call$2: function(d, v) {
      var t2,
        t1 = this.$this;
      t1.studio.set$dirty(true);
      t2 = t1.master;
      if (t2 != null) {
        t2.gain.setTargetAtTime(H._asNumNullable(v), 0, 0.2);
        t1._adjusted = true;
      }
      t1._updateSettings$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 5
  };
  U.EffectsChain_playAudio_closure.prototype = {
    call$1: function(e) {
      var t1, t2, c, t3, src, countdown;
      type$.AudioProcessingEvent._as(e);
      t1 = this._box_0;
      t2 = t1.countdown;
      if (t2 > 0)
        this.processed.append$1(0, e.inputBuffer);
      c = 0;
      while (true) {
        t2 = e.inputBuffer;
        t3 = t2.numberOfChannels;
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(c < t3))
          break;
        src = t2.getChannelData(c);
        e.outputBuffer.copyToChannel(src, c, 0);
        ++c;
      }
      t3 = t1.countdown;
      t2 = t2.length;
      if (typeof t2 !== "number")
        return H.iae(t2);
      countdown = t3 - t2;
      t1.countdown = countdown;
      if (countdown < 0)
        this.$this._stop$0();
    },
    $signature: 39
  };
  U.EffectsChain_playSlice_closure.prototype = {
    call$1: function(e) {
      var t1 = this.$this;
      t1._absn.disconnect();
      t1._absn = null;
    },
    $signature: 2
  };
  U.EffectsChain_loadSoundEffects_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$EffectsChain_loadSoundEffects_closure(type$.ProgressEvent._as(e));
    },
    $call$body$EffectsChain_loadSoundEffects_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, buffer;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.context;
              $async$goto = 2;
              return P._asyncAwait((t1 && C.AudioContext_methods).decodeAudioData$1(t1, type$.ByteBuffer._as(W._convertNativeToDart_XHR_Response($async$self.request.response))), $async$call$1);
            case 2:
              // returning from await.
              buffer = $async$result;
              if (buffer != null)
                $async$self.$this.sounds.$indexSet(0, "impulse", buffer);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 12
  };
  U.EffectsChain_loadSoundEffects_closure0.prototype = {
    call$1: function(e) {
      type$.ProgressEvent._as(e);
      return P.print("BufferLoader: XHR error");
    },
    $signature: 24
  };
  B.GraphicEq.prototype = {
    GraphicEq$2: function(container, onColor) {
      if (this.container == null)
        return;
      this._eq$_render$0();
    },
    animate$1: function(_, fft) {
      var t2, t3, index, col, v, b, index0, t4, row, t5,
        t1 = fft.length,
        bins = t1 / 8 | 0;
      for (t2 = this.dots, t3 = this.onColor, index = 0, col = 0; col < 8; ++col) {
        for (v = 0, b = 0; b < bins; ++b, index = index0) {
          index0 = index + 1;
          if (index < 0 || index >= t1)
            return H.ioore(fft, index);
          v += fft[index];
        }
        v /= 32 * (bins - col);
        for (t4 = col * 8, row = 0; row < 8; ++row) {
          t5 = t4 + row;
          if (t5 >= t2.length)
            return H.ioore(t2, t5);
          t5 = t2[t5];
          t5.setAttribute("fill", v > row ? t3 : "rgba(0, 0, 0, 0.3)");
        }
      }
    },
    clear$0: function(_) {
      var t1, t2, _i;
      for (t1 = this.dots, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].setAttribute("fill", "rgba(0, 0, 0, 0.3)");
    },
    _eq$_render$0: function() {
      var t2, t3, t4, t5, col, dx, row, temp, _i, dot, _this = this,
        t1 = _this.container;
      if (t1 == null)
        return;
      t2 = _this.parent;
      if (t2 != null)
        C.GElement_methods.remove$0(t2);
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.GElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, "http://www.w3.org/2000/svg", "g")));
      t5 = type$.String;
      (t4 && C.GElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "scale(1.0, -1.0) translate(0, -200)"], t5, t5));
      _this.parent = t4;
      t1.appendChild(t4);
      for (t1 = type$.CircleElement, t4 = _this.dots, col = 0; col < 8; ++col)
        for (dx = col * 25 + 12.5, row = 0; row < 8; ++row) {
          temp = t2.createElementNS("http://www.w3.org/2000/svg", "circle");
          temp = t1._as(t3._as(temp));
          C.CircleElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["cx", H.S(dx), "cy", H.S(row * 25 + 12.5), "r", "7.5", "fill", "rgba(0, 0, 0, 0.3)"], t5, t5));
          C.JSArray_methods.add$1(t4, temp);
        }
      for (t1 = t4.length, _i = 0; _i < t4.length; t4.length === t1 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
        dot = t4[_i];
        _this.parent.appendChild(dot);
      }
    }
  };
  V.AudioRecorder.prototype = {
    startMicrophone$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, t1, exception, t2, $async$exception;
      var $async$startMicrophone$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._recorder$_stream != null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 4;
              t1 = window.navigator;
              $async$goto = 7;
              return P._asyncAwait((t1 && C.Navigator_methods).getUserMedia$1$audio(t1, true), $async$startMicrophone$0);
            case 7:
              // returning from await.
              $async$self.set$_recorder$_stream($async$result);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              window.alert("TunePad was unable to connect to the microphone. Please make sure you have allowed access. " + H.S(e));
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              t1 = $async$self.context;
              $async$self.input = t1.createMediaStreamSource($async$self._recorder$_stream);
              t2 = t1.createAnalyser();
              t2.fftSize = 1024;
              $async$self.analyzer = t2;
              t2 = $async$self.input.channelCount;
              $async$self.recorder = C.AudioContext_methods.createScriptProcessor$3(t1, 2048, t2, t2);
              $async$self.input.connect($async$self.analyzer, 0, 0);
              $async$self.analyzer.connect($async$self.recorder, 0, 0);
              $async$self.recorder.connect(t1.destination, 0, 0);
              t1 = $async$self.analyzer.frequencyBinCount;
              t1 = H._isInt(t1) ? t1 : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(t1)));
              $async$self.fftData = new Uint8Array(t1);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$startMicrophone$0, $async$completer);
    },
    stopMicrophone$0: function() {
      var t1, _this = this;
      if (_this._recorder$_stream != null) {
        _this.input.disconnect();
        _this.analyzer.disconnect();
        _this.recorder.disconnect();
        for (t1 = J.get$iterator$ax(_this._recorder$_stream.getTracks()); t1.moveNext$0();)
          t1.get$current(t1).stop();
        _this._recorder$_stream = _this.fftData = _this.recorder = _this.analyzer = _this.input = null;
      }
    },
    getFrequencyData$0: function() {
      var t1 = this.analyzer;
      if (t1 != null) {
        t1.getByteFrequencyData(this.fftData);
        return this.fftData;
      }
      return null;
    },
    record$2: function(seconds, buffer) {
      return this.record$body$AudioRecorder(seconds, buffer);
    },
    record$body$AudioRecorder: function(seconds, buffer) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, elapsed, e, t1, t2, t3, $async$temp1;
      var $async$record$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._recorder$_stream == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._recording = true;
              elapsed = 0;
              buffer.reshape$2($async$self.input.channelCount, H._asIntNullable($async$self.context.sampleRate));
              t1 = $async$self.recorder;
              t1.toString;
              t1 = P._StreamIterator$(new W._EventStream(t1, "audioprocess", false, type$._EventStream_AudioProcessingEvent), type$.AudioProcessingEvent);
              $async$handler = 3;
            case 6:
              // for condition
              $async$temp1 = H;
              $async$goto = 8;
              return P._asyncAwait(t1.moveNext$0(), $async$record$2);
            case 8:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              e = t1.get$current(t1);
              t2 = elapsed;
              t3 = e.inputBuffer.duration;
              if (typeof t2 !== "number") {
                $async$returnValue = t2.$add();
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              if (typeof t3 !== "number") {
                $async$returnValue = H.iae(t3);
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              elapsed = t2 + t3;
              buffer.append$1(0, e.inputBuffer);
              buffer.trimWaveform$1(70);
              t2 = elapsed;
              if (typeof t2 !== "number") {
                $async$returnValue = t2.$ge();
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              if (t2 >= seconds || $async$self._recorder$_stream == null || !$async$self._recording) {
                $async$self._recording = false;
                $async$returnValue = true;
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              // goto for condition
              $async$goto = 6;
              break;
            case 7:
              // after for
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              $async$goto = 9;
              return P._asyncAwait(t1.cancel$0(0), $async$record$2);
            case 9:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$record$2, $async$completer);
    },
    set$_recorder$_stream: function(_stream) {
      this._recorder$_stream = type$.MediaStream._as(_stream);
    }
  };
  R.Recording.prototype = {
    clone$0: function(_) {
      var r, _this = this,
        t1 = type$.JSArray_List_Float32List,
        t2 = type$.List_num,
        t3 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t2));
      t3.reshape$2(1, 44100);
      t2 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t2));
      t2.reshape$2(1, 44100);
      t1 = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_num);
      r = new R.Recording(t3, t2, t1, -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
      r.name = "My Recording";
      r.type = "recording";
      r.name = _this.name;
      r.duration = _this.duration;
      r.original = _this.original.clone$0(0);
      r.processed = _this.processed.clone$0(0);
      for (t2 = _this.settings, t2 = t2.get$keys(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, t3, _this.settings.$index(0, t3));
      }
      return r;
    },
    save$0: function(_) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      _this.modified = new P.DateTime(Date.now(), false);
      t1 = _this.id;
      t2 = _this.type;
      t3 = _this.name;
      t4 = _this.description;
      t5 = _this.instrument;
      t6 = _this.duration;
      t7 = _this.original;
      t8 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", t1, "type", t2, "name", t3, "descripition", t4, "instrument", t5, "duration", t6, "channels", t7._channels.length, "rate", t7.sampleRate, "settings", _this.settings, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0), "original", _this.original.toWAVBase64$0(), "processed", _this.processed.toWAVBase64$0(), "username", _this.Recording_username, "like_count", _this.like_count, "star_count", _this.star_count, "remix_count", _this.remix_count, "public", _this.$public, "deleted", _this.deleted], t8, t8);
    },
    load$1: function(_, json) {
      var t1, t2, c, rate, setting, _this = this,
        _s8_ = "settings";
      if (J.$lt$n(_this.id, 0))
        _this.id = B.toInt0(J.$index$asx(json, "id"), -1);
      t1 = J.getInterceptor$asx(json);
      t2 = t1.$index(json, "name");
      _this.name = t2 == null ? "My Recording" : J.toString$0$(t2);
      t2 = t1.$index(json, "description");
      _this.description = t2 == null ? "" : J.toString$0$(t2);
      t2 = t1.$index(json, "instrument");
      _this.instrument = t2 == null ? "" : J.toString$0$(t2);
      _this.duration = B.toNum(t1.$index(json, "duration"), 0);
      _this.created = B.toDateTime(t1.$index(json, "created"));
      _this.modified = B.toDateTime(t1.$index(json, "modified"));
      t2 = t1.$index(json, "username");
      _this.Recording_username = t2 == null ? "" : J.toString$0$(t2);
      _this.like_count = B.toInt0(t1.$index(json, "like_count"), 0);
      _this.star_count = B.toInt0(t1.$index(json, "star_count"), 0);
      _this.remix_count = B.toInt0(t1.$index(json, "remix_count"), 0);
      _this.$public = B.toBool(t1.$index(json, "public"), false);
      _this.deleted = B.toBool(t1.$index(json, "deleted"), false);
      c = B.toInt0(t1.$index(json, "channels"), 0);
      rate = B.toInt0(t1.$index(json, "rate"), 0);
      _this.original.reshape$2(c, rate);
      _this.processed.reshape$2(c, rate);
      if (type$.Map_dynamic_dynamic._is(t1.$index(json, _s8_)))
        for (t2 = J.get$iterator$ax(type$.Iterable_dynamic._as(J.get$keys$x(t1.$index(json, _s8_)))); t2.moveNext$0();) {
          setting = H._asStringNullable(t2.get$current(t2));
          _this.settings.$indexSet(0, setting, B.toNum(J.$index$asx(t1.$index(json, _s8_), setting), 0));
        }
    },
    loadAudioData$2: function(context, datastore) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, t2;
      var $async$loadAudioData$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.original;
              t2 = datastore.host;
              $async$goto = 2;
              return P._asyncAwait(t1.loadAudio$2(context, t2 + "/recorder/audio/original/" + H.S($async$self.id)), $async$loadAudioData$2);
            case 2:
              // returning from await.
              $async$goto = 3;
              return P._asyncAwait($async$self.processed.loadAudio$2(context, t2 + "/recorder/audio/" + H.S($async$self.id)), $async$loadAudioData$2);
            case 3:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadAudioData$2, $async$completer);
    },
    set$settings: function(settings) {
      this.settings = type$.Map_String_num._as(settings);
    },
    set$username: function(_, username) {
      this.Recording_username = H._asStringNullable(username);
    }
  };
  Q.RecordingStudio.prototype = {
    set$dirty: function(d) {
      var t1, clipped, _this = this;
      _this._studio$_dirty = d;
      if (d) {
        t1 = type$.ButtonElement;
        t1._as(_this.dialog.querySelector("#save-button")).disabled = false;
        clipped = _this.wf.getClipStart$0() <= 0 && _this.wf.getClipEnd$0() >= 1;
        t1._as(_this.dialog.querySelector("#trim-button")).disabled = clipped;
        _this._clean = false;
      }
    },
    show$0: function(_) {
      var t1, t2, t3, _this = this,
        _s7_ = "#f0c229";
      if (_this.datastore.user.anonymous) {
        t1 = J.get$onClick$x(E.Dialog_message("Sign in to TunePad to upload and record your own sounds.", "Sign In", "Sign In").querySelector(".confirm-button"));
        t2 = t1.$ti;
        t3 = t2._eval$1("~(1)")._as(new Q.RecordingStudio_show_closure(_this));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(t1._target, t1._eventType, t3, false, t2._precomputed1);
        return;
      }
      t1 = E.Dialog_openModal("#recording-studio-template", null);
      _this.dialog = t1;
      if (t1 == null)
        return;
      t1 = type$.JSArray_List_Float32List;
      t2 = type$.List_num;
      new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t2)).reshape$2(1, 44100);
      new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t1), P.ListQueue$(t2)).reshape$2(1, 44100);
      Date.now();
      Date.now();
      _this.buffer.clear$0(0);
      t1 = type$.SvgElement._as(_this.dialog.querySelector("#waveform-container svg"));
      t2 = new V.WaveformTrace(470, 125, _s7_, _this);
      t3 = new Array(94);
      t3.fixed$length = Array;
      t2.set$bars(H.setRuntimeTypeInfo(t3, type$.JSArray_RectElement));
      t2.bw = 5;
      t2._waveform$_render$1(t1);
      _this.wf = t2;
      _this.eq = B.GraphicEq$(type$.SvgSvgElement._as(_this.dialog.querySelector("#eq-container svg")), _s7_);
      _this.synth = U.EffectsChain$(_s7_, _this);
      C.Window_methods.requestAnimationFrame$1(window, _this.get$tick());
      _this._registerEvents$0();
      _this.loadUserRecordings$0();
    },
    loadUserRecordings$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, recordings, t2, counter, t1;
      var $async$loadUserRecordings$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              counter = document.querySelector("#sample-count");
              t1 = counter != null;
              if (t1)
                J.set$innerHtml$x(counter, "LOADING...");
              $async$goto = 2;
              return P._asyncAwait($async$self.datastore.getUserRecordings$0(), $async$loadUserRecordings$0);
            case 2:
              // returning from await.
              recordings = $async$result;
              t2 = J.getInterceptor$ax(recordings);
              t2.forEach$1(recordings, new Q.RecordingStudio_loadUserRecordings_closure($async$self));
              if (t1)
                J.set$innerHtml$x(counter, H.S(t2.get$length(recordings)));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadUserRecordings$0, $async$completer);
    },
    initAudio$0: function() {
      var t1, _this = this;
      if (_this.context == null) {
        t1 = _this.context = new (window.AudioContext || window.webkitAudioContext)();
        _this.recorder = new V.AudioRecorder(t1);
        _this.buffer.reshape$2(2, H._asIntNullable(t1.sampleRate));
        _this.recording.original.reshape$2(2, H._asIntNullable(_this.context.sampleRate));
        _this.recording.processed.reshape$2(2, H._asIntNullable(_this.context.sampleRate));
        _this.synth.loadSoundEffects$1(_this.context);
      }
    },
    clear$0: function(_) {
      var t1, t2, t3, _this = this,
        _s16_ = "querySelectorAll",
        _s6_ = "hidden";
      _this.pause$0(0);
      _this.set$dirty(false);
      _this.resetEffects$0();
      _this.recording.id = -1;
      _this.wf.clear$0(0);
      _this.eq.clear$0(0);
      _this.buffer.clear$0(0);
      _this.recording.original.clear$0(0);
      _this.recording.processed.clear$0(0);
      t1 = _this.wf.info;
      t1.toString;
      C.TextElement_methods.setInnerHtml$1(t1, "0.00 s");
      _this.recorder.stopMicrophone$0();
      type$.ButtonElement._as(_this.dialog.querySelector("#save-button")).disabled = true;
      type$.InputElement._as(_this.dialog.querySelector("#edit-name")).value = "";
      t1 = _this.dialog;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#effects-container"), t3)).add$1(0, _s6_);
      t1 = _this.dialog;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#record-button"), t3)).remove$1(0, _s6_);
      t1 = _this.dialog;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#stop-button"), t3)).add$1(0, _s6_);
      t1 = _this.dialog;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).remove$1(0, "recording");
    },
    tick$1: function(t) {
      var t1, t2, t3, t4, t5, position, _this = this;
      H._asNumNullable(t);
      if (_this.dialog == null)
        return;
      t1 = _this.recorder;
      if (t1 != null && t1._recorder$_stream != null)
        _this.eq.animate$1(0, t1.getFrequencyData$0());
      t1 = _this.recorder;
      if (t1 != null && t1._recording)
        _this.wf.animate$0(0);
      else {
        t1 = _this.synth;
        if (t1.source != null) {
          t2 = _this.recording.processed;
          t3 = t2.samples;
          t2 = t2.sampleRate;
          if (typeof t2 !== "number")
            return H.iae(t2);
          t4 = _this._studio$_lastTime;
          t5 = _this._lastPosition;
          t1 = t1.pitchDial;
          position = t5 + (t3 / t2 - t4) * t1.get$value(t1);
          t1 = _this.wf;
          t4 = _this.buffer;
          t2 = t4.samples;
          t4 = t4.sampleRate;
          if (typeof t4 !== "number")
            return H.iae(t4);
          t1.animate$1(0, position / (t2 / t4));
          _this._lastPosition = position;
          t4 = _this.recording.processed;
          t2 = t4.samples;
          t4 = t4.sampleRate;
          if (typeof t4 !== "number")
            return H.iae(t4);
          _this._studio$_lastTime = t2 / t4;
        } else {
          if (_this._looping) {
            t1 = _this.dialog;
            t2 = type$.Element;
            t1.toString;
            H.checkTypeBound(t2, t2, "T", "querySelectorAll");
            t1 = W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#loop-button"), type$._FrozenElementList_Element)).contains$1(0, "checked");
          } else
            t1 = false;
          if (t1)
            _this.play$0(0);
          else if (_this._looping)
            _this.pause$0(0);
        }
      }
      C.Window_methods.requestAnimationFrame$1(window, _this.get$tick());
    },
    uploadAudioFile$1: function(fileInput) {
      return this.uploadAudioFile$body$RecordingStudio(fileInput);
    },
    uploadAudioFile$body$RecordingStudio: function(fileInput) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, maxSize, t3, reader, filename, index, t1, t2;
      var $async$uploadAudioFile$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = $async$self.recorder;
              if (t2 != null && t2._recording) {
                // goto return
                $async$goto = 1;
                break;
              }
              if (fileInput.files.length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.clear$0(0);
              maxSize = Math.pow(2, 20);
              t2 = fileInput.files;
              if (0 >= t2.length) {
                $async$returnValue = H.ioore(t2, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t2[0].size;
              if (typeof t2 !== "number") {
                $async$returnValue = t2.$lt();
                // goto return
                $async$goto = 1;
                break;
              }
              if (t2 < maxSize) {
                t2 = $async$self.dialog;
                t3 = type$.Element;
                t2.toString;
                H.checkTypeBound(t3, t3, "T", "querySelectorAll");
                W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#waveform-container"), type$._FrozenElementList_Element)).add$1(0, "loading");
                t2 = $async$self.wf.info;
                t2.toString;
                C.TextElement_methods.setInnerHtml$1(t2, "Upoading...");
                reader = new FileReader();
                t2 = fileInput.files;
                if (0 >= t2.length) {
                  $async$returnValue = H.ioore(t2, 0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                reader.readAsArrayBuffer(t2[0]);
                t2 = fileInput.files;
                if (0 >= t2.length) {
                  $async$returnValue = H.ioore(t2, 0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                filename = t1.filename = t2[0].name;
                index = J.lastIndexOf$1$s(filename, ".");
                if (index > 3)
                  t1.filename = C.JSString_methods.substring$2(filename, 0, index);
                t1 = type$.void_Function_ProgressEvent._as(new Q.RecordingStudio_uploadAudioFile_closure(t1, $async$self, reader));
                type$.void_Function._as(null);
                W._EventStreamSubscription$(reader, "load", t1, false, type$.ProgressEvent);
              } else
                window.alert("The maximum audio file upload size is 2MB");
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$uploadAudioFile$1, $async$completer);
    },
    recordAudio$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, t2, t3, now;
      var $async$recordAudio$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !$async$self.recorder._recording ? 2 : 3;
              break;
            case 2:
              // then
              $async$self.clear$0(0);
              t1 = $async$self.dialog;
              t2 = type$.Element;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#record-button"), t3)).add$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#stop-button"), t3)).remove$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).add$1(0, "recording");
              $async$goto = 4;
              return P._asyncAwait($async$self.recorder.startMicrophone$0(), $async$recordAudio$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return P._asyncAwait($async$self.recorder.record$2(10, $async$self.buffer), $async$recordAudio$0);
            case 5:
              // returning from await.
              $async$self.recorder.stopMicrophone$0();
              $async$self.recording.original = $async$self.buffer.clone$0(0);
              $async$self.buffer.generateWaveform$1($async$self.wf.bars.length);
              t1 = $async$self.recording;
              now = new P.DateTime(Date.now(), false);
              t1.name = "Recording " + ($async$self._twoDigit$1(H.Primitives_getYear(now)) + "-" + $async$self._twoDigit$1(H.Primitives_getMonth(now)) + "-" + $async$self._twoDigit$1(H.Primitives_getDay(now)) + " " + $async$self._twoDigit$1(H.Primitives_getHours(now)) + ":" + $async$self._twoDigit$1(H.Primitives_getMinutes(now)) + ":" + $async$self._twoDigit$1(H.Primitives_getSeconds(now)));
              type$.InputElement._as($async$self.dialog.querySelector("#edit-name")).value = $async$self.recording.name;
              $async$self.set$dirty(true);
              $async$self.wf.animate$1(0, 0);
              $async$self.eq.clear$0(0);
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#record-button"), t3)).remove$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#stop-button"), t3)).add$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).remove$1(0, "recording");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#effects-container"), t3)).remove$1(0, "hidden");
              type$.ButtonElement._as($async$self.dialog.querySelector("#save-button")).disabled = false;
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$recordAudio$0, $async$completer);
    },
    play$1$mute: function(_, mute) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, t5, t6, end, start, gain;
      var $async$play$1$mute = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.synth.source == null) {
                t1 = $async$self.recorder;
                t1 = !(t1 != null && t1._recording) && $async$self.buffer.samples > 0;
              } else
                t1 = false;
              $async$goto = t1 ? 3 : 4;
              break;
            case 3:
              // then
              t1 = $async$self.dialog;
              t2 = type$.Element;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#play-button"), t3)).add$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#pause-button"), t3)).remove$1(0, "hidden");
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).add$1(0, "playing");
              t3 = $async$self.wf.getClipStart$0();
              t1 = $async$self.buffer;
              t2 = t1.samples;
              t1 = t1.sampleRate;
              if (typeof t1 !== "number") {
                $async$returnValue = H.iae(t1);
                // goto return
                $async$goto = 1;
                break;
              }
              t4 = $async$self.wf.getClipEnd$0();
              t5 = $async$self.buffer;
              t6 = t5.samples;
              t5 = t5.sampleRate;
              if (typeof t5 !== "number") {
                $async$returnValue = H.iae(t5);
                // goto return
                $async$goto = 1;
                break;
              }
              end = t4 * (t6 / t5);
              t5 = $async$self.recording;
              t6 = t5.processed;
              t5 = t5.original;
              t6.reshape$2(t5._channels.length, t5.sampleRate);
              $async$self._looping = true;
              start = $async$self._lastPosition = t3 * (t2 / t1);
              $async$self._studio$_lastTime = 0;
              t1 = $async$self.context;
              gain = (t1 && C.AudioContext_methods).createGain$0(t1);
              t1 = gain.gain;
              t1.value = mute ? 0 : 1;
              gain.connect($async$self.context.destination, 0, 0);
              $async$goto = 5;
              return P._asyncAwait($async$self.synth.playAudio$5($async$self.buffer, $async$self.recording.processed, gain, start, end), $async$play$1$mute);
            case 5:
              // returning from await.
              $async$self.set$_clean($async$result);
              if (H.boolConversionCheck($async$self._clean))
                $async$self.recording.processed.trim$2(0, 0, end - start);
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$play$1$mute, $async$completer);
    },
    play$0: function($receiver) {
      return this.play$1$mute($receiver, false);
    },
    pause$0: function(_) {
      var t1, t2, t3, _this = this,
        _s16_ = "querySelectorAll";
      _this._looping = false;
      t1 = _this.dialog;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#play-button"), t3)).remove$1(0, "hidden");
      t1 = _this.dialog;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#pause-button"), t3)).add$1(0, "hidden");
      t1 = _this.dialog;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).remove$1(0, "playing");
      t3 = _this.synth;
      t3._adjusted = true;
      t3._stop$0();
    },
    resetEffects$0: function() {
      var t2, _this = this,
        t1 = _this.synth;
      t1.pitchDial.set$value(0, 1);
      t1.reverbDial.set$value(0, 0);
      t1.crushDial.set$value(0, 16);
      t1.bassDial.set$value(0, 0);
      t1.midDial.set$value(0, 0);
      t1.trebleDial.set$value(0, 0);
      t1.masterDial.set$value(0, 1);
      t1._updateSettings$0();
      _this.wf.setClip$2(0, 1);
      _this.rightTrim = _this.leftTrim = -1;
      t1 = _this.dialog;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#loop-button"), type$._FrozenElementList_Element)).remove$1(0, "checked");
    },
    saveRecording$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, saved, t1, button, t2, t3, clipped, t4, t5, t6, t7, t8, t9, t10, t11, t12, item, $name, audio, exception, $async$exception, $async$temp1;
      var $async$saveRecording$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.recording.original.samples <= 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self.wf.info;
              t1.toString;
              C.TextElement_methods.setInnerHtml$1(t1, "Saving...");
              $async$goto = !H.boolConversionCheck($async$self._clean) ? 3 : 4;
              break;
            case 3:
              // then
              $async$self.saving = true;
              t1 = type$.ButtonElement;
              button = t1._as($async$self.dialog.querySelector("#record-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#upload-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#trim-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#play-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#pause-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#reset-button"));
              if (button != null)
                button.disabled = true;
              button = t1._as($async$self.dialog.querySelector("#save-button"));
              if (button != null)
                button.disabled = true;
              t2 = $async$self.synth;
              t3 = t2.pitchDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t3 = t2.reverbDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t3 = t2.crushDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t3 = t2.bassDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t3 = t2.midDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t3 = t2.trebleDial;
              t3._disabled = true;
              t3._updateDrawing$0();
              t2 = t2.masterDial;
              t2._disabled = true;
              t2._updateDrawing$0();
              $async$self.wf.disabled = true;
              $async$goto = 5;
              return P._asyncAwait($async$self.play$1$mute(0, true), $async$saveRecording$0);
            case 5:
              // returning from await.
              button = t1._as($async$self.dialog.querySelector("#record-button"));
              if (button != null)
                button.disabled = false;
              button = t1._as($async$self.dialog.querySelector("#upload-button"));
              if (button != null)
                button.disabled = false;
              clipped = $async$self.wf.getClipStart$0() > 0 && $async$self.wf.getClipEnd$0() < 1;
              button = t1._as($async$self.dialog.querySelector("#trim-button"));
              if (button != null)
                button.disabled = !clipped;
              button = t1._as($async$self.dialog.querySelector("#play-button"));
              if (button != null)
                button.disabled = false;
              button = t1._as($async$self.dialog.querySelector("#pause-button"));
              if (button != null)
                button.disabled = false;
              button = t1._as($async$self.dialog.querySelector("#reset-button"));
              if (button != null)
                button.disabled = false;
              button = t1._as($async$self.dialog.querySelector("#save-button"));
              if (button != null)
                button.disabled = false;
              t1 = $async$self.synth;
              t2 = t1.pitchDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t2 = t1.reverbDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t2 = t1.crushDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t2 = t1.bassDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t2 = t1.midDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t2 = t1.trebleDial;
              t2._disabled = false;
              t2._updateDrawing$0();
              t1 = t1.masterDial;
              t1._disabled = false;
              t1._updateDrawing$0();
              $async$self.saving = $async$self.wf.disabled = false;
            case 4:
              // join
              t1 = $async$self.recording;
              t2 = t1.processed;
              t3 = t2.samples;
              if (t3 <= 0) {
                t2 = $async$self.buffer;
                t3 = t2.samples;
                t2 = t2.sampleRate;
                if (typeof t2 !== "number") {
                  $async$returnValue = H.iae(t2);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t2 = t3 / t2;
              } else {
                t2 = t2.sampleRate;
                if (typeof t2 !== "number") {
                  $async$returnValue = H.iae(t2);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t2 = t3 / t2;
              }
              t1.duration = t2;
              t2 = $async$self.wf.getClipStart$0();
              t3 = $async$self.wf.getClipEnd$0();
              t4 = $async$self.leftTrim;
              t5 = $async$self.rightTrim;
              t6 = $async$self.synth.masterDial;
              t6 = t6.get$value(t6);
              t7 = $async$self.synth.pitchDial;
              t7 = t7.get$value(t7);
              t8 = $async$self.synth.reverbDial;
              t8 = t8.get$value(t8);
              t9 = $async$self.synth.bassDial;
              t9 = t9.get$value(t9);
              t10 = $async$self.synth.midDial;
              t10 = t10.get$value(t10);
              t11 = $async$self.synth.trebleDial;
              t11 = t11.get$value(t11);
              t12 = $async$self.synth.crushDial;
              t1.set$settings(P.LinkedHashMap_LinkedHashMap$_literal(["leftClip", t2, "rightClip", t3, "leftTrim", t4, "rightTrim", t5, "volume", t6, "playback", t7, "reverb", t8, "bass", t9, "mid", t10, "treble", t11, "crush", C.JSNumber_methods.round$0(t12.get$value(t12))], type$.String, type$.num));
              $async$handler = 7;
              t1 = J.$lt$n($async$self.recording.id, 0);
              t2 = $async$self.datastore;
              t3 = $async$self.recording;
              $async$goto = t1 ? 10 : 12;
              break;
            case 10:
              // then
              t3.Recording_username = t2.user.displayName;
              $async$temp1 = type$.Recording;
              $async$goto = 13;
              return P._asyncAwait(t2.create$1(0, t3), $async$saveRecording$0);
            case 13:
              // returning from await.
              saved = $async$temp1._as($async$result);
              t1 = $async$self.recording;
              t1.id = saved.id;
              $async$self.addRow$1(0, t1);
              // goto join
              $async$goto = 11;
              break;
            case 12:
              // else
              $async$goto = 14;
              return P._asyncAwait(t2.update$1(0, t3), $async$saveRecording$0);
            case 14:
              // returning from await.
              t1 = $async$self.recording;
              item = $async$self.dialog.querySelector(".sample-item[data-id='" + H.S(t1.id) + "']");
              P.print(item);
              if (item != null) {
                $name = type$.HtmlElement._as(item.querySelector(".sample-name"));
                if ($name != null)
                  J.setInnerHtml$1$x($name, t1.name);
                J.set$innerHtml$x(item.querySelector(".sample-duration"), J.toStringAsFixed$1$n(t1.duration, 1) + "s");
                audio = type$.AudioElement._as(item.querySelector("audio"));
                if (audio != null)
                  audio.load();
              }
            case 11:
              // join
              $async$self.set$dirty(false);
              $async$handler = 2;
              // goto after finally
              $async$goto = 9;
              break;
            case 7:
              // catch
              $async$handler = 6;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              t1 = $async$self.wf;
              t1 = t1.info;
              t1.toString;
              C.TextElement_methods.setInnerHtml$1(t1, "Error saving audio");
              // goto after finally
              $async$goto = 9;
              break;
            case 6:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 9:
              // after finally
              $async$self.wf.animate$0(0);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$saveRecording$0, $async$completer);
    },
    loadRecording$1: function(id) {
      return this.loadRecording$body$RecordingStudio(id);
    },
    loadRecording$body$RecordingStudio: function(id) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, rec, leftClip, rightClip, e, t1, t2, t3, t4, t5, t6, exception, $async$exception, $async$temp1;
      var $async$loadRecording$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.wf.clear$0(0);
              t1 = $async$self.wf.info;
              t1.toString;
              C.TextElement_methods.setInnerHtml$1(t1, "Loading...");
              t1 = $async$self.dialog;
              t2 = type$.Element;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).add$1(0, "loading");
              $async$handler = 4;
              t1 = $async$self.datastore;
              t4 = type$.JSArray_List_Float32List;
              t5 = type$.List_num;
              t6 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t4), P.ListQueue$(t5));
              t6.reshape$2(1, 44100);
              t5 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], t4), P.ListQueue$(t5));
              t5.reshape$2(1, 44100);
              t4 = new R.Recording(t6, t5, new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_num), id, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              t4.name = "My Recording";
              t4.type = "recording";
              $async$temp1 = type$.Recording;
              $async$goto = 7;
              return P._asyncAwait(t1.retrieve$1(t4), $async$loadRecording$1);
            case 7:
              // returning from await.
              rec = $async$temp1._as($async$result);
              if (rec == null) {
                t1 = $async$self.wf.info;
                t1.toString;
                C.TextElement_methods.setInnerHtml$1(t1, "Sound not found.");
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.set$recording(rec);
              t4 = $async$self.synth;
              t5 = $async$self.recording.settings;
              t4.pitchDial.set$value(0, B.toNum(t5.$index(0, "playback"), 1));
              t4.reverbDial.set$value(0, B.toNum(t5.$index(0, "reverb"), 0));
              t4.bassDial.set$value(0, B.toNum(t5.$index(0, "bass"), 0));
              t4.midDial.set$value(0, B.toNum(t5.$index(0, "mid"), 0));
              t4.trebleDial.set$value(0, B.toNum(t5.$index(0, "treble"), 0));
              t4.masterDial.set$value(0, B.toNum(t5.$index(0, "volume"), 0));
              t4.crushDial.set$value(0, B.toNum(t5.$index(0, "crush"), 16));
              t4._updateSettings$0();
              type$.InputElement._as($async$self.dialog.querySelector("#edit-name")).value = $async$self.recording.name;
              t4 = $async$self.dialog;
              t4.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll("#effects-container"), t3)).remove$1(0, "hidden");
              t4 = $async$self.recording.original;
              t5 = $async$self.context;
              t1 = t1.host;
              $async$goto = 8;
              return P._asyncAwait(t4.loadAudio$2(t5, t1 + "/recorder/audio/original/" + id), $async$loadRecording$1);
            case 8:
              // returning from await.
              $async$goto = 9;
              return P._asyncAwait($async$self.recording.processed.loadAudio$2($async$self.context, t1 + "/recorder/audio/" + id), $async$loadRecording$1);
            case 9:
              // returning from await.
              $async$self.buffer = $async$self.recording.original.clone$0(0);
              $async$self.leftTrim = B.toNum($async$self.recording.settings.$index(0, "leftTrim"), -1);
              t1 = $async$self.rightTrim = B.toNum($async$self.recording.settings.$index(0, "rightTrim"), -1);
              t4 = $async$self.leftTrim;
              if (typeof t4 !== "number") {
                $async$returnValue = t4.$ge();
                // goto return
                $async$goto = 1;
                break;
              }
              if (t4 >= 0) {
                if (typeof t1 !== "number") {
                  $async$returnValue = t1.$ge();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t5 = t1 >= 0 && t4 < t1;
              } else
                t5 = false;
              if (t5)
                $async$self.buffer.trim$2(0, t4, t1);
              $async$self.buffer.generateWaveform$1($async$self.wf.bars.length);
              leftClip = B.toNum($async$self.recording.settings.$index(0, "leftClip"), 0);
              rightClip = B.toNum($async$self.recording.settings.$index(0, "rightClip"), 1);
              $async$self.wf.setClip$2(leftClip, rightClip);
              type$.ButtonElement._as($async$self.dialog.querySelector("#save-button")).disabled = false;
              $async$self.wf.animate$0(0);
              $async$self.set$dirty(false);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              P.print("Error loading audio recording: " + H.S(e));
              t1 = $async$self.wf;
              t1 = t1.info;
              t1.toString;
              C.TextElement_methods.setInnerHtml$1(t1, "Error Loading Audio");
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#waveform-container"), t3)).remove$1(0, "loading");
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadRecording$1, $async$completer);
    },
    addRow$1: function(_, rec) {
      var item, t1, t2, sid, $name, list, t3, t4, len, count,
        template = type$.TemplateElement._as(document.querySelector("#recording-studio-item-template"));
      if (template != null) {
        item = template.content.querySelector(".sample-item");
        if (item != null) {
          t1 = type$.Element;
          item = t1._as(item.cloneNode(true));
          item.toString;
          t2 = H.S(rec.id);
          item.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("id"), t2);
          t2 = type$.HtmlElement;
          sid = t2._as(item.querySelector(".sound-id"));
          if (sid != null)
            J.setInnerHtml$1$x(sid, H.S(rec.id));
          sid = t2._as(item.querySelector(".sample-id"));
          if (sid != null)
            J.setInnerHtml$1$x(sid, "(" + H.S(rec.id) + ")");
          $name = t2._as(item.querySelector(".sample-name"));
          if ($name != null)
            J.setInnerHtml$1$x($name, rec.name);
          J.set$innerHtml$x(item.querySelector(".sample-duration"), J.toStringAsFixed$1$n(rec.duration, 1) + "s");
          list = t2._as(this.dialog.querySelector(".sample-list"));
          if (list != null) {
            t3 = list.children;
            t4 = t3.length;
            if (0 === t4)
              list.appendChild(item);
            else {
              if (0 >= t4)
                return H.ioore(t3, 0);
              list.insertBefore(item, t1._as(t3[0]));
            }
            this._registerRowEvents$3(list, item, rec);
            len = list.children.length;
            count = t2._as(this.dialog.querySelector("#sample-count"));
            if (count != null)
              J.setInnerHtml$1$x(count, "" + len);
          }
        }
      }
    },
    _registerEvents$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t3, t4, t5, fileInput, t6, t1, t2;
      var $async$_registerEvents$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.dialog;
              t2 = type$.Element;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              t4 = type$.ElementList_Element;
              t5 = type$._ElementListEventStreamImpl_MouseEvent;
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".close-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure($async$self));
              fileInput = type$.InputElement._as($async$self.dialog.querySelector("#file-input"));
              if (fileInput != null) {
                t1 = $async$self.dialog;
                t1.toString;
                H.checkTypeBound(t2, t2, "T", "querySelectorAll");
                new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#upload-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure0($async$self, fileInput));
                t1 = type$._ElementEventStreamImpl_Event;
                t6 = t1._eval$1("~(1)")._as(new Q.RecordingStudio__registerEvents_closure1($async$self, fileInput));
                type$.void_Function._as(null);
                W._EventStreamSubscription$(fileInput, "input", t6, false, t1._precomputed1);
              }
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#eq-container"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure2($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#stop-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure3($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#record-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure4($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#loop-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure5($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#play-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure6($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#pause-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure7($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#save-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure8($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#trim-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure9($async$self));
              t1 = $async$self.dialog;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll("#reset-button"), t3)), false, "click", t5).listen$1(new Q.RecordingStudio__registerEvents_closure10($async$self));
              t5 = $async$self.dialog;
              t5.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t1 = type$._ElementListEventStreamImpl_Event;
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t5.querySelectorAll("#edit-name"), t3)), false, "change", t1).listen$1(new Q.RecordingStudio__registerEvents_closure11($async$self));
              t5 = $async$self.dialog;
              t5.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t5.querySelectorAll("#edit-name"), t3)), false, "input", t1).listen$1(new Q.RecordingStudio__registerEvents_closure12($async$self));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_registerEvents$0, $async$completer);
    },
    _registerRowEvents$3: function(list, item, rec) {
      var count, t1, t2, t3, t4, audio, source, _this = this,
        _s16_ = "querySelectorAll",
        _s5_ = "click",
        id = H._asIntNullable(rec.id);
      if (typeof id !== "number")
        return id.$ge();
      if (id >= 0) {
        count = type$.HtmlElement._as(_this.dialog.querySelector("#sample-count"));
        t1 = type$.Element;
        H.checkTypeBound(t1, t1, "T", _s16_);
        t2 = type$._FrozenElementList_Element;
        t3 = type$.ElementList_Element;
        t4 = type$._ElementListEventStreamImpl_MouseEvent;
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".edit-sample"), t2)), false, _s5_, t4).listen$1(new Q.RecordingStudio__registerRowEvents_closure(_this));
        audio = type$.AudioElement._as(item.querySelector("audio"));
        if (audio != null) {
          source = document.createElement("source");
          source.src = _this.datastore.host + "/recorder/audio/" + id;
          audio.appendChild(source);
        }
        H.checkTypeBound(t1, t1, "T", _s16_);
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".sample-badge, .sample-name"), t2)), false, _s5_, t4).listen$1(new Q.RecordingStudio__registerRowEvents_closure0(_this, item));
        H.checkTypeBound(t1, t1, "T", _s16_);
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".add-sample-button"), t2)), false, _s5_, t4).listen$1(new Q.RecordingStudio__registerRowEvents_closure1(item));
        D.DropdownMenu_armMenu(item.querySelector(".sample-menu-button"), new Q.RecordingStudio__registerRowEvents_closure2(_this, list, item, id, rec, count));
      }
    },
    _studio$_playPreview$1: function(item) {
      var t1, t2, t3, _this = this,
        audio = type$.AudioElement._as(item.querySelector("audio"));
      if (audio == null)
        return;
      P.promiseToFuture(audio.play(), type$.dynamic);
      item.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("id"));
      _this._showLoading$1(item);
      t1 = type$._ElementEventStreamImpl_Event;
      t2 = t1._eval$1("~(1)");
      t3 = t2._as(new Q.RecordingStudio__playPreview_closure(_this, item));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(audio, "play", t3, false, t1);
      W._EventStreamSubscription$(audio, "ended", t2._as(new Q.RecordingStudio__playPreview_closure0(_this, item)), false, t1);
      W._EventStreamSubscription$(audio, "pause", t2._as(new Q.RecordingStudio__playPreview_closure1(_this, item)), false, t1);
    },
    _showLoading$1: function(item) {
      var t2,
        _s15_ = ".sample-badge i",
        _s16_ = "querySelectorAll",
        _s13_ = ".sample-badge",
        t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-play");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-pause");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).add$1(0, "fa-headphones");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).add$1(0, "loading");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).remove$1(0, "playing");
    },
    _hideLoading$1: function(item) {
      var t2,
        _s15_ = ".sample-badge i",
        _s16_ = "querySelectorAll",
        _s13_ = ".sample-badge",
        t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).add$1(0, "fa-play");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-pause");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).remove$1(0, "loading");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).remove$1(0, "playing");
    },
    _twoDigit$1: function(d) {
      return d >= 0 && d < 10 ? "0" + d : "" + d;
    },
    set$recording: function(recording) {
      this.recording = type$.Recording._as(recording);
    },
    set$_clean: function(_clean) {
      this._clean = H._asBoolNullable(_clean);
    }
  };
  Q.RecordingStudio_show_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      R.UserAccounts_login(this.$this.datastore);
    },
    $signature: 0
  };
  Q.RecordingStudio_loadUserRecordings_closure.prototype = {
    call$1: function(r) {
      return this.$this.addRow$1(0, type$.Recording._as(r));
    },
    $signature: 75
  };
  Q.RecordingStudio_uploadAudioFile_closure.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio_uploadAudioFile_closure(type$.ProgressEvent._as(e));
    },
    $call$body$RecordingStudio_uploadAudioFile_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, ab, t1, t2, t3, exception, $async$exception;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              t1 = $async$self.$this;
              t2 = t1.context;
              $async$goto = 6;
              return P._asyncAwait((t2 && C.AudioContext_methods).decodeAudioData$1(t2, type$.Uint8List._as(C.FileReader_methods.get$result($async$self.reader)).buffer), $async$call$1);
            case 6:
              // returning from await.
              ab = $async$result;
              t1.buffer.reshape$2(ab.numberOfChannels, H._asIntNullable(ab.sampleRate));
              t1.recording.original.reshape$2(ab.numberOfChannels, H._asIntNullable(ab.sampleRate));
              t1.recording.processed.reshape$2(ab.numberOfChannels, H._asIntNullable(ab.sampleRate));
              t1.buffer.append$1(0, ab);
              t1.recording.original.append$1(0, ab);
              t1.buffer.generateWaveform$1(t1.wf.bars.length);
              t1.recording.name = $async$self._box_0.filename;
              type$.InputElement._as(t1.dialog.querySelector("#edit-name")).value = t1.recording.name;
              t1.set$dirty(true);
              t2 = t1.dialog;
              t3 = type$.Element;
              t2.toString;
              H.checkTypeBound(t3, t3, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#effects-container"), type$._FrozenElementList_Element)).remove$1(0, "hidden");
              type$.ButtonElement._as(t1.dialog.querySelector("#save-button")).disabled = false;
              t1.wf.animate$0(0);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              t1 = $async$self.$this.wf;
              t1 = t1.info;
              t1.toString;
              C.TextElement_methods.setInnerHtml$1(t1, "0.00 s");
              window.alert("Error decoding audio file. Check to make sure your file is a WAV or MP3 audio file.");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 12
  };
  Q.RecordingStudio__registerEvents_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.pause$0(0);
      if (H.boolConversionCheck(!t1._studio$_dirty || window.confirm("You have unsaved changes. Are you sure you want to close?"))) {
        E.Dialog_closeModal();
        t1.dialog = null;
      }
    },
    $signature: 0
  };
  Q.RecordingStudio__registerEvents_closure0.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this.recorder;
      if (!(t1 != null && t1._recording))
        this.fileInput.click();
    },
    $signature: 0
  };
  Q.RecordingStudio__registerEvents_closure1.prototype = {
    call$1: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.uploadAudioFile$1($async$self.fileInput);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 76
  };
  Q.RecordingStudio__registerEvents_closure2.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.initAudio$0();
      t2 = t1.recorder;
      t3 = t2 != null;
      if (t3 && t2._recording)
        t2._recording = false;
      else if (t3 && t2._recorder$_stream != null) {
        t2.stopMicrophone$0();
        t1.eq.clear$0(0);
      } else
        t2.startMicrophone$0();
    },
    $signature: 0
  };
  Q.RecordingStudio__registerEvents_closure3.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure5(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure5: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.recorder;
              if (t1._recording)
                t1._recording = false;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure4.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure4(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure4: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.recordAudio$0();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure5.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.dialog;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#loop-button"), type$._FrozenElementList_Element)).toggle$1(0, "checked");
      t1.initAudio$0();
      t1.pause$0(0);
    },
    $signature: 0
  };
  Q.RecordingStudio__registerEvents_closure6.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure3(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure3: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.play$0(0);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure7.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure2(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure2: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.pause$0(0);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure8.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure1(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure1: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self.$this.saveRecording$0(), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure9.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure0(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure0: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.pause$0(0);
              t2 = t1.leftTrim;
              if (typeof t2 !== "number") {
                $async$returnValue = t2.$gt();
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = t1.wf;
              if (t2 > 0) {
                t3 = t3.getClipStart$0();
                t4 = t1.buffer;
                t5 = t4.samples;
                t4 = t4.sampleRate;
                if (typeof t4 !== "number") {
                  $async$returnValue = H.iae(t4);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.leftTrim = t2 + t3 * (t5 / t4);
                t4 = t1.rightTrim;
                t5 = t1.wf.getClipEnd$0();
                t3 = t1.buffer;
                t2 = t3.samples;
                t3 = t3.sampleRate;
                if (typeof t3 !== "number") {
                  $async$returnValue = H.iae(t3);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (typeof t4 !== "number") {
                  $async$returnValue = t4.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.rightTrim = t4 - (1 - t5) * (t2 / t3);
              } else {
                t2 = t3.getClipStart$0();
                t3 = t1.buffer;
                t4 = t3.samples;
                t3 = t3.sampleRate;
                if (typeof t3 !== "number") {
                  $async$returnValue = H.iae(t3);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.leftTrim = t2 * (t4 / t3);
                t3 = t1.wf.getClipEnd$0();
                t4 = t1.buffer;
                t2 = t4.samples;
                t4 = t4.sampleRate;
                if (typeof t4 !== "number") {
                  $async$returnValue = H.iae(t4);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.rightTrim = t3 * (t2 / t4);
              }
              t2 = t1.recording.original.clone$0(0);
              t1.buffer = t2;
              t2.trim$2(0, t1.leftTrim, t1.rightTrim);
              t1.buffer.generateWaveform$1(t1.wf.bars.length);
              t1.wf.setClip$2(0, 1);
              t1.wf.animate$0(0);
              type$.ButtonElement._as(t1.dialog.querySelector("#trim-button")).disabled = true;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure10.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerEvents_closure(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerEvents_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t1.pause$0(0);
              t1.resetEffects$0();
              t2 = t1.recording.original.clone$0(0);
              t1.buffer = t2;
              t2.generateWaveform$1(t1.wf.bars.length);
              t1.wf.animate$0(0);
              t1.set$dirty(true);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerEvents_closure11.prototype = {
    call$1: function(e) {
      var t1;
      type$.Event._as(e);
      t1 = this.$this;
      t1.recording.name = type$.InputElement._as(J.get$target$x(e)).value;
      t1.set$dirty(true);
    },
    $signature: 2
  };
  Q.RecordingStudio__registerEvents_closure12.prototype = {
    call$1: function(e) {
      type$.Event._as(e);
      this.$this.set$dirty(true);
    },
    $signature: 2
  };
  Q.RecordingStudio__registerRowEvents_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.initAudio$0();
    },
    $signature: 0
  };
  Q.RecordingStudio__registerRowEvents_closure0.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerRowEvents_closure0(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerRowEvents_closure0: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, audio, t1, t2;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.item;
              t2 = type$.Element;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              if (W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".sample-badge"), type$._FrozenElementList_Element)).contains$1(0, "playing")) {
                audio = type$.AudioElement._as(t1.querySelector("audio"));
                if (audio != null)
                  audio.pause();
              } else
                $async$self.$this._studio$_playPreview$1(t1);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerRowEvents_closure1.prototype = {
    call$1: function(e) {
      return this.$call$body$RecordingStudio__registerRowEvents_closure(type$.MouseEvent._as(e));
    },
    $call$body$RecordingStudio__registerRowEvents_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, t1, t2;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.item;
              t2 = type$.Element;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".add-sample-button i.fas"), t3)).toggle$1(0, "fa-angle-down");
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".add-sample-button i.fas"), t3)).toggle$1(0, "fa-angle-up");
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".use-it"), t3)).toggle$1(0, "hidden");
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  Q.RecordingStudio__registerRowEvents_closure2.prototype = {
    call$1: function(menu) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, action, t3, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.initAudio$0();
              t2 = J.get$dataset$x(menu);
              action = t2._attributes._html$_element.getAttribute("data-" + t2._toHyphenedName$1("action"));
              $async$goto = action === "edit" ? 2 : 4;
              break;
            case 2:
              // then
              t2 = type$.Element;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList($async$self.list.querySelectorAll(".sample-item"), type$._FrozenElementList_Element)).remove$1(0, "selected");
              t2 = $async$self.item;
              J.get$classes$x(t2).add$1(0, "selected");
              t1._showLoading$1(t2);
              $async$goto = 5;
              return P._asyncAwait(t1.loadRecording$1($async$self.id), $async$call$1);
            case 5:
              // returning from await.
              t3 = t1.dialog;
              (t3 && C.DivElement_methods).scrollTo$2(t3, 0, 0);
              t1._hideLoading$1(t2);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = action === "delete" ? 6 : 8;
              break;
            case 6:
              // then
              if (H.boolConversionCheck(window.confirm("Are you sure you want to delete this sound?"))) {
                J.remove$0$ax($async$self.item);
                t1.datastore.delete$1(0, $async$self.rec);
                t1 = $async$self.count;
                t2 = "" + $async$self.list.children.length;
                t1.toString;
                J.setInnerHtml$1$x(t1, t2);
              }
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = action === "copy" ? 9 : 11;
              break;
            case 9:
              // then
              t2 = $async$self.item;
              t1._showLoading$1(t2);
              t3 = $async$self.rec;
              $async$goto = 12;
              return P._asyncAwait(t3.loadAudioData$2(t1.context, t1.datastore), $async$call$1);
            case 12:
              // returning from await.
              t3 = t1.recording = t3.clone$0(0);
              t3.id = -1;
              t3.name = C.JSString_methods.$add("Copy of ", t3.name);
              $async$goto = 13;
              return P._asyncAwait(t1.saveRecording$0(), $async$call$1);
            case 13:
              // returning from await.
              t1._hideLoading$1(t2);
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              $async$goto = action === "wav" ? 14 : 16;
              break;
            case 14:
              // then
              t2 = $async$self.item;
              t1._showLoading$1(t2);
              t3 = $async$self.rec;
              $async$goto = 17;
              return P._asyncAwait(t3.loadAudioData$2(t1.context, t1.datastore), $async$call$1);
            case 17:
              // returning from await.
              $async$goto = 18;
              return P._asyncAwait(t3.processed.downloadWAV$1(J.$add$ansx(t3.name, ".wav")), $async$call$1);
            case 18:
              // returning from await.
              t1._hideLoading$1(t2);
              // goto join
              $async$goto = 15;
              break;
            case 16:
              // else
              $async$goto = action === "mp3" ? 19 : 20;
              break;
            case 19:
              // then
              t2 = $async$self.item;
              t1._showLoading$1(t2);
              t3 = $async$self.rec;
              $async$goto = 21;
              return P._asyncAwait(t3.loadAudioData$2(t1.context, t1.datastore), $async$call$1);
            case 21:
              // returning from await.
              $async$goto = 22;
              return P._asyncAwait(t3.processed.downloadMP3$1(J.$add$ansx(t3.name, ".mp3")), $async$call$1);
            case 22:
              // returning from await.
              t1._hideLoading$1(t2);
            case 20:
              // join
            case 15:
              // join
            case 10:
              // join
            case 7:
              // join
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 43
  };
  Q.RecordingStudio__playPreview_closure.prototype = {
    call$1: function(e) {
      var t2, t3,
        _s15_ = ".sample-badge i",
        _s16_ = "querySelectorAll",
        t1 = this.item;
      this.$this._hideLoading$1(t1);
      t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).add$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".sample-badge"), t3)).add$1(0, "playing");
    },
    $signature: 2
  };
  Q.RecordingStudio__playPreview_closure0.prototype = {
    call$1: function(e) {
      this.$this._hideLoading$1(this.item);
    },
    $signature: 2
  };
  Q.RecordingStudio__playPreview_closure1.prototype = {
    call$1: function(e) {
      this.$this._hideLoading$1(this.item);
    },
    $signature: 2
  };
  V.WaveformTrace.prototype = {
    clear$0: function(_) {
      var t1, t2, _i, _this = this;
      for (t1 = _this.bars, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].setAttribute("height", "0");
      _this.playhead.setAttribute("x1", "0");
      _this.playhead.setAttribute("x2", "0");
      _this.setClip$2(0, 1);
    },
    setClip$2: function(start, end) {
      var t2, _this = this,
        _s9_ = "transform",
        _s8_ = "position",
        t1 = _this.w;
      if (typeof start !== "number")
        return start.$mul();
      start *= t1;
      if (typeof end !== "number")
        return end.$mul();
      end *= t1;
      t1 = _this.lclip;
      t1.toString;
      t1.setAttribute(_s9_, "translate(" + H.S(start) + ", 0)");
      t1 = _this.lclip;
      t1.toString;
      t2 = H.S(start);
      t1.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t1))._toHyphenedName$1(_s8_), t2);
      t2 = _this.rclip;
      t2.toString;
      t2.setAttribute(_s9_, "translate(" + H.S(end) + ", 0)");
      t2 = _this.rclip;
      t2.toString;
      t1 = H.S(end);
      t2.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t2))._toHyphenedName$1(_s8_), t1);
      _this._renderClipRegion$0();
      _this._renderTimestamp$1(false);
    },
    getClipStart$0: function() {
      var c1, c2,
        _s8_ = "position",
        t1 = this.lclip;
      t1.toString;
      c1 = P.num_parse(t1.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t1))._toHyphenedName$1(_s8_)));
      t1 = this.rclip;
      t1.toString;
      c2 = P.num_parse(t1.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t1))._toHyphenedName$1(_s8_)));
      return Math.max(0, Math.min(H.checkNum(c1), H.checkNum(c2))) / this.w;
    },
    getClipEnd$0: function() {
      var c1, c2,
        _s8_ = "position",
        t1 = this.lclip;
      t1.toString;
      c1 = P.num_parse(t1.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t1))._toHyphenedName$1(_s8_)));
      t1 = this.rclip;
      t1.toString;
      c2 = P.num_parse(t1.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t1))._toHyphenedName$1(_s8_)));
      t1 = this.w;
      return Math.min(t1, Math.max(H.checkNum(c1), H.checkNum(c2))) / t1;
    },
    animate$1: function(_, position) {
      var t1, i, t2, t3, amin, amax, bh, php, _this = this,
        m = _this.h / 2;
      for (t1 = _this.recorder.buffer.waveform, t1 = P._ListQueueIterator$(t1, t1.$ti._precomputed1), i = 0; t1.moveNext$0();) {
        t2 = t1._collection$_current;
        if (i < _this.bars.length) {
          t3 = J.getInterceptor$asx(t2);
          amin = t3.$index(t2, 0);
          amax = t3.$index(t2, 1);
          if (typeof amax !== "number")
            return amax.$sub();
          if (typeof amin !== "number")
            return H.iae(amin);
          bh = Math.max(4, m * (amax - amin));
          t2 = _this.bars;
          if (i >= t2.length)
            return H.ioore(t2, i);
          t2 = t2[i];
          t2.toString;
          t2.setAttribute("height", H.S(bh));
          t2 = _this.bars;
          if (i >= t2.length)
            return H.ioore(t2, i);
          t2 = t2[i];
          t2.toString;
          t2.setAttribute("y", H.S(m - bh * 0.5));
          ++i;
        }
      }
      php = i * _this.bw;
      if (position >= 0)
        php = _this.w * Math.max(0, Math.min(1, Math.min(position, _this.getClipEnd$0())));
      t1 = _this.playhead;
      t1.toString;
      t1.setAttribute("x1", H.S(php));
      t1 = _this.playhead;
      t1.toString;
      t1.setAttribute("x2", H.S(php));
      _this._renderTimestamp$1(false);
    },
    animate$0: function($receiver) {
      return this.animate$1($receiver, -1);
    },
    _waveform$_render$1: function(container) {
      var t1, t2, $parent, t3, t4, t5, t6, t7, line, t8, i, temp, _this = this,
        _s26_ = "http://www.w3.org/2000/svg";
      if (container == null)
        return;
      t1 = document;
      t2 = type$.SvgElement;
      $parent = type$.GElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      container.appendChild($parent);
      t3 = type$.RectElement;
      t4 = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
      t5 = _this.w;
      t6 = _this.h;
      t7 = type$.String;
      (t4 && C.RectElement_methods).set$attributes(t4, P.LinkedHashMap_LinkedHashMap$_literal(["x", "0", "y", "0", "width", "" + t5, "height", "" + t6, "fill", "#2e303f", "fill-opacity", "1.0", "pointer-events", "none"], t7, t7));
      _this.clip = t4;
      $parent.appendChild(t4);
      t4 = type$.LineElement;
      line = t4._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "line")));
      t8 = t6 / 2;
      (line && C.LineElement_methods).set$attributes(line, P.LinkedHashMap_LinkedHashMap$_literal(["x1", "0", "y1", H.S(t8), "x2", "" + t5, "y2", H.S(t8), "stroke", "#fff3"], t7, t7));
      $parent.appendChild(line);
      for (t8 = _this.color, i = 0; i < _this.bars.length; ++i) {
        temp = t1.createElementNS("http://www.w3.org/2000/svg", "rect");
        temp = t3._as(t2._as(temp));
        C.RectElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["width", H.S(_this.bw - 2), "height", "0", "x", H.S(_this.bw * i), "y", "0", "rx", H.S(_this.bw * 0.3), "fill", t8], t7, t7));
        C.JSArray_methods.$indexSet(_this.bars, i, temp);
        $parent.appendChild(temp);
      }
      t3 = t4._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "line")));
      (t3 && C.LineElement_methods).set$attributes(t3, P.LinkedHashMap_LinkedHashMap$_literal(["x1", "0", "y1", "0", "x2", "0", "y2", "" + t6, "stroke", "white", "stroke-width", "1.5", "class", "playhead"], t7, t7));
      _this.playhead = t3;
      $parent.appendChild(t3);
      t3 = _this._buildClipLine$1(0);
      _this.lclip = t3;
      $parent.appendChild(t3);
      t3 = _this._buildClipLine$1(t5);
      _this.rclip = t3;
      $parent.appendChild(t3);
      t1 = type$.TextElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "text")));
      (t1 && C.TextElement_methods).set$attributes(t1, P.LinkedHashMap_LinkedHashMap$_literal(["x", "" + (t5 - 10), "y", "" + (t6 - 10), "class", "info-text"], t7, t7));
      _this.info = t1;
      C.TextElement_methods.setInnerHtml$1(t1, "0.00 s");
      $parent.appendChild(_this.info);
    },
    _renderClipRegion$0: function() {
      var i, t2, t3, bx, _this = this,
        t1 = _this.w,
        start = _this.getClipStart$0() * t1,
        end = _this.getClipEnd$0() * t1;
      for (t1 = _this.color, i = 0; t2 = _this.bars, i < t2.length; ++i) {
        t3 = _this.bw;
        bx = t3 * i;
        if (bx + t3 / 2 < start || bx > end)
          t2[i].setAttribute("fill", "#777");
        else
          t2[i].setAttribute("fill", t1);
      }
      t1 = _this.clip;
      t1.toString;
      t1.setAttribute("x", H.S(start));
      t1 = _this.clip;
      t1.toString;
      t1.setAttribute("width", H.S(end - start));
    },
    _renderTimestamp$1: function(dragging) {
      var duration, start, end, _this = this,
        t1 = _this.recorder,
        t2 = t1.buffer,
        t3 = t2.samples;
      t2 = t2.sampleRate;
      if (typeof t2 !== "number")
        return H.iae(t2);
      duration = t3 / t2;
      start = _this.getClipStart$0() * duration;
      end = _this.getClipEnd$0() * duration;
      if (t1.saving) {
        t1 = _this.info;
        t1.toString;
        C.TextElement_methods.setInnerHtml$1(t1, "Saving...");
      } else {
        t1 = _this.info;
        if (dragging) {
          t2 = "[" + C.JSNumber_methods.toStringAsFixed$1(start, 2) + " - " + C.JSNumber_methods.toStringAsFixed$1(end, 2) + "]";
          t1.toString;
          C.TextElement_methods.setInnerHtml$1(t1, t2);
        } else {
          t2 = C.JSNumber_methods.toStringAsFixed$1(end - start, 2) + " s";
          t1.toString;
          C.TextElement_methods.setInnerHtml$1(t1, t2);
        }
      }
    },
    _buildClipLine$1: function(startPos) {
      var t2, t3, t4, clip, t5, line, t6, handle, dot, ring, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = {};
      t1.dragging = false;
      t1.pos = startPos;
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.GElement;
      clip = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      clip.setAttribute("transform", "translate(0, 0)");
      clip.setAttribute("class", "clip-handle");
      t5 = "" + startPos;
      clip.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(clip))._toHyphenedName$1("position"), t5);
      line = type$.LineElement._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "line")));
      t5 = _this.h;
      t6 = type$.String;
      (line && C.LineElement_methods).set$attributes(line, P.LinkedHashMap_LinkedHashMap$_literal(["x1", "0", "y1", "0", "x2", "0", "y2", "" + t5, "stroke", "white", "stroke-width", "1.5"], t6, t6));
      clip.appendChild(line);
      handle = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      (handle && C.GElement_methods).set$attributes(handle, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(0, " + H.S(t5 / 2) + ")"], t6, t6));
      t5 = type$.CircleElement;
      dot = t5._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "circle")));
      (dot && C.CircleElement_methods).set$attributes(dot, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "0", "cy", "0", "r", "6", "fill", "white"], t6, t6));
      ring = t5._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "circle")));
      (ring && C.CircleElement_methods).set$attributes(ring, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "0", "cy", "0", "r", "10", "stroke", "white", "stroke-width", "1.5", "fill", "none"], t6, t6));
      handle.appendChild(dot);
      handle.appendChild(ring);
      clip.appendChild(handle);
      t6 = type$._ElementEventStreamImpl_MouseEvent;
      t3 = t6._eval$1("~(1)")._as(new V.WaveformTrace__buildClipLine_closure(t1, _this, clip));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(clip, "mousedown", t3, false, t6._precomputed1);
      t6 = type$.void_Function_MouseEvent;
      t3 = type$.MouseEvent;
      W._EventStreamSubscription$(t2, "mousemove", t6._as(new V.WaveformTrace__buildClipLine_closure0(t1, _this, clip)), false, t3);
      W._EventStreamSubscription$(t2, "mouseup", t6._as(new V.WaveformTrace__buildClipLine_closure1(t1, _this)), false, t3);
      return clip;
    },
    set$bars: function(bars) {
      this.bars = type$.List_RectElement._as(bars);
    }
  };
  V.WaveformTrace__buildClipLine_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      if (this.$this.disabled)
        return;
      t1 = this._box_0;
      t1.dragging = true;
      t2 = this.clip;
      t1.pos = P.num_parse(t2.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t2))._toHyphenedName$1("position")));
    },
    $signature: 0
  };
  V.WaveformTrace__buildClipLine_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, t3, pos, x, t4, t5, duration, _this = this;
      type$.MouseEvent._as(e);
      t1 = _this._box_0;
      if (t1.dragging && !_this.$this.disabled) {
        t2 = t1.pos;
        t3 = e.movementX;
        e.movementY;
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return H.iae(t3);
        pos = t2 + t3;
        t1.pos = pos;
        t1 = _this.$this;
        t3 = t1.w;
        x = Math.max(0, Math.min(t3, pos));
        t2 = _this.clip;
        t2.setAttribute("transform", "translate(" + H.S(x) + ", 0)");
        t4 = H.S(x);
        t2.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t2))._toHyphenedName$1("position"), t4);
        t1._renderClipRegion$0();
        t1._renderTimestamp$1(true);
        t4 = t1.recorder;
        t2 = t4.buffer;
        t5 = t2.samples;
        t2 = t2.sampleRate;
        if (typeof t2 !== "number")
          return H.iae(t2);
        duration = t5 / t2;
        t1 = t1.bars;
        t4.pause$0(0);
        t2 = t4.buffer;
        if (t2.samples > 0 && t4.context != null)
          t4.synth.playSlice$4(t2, t4.context.destination, x / t3 * duration, duration / t1.length);
        t4.set$dirty(true);
      }
    },
    $signature: 0
  };
  V.WaveformTrace__buildClipLine_closure1.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      this._box_0.dragging = false;
      t1 = this.$this;
      t1._renderClipRegion$0();
      t1._renderTimestamp$1(false);
    },
    $signature: 0
  };
  L.TextCell.prototype = {
    get$gadgetTemplate: function() {
      return "text-gadget-template";
    },
    insert$2: function(_, container, displayOrder) {
      var t1, t2, t3, el, t4, _this = this;
      _this.super$TunePadCell$insert(0, container, displayOrder);
      D.DropdownMenu_armMenu(_this.root.querySelector(".menu-button"), new L.TextCell_insert_closure(_this));
      t1 = _this.gadget;
      t2 = "#gadget-" + H.S(t1.id) + " .text-editor";
      t3 = new A.QuillEditor(t2, _this);
      el = document.querySelector(t2);
      if (el != null)
        el.parentElement;
      t4 = $.$get$_context();
      if (t4.$index(0, "onQillUpdate") == null)
        t4.$indexSet(0, "onQuillUpdate", A.quill_QuillEditor_onEditorUpdate$closure());
      $.$get$QuillEditor_editorUpdateMap().$indexSet(0, t2, t3.get$_onEditorUpdate());
      _this.editor = t3;
      t3.initialize$0(0);
      _this.editor._noEvents = true;
      t2 = t1.idata.$index(0, "content");
      t3 = _this.editor;
      if (t2 == null) {
        t4.callMethod$2("setQuillText", [t3.id, "New text ... "]);
        t3._dirty = true;
      } else
        t3.setRichText$1(type$.Map_dynamic_dynamic._as(t1.idata.$index(0, "content")));
      _this.editor._noEvents = false;
    },
    play$0: function(_) {
    },
    pause$0: function(_) {
    },
    onUpdated$1: function($event) {
      var t1;
      if ($event.remote) {
        t1 = this.editor;
        t1._noEvents = true;
        t1.setRichText$1(type$.Map_dynamic_dynamic._as(this.gadget.idata.$index(0, "content")));
        this.editor._noEvents = false;
      }
    },
    onDeleted$1: function($event) {
    },
    onMessage$1: function(_, $event) {
    },
    onCollaboratorEdit$1: function(change) {
      var t1 = this.editor;
      t1._noEvents = true;
      $.$get$_context().callMethod$2("updateQuillContent", [t1.id, C.C_JsonCodec.encode$2$toEncodable(change, null)]);
      t1._dirty = true;
      this.editor._noEvents = false;
    },
    _doContextMenu$1: function(menu) {
      var t1, data, clone;
      menu.toString;
      switch (menu.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(menu))._toHyphenedName$1("command"))) {
        case "delete-track":
          P.Timer_Timer(C.Duration_200000, new L.TextCell__doContextMenu_closure(this));
          return;
        case "clone-track":
          t1 = this.gadget;
          data = t1.save$0(0);
          data.$indexSet(0, "id", -1);
          data.$indexSet(0, "remix_parent", t1.id);
          J.$indexSet$ax(data.$index(0, "idata"), "cloned", true);
          clone = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
          clone.type = "gadgets";
          clone.name = "New Track";
          clone.load$1(0, data);
          this.datastore.create$1(0, clone);
          return;
      }
    }
  };
  L.TextCell_insert_closure.prototype = {
    call$1: function(menu) {
      this.$this._doContextMenu$1(type$.HtmlElement._as(menu));
      D.DropdownMenu_closeAllMenus();
    },
    $signature: 8
  };
  L.TextCell__doContextMenu_closure.prototype = {
    call$0: function() {
      if (H.boolConversionCheck(window.confirm("Are you sure you want to delete this track?"))) {
        var t1 = this.$this;
        t1.datastore.delete$1(0, t1.gadget);
        t1 = t1.root;
        (t1 && C.DivElement_methods).remove$0(t1);
      }
    },
    $signature: 1
  };
  L._TextCell_TunePadCell_EditorListener.prototype = {};
  D.TimelineListener.prototype = {};
  D.Timeline.prototype = {
    setInstrument$1: function(instrument) {
      var t1 = this.container;
      t1.toString;
      new P.AttributeClassSet(t1).removeWhere$1(0, new D.Timeline_setInstrument_closure());
      t1 = this.container;
      t1.toString;
      new P.AttributeClassSet(t1).add$1(0, instrument);
    },
    xToBeat$1: function(x) {
      var t1, t2, t3, _this = this,
        p = _this.container.createSVGPoint();
      p.x = x;
      t1 = p.matrixTransform(_this.container.getScreenCTM().inverse()).x;
      t2 = _this.width;
      t3 = _this.beats;
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t3 = Math.max(40, t2 / t3);
      if (typeof t1 !== "number")
        return t1.$div();
      return t1 / t3;
    },
    set$playhead: function(p) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, generator, _this = this,
        _s11_ = "highlighted",
        _s4_ = "note";
      _this._playhead = p;
      _this._renderPlayhead$0();
      for (t1 = _this.notes, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2), t3 = _this.listener, t4 = type$.Note; t2.moveNext$0();) {
        t5 = t2.get$current(t2);
        if (typeof p !== "number")
          return p.$le();
        if (!(p <= 0)) {
          t6 = t5.time;
          if (typeof t6 !== "number")
            return t6.$gt();
          if (!(t6 > p)) {
            t7 = t5.duration;
            if (typeof t7 !== "number")
              return H.iae(t7);
            t7 = t6 + t7 < p;
            t6 = t7;
          } else
            t6 = true;
        } else
          t6 = true;
        if (t6) {
          t6 = t1.$index(0, t5);
          t6.toString;
          if (new P.AttributeClassSet(t6).contains$1(0, _s11_)) {
            t6 = t1.$index(0, t5);
            t6.toString;
            new P.AttributeClassSet(t6).remove$1(0, _s11_);
            if (_this._down) {
              t6 = t3.editor;
              t6.toString;
              $.$get$_context().callMethod$2("clearTraceMarkers", [t6.id]);
              t6 = t3.synth;
              t5 = t5.params;
              t6.releaseNote$1(t4._as(t5.$index(0, _s4_)));
              t3.instrument.noteOff$1(t4._as(t5.$index(0, _s4_))._note);
            }
          }
        }
      }
      for (t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2), t5 = type$.Map_dynamic_dynamic, t6 = type$.JsLinkedHashMap_int_SynthNode, t7 = t3.clock; t2.moveNext$0();) {
        t8 = t2.get$current(t2);
        if (typeof p !== "number")
          return p.$gt();
        if (p > 0) {
          t9 = t8.time;
          if (typeof t9 !== "number")
            return t9.$le();
          if (t9 <= p) {
            t10 = t8.duration;
            if (typeof t10 !== "number")
              return H.iae(t10);
            t10 = t9 + t10 > p;
            t9 = t10;
          } else
            t9 = false;
        } else
          t9 = false;
        if (t9) {
          t9 = t1.$index(0, t8);
          t9.toString;
          if (!new P.AttributeClassSet(t9).contains$1(0, _s11_)) {
            if (_this._down) {
              t9 = t8.params;
              if (t9.containsKey$1(0, "line")) {
                t10 = t3.editor;
                t11 = H._asIntNullable(t9.$index(0, "line"));
                t10.toString;
                if (t11 != null && t11 > 0)
                  $.$get$_context().callMethod$2("setTraceMarker", [t10.id, t11]);
              }
              if (t7.context != null) {
                t10 = t8.command;
                if (t10 === "play")
                  t3.synth._play$3(t4._as(t9.$index(0, _s4_)), t7.context.destination, null);
                else if (t10 === "sound") {
                  t10 = t3.synth;
                  t11 = t4._as(t9.$index(0, _s4_));
                  t12 = H._asStringNullable(t9.$index(0, "sound-url"));
                  t13 = t7.context.destination;
                  t10.toString;
                  t14 = t13.context;
                  generator = new U.SynthChain(t14, new H.JsLinkedHashMap(t6));
                  if (typeof t12 != "string")
                    H.throwExpression(H.argumentErrorValue(t12));
                  generator.loadPatch$1(t5._as(C.C_JsonCodec.decode$2$reviver(0, H.stringReplaceAllUnchecked('    {\n      "nodes": [\n        { "type": "out", "id": 0 },\n        {\n          "type": "sample",\n          "samples": [\n            {\n              "sample": "<SOUNDURL>",\n              "step": 60\n            }\n          ],\n          "id": 1,\n          "level": 1\n        },\n        {\n          "type": "adsr",\n          "A": 0.01,\n          "D": 0.1,\n          "S": 1,\n          "R": 0.3,\n          "level": 1,\n          "id": 2\n        }\n      ],\n      "routing": [\n        { "source": 1, "dest": 2, "type": "in" },\n        { "source": 2, "dest": 0, "type": "out" }\n      ]\n    }', "<SOUNDURL>", t12), null)));
                  t10._play$3(t11, t13, generator);
                }
              }
              t3.instrument.noteOn$1(t4._as(t9.$index(0, _s4_))._note);
            }
            t8 = t1.$index(0, t8);
            t8.toString;
            new P.AttributeClassSet(t8).add$1(0, _s11_);
          }
        }
      }
      if (!_this._down && _this._scroll_root != null) {
        t1 = _this._scroll_root;
        t2 = _this.width;
        t3 = _this.beats;
        if (typeof t2 !== "number")
          return t2.$div();
        if (typeof t3 !== "number")
          return H.iae(t3);
        t3 = Math.max(40, t2 / t3);
        if (typeof p !== "number")
          return p.$mul();
        J.scrollTo$2$x(t1, p * t3 - t2 * 0.8, 0);
      }
    },
    insert$1: function(_, element) {
      var t1, t2, _this = this,
        template = type$.TemplateElement._as(document.querySelector("#timeline-template"));
      if (template == null || element == null)
        return;
      t1 = type$.dynamic;
      t1 = element.attachShadow(P.convertDartToNative_Dictionary(P.LinkedHashMap_LinkedHashMap$_literal(["mode", "open"], t1, t1)));
      _this.root = t1;
      t1.appendChild(template.content.cloneNode(true));
      t1 = type$.SvgSvgElement._as(_this.root.querySelector("svg.container"));
      _this.container = t1;
      t1.appendChild(_this.parent);
      _this._scroll_root = type$.HtmlElement._as(_this.root.querySelector(".scroll-container"));
      t1 = window;
      t2 = type$.void_Function_Event._as(new D.Timeline_insert_closure(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t1, "resize", t2, false, type$.Event);
      _this._render$0();
      _this._registerTouchEvents$0();
    },
    _render$0: function() {
      var scrollContainer, rect, t2, t3, t4, beatNumbers, beatBacker, t5, t6, t7, i, t8, x, temp, _i, t, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        t1 = _this.container;
      if (t1 == null)
        return;
      t1 = t1.parentElement;
      scrollContainer = type$.DivElement._as(t1.parentElement);
      if (scrollContainer != null) {
        rect = scrollContainer.getBoundingClientRect();
        t1 = _this.width = rect.width;
        t2 = rect.height;
        _this.height = t2;
        if (t1 === 0)
          t1 = _this.width = 800;
        if (t2 === 0)
          _this.height = 120;
        t2 = _this.container;
        t3 = _this.beats;
        if (typeof t1 !== "number")
          return t1.$div();
        if (typeof t3 !== "number")
          return H.iae(t3);
        t2.setAttribute("viewBox", "0 0 " + H.S(Math.max(40, t1 / t3) * t3) + " " + H.S(_this.height));
        t3 = _this.container.parentElement.style;
        t1 = _this.width;
        t2 = _this.beats;
        if (typeof t1 !== "number")
          return t1.$div();
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = H.S(Math.max(40, t1 / t2) * t2 - 2) + "px";
        t3.width = t2;
      }
      t1 = _this.parent;
      if (t1 != null)
        C.GElement_methods.remove$0(t1);
      t1 = document;
      t2 = type$.SvgElement;
      t3 = type$.GElement;
      t4 = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      _this.parent = t4;
      _this.container.appendChild(t4);
      beatNumbers = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
      beatBacker = type$.RectElement._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "rect")));
      t4 = _this.width;
      t5 = _this.beats;
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t5 !== "number")
        return H.iae(t5);
      t5 = H.S(Math.max(40, t4 / t5) * t5);
      t4 = _this.width;
      t6 = _this.beats;
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t6 !== "number")
        return H.iae(t6);
      t7 = type$.String;
      (beatBacker && C.RectElement_methods).set$attributes(beatBacker, P.LinkedHashMap_LinkedHashMap$_literal(["class", "ruler", "width", t5, "height", "20", "x", H.S(0 * Math.max(40, t4 / t6)), "y", "0"], t7, t7));
      beatNumbers.appendChild(beatBacker);
      t6 = type$._ElementEventStreamImpl_MouseEvent;
      t4 = t6._eval$1("~(1)")._as(new D.Timeline__render_closure(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(beatBacker, "mousedown", t4, false, t6._precomputed1);
      t4 = type$.LineElement;
      t5 = type$.TextElement;
      i = 1;
      while (true) {
        t6 = _this.beats;
        if (typeof t6 !== "number")
          return H.iae(t6);
        if (!(i <= t6))
          break;
        c$0: {
          t8 = _this.width;
          if (typeof t8 !== "number")
            return t8.$div();
          x = (i - 1) * Math.max(40, t8 / t6);
          temp = t1.createElementNS("http://www.w3.org/2000/svg", "text");
          temp = t5._as(t2._as(temp));
          temp.setAttribute("class", "ruler-marks");
          t6 = i === 1;
          temp.setAttribute("x", H.S(t6 ? x + 9 : x + 5));
          temp.setAttribute("y", "10");
          C.TextElement_methods.setInnerHtml$1(temp, t6 ? "BEAT" : "" + i);
          beatNumbers.appendChild(temp);
          if (t6)
            break c$0;
          temp = t1.createElementNS("http://www.w3.org/2000/svg", "line");
          temp = t4._as(t2._as(temp));
          C.LineElement_methods.set$attributes(temp, P.LinkedHashMap_LinkedHashMap$_literal(["class", "beat-line", "x1", H.S(x), "y1", "0", "x2", H.S(x), "y2", H.S(_this.height)], t7, t7));
          beatNumbers.appendChild(temp);
        }
        ++i;
      }
      _this.parent.appendChild(beatNumbers);
      if (_this.trace != null && true) {
        t4 = _this.notes;
        t4.clear$0(0);
        for (t5 = _this.trace.trace, t6 = t5.length, _i = 0; _i < t5.length; t5.length === t6 || (0, H.throwConcurrentModificationError)(t5), ++_i) {
          t = t5[_i];
          t7 = t.command;
          if (t7 === "play" || t7 === "sound")
            t4.$indexSet(0, t, _this._renderNote$1(t));
        }
        t4.get$values(t4).forEach$1(0, new D.Timeline__render_closure0(_this));
      }
      _this.parent.appendChild(_this._playheadLine);
      _this._renderPlayhead$0();
      if (_this._waveform == null) {
        _this._waveform = t3._as(t2._as(C.HtmlDocument_methods.createElementNS$2(t1, _s26_, "g")));
        _this._renderWaveform$0();
      }
      t1 = _this._waveform;
      (t1 && C.GElement_methods).remove$0(t1);
    },
    _registerTouchEvents$0: function() {
      var t2, t3, t4, _this = this,
        t1 = _this._playheadLine;
      t1.toString;
      t2 = type$._ElementEventStreamImpl_MouseEvent;
      t3 = t2._eval$1("~(1)");
      t4 = t3._as(new D.Timeline__registerTouchEvents_closure(_this));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(t1, "mousedown", t4, false, t2);
      t4 = _this.container;
      t4.toString;
      W._EventStreamSubscription$(t4, "mousemove", t3._as(new D.Timeline__registerTouchEvents_closure0(_this)), false, t2);
      t4 = _this.container;
      t4.toString;
      W._EventStreamSubscription$(t4, "mouseup", t3._as(new D.Timeline__registerTouchEvents_closure1(_this)), false, t2);
      W._EventStreamSubscription$(document, "mouseup", type$.void_Function_MouseEvent._as(new D.Timeline__registerTouchEvents_closure2(_this)), false, type$.MouseEvent);
    },
    _renderPlayhead$0: function() {
      var _this = this,
        h = Math.max(100, H.checkNum(_this.height)),
        t1 = _this._playhead,
        t2 = _this.width,
        t3 = _this.beats;
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t3 = Math.max(40, t2 / t3);
      if (typeof t1 !== "number")
        return t1.$mul();
      t2 = _this._playheadLine;
      t2.setAttribute("d", "M " + H.S(t1 * t3 - 1) + " " + H.S(h) + " l 0 -" + H.S(h - 20) + " l -6 -6 l 0 -15 l 14 0 l 0 15 l -6 6 l 0 " + H.S(h) + " Z");
      t2.setAttribute("class", "playhead");
    },
    _renderNote$1: function(t) {
      var t4, t5, n, t6, minNote, t7, t8, t9, tt, _this = this, _s4_ = "note",
        rect = type$.RectElement._as(type$.SvgElement._as(C.HtmlDocument_methods.createElementNS$2(document, "http://www.w3.org/2000/svg", "rect"))),
        t1 = t.duration,
        t2 = _this.width,
        t3 = _this.beats;
      if (typeof t2 !== "number")
        return t2.$div();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t3 = Math.max(40, t2 / t3);
      if (typeof t1 !== "number")
        return t1.$mul();
      t3 = H.S(Math.max(0, t1 * t3 - 2));
      t1 = _this.height;
      if (typeof t1 !== "number")
        return t1.$sub();
      t1 = H.S(Math.max(5, (t1 - 20) / _this.tracks) - 2);
      t2 = t.time;
      t4 = _this.width;
      t5 = _this.beats;
      if (typeof t4 !== "number")
        return t4.$div();
      if (typeof t5 !== "number")
        return H.iae(t5);
      t5 = Math.max(40, t4 / t5);
      if (typeof t2 !== "number")
        return t2.$mul();
      t5 = H.S(t2 * t5);
      t2 = t.params;
      t4 = type$.Note;
      n = C.JSNumber_methods.round$0(t4._as(t2.$index(0, _s4_))._note);
      t6 = _this.trace;
      minNote = t6 == null || t6._minNote < 0 ? 0 : C.JSNumber_methods.round$0(t6._minNote);
      t6 = _this.tracks;
      t7 = C.JSInt_methods.$mod(n - minNote, t6);
      t8 = _this.height;
      if (typeof t8 !== "number")
        return t8.$sub();
      t9 = type$.String;
      (rect && C.RectElement_methods).set$attributes(rect, P.LinkedHashMap_LinkedHashMap$_literal(["class", "timeline-note", "width", t3, "height", t1, "x", t5, "y", H.S((t6 - t7 - 1) * Math.max(5, (t8 - 20) / t6) + 20 + 1)], t9, t9));
      tt = H._isInt(t4._as(t2.$index(0, _s4_))._note) ? H.S(t4._as(t2.$index(0, _s4_))._note) : C.JSNumber_methods.toStringAsFixed$1(t4._as(t2.$index(0, _s4_))._note, 2);
      t1 = type$._ElementEventStreamImpl_MouseEvent;
      t2 = t1._eval$1("~(1)");
      t3 = t2._as(new D.Timeline__renderNote_closure(_this, t, tt));
      type$.void_Function._as(null);
      t1 = t1._precomputed1;
      W._EventStreamSubscription$(rect, "mouseenter", t3, false, t1);
      W._EventStreamSubscription$(rect, "mouseleave", t2._as(new D.Timeline__renderNote_closure0(_this, t)), false, t1);
      W._EventStreamSubscription$(rect, "mousedown", t2._as(new D.Timeline__renderNote_closure1(_this, t)), false, t1);
      W._EventStreamSubscription$(rect, "mouseup", t2._as(new D.Timeline__renderNote_closure2(_this, t)), false, t1);
      return rect;
    },
    _renderWaveform$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$_renderWaveform$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_renderWaveform$0, $async$completer);
    }
  };
  D.Timeline_setInstrument_closure.prototype = {
    call$1: function(c) {
      return H._asStringNullable(c) !== "container";
    },
    $signature: 11
  };
  D.Timeline_insert_closure.prototype = {
    call$1: function(e) {
      return this.$this._render$0();
    },
    $signature: 29
  };
  D.Timeline__render_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1._down = true;
      t2 = e.clientX;
      e.clientY;
      t1.set$playhead(t1.xToBeat$1(t2));
      t2 = t1.listener;
      t1 = t1._playhead;
      t2._pauseHelper$0();
      t2.clock.pause$1(0, t2);
      t2._lastTrace = t2.trace.advanceToBeat$1(t1);
    },
    $signature: 0
  };
  D.Timeline__render_closure0.prototype = {
    call$1: function(note) {
      type$.SvgElement._as(note);
      return this.$this.parent.appendChild(note);
    },
    $signature: 78
  };
  D.Timeline__registerTouchEvents_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.listener;
      t2._pauseHelper$0();
      t2.clock.pause$1(0, t2);
      t1._down = true;
    },
    $signature: 0
  };
  D.Timeline__registerTouchEvents_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._down) {
        t2 = e.clientX;
        e.clientY;
        t1.set$playhead(t1.xToBeat$1(t2));
      }
    },
    $signature: 0
  };
  D.Timeline__registerTouchEvents_closure1.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._down) {
        t1._down = false;
        t1.listener.onDragPlayheadStop$1(t1._playhead);
      }
    },
    $signature: 0
  };
  D.Timeline__registerTouchEvents_closure2.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._down) {
        t1._down = false;
        t1.listener.onDragPlayheadStop$1(t1._playhead);
      }
    },
    $signature: 0
  };
  D.Timeline__renderNote_closure.prototype = {
    call$1: function(e) {
      var t1, t2, hint, acc, t3, _s4_ = "line", _s4_0 = "note",
        _s10_ = ".note-info";
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (!t1._down) {
        t2 = this.t.params;
        if (t2.containsKey$1(0, _s4_))
          t1.listener.editor.setTraceMarker$1(H._asIntNullable(t2.$index(0, _s4_)));
        hint = type$.DivElement._as(t1.root.querySelector("#note-hint"));
        t1 = type$.Note;
        acc = C.JSString_methods.substring$1(C.List_0[C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1._as(t2.$index(0, _s4_0))._note), 12)], 1);
        if (acc === "")
          acc = "&nbsp;";
        if (hint != null) {
          J.set$innerHtml$x(hint.querySelector(".note-name"), C.JSString_methods.substring$2(C.List_0[C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1._as(t2.$index(0, _s4_0))._note), 12)], 0, 1));
          J.set$innerHtml$x(hint.querySelector(".accidental"), acc);
          J.set$innerHtml$x(hint.querySelector(".octave"), "" + (C.JSNumber_methods._tdivFast$1(t1._as(t2.$index(0, _s4_0))._note, 12) - 1));
          J.set$innerHtml$x(hint.querySelector(_s10_), "Note " + this.tt);
          if (t2.containsKey$1(0, _s4_)) {
            t1 = hint.querySelector(_s10_);
            t3 = J.getInterceptor$x(t1);
            t3.set$innerHtml(t1, J.$add$ansx(t3.get$innerHtml(t1), " (line " + H.S(t2.$index(0, _s4_)) + ")"));
          }
          hint.classList.add("show");
        }
      }
    },
    $signature: 0
  };
  D.Timeline__renderNote_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#note-hint"), type$._FrozenElementList_Element)).remove$1(0, "show");
      t1 = t1.listener;
      t2 = t1.editor;
      t2.toString;
      $.$get$_context().callMethod$2("clearTraceMarkers", [t2.id]);
      t1.synth.releaseNote$1(type$.Note._as(this.t.params.$index(0, "note")));
    },
    $signature: 0
  };
  D.Timeline__renderNote_closure1.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4, _s4_ = "note";
      type$.MouseEvent._as(e);
      t1 = this.$this.listener;
      t2 = this.t;
      t3 = t1.clock;
      if (t3.context != null) {
        t4 = t2.command;
        if (t4 === "play")
          t1.synth._play$3(type$.Note._as(t2.params.$index(0, _s4_)), t3.context.destination, null);
        else if (t4 === "sound") {
          t4 = t2.params;
          t1.synth.playSound$3(type$.Note._as(t4.$index(0, _s4_)), H._asStringNullable(t4.$index(0, "sound-url")), t3.context.destination);
        }
      }
      t2 = t2.params;
      if (t2.containsKey$1(0, "line"))
        t1.editor.setTraceMarker$1(H._asIntNullable(t2.$index(0, "line")));
      t1.instrument.noteOn$1(type$.Note._as(t2.$index(0, _s4_))._note);
    },
    $signature: 0
  };
  D.Timeline__renderNote_closure2.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this.listener;
      t2 = this.t.params;
      t3 = type$.Note;
      t1.synth.releaseNote$1(t3._as(t2.$index(0, "note")));
      t1.instrument.noteOff$1(t3._as(t2.$index(0, "note"))._note);
    },
    $signature: 0
  };
  R.PythonTrack.prototype = {
    get$gadgetTemplate: function() {
      return "gadget-template";
    },
    get$default_code: function() {
      return "# New TunePad track\n\n\n\n";
    },
    insert$2: function(_, container, displayOrder) {
      var t1, t2, t3, t4, t5, _this = this,
        _s21_ = ".instrument-container",
        _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s9_ = "mousedown",
        _s5_ = "click";
      _this.super$PythonCell$insert(0, container, displayOrder);
      _this.timeline.insert$1(0, type$.HtmlElement._as(_this.root.querySelector(".timeline-container")));
      _this._initVoiceMenu$0();
      _this._setInstrument$1(_this.voice);
      _this._loadPatch$1(_this.voice);
      t1 = _this.root;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      t3 = type$._FrozenElementList_Element;
      t4 = type$.ElementList_Element;
      t5 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(_s21_), t3)), false, _s9_, t5).listen$1(new R.PythonTrack_insert_closure(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(_s21_), t3)), false, "blur", type$._ElementListEventStreamImpl_Event).listen$1(new R.PythonTrack_insert_closure0(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".play-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure1(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".pause-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure2(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".step-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure3(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".record-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure4(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".stop-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure5(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".clear-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure6(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".copy-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure7(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".quant-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure8(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".record-close-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure9(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".metronome-button"), t3)), false, _s5_, t5).listen$1(new R.PythonTrack_insert_closure10(_this));
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t1.querySelectorAll(".voice-selector"), t3)), false, _s9_, t5).listen$1(new R.PythonTrack_insert_closure11(_this));
      _this.updateView$1(false);
    },
    updateView$1: function(remote) {
      var t1, p, t2, g, div, patchId, _this = this,
        _s8_ = "timeline",
        _s10_ = "instrument";
      _this.super$PythonCell$updateView(remote);
      if (_this.instrument == null)
        return;
      t1 = _this.gadget;
      p = J.clamp$2$n(B.toNum(t1.idata.$index(0, "pan"), 0), -1, 1);
      t1.idata.$indexSet(0, "pan", p);
      t2 = _this._panNode;
      if (t2 != null)
        t2.pan.value = p;
      g = J.clamp$2$n(B.toNum(t1.idata.$index(0, "gain"), 1), 0, 3.5);
      t1.idata.$indexSet(0, "gain", g);
      t2 = _this._gainNode;
      if (t2 != null)
        t2.gain.value = g;
      if (B.toBool(t1.idata.$index(0, "show-timeline"), false))
        _this._showElement$1(_s8_);
      else
        _this._hideElement$1(_s8_);
      if (B.toBool(t1.idata.$index(0, "show-editor"), false))
        _this._showElement$1("editor");
      else
        _this._hideElement$1("editor");
      if (B.toBool(t1.idata.$index(0, "show-instrument"), false))
        _this._showElement$1(_s10_);
      else
        _this._hideElement$1(_s10_);
      _this._setMidiInput$1(B.toBool(t1.idata.$index(0, "midi-input"), false));
      _this._setMidiOutput$1(B.toBool(t1.idata.$index(0, "midi-output"), false));
      t2 = _this.editor;
      t2.toString;
      t2 = H._asStringNullable($.$get$_context().callMethod$2("getCode", [t2.id])).split("\n").length;
      div = type$.DivElement._as(_this.root.querySelector(".gadget-info"));
      if (div != null)
        C.DivElement_methods.setInnerHtml$1(div, H.S(t1.beats) + " BEATS &mdash; " + t2 + " LINES");
      patchId = B.toInt0(t1.idata.$index(0, "patch"), 9);
      t1 = _this.patches;
      if (t1.containsKey$1(0, patchId)) {
        t2 = _this.voice.id;
        t2 = patchId == null ? t2 != null : patchId !== t2;
      } else
        t2 = false;
      if (t2) {
        _this.set$voice(0, t1.$index(0, patchId));
        _this._setInstrument$1(_this.voice);
        _this._loadPatch$1(_this.voice);
      }
    },
    onTempoChange$0: function() {
      var t2, t3, _this = this,
        t1 = _this.clock;
      if (t1._subscribers.contains$1(0, _this)) {
        t2 = t1.get$beats();
        t3 = _this.gadget.beats;
        if (typeof t3 !== "number")
          return H.iae(t3);
        C.JSNumber_methods.$mod(t2, t3);
        _this.synth._synth$_bpm = t1._bpm;
      }
      _this.metronome.cancelAllNotes$0();
    },
    onTimeSignatureChange$0: function() {
      this.stop$0(0);
      this.compile$0();
      this.metronome.cancelAllNotes$0();
    },
    onClockReset$0: function() {
      this.stop$0(0);
    },
    onClockTimeChange$0: function() {
      var t1, t2, t3, _this = this;
      _this.stop$0(0);
      _this._pauseHelper$0();
      t1 = _this.clock;
      t1.pause$1(0, _this);
      t2 = _this.timeline;
      if (t2 != null) {
        t1 = t1.get$beats();
        t3 = _this.gadget.beats;
        if (typeof t3 !== "number")
          return H.iae(t3);
        t2.set$playhead(C.JSNumber_methods.$mod(t1, t3));
      }
    },
    onDragPlayheadStop$1: function(playhead) {
      var t1, _this = this;
      _this._pauseHelper$0();
      t1 = _this.clock;
      t1.pause$1(0, _this);
      _this.synth.releaseAllNotes$0();
      _this._lastTrace = _this.trace.advanceToBeat$1(playhead);
      t1.setTime$1(playhead);
    },
    onPythonDone$1: function(outputs) {
      var t3, out, t4, out_count, output, t5, t6, t7, _this = this,
        _s12_ = ".output-hint",
        _s16_ = "querySelectorAll",
        t1 = _this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "visible");
      out = type$.PreElement._as(_this.root.querySelector(".output"));
      if (out != null)
        C.PreElement_methods.setInnerHtml$1(out, "--- PYTHON OUTPUT ---\n");
      t1 = _this.trace;
      C.JSArray_methods.set$length(t1.trace, 0);
      t1._beats = t1._timer = t1.bug = 0;
      t1._maxNote = t1._minNote = -1;
      for (t1 = J.get$iterator$ax(outputs), t4 = type$.JsLinkedHashMap_String_dynamic, out_count = 0; t1.moveNext$0();) {
        output = t1.get$current(t1);
        if (output != null && typeof output == "string") {
          t5 = J.getInterceptor$s(output);
          if (t5.startsWith$1(output, "**TRACE**"))
            _this.trace.addEvent$1(t5.substring$1(output, 9));
          else if (t5.trim$0(output) !== "") {
            t5 = _this.trace;
            t5.toString;
            H._asStringNullable(output);
            t6 = t5._timer;
            t7 = new H.JsLinkedHashMap(t4);
            t7.$indexSet(0, "output", output);
            C.JSArray_methods.add$1(t5.trace, new Y.TraceEvent("print", t6, t7));
            C.PreElement_methods.setInnerHtml$1(out, J.$add$ansx(out.innerHTML, output + "\n"));
            ++out_count;
          }
        }
      }
      _this._loadCustomSounds$0();
      t1 = _this.clock;
      t4 = t1._beatsPerMeasure;
      t5 = _this.trace._beats;
      if (typeof t4 !== "number")
        return H.iae(t4);
      t6 = _this.gadget;
      t4 = t6.beats = t4 * C.JSDouble_methods.ceil$0(t5 / t4);
      t1 = t4 <= 0 ? t6.beats = t1._beatsPerMeasure : t4;
      t4 = _this.timeline;
      t5 = _this.trace;
      t4.beats = t1;
      t4.trace = t5;
      t4.tracks = 12;
      t4._waveform = null;
      t4._render$0();
      if (out_count > 0) {
        t1 = _this.root;
        t1.toString;
        H.checkTypeBound(t2, t2, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).add$1(0, "visible");
        J.set$innerHtml$x(_this.root.querySelector(".output-count"), "" + out_count);
        P.Timer_Timer(C.Duration_3000000, new R.PythonTrack_onPythonDone_closure(_this));
      }
    },
    play$0: function(_) {
      var t1, t2, id, t3, t4, t5, t6, b, _this = this, _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s6_ = "hidden";
      if (_this.editor._codemirror$_dirty)
        _this.compile$1(true);
      else {
        t1 = _this.clock;
        if (t1.context != null) {
          t2 = _this.gadget;
          id = t2.id;
          t3 = _this.root;
          t4 = type$.Element;
          t3.toString;
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          t5 = type$._FrozenElementList_Element;
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(".play-button"), t5)).add$1(0, _s6_);
          t3 = _this.root;
          t3.toString;
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(".pause-button"), t5)).remove$1(0, _s6_);
          t3 = "#cell-nav-" + H.S(id) + " .shortcut-play-button";
          t6 = document;
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t6.querySelectorAll(t3), t5)).add$1(0, _s6_);
          t3 = "#cell-nav-" + H.S(id) + " .shortcut-pause-button";
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t6.querySelectorAll(t3), t5)).remove$1(0, _s6_);
          t3 = "#mixer-" + H.S(id) + " .mixer-play-button";
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t6.querySelectorAll(t3), t5)).add$1(0, _s6_);
          t3 = "#mixer-" + H.S(id) + " .mixer-pause-button";
          H.checkTypeBound(t4, t4, _s1_, _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t6.querySelectorAll(t3), t5)).remove$1(0, _s6_);
          t3 = t1._subscribers;
          if (!t3.contains$1(0, _this)) {
            t4 = t1.context;
            t4 = (t4 && C.AudioContext_methods).createGain$0(t4);
            _this._gainNode = t4;
            t4.gain.value = H._asNumNullable(t2.idata.$index(0, "gain"));
            t4 = t1.context.createStereoPanner();
            _this._panNode = t4;
            t4.pan.value = H._asNumNullable(t2.idata.$index(0, "pan"));
            _this._panNode.connect(_this._gainNode, 0, 0);
            _this._gainNode.connect(t1.context.destination, 0, 0);
            _this.synth._synth$_bpm = t1._bpm;
            t4 = t1.context;
            if (t4 != null && t3._collection$_length === 0) {
              t4 = t4.currentTime;
              t5 = t1._start;
              if (typeof t4 !== "number")
                return t4.$sub();
              t1._start = t4 - t5;
            }
            t3.add$1(0, _this);
            t1._listeners.add$1(0, _this);
            t1 = t1.get$beats();
            t2 = t2.beats;
            if (typeof t2 !== "number")
              return H.iae(t2);
            b = C.JSNumber_methods.$mod(t1, t2);
            _this.synth.scheduleNotes$3$offset(_this.trace, _this._panNode, b);
            _this._looped = false;
            _this._lastTime = -1;
            C.Window_methods.get$animationFrame(window).then$1$1(_this.get$animate(_this), type$.void);
          }
        }
      }
      _this.trace.bug = 0;
    },
    _loadCustomSounds$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, patch, t2, t3, t4, t5, t6, t7, _i, url, patchId, patch0, exception, t1, $async$exception, $async$temp1;
      var $async$_loadCustomSounds$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.clock;
              if (t1.context == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = $async$self.trace.trace, t3 = t2.length, t4 = $async$self.datastore, t5 = type$.SynthPatch, t6 = $async$self.patches, t7 = type$.dynamic, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              e = t2[_i];
              $async$goto = e.command === "sound" ? 6 : 8;
              break;
            case 6:
              // then
              if (e.params.containsKey$1(0, "sound") && typeof e.params.$index(0, "sound") == "number") {
                url = t4.host + "/recorder/audio/" + H.S(e.params.$index(0, "sound"));
                e.params.$indexSet(0, "sound-url", url);
                $async$self.synth.loadCustomSound$2(url, t1.context);
              }
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = e.command === "patch" ? 9 : 10;
              break;
            case 9:
              // then
              $async$goto = H._isInt(e.params.$index(0, "patch")) ? 11 : 12;
              break;
            case 11:
              // then
              patchId = H._asIntNullable(e.params.$index(0, "patch"));
              patch0 = new L.SynthPatch(P.LinkedHashMap_LinkedHashMap$_empty(t7, t7), patchId, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              patch0.voice = "My Patch";
              patch0.type = "patch";
              patch = patch0;
              $async$goto = t6.containsKey$1(0, patchId) ? 13 : 15;
              break;
            case 13:
              // then
              patch = t6.$index(0, patchId);
              e.params.$indexSet(0, "name", patch.voice);
              e.params.$indexSet(0, "patch", patch.patch);
              // goto join
              $async$goto = 14;
              break;
            case 15:
              // else
              $async$handler = 17;
              $async$temp1 = t5;
              $async$goto = 20;
              return P._asyncAwait(t4.retrieve$1(patch), $async$_loadCustomSounds$0);
            case 20:
              // returning from await.
              patch = $async$temp1._as($async$result);
              e.params.$indexSet(0, "name", patch.voice);
              e.params.$indexSet(0, "patch", patch.patch);
              $async$handler = 2;
              // goto after finally
              $async$goto = 19;
              break;
            case 17:
              // catch
              $async$handler = 16;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              H.printString("patch not found");
              // goto after finally
              $async$goto = 19;
              break;
            case 16:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 19:
              // after finally
            case 14:
              // join
            case 12:
              // join
            case 10:
              // join
            case 7:
              // join
            case 4:
              // for update
              t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_loadCustomSounds$0, $async$completer);
    },
    pause$0: function(_) {
      var t1, t2, t3, _this = this;
      _this._pauseHelper$0();
      t1 = _this.clock;
      t1._listeners.add$1(0, _this);
      t2 = t1._subscribers;
      if (t2.contains$1(0, _this)) {
        t2.remove$1(0, _this);
        if (t2._collection$_length === 0 && t1.context != null) {
          t2 = t1.context.currentTime;
          t3 = t1._start;
          if (typeof t2 !== "number")
            return t2.$sub();
          t1._start = t2 - t3;
        }
      }
    },
    stop$0: function(_) {
      var t1, _this = this;
      _this._pauseHelper$0();
      _this._lastTrace = null;
      _this.trace.bug = 0;
      t1 = _this.timeline;
      if (t1 != null)
        t1.set$playhead(0);
    },
    _pauseHelper$0: function() {
      var t3, t4, _this = this, _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s6_ = "hidden",
        id = _this.gadget.id,
        t1 = _this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".play-button"), t3)).remove$1(0, _s6_);
      t1 = _this.root;
      t1.toString;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".pause-button"), t3)).add$1(0, _s6_);
      t1 = "#cell-nav-" + H.S(id) + " .shortcut-play-button";
      t4 = document;
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(t1), t3)).remove$1(0, _s6_);
      t1 = "#cell-nav-" + H.S(id) + " .shortcut-pause-button";
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(t1), t3)).add$1(0, _s6_);
      t1 = "#mixer-" + H.S(id) + " .mixer-play-button";
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(t1), t3)).remove$1(0, _s6_);
      t1 = "#mixer-" + H.S(id) + " .mixer-pause-button";
      H.checkTypeBound(t2, t2, _s1_, _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(t1), t3)).add$1(0, _s6_);
      t1 = _this._gainNode;
      if (t1 != null) {
        t1.disconnect();
        _this._gainNode = null;
      }
      t1 = _this._panNode;
      if (t1 != null) {
        t1.disconnect();
        _this._panNode = null;
      }
      _this.synth.cancelAllNotes$0();
      _this.instrument.allNotesOff$0();
    },
    stopRecording$0: function() {
      this.root.classList.remove("recording");
      this.stopMetronome$0();
      var t1 = this.recorder;
      if (t1.recording)
        t1.recording = false;
    },
    updateRecording$0: function() {
      if (this.recorder.recording) {
        var output = type$.PreElement._as(this.root.querySelector(".recording-pad"));
        if (output != null) {
          C.PreElement_methods.setInnerHtml$1(output, J.toString$0$(this.recorder));
          output.scrollTop = C.JSInt_methods.round$0(C.JSNumber_methods.round$0(output.scrollHeight));
        }
      }
    },
    step$0: function(_) {
      var t2, e, advance, t3, t4, t5, t6, _this = this,
        t = _this._lastTrace,
        t1 = _this.clock;
      t1.stopAll$0();
      _this._lastTrace = t;
      if (t != null) {
        _this.editor.setTraceMarker$1(H._asIntNullable(t.params.$index(0, "line")));
        _this.timeline.set$playhead(_this._lastTrace.time);
        _this.trace.advanceToEvent$1(_this._lastTrace);
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_TraceEvent);
      e = _this.trace.advance$0(0);
      advance = 0;
      while (true) {
        t3 = e != null;
        if (!(t3 && e.command !== "trace"))
          break;
        C.JSArray_methods.add$1(t2, e);
        advance = Math.max(advance, H.checkNum(e.duration));
        t3 = _this.trace;
        t4 = t3.bug;
        t5 = t3.trace;
        t6 = t5.length;
        t3 = t4 < t6 ? t3.bug = t4 + 1 : t4;
        e = t3 < t6 ? t5[t3] : null;
      }
      if (t3 && e.command === "trace") {
        t1 = t1.context;
        if (t1 != null)
          _this.synth.scheduleNotes$3$offset(new Y.Trace(t2), t1.destination, e.time);
        t1 = _this.timeline;
        t2 = e.time;
        if (typeof t2 !== "number")
          return t2.$add();
        t1.set$playhead(t2 + advance - 0.01);
        _this.editor.setTraceMarker$1(H._asIntNullable(e.params.$index(0, "line")));
        _this._lastTrace = e;
      } else {
        _this.trace.bug = 0;
        _this.timeline.set$playhead(0);
        _this._lastTrace = null;
      }
    },
    animate$1: function(_, t) {
      var t1, t2, current, remaining, t3, _i, e, t4, t5, t6, _this = this, _s4_ = "note";
      H._asNumNullable(t);
      t1 = _this.clock;
      if (t1._subscribers.contains$1(0, _this) && t1.context != null) {
        t1 = t1.get$beats();
        t2 = _this.gadget.beats;
        if (typeof t2 !== "number")
          return H.iae(t2);
        current = C.JSNumber_methods.$mod(t1, t2);
        remaining = t2 - current;
        if (current < _this._lastTime) {
          if (!_this._looped)
            _this.synth.scheduleNotes$3$offset(_this.trace, _this._panNode, current);
          _this._lastTime = -1;
          _this._looped = false;
          _this.instrument.allNotesOff$0();
        } else if (remaining > 0 && remaining < 0.5 && !_this._looped) {
          _this.synth.scheduleNotes$3$delay(_this.trace, _this._panNode, remaining);
          _this._looped = true;
        }
        for (t1 = _this.trace.trace, t2 = t1.length, t3 = type$.Note, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          e = t1[_i];
          t4 = e.time;
          t5 = _this._lastTime;
          if (typeof t4 !== "number")
            return t4.$gt();
          if (t4 > t5 && t4 <= current)
            if (e.command === "trace")
              _this._lastTrace = e;
          if (e.command === "play") {
            if (t4 <= current) {
              t6 = e.duration;
              if (typeof t6 !== "number")
                return H.iae(t6);
              t6 = t4 + t6 > current;
            } else
              t6 = false;
            if (t6) {
              t4 = e.params;
              if (!_this.instrument.isNoteOn$1(t3._as(t4.$index(0, _s4_))._note))
                _this.instrument.noteOn$1(t3._as(t4.$index(0, _s4_))._note);
            } else {
              if (t4 <= t5) {
                t6 = e.duration;
                if (typeof t6 !== "number")
                  return H.iae(t6);
                t5 = t4 + t6 > t5;
                t4 = t5;
              } else
                t4 = false;
              if (t4)
                _this.instrument.noteOff$1(t3._as(e.params.$index(0, _s4_))._note);
              else if (_this._looped)
                _this.instrument.noteOff$1(t3._as(e.params.$index(0, _s4_))._note);
            }
          }
        }
        _this.timeline.set$playhead(current);
        _this._lastTime = current;
        C.Window_methods.get$animationFrame(window).then$1$1(_this.get$animate(_this), type$.void);
      }
    },
    _initVoiceMenu$0: function() {
      var t1, t2, t3, t4, t5, item, t6, _this = this,
        list = _this.root.querySelector(".voice-menu");
      if (list == null)
        return;
      for (t1 = _this.patches, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1), t2 = type$._ElementEventStreamImpl_MouseEvent, t3 = t2._eval$1("~(1)"), t4 = type$.void_Function, t2 = t2._precomputed1; t1.moveNext$0();) {
        t5 = t1.get$current(t1);
        if (_this._matchingInstrument$1(t5)) {
          item = document.createElement("li");
          item.className = "menu-item";
          t6 = H.S(t5.id);
          item.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("patch"), t6);
          C.LIElement_methods.setInnerHtml$1(item, '<i class="fas"></i>' + H.S(t5.voice));
          list.appendChild(item);
          t5 = t3._as(new R.PythonTrack__initVoiceMenu_closure(_this, t5));
          t4._as(null);
          W._EventStreamSubscription$(item, "mousedown", t5, false, t2);
        }
      }
    },
    _matchingInstrument$1: function(patch) {
      var t2, _this = this,
        t1 = patch.instrument;
      if (t1 === "drums" && _this.gadget.instrument === "drumkit")
        return true;
      else if (t1 === "drumkit" && _this.gadget.instrument === "drums")
        return true;
      else {
        t2 = t1 === "piano";
        if (t2 && _this.gadget.instrument === "synth")
          return true;
        else if (t2 && _this.gadget.instrument === "marimba")
          return true;
        else
          return t1 == _this.gadget.instrument;
      }
    },
    _loadPatch$1: function(patch) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t3, t4, t1, t2;
      var $async$_loadPatch$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.root;
              t2 = type$.Element;
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              t3 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".voice-menu i.fas"), t3)).remove$1(0, "fa-check");
              t1 = $async$self.root;
              t4 = ".voice-menu .menu-item[data-patch='" + H.S(patch.id) + "'] .fas";
              t1.toString;
              H.checkTypeBound(t2, t2, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(t4), t3)).add$1(0, "fa-check");
              t1 = $async$self.clock;
              t2 = t1.context;
              t3 = $async$self.root;
              $async$goto = t2 != null ? 2 : 4;
              break;
            case 2:
              // then
              J.set$innerHtml$x(t3.querySelector(".voice-name"), "Loading...");
              $async$goto = 5;
              return P._asyncAwait($async$self.synth.loadPatch$3(patch.voice, patch.patch, t1.context), $async$_loadPatch$1);
            case 5:
              // returning from await.
              J.set$innerHtml$x($async$self.root.querySelector(".voice-name"), patch.voice.toUpperCase());
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              J.set$innerHtml$x(t3.querySelector(".voice-name"), patch.voice.toUpperCase());
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_loadPatch$1, $async$completer);
    },
    _setInstrument$1: function(patch) {
      var old, t1, id, t2, t3, t4, t5, t6, t7, _this = this, _s1_ = "g",
        _s26_ = "http://www.w3.org/2000/svg",
        _s5_ = "piano",
        _s12_ = ".gadget-icon",
        _s16_ = "querySelectorAll",
        container = type$.DivElement._as(_this.root.querySelector(".instrument-container"));
      if (container == null)
        return;
      old = _this.instrument;
      t1 = _this.gadget;
      id = t1.id;
      if (patch == null) {
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_PianoKey);
        t3 = document;
        t4 = type$.SvgElement;
        t5 = type$.GElement;
        t3 = new B.Piano(t2, t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))), _s5_, P.StreamController_StreamController(false, type$.NoteEvent), t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))));
        t3.height = 190;
        _this.instrument = t3;
      } else {
        t2 = patch.instrument;
        if (t2 === "drums" && !(old instanceof N.Drums))
          _this.instrument = N.Drums$(patch.patch);
        else if (t2 === "drumkit" && !(old instanceof F.DrumKit))
          _this.instrument = F.DrumKit$("#gadget-" + H.S(id), patch.patch);
        else if (t2 === "guitar" && !(old instanceof F.Guitar)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_GFret);
          t3 = H.setRuntimeTypeInfo([], type$.JSArray_SvgElement);
          t4 = P.StreamController_StreamController(false, type$.NoteEvent);
          t5 = document;
          t6 = type$.SvgElement;
          t7 = type$.GElement;
          t4 = new F.Guitar(t2, t3, "guitar", t4, t7._as(t6._as(C.HtmlDocument_methods.createElementNS$2(t5, _s26_, _s1_))));
          t4.fretboard = t7._as(t6._as(C.HtmlDocument_methods.createElementNS$2(t5, _s26_, _s1_)));
          _this.instrument = t4;
        } else if (t2 === "bass" && !(old instanceof Y.BassGuitar)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_BassFret);
          t3 = H.setRuntimeTypeInfo([], type$.JSArray_SvgElement);
          t4 = P.StreamController_StreamController(false, type$.NoteEvent);
          t5 = document;
          t6 = type$.SvgElement;
          t7 = type$.GElement;
          t4 = new Y.BassGuitar(t2, t3, "bass", t4, t7._as(t6._as(C.HtmlDocument_methods.createElementNS$2(t5, _s26_, _s1_))));
          t4.fretboard = t7._as(t6._as(C.HtmlDocument_methods.createElementNS$2(t5, _s26_, _s1_)));
          _this.instrument = t4;
        } else if (t2 === "sequencer" && !(old instanceof D.Sequencer)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_SequencerRow);
          t3 = document;
          t4 = type$.SvgElement;
          t5 = type$.GElement;
          t6 = t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_)));
          t7 = P.StreamController_StreamController(false, type$.NoteEvent);
          t3 = t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_)));
          t7 = new D.Sequencer(t2, t6, "sequencer", t7, t3);
          t4 = type$.String;
          (t6 && C.GElement_methods).set$attributes(t6, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translate(20, 30)"], t4, t4));
          t3.appendChild(t6);
          C.JSArray_methods.add$1(t2, D.SequencerRow$(t7, 0, 4, "hat", "gold"));
          C.JSArray_methods.add$1(t2, D.SequencerRow$(t7, 1, 7, "tom", "#2f2"));
          C.JSArray_methods.add$1(t2, D.SequencerRow$(t7, 2, 2, "snare", "magenta"));
          C.JSArray_methods.add$1(t2, D.SequencerRow$(t7, 3, 1, "kick", "cyan"));
          _this.instrument = t7;
        } else if (t2 === "piano" && !(old instanceof B.Piano)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_PianoKey);
          t3 = document;
          t4 = type$.SvgElement;
          t5 = type$.GElement;
          t3 = new B.Piano(t2, t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))), _s5_, P.StreamController_StreamController(false, type$.NoteEvent), t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))));
          t3.height = 190;
          _this.instrument = t3;
        } else if (t2 === "synth" && !(old instanceof B.Piano)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_PianoKey);
          t3 = document;
          t4 = type$.SvgElement;
          t5 = type$.GElement;
          t3 = new B.Piano(t2, t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))), _s5_, P.StreamController_StreamController(false, type$.NoteEvent), t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))));
          t3.height = 190;
          _this.instrument = t3;
        } else if (t2 === "marimba" && !(old instanceof B.Piano)) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_PianoKey);
          t3 = document;
          t4 = type$.SvgElement;
          t5 = type$.GElement;
          t3 = new B.Piano(t2, t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))), _s5_, P.StreamController_StreamController(false, type$.NoteEvent), t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))));
          t3.height = 190;
          _this.instrument = t3;
        } else if (old == null) {
          t2 = H.setRuntimeTypeInfo([], type$.JSArray_PianoKey);
          t3 = document;
          t4 = type$.SvgElement;
          t5 = type$.GElement;
          t3 = new B.Piano(t2, t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))), _s5_, P.StreamController_StreamController(false, type$.NoteEvent), t5._as(t4._as(C.HtmlDocument_methods.createElementNS$2(t3, _s26_, _s1_))));
          t3.height = 190;
          _this.instrument = t3;
        }
      }
      t2 = _this.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s12_), t4)).removeWhere$1(0, new R.PythonTrack__setInstrument_closure());
      t2 = _this.root;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s12_), t4)).add$1(0, patch.instrument);
      t2 = _this.timeline;
      if (t2 != null)
        t2.setInstrument$1(patch.instrument);
      if (old != null && old !== _this.instrument)
        old.unload$0();
      t2 = _this.instrument;
      if (t2.root == null) {
        t2.insert$1(0, container);
        _this._setMidiInput$1(B.toBool(t1.idata.$index(0, "midi-input"), false));
        t1 = _this.instrument._stream;
        new P._ControllerStream(t1, H._instanceType(t1)._eval$1("_ControllerStream<1>")).listen$1(new R.PythonTrack__setInstrument_closure0(_this));
      }
    },
    pulse$1: function(beat) {
      var t2, t3, i, n, _this = this,
        t1 = _this.clock;
      if (t1.context != null) {
        t2 = _this.root;
        t3 = type$.Element;
        t2.toString;
        H.checkTypeBound(t3, t3, "T", "querySelectorAll");
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".metronome-button"), type$._FrozenElementList_Element)).toggle$1(0, "tock");
        _this.metronome._synth$_bpm = t1._bpm;
        if (beat === 0) {
          i = 0;
          while (true) {
            t2 = t1._beatsPerMeasure;
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            if (i === 0) {
              n = new F.Note();
              n._note = Math.max(0, 24);
            } else {
              n = new F.Note();
              n._note = Math.max(0, 20);
            }
            _this.metronome._schedule$5(n, t1.context.destination, i, 0, null);
            ++i;
          }
        }
      }
    },
    stopMetronome$0: function() {
      var t2, t3, _this = this,
        t1 = _this.clock._metronomes;
      if (t1.contains$1(0, _this)) {
        t2 = _this.root;
        t3 = type$.Element;
        t2.toString;
        H.checkTypeBound(t3, t3, "T", "querySelectorAll");
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".metronome-button"), type$._FrozenElementList_Element)).remove$1(0, "playing");
        t1.remove$1(0, _this);
        _this.metronome.cancelAllNotes$0();
      }
    },
    _exportMidi$0: function() {
      var blob, objectUrl, link, _this = this,
        t1 = _this.clock;
      if (t1.context == null)
        return;
      blob = _this.midi.exportMidi$2(t1._bpm, _this.trace.toJSON$0());
      if (blob != null) {
        objectUrl = (self.URL || self.webkitURL).createObjectURL(blob);
        link = W.AnchorElement_AnchorElement();
        link.href = objectUrl;
        link.download = "tunepad-" + H.S(_this.gadget.name) + ".midi";
        link.click();
        (self.URL || self.webkitURL).revokeObjectURL(objectUrl);
      }
    },
    _downloadAudio$1: function(format) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, processed;
      var $async$_downloadAudio$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._exportAudio$1(format), $async$_downloadAudio$1);
            case 3:
              // returning from await.
              processed = $async$result;
              if (processed == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self.gadget.name;
              if (format === "mp3")
                processed.downloadMP3$1("tunepad-" + H.S(t1) + ".mp3");
              else
                processed.downloadWAV$1("tunepad-" + H.S(t1) + ".wav");
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_downloadAudio$1, $async$completer);
    },
    _exportAudio$1: function(format) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.GrowableAudioBuffer),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, processed, gain, recorder, total_length, e, c, src, progress, context, processed0, gain0, t2, dialog, m, t3, t4, t5, t1, $async$temp1;
      var $async$_exportAudio$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.clock;
                if (t1.context == null) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$self._pauseHelper$0();
                t1.pause$1(0, $async$self);
                context = t1.context;
                processed0 = new D.GrowableAudioBuffer(H.setRuntimeTypeInfo([], type$.JSArray_List_Float32List), P.ListQueue$(type$.List_num));
                processed0.reshape$2(2, 44100);
                processed = processed0;
                gain0 = (context && C.AudioContext_methods).createGain$0(context);
                gain0.gain.value = 0;
                gain = gain0;
                recorder = C.AudioContext_methods.createScriptProcessor$3(context, 1024, 2, 2);
                J._connect$3$x(recorder, type$.AudioNode._as(gain), 0, 0);
                J._connect$3$x(gain, context.destination, 0, 0);
                t2 = $async$self.synth;
                t1 = t1._bpm;
                t2._synth$_bpm = t1;
                t2 = $async$self.gadget.beats;
                if (typeof t2 !== "number") {
                  $async$returnValue = t2.$mul();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                total_length = t2 * 60 / t1;
                dialog = E.Dialog_openModal("#export-dialog-template", null);
                if (dialog != null) {
                  m = dialog.querySelector(".progress-status");
                  if (m != null)
                    J.set$innerHtml$x(m, "Exporting audio data...");
                }
                $async$self._setProgressStatus$1("0%");
                $async$self.synth.scheduleNotes$2($async$self.trace, recorder);
                t1 = P._StreamIterator$(new W._EventStream(type$.EventTarget._as(recorder), "audioprocess", false, type$._EventStream_AudioProcessingEvent), type$.AudioProcessingEvent);
                $async$handler = 3;
                t2 = type$.HtmlElement;
              case 6:
                // for condition
                $async$temp1 = H;
                $async$goto = 8;
                return P._asyncAwait(t1.moveNext$0(), $async$_exportAudio$1);
              case 8:
                // returning from await.
                if (!$async$temp1.boolConversionCheck($async$result)) {
                  // goto after for
                  $async$goto = 7;
                  break;
                }
                e = t1.get$current(t1);
                J.append$1$x(processed, e.inputBuffer);
                c = 0;
                while (true) {
                  t3 = c;
                  t4 = e.inputBuffer.numberOfChannels;
                  if (typeof t3 !== "number") {
                    $async$returnValue = t3.$lt();
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break $async$outer;
                  }
                  if (typeof t4 !== "number") {
                    $async$returnValue = H.iae(t4);
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break $async$outer;
                  }
                  if (!(t3 < t4))
                    break;
                  t3 = e.inputBuffer;
                  src = (t3 && C.AudioBuffer_methods).getChannelData$1(t3, c);
                  t3 = e.outputBuffer;
                  (t3 && C.AudioBuffer_methods).copyToChannel$3(t3, src, c, 0);
                  t3 = c;
                  if (typeof t3 !== "number") {
                    $async$returnValue = t3.$add();
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break $async$outer;
                  }
                  c = t3 + 1;
                }
                if ($async$self.synth.notes.length === 0) {
                  J.disconnect$0$x(gain);
                  J.disconnect$0$x(recorder);
                  gain = null;
                  recorder = null;
                  E.Dialog_closeModal();
                  $async$returnValue = processed;
                  $async$next = [1];
                  // goto finally
                  $async$goto = 4;
                  break;
                } else {
                  t3 = processed;
                  t4 = t3.samples;
                  t3 = t3.sampleRate;
                  if (typeof t3 !== "number") {
                    $async$returnValue = H.iae(t3);
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break;
                  }
                  t5 = total_length;
                  if (typeof t5 !== "number") {
                    $async$returnValue = H.iae(t5);
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break;
                  }
                  progress = Math.min(1, t4 / t3 / t5);
                  t5 = progress;
                  if (typeof t5 !== "number") {
                    $async$returnValue = t5.$mul();
                    $async$next = [1];
                    // goto finally
                    $async$goto = 4;
                    break;
                  }
                  t5 = "" + C.JSNumber_methods.round$0(t5 * 100) + "%";
                  m = t2._as(document.querySelector(".progress-dialog .progress-status"));
                  if (m != null)
                    J.setInnerHtml$1$x(m, t5);
                }
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
                $async$next.push(5);
                // goto finally
                $async$goto = 4;
                break;
              case 3:
                // uncaught
                $async$next = [2];
              case 4:
                // finally
                $async$handler = 2;
                $async$goto = 9;
                return P._asyncAwait(t1.cancel$0(0), $async$_exportAudio$1);
              case 9:
                // returning from await.
                // goto the next finally handler
                $async$goto = $async$next.pop();
                break;
              case 5:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
      });
      return P._asyncStartSync($async$_exportAudio$1, $async$completer);
    },
    _setProgressStatus$1: function($status) {
      var m = type$.HtmlElement._as(document.querySelector(".progress-dialog .progress-status"));
      if (m != null)
        J.setInnerHtml$1$x(m, $status);
    },
    _setMidiInput$1: function(armed) {
      var _this = this,
        _s43_ = ".menu-item[data-command='midi-input'] i.fas",
        _s16_ = "querySelectorAll",
        _s8_ = "fa-check",
        t1 = type$.Element,
        t2 = _this.root,
        t3 = type$._FrozenElementList_Element;
      if (armed) {
        t2.toString;
        H.checkTypeBound(t1, t1, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s43_), t3)).add$1(0, _s8_);
        t1 = _this.instrument;
        t1.toString;
        type$.List_int._as(null);
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_int);
        t1.set$_ports(t2);
      } else {
        t2.toString;
        H.checkTypeBound(t1, t1, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s43_), t3)).remove$1(0, _s8_);
        _this.instrument.set$_ports(null);
      }
      _this.gadget.idata.$indexSet(0, "midi-input", armed);
    },
    _setMidiOutput$1: function(armed) {
      var t1, t2, t3,
        _s44_ = ".menu-item[data-command='midi-output'] i.fas",
        _s16_ = "querySelectorAll",
        _s8_ = "fa-check";
      this.gadget.idata.$indexSet(0, "midi-output", armed);
      t1 = type$.Element;
      t2 = this.root;
      t3 = type$._FrozenElementList_Element;
      if (armed) {
        t2.toString;
        H.checkTypeBound(t1, t1, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s44_), t3)).add$1(0, _s8_);
      } else {
        t2.toString;
        H.checkTypeBound(t1, t1, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s44_), t3)).remove$1(0, _s8_);
      }
    },
    _shareTrack$0: function() {
      var dialog, t2, t3, t4, t5, t6, t7, t8, _this = this,
        _s15_ = ".confirm-button",
        _s16_ = "querySelectorAll",
        t1 = _this.datastore.user;
      if (t1.anonymous) {
        dialog = E.Dialog_openModal("#share-login-dialog", null);
        if (dialog != null) {
          t1 = type$.Element;
          H.checkTypeBound(t1, t1, "T", _s16_);
          new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(_s15_), type$._FrozenElementList_Element)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new R.PythonTrack__shareTrack_closure(_this));
        }
      } else {
        t2 = _this.gadget;
        t3 = t2.name;
        t1 = t1.name;
        t4 = H.S(t2.beats) + " beats (";
        t5 = t2.beats;
        if (typeof t5 !== "number")
          return t5.$mul();
        t6 = _this.clock;
        t5 = t4 + C.JSDouble_methods.toStringAsFixed$1(t5 * 60 / t6._bpm, 1) + " seconds)";
        t4 = "" + t6._bpm + " bpm";
        t7 = t6._meter + " time";
        t6 = H.S(t6._key.name);
        t8 = _this.editor;
        t8.toString;
        dialog = E.Dialog_openModal("#share-dialog", P.LinkedHashMap_LinkedHashMap$_literal([".track-name", t3, ".track-author", t1, ".track-duration", t5, ".track-tempo", t4, ".track-meter", t7, ".track-key", t6, ".track-code", "" + H._asStringNullable($.$get$_context().callMethod$2("getCode", [t8.id])).split("\n").length + " lines of code", ".track-description textarea", t2.description], type$.String, type$.dynamic));
        t8 = type$.Element;
        dialog.toString;
        H.checkTypeBound(t8, t8, "T", _s16_);
        t6 = type$._FrozenElementList_Element;
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(dialog.querySelectorAll(".track-info"), t6)).add$1(0, t2.instrument);
        H.checkTypeBound(t8, t8, "T", _s16_);
        new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(_s15_), t6)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new R.PythonTrack__shareTrack_closure0(_this, dialog));
      }
    },
    doContextMenu$1: function(menu) {
      var t1, t2, _this = this,
        _s16_ = "querySelectorAll",
        _s4_ = "show";
      menu.toString;
      switch (menu.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(menu))._toHyphenedName$1("command"))) {
        case "delete-track":
          P.Timer_Timer(C.Duration_200000, new R.PythonTrack_doContextMenu_closure(_this));
          return;
        case "clone-track":
          _this.cloneCell$0();
          return;
        case "show-instrument":
          _this.toggleElement$1("instrument");
          break;
        case "show-timeline":
          _this.toggleElement$1("timeline");
          break;
        case "show-editor":
          _this.toggleElement$1("editor");
          break;
        case "show-output":
          _this.toggleElement$1("output");
          break;
        case "note-hints":
          t1 = _this.instrument.root;
          t2 = type$.Element;
          t1.toString;
          H.checkTypeBound(t2, t2, "T", _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".note-hint"), type$._FrozenElementList_Element)).toggle$1(0, _s4_);
          break;
        case "midi-hints":
          t1 = _this.instrument.root;
          t2 = type$.Element;
          t1.toString;
          H.checkTypeBound(t2, t2, "T", _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".midi-hint"), type$._FrozenElementList_Element)).toggle$1(0, _s4_);
          break;
        case "keyb-hints":
          t1 = _this.instrument.root;
          t2 = type$.Element;
          t1.toString;
          H.checkTypeBound(t2, t2, "T", _s16_);
          W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".key-hint"), type$._FrozenElementList_Element)).toggle$1(0, _s4_);
          break;
        case "export-wav":
          _this._downloadAudio$1("wav");
          return;
        case "export-mp3":
          _this._downloadAudio$1("mp3");
          return;
        case "export-midi":
          _this._exportMidi$0();
          return;
        case "midi-input":
          _this._setMidiInput$1(!_this.instrument.isMidiArmed$0());
          break;
        case "midi-output":
          _this._setMidiOutput$1(!H.boolConversionCheck(H._asBoolNullable(_this.gadget.idata.$index(0, "midi-output"))));
          break;
        case "share":
          _this._shareTrack$0();
          break;
      }
      _this.datastore.update$1(0, _this.gadget);
    },
    _initMidi$0: function() {
      var t1 = this.midi._messageStream;
      new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(new R.PythonTrack__initMidi_closure(this));
    },
    _lookupSynthPatch$2: function(voiceName, instrument) {
      var t1, t2, t3, result;
      for (t1 = this.patches, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (t3.instrument == instrument && t3.voice == voiceName)
          return t3;
      }
      switch (instrument) {
        case "bass":
          result = t1.$index(0, 1);
          break;
        case "guitar":
          result = t1.$index(0, 2);
          break;
        case "marimba":
          result = t1.$index(0, 5);
          break;
        case "piano":
          result = t1.$index(0, 9);
          break;
        case "drums":
          result = t1.$index(0, 11);
          break;
        case "drumkit":
          result = t1.$index(0, 12);
          break;
        default:
          result = null;
      }
      return result == null ? L.SynthPatch$piano() : result;
    },
    toggleContextMenu$1: function(menu) {
      var t1, t2;
      if (menu != null) {
        t1 = type$.Element;
        t2 = document;
        H.checkTypeBound(t1, t1, "T", "querySelectorAll");
        t2 = new W._FrozenElementList(t2.querySelectorAll(".context-menu"), type$._FrozenElementList_Element);
        t2.forEach$1(t2, new R.PythonTrack_toggleContextMenu_closure(menu));
        J.get$classes$x(menu).toggle$1(0, "hidden");
      }
    },
    set$voice: function(_, voice) {
      this.voice = type$.SynthPatch._as(voice);
    }
  };
  R.PythonTrack_insert_closure.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4,
        _s16_ = "querySelectorAll";
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.instrument;
      t2._armed = true;
      t2 = t2.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".key-hint"), t4)).add$1(0, "show");
      t1 = t1.root;
      t1.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".instrument-container"), t4)).add$1(0, "armed");
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4,
        _s16_ = "querySelectorAll";
      type$.Event._as(e);
      t1 = this.$this;
      t2 = t1.instrument;
      t2._armed = false;
      t2 = t2.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".key-hint"), t4)).remove$1(0, "show");
      t1 = t1.root;
      t1.toString;
      H.checkTypeBound(t3, t3, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".instrument-container"), t4)).remove$1(0, "armed");
    },
    $signature: 2
  };
  R.PythonTrack_insert_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.play$0(0);
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure2.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1._pauseHelper$0();
      t1.clock.pause$1(0, t1);
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure3.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.step$0(0);
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure4.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".recording-container"), type$._FrozenElementList_Element)).remove$1(0, "hidden");
      t1.root.classList.add("recording");
      t1 = t1.recorder;
      if (!t1.recording)
        if (t1.clock.context != null) {
          C.JSArray_methods.set$length(t1.notes, 0);
          t1.start = -1;
          t1.recording = true;
        }
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure5.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.stopRecording$0();
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure6.prototype = {
    call$1: function(e) {
      var output;
      type$.MouseEvent._as(e);
      output = type$.PreElement._as(this.$this.root.querySelector(".recording-pad"));
      if (output != null)
        C.PreElement_methods.setInnerHtml$1(output, "# RECORDING PAD\n");
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure7.prototype = {
    call$1: function(e) {
      var output;
      type$.MouseEvent._as(e);
      output = type$.PreElement._as(this.$this.root.querySelector(".recording-pad"));
      if (output != null)
        P.promiseToFuture(window.navigator.clipboard.writeText(output.innerHTML), type$.dynamic);
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure8.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4, t5,
        _s19_ = ".quant-button i.fas",
        _s16_ = "querySelectorAll",
        _s8_ = "fa-check";
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.recorder.quantize;
      t3 = type$.Element;
      t4 = t1.root;
      t5 = type$._FrozenElementList_Element;
      if (t2) {
        t4.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(_s19_), t5)).remove$1(0, _s8_);
      } else {
        t4.toString;
        H.checkTypeBound(t3, t3, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t4.querySelectorAll(_s19_), t5)).add$1(0, _s8_);
      }
      t1 = t1.recorder;
      t1.quantize = !t1.quantize;
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure9.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.root;
      t3 = type$.Element;
      t2.toString;
      H.checkTypeBound(t3, t3, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".recording-container"), type$._FrozenElementList_Element)).add$1(0, "hidden");
      t1.stopRecording$0();
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure10.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.clock;
      t3 = t2._metronomes;
      if (t3.contains$1(0, t1))
        t1.stopMetronome$0();
      else if (!t3.contains$1(0, t1)) {
        t3 = t1.root;
        t4 = type$.Element;
        t3.toString;
        H.checkTypeBound(t4, t4, "T", "querySelectorAll");
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(".metronome-button"), type$._FrozenElementList_Element)).add$1(0, "playing");
        t2.startMetronome$1(t1);
      }
    },
    $signature: 0
  };
  R.PythonTrack_insert_closure11.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.toggleContextMenu$1(t1.root.querySelector(".voice-selector .context-menu"));
      e.stopPropagation();
    },
    $signature: 0
  };
  R.PythonTrack_onPythonDone_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.root,
        t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".output-hint"), type$._FrozenElementList_Element)).remove$1(0, "visible");
    },
    $signature: 1
  };
  R.PythonTrack__initVoiceMenu_closure.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = t1.gadget;
      t3 = this.patch;
      t2.idata.$indexSet(0, "patch", t3.id);
      t2.voice = t3.voice;
      t2.instrument = t3.instrument;
      t1.datastore.update$1(0, t2);
    },
    $signature: 0
  };
  R.PythonTrack__setInstrument_closure.prototype = {
    call$1: function(item) {
      return H._asStringNullable(item) !== "gadget-icon";
    },
    $signature: 11
  };
  R.PythonTrack__setInstrument_closure0.prototype = {
    call$1: function(e) {
      var t1, out, t2, t3, t4, t5,
        _s15_ = "midiSendMessage";
      type$.NoteEvent._as(e);
      t1 = this.$this;
      out = H._asBoolNullable(t1.gadget.idata.$index(0, "midi-output"));
      t2 = e.message;
      if (t2 === "on" && t1.clock.context != null) {
        if (H.boolConversionCheck(out)) {
          t2 = t1.midi;
          t3 = J.round$0$n(e.note);
          t4 = e.velocity;
          t2.toString;
          $.$get$_context().callMethod$2(_s15_, [null, 144, t3, t4]);
        }
        t2 = t1.recorder;
        t3 = J.round$0$n(e.note);
        t4 = e.velocity;
        t2.noteOn$2(t3, t4);
        t2 = t1.synth;
        t5 = new F.Note();
        t5._note = Math.max(0, t3);
        t5._velocity = C.JSInt_methods.clamp$2(t4, 0, 127);
        t2._play$3(t5, t1.clock.context.destination, null);
      } else if (t2 === "off" && t1.clock.context != null) {
        if (H.boolConversionCheck(out)) {
          t2 = t1.midi;
          t3 = J.round$0$n(e.note);
          t2.toString;
          $.$get$_context().callMethod$2(_s15_, [null, 128, t3, 0]);
        }
        t2 = t1.recorder;
        t3 = J.round$0$n(e.note);
        t2.noteOff$1(t3);
        t2 = t1.synth;
        t4 = new F.Note();
        t4._note = Math.max(0, t3);
        t2.releaseNote$1(t4);
      }
      if (t1.recorder.recording)
        t1.updateRecording$0();
    },
    $signature: 79
  };
  R.PythonTrack__shareTrack_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
      R.UserAccounts_login(this.$this.datastore);
    },
    $signature: 0
  };
  R.PythonTrack__shareTrack_closure0.prototype = {
    call$1: function(e) {
      return this.$call$body$PythonTrack__shareTrack_closure(type$.MouseEvent._as(e));
    },
    $call$body$PythonTrack__shareTrack_closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, processed, t1, t2, t3, mp3, exception, text, $async$exception;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              text = type$.TextAreaElement._as($async$self.dialog.querySelector(".track-description textarea"));
              if (text != null)
                $async$self.$this.gadget.description = text.value;
              t1 = $async$self.$this;
              t2 = t1.gadget;
              t2.$public = true;
              E.Dialog_closeModal();
              $async$goto = 2;
              return P._asyncAwait(t1._exportAudio$1("mp3"), $async$call$1);
            case 2:
              // returning from await.
              processed = $async$result;
              $async$goto = processed != null ? 3 : 4;
              break;
            case 3:
              // then
              $async$handler = 6;
              t3 = t1.clock;
              t2.idata.$indexSet(0, "tempo", t3._bpm);
              t2.idata.$indexSet(0, "meter", t3._meter);
              t2.idata.$indexSet(0, "key", t3._key.name);
              mp3 = processed.toMP3$0();
              if (mp3 != null) {
                type$.Base64Codec._eval$1("Codec.S")._as(mp3);
                t3 = "data:audio/mp3;base64," + C.C_Base64Codec.get$encoder().convert$1(mp3);
              } else
                t3 = null;
              $async$goto = 9;
              return P._asyncAwait(t1.datastore.publishTrack$2(t2, t3), $async$call$1);
            case 9:
              // returning from await.
              E.Dialog_message("Thanks for sharing <b>" + H.S(t2.name) + "</b>!<br>You can now see your track in the TunePad library.", "", "OK");
              $async$handler = 1;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              E.Dialog_message("There was a problem publishing your track<br>in the TunePad library.", "", "OK");
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 8:
              // after finally
            case 4:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  R.PythonTrack_doContextMenu_closure.prototype = {
    call$0: function() {
      if (H.boolConversionCheck(window.confirm("Are you sure you want to delete this track?"))) {
        var t1 = this.$this;
        t1.datastore.delete$1(0, t1.gadget);
        t1._pauseHelper$0();
        t1.clock.pause$1(0, t1);
        t1 = t1.root;
        (t1 && C.DivElement_methods).remove$0(t1);
      }
    },
    $signature: 1
  };
  R.PythonTrack__initMidi_closure.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4, t5, t6,
        _s7_ = "command",
        _s8_ = "velocity",
        _s4_ = "note";
      type$.MIDIEvent._as(e);
      t1 = this.$this;
      t2 = t1.instrument;
      t3 = e.data;
      t4 = J.getInterceptor$asx(t3);
      if (t2.isMidiArmed$1(U._toInt(t4.$index(t3, "port"), 0))) {
        if (U._toInt(t4.$index(t3, _s7_), 0) === 9) {
          t2 = U._toInt(t4.$index(t3, _s8_), 0);
          if (typeof t2 !== "number")
            return t2.$gt();
          t2 = t2 > 0;
        } else
          t2 = false;
        if (t2) {
          t1.instrument.noteOn$2(U._toInt(t4.$index(t3, _s4_), 0), U._toInt(t4.$index(t3, _s8_), 0));
          t1.recorder.noteOn$2(U._toInt(t4.$index(t3, _s4_), 0), U._toInt(t4.$index(t3, _s8_), 0));
          t2 = t1.clock;
          if (t2.context != null) {
            t5 = t1.synth;
            t6 = new F.Note();
            t6._note = Math.max(0, H.checkNum(U._toInt(t4.$index(t3, _s4_), 0)));
            t6._velocity = J.clamp$2$n(U._toInt(t4.$index(t3, _s8_), 0), 0, 127);
            t5._play$3(t6, t2.context.destination, null);
          }
        } else {
          if (U._toInt(t4.$index(t3, _s7_), 0) !== 8)
            t2 = U._toInt(t4.$index(t3, _s7_), 0) === 9 && U._toInt(t4.$index(t3, _s8_), 0) === 0;
          else
            t2 = true;
          if (t2) {
            t1.instrument.noteOff$1(U._toInt(t4.$index(t3, _s4_), 0));
            t1.recorder.noteOff$1(U._toInt(t4.$index(t3, _s4_), 0));
            t2 = t1.synth;
            t5 = new F.Note();
            t5._note = Math.max(0, H.checkNum(U._toInt(t4.$index(t3, _s4_), 0)));
            t2.releaseNote$1(t5);
          } else if (U._toInt(t4.$index(t3, _s7_), 0) === 14) {
            t2 = U._toInt(t4.$index(t3, _s8_), 0);
            if (typeof t2 !== "number")
              return t2.$mul();
            t3 = U._toInt(t4.$index(t3, _s4_), 0);
            if (typeof t3 !== "number")
              return H.iae(t3);
            t1.synth.pitchBend$1((t2 * 128 + t3 - 8192) / 8192);
          }
        }
        if (t1.recorder.recording)
          t1.updateRecording$0();
      }
    },
    $signature: 80
  };
  R.PythonTrack_toggleContextMenu_closure.prototype = {
    call$1: function(m) {
      type$.Element._as(m);
      if (this.menu !== m)
        J.get$classes$x(m).add$1(0, "hidden");
    },
    $signature: 10
  };
  R._PythonTrack_PythonCell_PythonListener.prototype = {};
  R._PythonTrack_PythonCell_PythonListener_EditorListener.prototype = {};
  R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener.prototype = {};
  R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber.prototype = {};
  R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome.prototype = {};
  N.User.prototype = {
    get$uid: function() {
      return J.toString$0$(this.id);
    },
    save$0: function(_) {
      var t1, _this = this;
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-color", _this.color);
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-icon", _this.icon);
      window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-display-name", _this.displayName);
      t1 = window.localStorage;
      (t1 && C.Storage_methods).remove$1(t1, H.S(J.toString$0$(_this.id)) + "-photo");
      t1 = _this.photo;
      if (t1 != null && C.JSString_methods.trim$0(t1) !== "" && t1 !== "null")
        window.localStorage.setItem(H.S(J.toString$0$(_this.id)) + "-photo", _this.photo);
      t1 = type$.dynamic;
      return P.LinkedHashMap_LinkedHashMap$_literal(["id", J.toString$0$(_this.id), "type", _this.type, "username", _this.name, "displayName", _this.displayName, "email", _this.email, "anonymous", _this.anonymous, "color", _this.color, "icon", _this.icon, "photo", _this.photo, "created", _this.created.toString$0(0), "modified", _this.modified.toString$0(0)], t1, t1);
    },
    load$1: function(_, userData) {
      var t3, _this = this,
        t1 = J.getInterceptor$asx(userData),
        t2 = t1.$index(userData, "id");
      _this.id = t2 == null ? null : J.toString$0$(t2);
      _this.type = "user";
      t2 = t1.$index(userData, "username");
      _this.name = t2 == null ? null : J.toString$0$(t2);
      t2 = t1.$index(userData, "email");
      _this.email = t2 == null ? null : J.toString$0$(t2);
      _this.anonymous = B.toBool(t1.$index(userData, "anonymous"), true);
      t2 = t1.$index(userData, "color");
      t3 = _this._loadColor$0();
      _this.color = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "icon");
      t3 = _this._loadIcon$0();
      _this.icon = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "photo");
      t3 = _this._loadPhoto$0();
      _this.photo = t2 == null ? t3 : J.toString$0$(t2);
      t2 = t1.$index(userData, "displayName");
      t3 = _this._loadDisplayName$0();
      _this.displayName = t2 == null ? t3 : J.toString$0$(t2);
      _this.created = B.toDateTime(t1.$index(userData, "created"));
      _this.modified = B.toDateTime(t1.$index(userData, "modified"));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return J.toString$0$(this.id) == other.get$uid() && this.type === J.get$type$x(other);
    },
    _loadColor$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-color") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-color");
      else
        return this._randomColor$0();
    },
    _loadPhoto$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-photo") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-photo");
      else
        return null;
    },
    _loadIcon$0: function() {
      if (window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-icon") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(this.id)) + "-icon");
      else
        return this._randomIcon$0();
    },
    _loadDisplayName$0: function() {
      var t1, _this = this;
      if (window.localStorage.getItem(H.S(J.toString$0$(_this.id)) + "-display-name") != null)
        return window.localStorage.getItem(H.S(J.toString$0$(_this.id)) + "-display-name");
      else {
        t1 = _this.name;
        if (t1 != null && C.JSString_methods.trim$0(t1) !== "")
          return t1;
        else {
          t1 = _this.email;
          if (t1 != null && C.JSString_methods.trim$0(t1) !== "")
            return t1;
          else
            return "Anonymous User";
        }
      }
    },
    _randomColor$0: function() {
      var t1 = this._rand,
        r = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16),
        g = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16),
        b = C.JSInt_methods.toRadixString$1(C.JSInt_methods.round$0(127 + t1.nextInt$1(128)), 16);
      return "#" + r + g + b;
    },
    _randomIcon$0: function() {
      var icons = ["fa-user-astronaut", "fa-user-secret", "fa-user-ninja", "fa-dragon", "fa-cat", "fa-crow", "fa-dove", "fa-fish", "fa-frog", "fa-hippo", "fa-horse", "fa-spider"],
        t1 = this._rand.nextInt$1(12);
      if (t1 < 0 || t1 >= 12)
        return H.ioore(icons, t1);
      return icons[t1];
    }
  };
  B.Collaborator.prototype = {};
  B.UserList.prototype = {
    UserList$3: function(datastore, listSelector, focused) {
      var _this = this,
        t1 = _this.datastore,
        t2 = t1._login_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onLogin());
      t2 = t1._logout_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onLogout());
      t2 = t1._message_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onMessage(_this));
      C.C__BeforeUnloadEventStreamProvider.forTarget$1(window).listen$1(new B.UserList_closure(_this));
      P.Timer_Timer$periodic(C.Duration_30000000, new B.UserList_closure0(_this));
      if (_this.focused)
        t1.message$3(0, t1.user, "userlist-present", _this.listSelector);
    },
    rollcall$0: function() {
      var t1, i, update, c, _this = this;
      if (_this.focused) {
        t1 = _this.datastore;
        t1.message$3(0, t1.user, "userlist-present", _this.listSelector);
      }
      for (t1 = _this.collaborators, i = t1.length - 1, update = false; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        c = t1[i];
        if (C.JSInt_methods._tdivFast$1(P.Duration$(Date.now() - c.checkin._value)._duration, 60000000) > 2) {
          C.JSArray_methods.removeAt$1(t1, i);
          update = true;
        }
      }
      if (update)
        _this._buildUserList$0();
    },
    onLogin$1: function($event) {
      if (!type$.DatastoreEvent._as($event).remote)
        this.rollcall$0();
    },
    onLogout$1: function($event) {
      var t1;
      if (!type$.DatastoreEvent._as($event).remote) {
        t1 = this.datastore;
        t1.message$3(0, t1.user, "userlist-leave", this.listSelector);
      }
    },
    onMessage$1: function(_, $event) {
      var t1, _this = this;
      type$.DatastoreEvent._as($event);
      if ($event.remote && $event.target instanceof N.User && J.$eq$($event.payload, _this.listSelector)) {
        t1 = $event.type;
        if (t1 === "userlist-leave") {
          _this._removeVisitor$1(type$.User._as($event.target));
          _this._buildUserList$0();
        } else if (t1 === "userlist-present") {
          _this._addVisitor$1(type$.User._as($event.target));
          _this._buildUserList$0();
        }
      }
    },
    _addVisitor$1: function(visitor) {
      var t1, t2, _i, c;
      for (t1 = this.collaborators, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        c = t1[_i];
        if (J.toString$0$(c.user.id) == J.toString$0$(visitor.id)) {
          c.checkin = new P.DateTime(Date.now(), false);
          return;
        }
      }
      t2 = new B.Collaborator(visitor);
      t2.checkin = new P.DateTime(Date.now(), false);
      C.JSArray_methods.add$1(t1, t2);
    },
    _removeVisitor$1: function(visitor) {
      var t1, i;
      for (t1 = this.collaborators, i = 0; i < t1.length; ++i)
        if (J.toString$0$(t1[i].user.id) == J.toString$0$(visitor.id)) {
          C.JSArray_methods.removeAt$1(t1, i);
          return;
        }
    },
    _buildUserList$0: function() {
      var t2, t3, count, _i, t4, item, t5, i, t6,
        t1 = document,
        list = t1.querySelector(this.listSelector);
      if (list != null) {
        J.get$children$x(list).clear$0(0);
        for (t2 = this.collaborators, t3 = t2.length, count = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          t4 = t2[_i].user;
          item = t1.createElement("li");
          t5 = J.toString$0$(t4.id);
          item.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("user"), t5);
          item.title = t4.name;
          item.className = "collaborator";
          i = W.Element_Element$html("<i></i>", null, null);
          i.className = "fas " + H.S(t4.icon);
          t5 = i.style;
          t6 = t4.color;
          t5.toString;
          t5.color = t6 == null ? "" : t6;
          item.appendChild(i);
          if (!t4.anonymous) {
            t5 = t4.photo;
            t5 = t5 != null && t5 !== "null";
          } else
            t5 = false;
          if (t5) {
            item.classList.add("known");
            t5 = item.style;
            t4 = "url('" + H.S(t4.photo) + "')";
            t5.backgroundImage = t4;
          }
          list.appendChild(item);
          ++count;
        }
      }
    }
  };
  B.UserList_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.Event._as(e);
      t1 = this.$this;
      t2 = t1.datastore;
      return t2.message$3(0, t2.user, "userlist-leave", t1.listSelector);
    },
    $signature: 29
  };
  B.UserList_closure0.prototype = {
    call$1: function(t) {
      type$.Timer._as(t);
      return this.$this.rollcall$0();
    },
    $signature: 82
  };
  V.EffectsDial.prototype = {
    get$value: function(_) {
      var index, t2, t3, v, _this = this,
        t1 = _this.values;
      if (t1 != null && true) {
        t1.length;
        index = C.JSNumber_methods.round$0(12 * _this._dial$_value);
        if (index < 0 || index >= 13)
          return H.ioore(t1, index);
        return t1[index];
      }
      t1 = _this._dial$_value;
      t2 = _this.maxValue;
      t3 = _this.minValue;
      v = t1 * (t2 - t3) + t3;
      t1 = _this.step;
      if (t1 != null)
        return C.JSDouble_methods.round$0(v / t1) * t1;
      else
        return v;
    },
    set$value: function(_, v) {
      var _this = this,
        t1 = _this.values;
      if (t1 != null)
        if (C.JSArray_methods.contains$1(t1, v)) {
          _this.values.length;
          t1 = true;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = _this.values;
        t1 = (t1 && C.JSArray_methods).indexOf$1(t1, v);
        _this.values.length;
        v = t1 / 12;
      } else {
        t1 = _this.minValue;
        if (typeof v !== "number")
          return v.$sub();
        v = (v - t1) / (_this.maxValue - t1);
      }
      _this._dial$_value = Math.max(0, Math.min(1, v));
      _this._updateDrawing$0();
    },
    buildUI$1: function(container) {
      var t2, t3, t4, widgetGroup, knobGroup, t5, overlay, _this = this,
        _s26_ = "http://www.w3.org/2000/svg",
        _s9_ = "transform",
        $parent = P.SvgSvgElement_SvgSvgElement(),
        t1 = type$.String;
      C.SvgSvgElement_methods.set$attributes($parent, P.LinkedHashMap_LinkedHashMap$_literal(["width", "100%", "viewBox", "0 0 100 80", "preserveAspectRatio", "none"], t1, t1));
      t2 = document;
      t3 = type$.SvgElement;
      t4 = type$.GElement;
      widgetGroup = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      widgetGroup.setAttribute(_s9_, "translate(50, 40)");
      knobGroup = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "g")));
      knobGroup.setAttribute(_s9_, "rotate(135, 0, 0)");
      widgetGroup.appendChild(knobGroup);
      t4 = type$.CircleElement;
      t5 = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "circle")));
      (t5 && C.CircleElement_methods).set$attributes(t5, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "0", "cy", "0", "r", "25", "fill", "none", "stroke", "#fff8", "stroke-opacity", "1", "stroke-width", "4"], t1, t1));
      _this.knob = t5;
      knobGroup.appendChild(t5);
      knobGroup.appendChild(_this._track);
      knobGroup.appendChild(_this._arc);
      knobGroup.appendChild(_this._line);
      overlay = t4._as(t3._as(C.HtmlDocument_methods.createElementNS$2(t2, _s26_, "circle")));
      (overlay && C.CircleElement_methods).set$attributes(overlay, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "0", "cy", "0", "r", "37", "fill", "white", "fill-opacity", "0.0"], t1, t1));
      t1 = overlay.style;
      t1.cursor = "ns-resize";
      widgetGroup.appendChild(overlay);
      $parent.appendChild(widgetGroup);
      container.appendChild($parent);
      t1 = type$._ElementEventStreamImpl_MouseEvent;
      t3 = t1._eval$1("~(1)")._as(new V.EffectsDial_buildUI_closure(_this));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(overlay, "mousedown", t3, false, t1._precomputed1);
      t1 = type$.void_Function_MouseEvent;
      t3 = type$.MouseEvent;
      W._EventStreamSubscription$(t2, "mouseup", t1._as(new V.EffectsDial_buildUI_closure0(_this)), false, t3);
      W._EventStreamSubscription$(t2, "mousemove", t1._as(new V.EffectsDial_buildUI_closure1(_this)), false, t3);
    },
    _describeArc$5: function(x, y, radius, startAngle, endAngle) {
      var t1 = Math.cos(endAngle),
        t2 = Math.sin(endAngle),
        t3 = Math.cos(startAngle),
        t4 = Math.sin(startAngle),
        large = endAngle >= 3.141592653589793 ? 1 : 0;
      return C.JSArray_methods.join$1(["M", radius * t3, radius * t4, "A", radius, radius, 0, large, 1, radius * t1, radius * t2], " ");
    },
    _updateDrawing$0: function() {
      var t1, t2, _this = this,
        _s14_ = "stroke-opacity";
      if (_this._line != null) {
        t1 = _this._disabled;
        t2 = _this._track;
        if (t1) {
          t2.setAttribute(_s14_, "0");
          _this._arc.setAttribute(_s14_, "0");
          _this._line.setAttribute("x1", H.S(23 * Math.cos(1.3194689145077132)));
          _this._line.setAttribute("y1", H.S(23 * Math.sin(1.3194689145077132)));
          _this._line.setAttribute("x2", H.S(23 * Math.cos(4.476769531365455)));
          _this._line.setAttribute("y2", H.S(23 * Math.sin(4.476769531365455)));
        } else {
          t2.setAttribute(_s14_, "0.5");
          _this._arc.setAttribute(_s14_, "1.0");
          _this._line.setAttribute("x1", "0");
          _this._line.setAttribute("y1", "0");
          _this._line.setAttribute("x2", H.S(23 * Math.cos(_this._dial$_value * 4.71238898038469)));
          _this._line.setAttribute("y2", H.S(23 * Math.sin(_this._dial$_value * 4.71238898038469)));
        }
      }
      t1 = _this._arc;
      if (t1 != null)
        t1.setAttribute("d", _this._describeArc$5(0, 0, 37, 0, _this._dial$_value * 3 * 3.141592653589793 / 2));
    },
    set$values: function(_, values) {
      this.values = type$.List_num._as(values);
    }
  };
  V.EffectsDial_buildUI_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._disabled)
        return;
      t1._dragging = true;
      e.clientX;
      t1._touchY = e.clientY;
      t1.knob.setAttribute("fill", "#ccc");
    },
    $signature: 0
  };
  V.EffectsDial_buildUI_closure0.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._dragging && !t1._disabled && t1.onChanged != null)
        P.Function_apply(t1.onChanged, [t1, t1.get$value(t1)], null);
      t1.knob.setAttribute("fill", "none");
      t1._dragging = false;
    },
    $signature: 0
  };
  V.EffectsDial_buildUI_closure1.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      if (t1._dragging && !t1._disabled) {
        t2 = t1._touchY;
        e.clientX;
        t3 = e.clientY;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return H.iae(t3);
        t1._touchY = t3;
        t1._dial$_value = Math.max(0, Math.min(1, t1._dial$_value + (t2 - t3) / 50));
        t1._updateDrawing$0();
        t2 = t1.onAdjusted;
        if (t2 != null)
          P.Function_apply(t2, [t1, t1.get$value(t1)], null);
      }
    },
    $signature: 0
  };
  V.ToggleButton.prototype = {
    set$value: function(_, b) {
      var t1;
      this._dial$_value = b;
      t1 = this._button;
      t1.setAttribute("fill", b ? this._color : "#555");
    },
    buildUI$1: function(container) {
      var t2, t3, t4, _this = this,
        outline = type$.CircleElement._as(type$.SvgElement._as(C.HtmlDocument_methods.createElementNS$2(document, "http://www.w3.org/2000/svg", "circle"))),
        t1 = type$.String;
      (outline && C.CircleElement_methods).set$attributes(outline, P.LinkedHashMap_LinkedHashMap$_literal(["cx", "" + _this.cx, "cy", H.S(_this.cy), "r", "" + _this.radius, "stroke", "white", "stroke-width", "2", "stroke-opacity", "0.5"], t1, t1));
      container.appendChild(outline);
      container.appendChild(_this._button);
      t1 = _this._button;
      t2 = type$._ElementEventStreamImpl_MouseEvent;
      t3 = t2._eval$1("~(1)");
      t4 = t3._as(new V.ToggleButton_buildUI_closure(outline));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(t1, "mouseenter", t4, false, t2);
      W._EventStreamSubscription$(_this._button, "mouseleave", t3._as(new V.ToggleButton_buildUI_closure0(_this, outline)), false, t2);
      W._EventStreamSubscription$(_this._button, "mousedown", t3._as(new V.ToggleButton_buildUI_closure1(_this)), false, t2);
      W._EventStreamSubscription$(_this._button, "click", t3._as(new V.ToggleButton_buildUI_closure2(_this)), false, t2);
    }
  };
  V.ToggleButton_buildUI_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.outline.setAttribute("stroke-opacity", "1.0");
    },
    $signature: 0
  };
  V.ToggleButton_buildUI_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      this.outline.setAttribute("stroke-opacity", "0.5");
      t1 = this.$this;
      t2 = t1._button;
      t2.setAttribute("fill", t1._dial$_value ? t1._color : "#555");
    },
    $signature: 0
  };
  V.ToggleButton_buildUI_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._button.setAttribute("fill", "white");
    },
    $signature: 0
  };
  V.ToggleButton_buildUI_closure2.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t1.set$value(0, !t1._dial$_value);
      t2 = t1.onChanged;
      if (t2 != null)
        P.Function_apply(t2, [t1, t1._dial$_value], null);
    },
    $signature: 0
  };
  E.Dialog_message_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  E.Dialog_hideLoader_closure.prototype = {
    call$1: function(o) {
      J.remove$0$ax(type$.Element._as(o));
    },
    $signature: 10
  };
  E.Dialog_closeModal_closure.prototype = {
    call$1: function(o) {
      J.remove$0$ax(type$.Element._as(o));
    },
    $signature: 10
  };
  E.Dialog__showModal_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  E.Dialog__showModal_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  E.Dialog__showModal_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  E.Dialog__showModal_closure2.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      D.DropdownMenu_closeAllMenus();
      e.stopPropagation();
    },
    $signature: 0
  };
  D.DropdownMenu_armMenu_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      D.DropdownMenu__toggleMenu(this.target.querySelector(".context-menu"));
      e.stopPropagation();
    },
    $signature: 0
  };
  D.DropdownMenu_armMenu_closure0.prototype = {
    call$1: function(e) {
      P.Function_apply(this.onSelected, [type$.HtmlElement._as(W._convertNativeToDart_EventTarget(type$.MouseEvent._as(e).currentTarget))], null);
    },
    $signature: 0
  };
  D.DropdownMenu_closeAllMenus_closure.prototype = {
    call$0: function() {
      var t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".context-menu"), type$._FrozenElementList_Element)).add$1(0, "hidden");
    },
    $signature: 1
  };
  D.DropdownMenu__toggleMenu_closure.prototype = {
    call$1: function(m) {
      type$.Element._as(m);
      if (this.menu !== m)
        J.get$classes$x(m).add$1(0, "hidden");
    },
    $signature: 10
  };
  K.Uuid.prototype = {
    Uuid$1$options: function(_box_0) {
      var t1, t2, i, hex, t3, v1PositionalArgs, v1NamedArgs, _this = this,
        _s19_ = "v1rngPositionalArgs",
        _s14_ = "v1rngNamedArgs",
        _s18_ = "grngPositionalArgs",
        _s13_ = "grngNamedArgs",
        options = _box_0.options;
      if (!(options != null))
        options = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      _box_0.options = options;
      t1 = new Array(256);
      t1.fixed$length = Array;
      _this.set$_byteToHex(H.setRuntimeTypeInfo(t1, type$.JSArray_String));
      _this.set$_hexToByte(new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_int));
      for (t1 = type$.JSArray_int, t2 = type$.HexCodec._eval$1("Codec.S"), i = 0; i < 256; ++i) {
        hex = H.setRuntimeTypeInfo([], t1);
        C.JSArray_methods.add$1(hex, i);
        t3 = _this._byteToHex;
        t2._as(hex);
        (t3 && C.JSArray_methods).$indexSet(t3, i, C.C_HexCodec.get$encoder().convert$1(hex));
        _this._hexToByte.$indexSet(0, _this._byteToHex[i], i);
      }
      v1PositionalArgs = _box_0.options.$index(0, _s19_) != null ? _box_0.options.$index(0, _s19_) : [];
      v1NamedArgs = _box_0.options.$index(0, _s14_) != null ? type$.Map_Symbol_dynamic._as(_box_0.options.$index(0, _s14_)) : C.Map_empty;
      _this._seedBytes = _box_0.options.$index(0, "v1rng") != null ? P.Function_apply(type$.Function._as(_box_0.options.$index(0, "v1rng")), type$.List_dynamic._as(v1PositionalArgs), v1NamedArgs) : T.UuidUtil_mathRNG();
      if (_box_0.options.$index(0, _s18_) != null)
        _box_0.options.$index(0, _s18_);
      if (_box_0.options.$index(0, _s13_) != null)
        type$.Map_Symbol_dynamic._as(_box_0.options.$index(0, _s13_));
      _this._nodeId = [J.$or$bn(J.$index$asx(_this._seedBytes, 0), 1), J.$index$asx(_this._seedBytes, 1), J.$index$asx(_this._seedBytes, 2), J.$index$asx(_this._seedBytes, 3), J.$index$asx(_this._seedBytes, 4), J.$index$asx(_this._seedBytes, 5)];
      t1 = J.$shl$n(J.$index$asx(_this._seedBytes, 6), 8);
      t2 = J.$index$asx(_this._seedBytes, 7);
      if (typeof t2 !== "number")
        return H.iae(t2);
      _this._clockSeq = (t1 | t2) & 262143;
    },
    v1$0: function() {
      var t1, buf, options, clockSeq, mSecs, nSecs, dt, t2, tl, tmh, node, n, _this = this,
        _s8_ = "clockSeq",
        _s5_ = "nSecs";
      type$.Map_String_dynamic._as(null);
      t1 = new Array(16);
      t1.fixed$length = Array;
      buf = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
      options = new H.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      clockSeq = options.$index(0, _s8_) != null ? options.$index(0, _s8_) : _this._clockSeq;
      mSecs = options.$index(0, "mSecs") != null ? options.$index(0, "mSecs") : Date.now();
      nSecs = options.$index(0, _s5_) != null ? options.$index(0, _s5_) : _this._lastNSecs + 1;
      t1 = J.getInterceptor$n(mSecs);
      dt = J.$add$ansx(t1.$sub(mSecs, _this._lastMSecs), J.$div$n(J.$sub$n(nSecs, _this._lastNSecs), 10000));
      t2 = J.getInterceptor$n(dt);
      if (t2.$lt(dt, 0) && options.$index(0, _s8_) == null)
        clockSeq = J.$and$bn(J.$add$ansx(clockSeq, 1), 16383);
      if ((t2.$lt(dt, 0) || t1.$gt(mSecs, _this._lastMSecs)) && options.$index(0, _s5_) == null)
        nSecs = 0;
      if (J.$ge$n(nSecs, 10000))
        throw H.wrapException(P.Exception_Exception("uuid.v1(): Can't create more than 10M uuids/sec"));
      H._asIntNullable(mSecs);
      _this._lastMSecs = mSecs;
      H._asIntNullable(nSecs);
      _this._lastNSecs = nSecs;
      _this._clockSeq = clockSeq;
      mSecs += 122192928e5;
      tl = C.JSInt_methods.$mod((mSecs & 268435455) * 10000 + nSecs, 4294967296);
      C.JSArray_methods.$indexSet(buf, 0, C.JSInt_methods._shrOtherPositive$1(tl, 24) & 255);
      C.JSArray_methods.$indexSet(buf, 1, C.JSInt_methods._shrOtherPositive$1(tl, 16) & 255);
      C.JSArray_methods.$indexSet(buf, 2, C.JSInt_methods._shrOtherPositive$1(tl, 8) & 255);
      C.JSArray_methods.$indexSet(buf, 3, tl & 255);
      tmh = C.JSDouble_methods.floor$0(mSecs / 4294967296 * 10000) & 268435455;
      C.JSArray_methods.$indexSet(buf, 4, tmh >>> 8 & 255);
      C.JSArray_methods.$indexSet(buf, 5, tmh & 255);
      C.JSArray_methods.$indexSet(buf, 6, tmh >>> 24 & 15 | 16);
      C.JSArray_methods.$indexSet(buf, 7, tmh >>> 16 & 255);
      t1 = J.getInterceptor$n(clockSeq);
      C.JSArray_methods.$indexSet(buf, 8, (t1.$shr(clockSeq, 8) | 128) >>> 0);
      C.JSArray_methods.$indexSet(buf, 9, H._asIntNullable(t1.$and(clockSeq, 255)));
      node = options.$index(0, "node") != null ? options.$index(0, "node") : _this._nodeId;
      for (t1 = J.getInterceptor$asx(node), n = 0; n < 6; ++n)
        C.JSArray_methods.$indexSet(buf, 10 + n, H._asIntNullable(t1.$index(node, n)));
      type$.List_int._as(buf);
      t1 = _this._byteToHex;
      t1 = H.S((t1 && C.JSArray_methods).$index(t1, buf[0]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[1]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[2]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[3])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[4]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[5])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[6]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[7])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[8]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[9])) + "-";
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[10]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[11]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[12]));
      t2 = _this._byteToHex;
      t2 = t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[13]));
      t1 = _this._byteToHex;
      t1 = t2 + H.S((t1 && C.JSArray_methods).$index(t1, buf[14]));
      t2 = _this._byteToHex;
      return t1 + H.S((t2 && C.JSArray_methods).$index(t2, buf[15]));
    },
    set$_byteToHex: function(_byteToHex) {
      this._byteToHex = type$.List_String._as(_byteToHex);
    },
    set$_hexToByte: function(_hexToByte) {
      this._hexToByte = type$.Map_String_int._as(_hexToByte);
    }
  };
  A.Dropbook.prototype = {
    Dropbook$2: function(project, datastore) {
      var t3, t4, _this = this,
        t1 = _this.datastore,
        t2 = t1._created_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onCreated());
      t2 = t1._updated_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onUpdated());
      t2 = t1._deleted_stream;
      new P._BroadcastStream(t2, H._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onDeleted());
      t1 = t1._login_stream;
      new P._BroadcastStream(t1, H._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(_this.get$onLogin());
      _this.project.clock._listeners.add$1(0, _this);
      _this._dropbook$_registerEvents$0();
      _this._updateToolbar$0();
      _this._updateDetails$0();
      t1 = document;
      t2 = type$._EventStream_MouseEvent;
      t3 = new W._EventStream(t1, "click", false, t2);
      t4 = type$.Null;
      t3.get$first(t3).then$1$1(new A.Dropbook_closure(_this), t4);
      t2 = new W._EventStream(t1, "mousedown", false, t2);
      t2.get$first(t2).then$1$1(new A.Dropbook_closure0(_this), t4);
    },
    playAll$0: function() {
      var t3,
        _s16_ = "querySelectorAll",
        t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-pause-button"), t3)).remove$1(0, "hidden");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-play-button"), t3)).add$1(0, "hidden");
      C.JSArray_methods.forEach$1(this.cells, new A.Dropbook_playAll_closure());
      this.animate$1(0, 0);
    },
    pauseAll$0: function() {
      var t1, t2, t3,
        _s16_ = "querySelectorAll";
      C.JSArray_methods.forEach$1(this.cells, new A.Dropbook_pauseAll_closure());
      t1 = type$.Element;
      t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-pause-button"), t3)).add$1(0, "hidden");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-play-button"), t3)).remove$1(0, "hidden");
    },
    stopAll$0: function() {
      var t1, t2, t3,
        _s16_ = "querySelectorAll";
      this.project.clock.stopAll$0();
      t1 = type$.Element;
      t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-pause-button"), t3)).add$1(0, "hidden");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll("#transport-play-button"), t3)).remove$1(0, "hidden");
    },
    playCell$1: function(gadget) {
      var t1, t2, _i, cell;
      for (t1 = this.cells, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        cell = t1[_i];
        if (J.$eq$(cell.gadget.id, gadget.id)) {
          cell.play$0(0);
          return;
        }
      }
    },
    pauseCell$1: function(gadget) {
      var t1, t2, _i, cell;
      for (t1 = this.cells, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        cell = t1[_i];
        if (J.$eq$(cell.gadget.id, gadget.id)) {
          cell.pause$0(0);
          return;
        }
      }
    },
    scrollCellIntoView$1: function(gadget) {
      var t1, t2, _i, cell, hasScrollIntoViewIfNeeded;
      for (t1 = this.cells, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        cell = t1[_i];
        if (J.$eq$(cell.gadget.id, gadget.id)) {
          t1 = cell.root;
          hasScrollIntoViewIfNeeded = !!t1.scrollIntoViewIfNeeded;
          if (hasScrollIntoViewIfNeeded)
            t1.scrollIntoViewIfNeeded();
          else
            t1.scrollIntoView();
          C.Window_methods.scrollBy$1(window, P.LinkedHashMap_LinkedHashMap$_literal(["top", -150, "left", 0, "behavior", "smooth"], type$.String, type$.Object));
          return;
        }
      }
    },
    animate$1: function(_, t) {
      var mc, t1, m, s, c, _this = this;
      H._asNumNullable(t);
      mc = type$.HtmlElement._as(document.querySelector("#master-clock"));
      if (mc != null) {
        t1 = _this.project.clock;
        m = "" + C.JSInt_methods.$mod(C.JSNumber_methods._tdivFast$1(t1.get$time(t1), 60), 60);
        s = "" + C.JSInt_methods.$mod(C.JSNumber_methods.round$0(t1.get$time(t1)), 60);
        c = "" + C.JSInt_methods.$mod(C.JSNumber_methods.floor$0(t1.get$time(t1) * 100), 100);
        if (m.length === 1)
          m = "0" + m;
        if (s.length === 1)
          s = "0" + s;
        if (c.length === 1)
          c = "0" + c;
        J.setInnerHtml$1$x(mc, m + ":" + s + "." + c);
      }
      if (_this.project.clock._subscribers._collection$_length !== 0)
        C.Window_methods.get$animationFrame(window).then$1$1(_this.get$animate(_this), type$.void);
    },
    onUpdated$1: function($event) {
      var t1, t2, _this = this;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof K.Project && J.$eq$(t1.id, _this.project.id)) {
        _this.project.load$1(0, $event.target.save$0(0));
        _this._updateToolbar$0();
        _this._updateDetails$0();
      }
      if (!_this.project.get$hasValidId()) {
        t1 = type$.Element;
        t2 = document;
        H.checkTypeBound(t1, t1, "T", "querySelectorAll");
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".system-warning"), type$._FrozenElementList_Element)).add$1(0, "show");
      }
    },
    onCreated$1: function($event) {
      return this.onCreated$body$Dropbook(type$.DatastoreEvent._as($event));
    },
    onCreated$body$Dropbook: function($event) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t2, cell, t3, t4, t1;
      var $async$onCreated$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $event.target;
              if (t1 instanceof L.Gadget) {
                t2 = t1.instrument;
                if (t2 === "text") {
                  t2 = $async$self.datastore;
                  cell = new L.TextCell(t1, t2);
                  cell.TunePadCell$2(t1, t2);
                } else {
                  t3 = $async$self.datastore;
                  t4 = $async$self.project;
                  cell = t2 === "definitions" ? X.PythonCell$(t1, t3, t4.clock) : R.PythonTrack$(t1, $async$self.patches, t3, t4.clock);
                  t2 = t3;
                }
                t3 = $async$self.cells;
                C.JSArray_methods.add$1(t3, cell);
                cell.insert$2(0, type$.HtmlElement._as(document.querySelector(".track-container")), t3.length);
                t2.addProjectGadget$3($async$self.project, t1, t3.length);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$onCreated$1, $async$completer);
    },
    onDeleted$1: function($event) {
      var t1, cell, _this = this;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget) {
        cell = _this.getCell$1(H._asIntNullable(t1.id));
        if (cell != null) {
          C.JSArray_methods.remove$1(_this.cells, cell);
          t1 = cell.root;
          (t1 && C.DivElement_methods).remove$0(t1);
          _this.datastore.deleteProjectGadget$2(_this.project, type$.Gadget._as($event.target));
        }
      }
    },
    onLogin$1: function($event) {
      var t1;
      type$.DatastoreEvent._as($event);
      t1 = this.datastore;
      if (!t1.user.anonymous && !this.project.get$hasValidId())
        t1.create$1(0, this.project);
    },
    getCell$1: function(gadgetId) {
      var t1, t2, _i, cell;
      for (t1 = this.cells, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        cell = t1[_i];
        if (J.$eq$(cell.gadget.id, gadgetId))
          return cell;
      }
      return null;
    },
    onTempoChange$0: function() {
    },
    onTimeSignatureChange$0: function() {
      this.stopAll$0();
    },
    onClockReset$0: function() {
    },
    onClockTimeChange$0: function() {
    },
    loadProject$1: function(p) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, container, gadgets, gadget, cell, t1, t2, t3, t4, t5, t6, t7, cell0, exception, $async$exception, $async$temp1;
      var $async$loadProject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._loading) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._loading = true;
              t1 = $async$self.patches;
              $async$goto = t1.get$isEmpty(t1) ? 3 : 4;
              break;
            case 3:
              // then
              $async$temp1 = J;
              $async$goto = 5;
              return P._asyncAwait($async$self.datastore.getPublicSynthPatches$0(), $async$loadProject$1);
            case 5:
              // returning from await.
              t2 = $async$temp1.get$iterator$ax($async$result);
            case 6:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 7;
                break;
              }
              t3 = t2.get$current(t2);
              t1.$indexSet(0, H._asIntNullable(t3.id), t3);
              // goto for condition
              $async$goto = 6;
              break;
            case 7:
              // after for
            case 4:
              // join
              t2 = p.clock;
              if (t2.context == null && $async$self.project.clock.context != null)
                t2.context = $async$self.project.clock.context;
              $async$self.project = p;
              $async$self._updateToolbar$0();
              $async$self._updateDetails$0();
              container = type$.DivElement._as(document.querySelector(".track-container"));
              if (container != null) {
                t2 = container;
                t2.children;
                J._clearChildren$0$x(t2);
              }
              t2 = $async$self.cells;
              C.JSArray_methods.set$length(t2, 0);
              $async$goto = $async$self.project.get$hasValidId() ? 8 : 9;
              break;
            case 8:
              // then
              $async$handler = 11;
              t3 = $async$self.datastore;
              $async$goto = 14;
              return P._asyncAwait(t3.getProjectGadgets$1($async$self.project), $async$loadProject$1);
            case 14:
              // returning from await.
              gadgets = $async$result;
              for (t4 = J.get$iterator$ax(gadgets), t5 = type$.JSArray_String, t6 = type$.JsLinkedHashMap_int_int; t4.moveNext$0();) {
                gadget = t4.get$current(t4);
                cell = null;
                if (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo(["bass", "piano", "synth", "guitar", "drums", "drumkit", "marimba"], t5), gadget.instrument))
                  cell = R.PythonTrack$(gadget, t1, t3, $async$self.project.clock);
                else if (gadget.instrument === "definitions") {
                  t7 = gadget;
                  cell0 = new X.PythonCell($async$self.project.clock, t7, t3);
                  cell0.TunePadCell$2(t7, t3);
                  cell0.compiler = new X.PythonCompiler(cell0, new S.Preprocessor(new H.JsLinkedHashMap(t6), H.setRuntimeTypeInfo([], t5), H.setRuntimeTypeInfo([], t5)));
                  if (!t7.idata.containsKey$1(0, "show-output"))
                    t7.idata.$indexSet(0, "show-output", false);
                  cell = cell0;
                } else if (gadget.instrument === "text") {
                  t7 = gadget;
                  cell0 = new L.TextCell(t7, t3);
                  cell0.TunePadCell$2(t7, t3);
                  cell = cell0;
                } else
                  H.printString(H.S(gadget.instrument));
                if (cell != null) {
                  C.JSArray_methods.add$1(t2, cell);
                  J.insert$2$ax(cell, container, t2.length);
                }
              }
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error loading project gadgets.");
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
            case 9:
              // join
              $async$self._loading = false;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadProject$1, $async$completer);
    },
    _updateDetails$0: function() {
      var desc, tagList, t2, t3, t4, _i, $public, remix, moddate, art, music, baseUrl, shareLink, remixLink, _this = this,
        _s9_ = "remixable",
        t1 = document,
        $name = type$.InputElement._as(t1.querySelector("#project-details-name"));
      if ($name != null)
        $name.value = _this.project.name;
      desc = type$.TextAreaElement._as(t1.querySelector("#project-details-description"));
      if (desc != null)
        C.TextAreaElement_methods.setInnerHtml$1(desc, _this.project.summary);
      tagList = t1.querySelector("#project-details-tags");
      if (tagList != null) {
        t2 = J.getInterceptor$x(tagList);
        t2.get$children(tagList).clear$0(0);
        for (t3 = _this.project.tags, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          t2.insertAdjacentHtml$4$treeSanitizer$validator(tagList, "beforeend", "<li>#" + t3[_i] + "</li>", null, null);
      }
      t2 = type$.SelectElement;
      $public = t2._as(t1.querySelector("#project-details-public"));
      if ($public != null)
        $public.value = "" + _this.project.$public;
      remix = t2._as(t1.querySelector("#project-details-remix"));
      if (remix != null)
        remix.value = "" + B.toBool(J.$index$asx(_this.project.settings, _s9_), true);
      moddate = t1.querySelector("#project-details-modified");
      if (moddate != null) {
        t2 = _this.project;
        J.set$innerHtml$x(moddate, "Last Saved: " + t2.formatDateTime$1(t2.modified));
      }
      art = type$.DivElement._as(t1.querySelector("#project-details-artwork"));
      if (art != null) {
        t2 = _this.project;
        t3 = t2.artwork;
        if (t3 != null) {
          t2 = art.style;
          t3 = "url(" + t3 + _this._art_cache + ")";
          t2.backgroundImage = t3;
          t2 = art.style;
          t2.backgroundColor = "";
        } else {
          t3 = art.style;
          t2 = t2.color;
          t3.toString;
          t3.backgroundColor = t2 == null ? "" : t2;
          t2 = art.style;
          t2.backgroundImage = "";
        }
      }
      music = t1.querySelector("#project-details-music");
      if (music != null) {
        t2 = "" + _this.project.clock._bpm + " bpm | ";
        t3 = _this.project.clock;
        J.set$innerHtml$x(music, t2 + t3._meter + " time | " + H.S(t3._key.name));
      }
      baseUrl = C.JSString_methods.$add(C.JSString_methods.$add(J.$add$ansx(window.location.protocol, "//"), window.location.host), window.location.pathname);
      t2 = type$.AnchorElement;
      shareLink = t2._as(t1.querySelector("#project-share-url"));
      if (shareLink != null) {
        shareLink.href = baseUrl + "#session-" + H.S(_this.project.id);
        C.AnchorElement_methods.setInnerHtml$1(shareLink, baseUrl + "#session-" + H.S(_this.project.id));
        if (_this.project.$public)
          shareLink.classList.remove("hidden");
        else
          shareLink.classList.add("hidden");
      }
      remixLink = t2._as(t1.querySelector("#project-remix-url"));
      if (remixLink != null) {
        remixLink.href = baseUrl + "#remix-" + H.S(_this.project.id);
        C.AnchorElement_methods.setInnerHtml$1(remixLink, baseUrl + "#remix-" + H.S(_this.project.id));
        if (B.toBool(J.$index$asx(_this.project.settings, _s9_), true))
          remixLink.classList.remove("hidden");
        else
          remixLink.classList.add("hidden");
      }
    },
    _updateToolbar$0: function() {
      var t3, numField, denField, base, scale, key, t4, t5, t6, el, tempoField, nameField, _this = this,
        _s16_ = "querySelectorAll",
        _s8_ = "fa-check",
        t1 = document,
        t2 = type$.HtmlElement,
        time = t2._as(t1.querySelector("#time-signature"));
      if (time != null)
        J.setInnerHtml$1$x(time, _this.project.clock._meter);
      t3 = type$.InputElement;
      numField = t3._as(t1.querySelector(".tempo-menu .numerator"));
      if (numField != null)
        numField.value = H.S(_this.project.clock._beatsPerMeasure);
      denField = t3._as(t1.querySelector(".tempo-menu .denominator"));
      if (denField != null)
        denField.value = H.S(_this.project.clock._beatValue);
      base = t2._as(t1.querySelector("#key-base"));
      scale = t2._as(t1.querySelector("#key-scale"));
      key = _this.project.clock._key.name.split(" ");
      if (base != null && scale != null && key.length === 2) {
        t4 = key.length;
        if (0 >= t4)
          return H.ioore(key, 0);
        J.setInnerHtml$1$x(base, H._asStringNullable(key[0]));
        if (1 >= t4)
          return H.ioore(key, 1);
        J.setInnerHtml$1$x(scale, H._asStringNullable(key[1]));
      }
      t4 = type$.Element;
      H.checkTypeBound(t4, t4, "T", _s16_);
      t5 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll("#change-key i.fas"), t5)).remove$1(0, _s8_);
      t6 = "#change-key .menu-item[data-key='" + H.S(_this.project.clock._key.name) + "'] i.fas";
      H.checkTypeBound(t4, t4, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(t6), t5)).add$1(0, _s8_);
      el = t2._as(t1.querySelector("#bpm"));
      if (el != null)
        J.setInnerHtml$1$x(el, "" + _this.project.clock._bpm);
      tempoField = t3._as(t1.querySelector(".tempo-menu .tempo"));
      if (tempoField != null)
        tempoField.value = "" + _this.project.clock._bpm;
      nameField = t3._as(t1.querySelector("#project-name"));
      if (nameField != null)
        nameField.value = _this.project.name;
    },
    _switchTabs$1: function(tabName) {
      var t3, t4,
        _s16_ = "querySelectorAll",
        _s8_ = "selected",
        t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".tab"), t3)).add$1(0, "hidden");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".tabs button"), t3)).remove$1(0, _s8_);
      t4 = "#" + tabName + "-tab";
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(t4), t3)).remove$1(0, "hidden");
      t4 = "#" + tabName + "-tab-button";
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(t4), t3)).add$1(0, _s8_);
    },
    _dropbook$_registerEvents$0: function() {
      var t3, t4, t5, t6, t7, bpmField, numField, denField, t8, t9, t10, artInput, _this = this, _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s13_ = "#project-name",
        _s68_ = ".tempo-menu .tempo, .tempo-menu .numerator, .tempo-menu .denominator",
        _s5_ = "click", _s4_ = "blur",
        _s8_ = "keypress",
        _s9_ = "mousedown",
        t1 = type$.Element,
        t2 = document;
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      t3 = type$._FrozenElementList_Element;
      t4 = type$.ElementList_Element;
      t5 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#add-cell-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      t6 = type$._ElementListEventStreamImpl_Event;
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(_s13_), t3)), false, _s4_, t6).listen$1(new A.Dropbook__registerEvents_closure0(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(_s13_), t3)), false, _s8_, type$._ElementListEventStreamImpl_KeyboardEvent).listen$1(new A.Dropbook__registerEvents_closure1());
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#transport-stop-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure2(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#transport-pause-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure3(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#transport-play-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure4(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#about-tab-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure5(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#tracks-tab-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure6(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#code-tab-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure7(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#mixer-tab-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure8(_this));
      D.DropdownMenu_armMenu(t2.querySelector("#profile-button"), new A.Dropbook__registerEvents_closure9(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#login-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure10(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#logout-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure11(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(".system-warning"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure12());
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(".system-warning .login-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure13(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(".system-warning .join-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure14(_this));
      t7 = type$.InputElement;
      bpmField = t7._as(t2.querySelector(".tempo-menu .tempo"));
      numField = t7._as(t2.querySelector(".tempo-menu .numerator"));
      denField = t7._as(t2.querySelector(".tempo-menu .denominator"));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#change-bpm, #change-time-signature"), t3)), false, _s9_, t5).listen$1(new A.Dropbook__registerEvents_closure15(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(".tempo-menu"), t3)), false, _s9_, t5).listen$1(new A.Dropbook__registerEvents_closure16());
      _this._bindSpinnerButton$3(".tempo-menu .tempo-up", new A.Dropbook__registerEvents_closure17(_this), new A.Dropbook__registerEvents_closure18(_this));
      _this._bindSpinnerButton$3(".tempo-menu .tempo-down", new A.Dropbook__registerEvents_closure19(_this), new A.Dropbook__registerEvents_closure20(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(_s68_), t3)), false, "input", t6).listen$1(new A.Dropbook__registerEvents_closure21());
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll(_s68_), t3)), false, _s4_, t6).listen$1(new A.Dropbook__registerEvents_closure22(_this, numField, denField));
      bpmField.toString;
      t8 = type$._ElementEventStreamImpl_KeyboardEvent;
      t9 = t8._eval$1("~(1)");
      t10 = t9._as(new A.Dropbook__registerEvents_closure23(bpmField));
      type$.void_Function._as(null);
      t8 = t8._precomputed1;
      W._EventStreamSubscription$(bpmField, _s8_, t10, false, t8);
      numField.toString;
      W._EventStreamSubscription$(numField, _s8_, t9._as(new A.Dropbook__registerEvents_closure24(numField)), false, t8);
      denField.toString;
      W._EventStreamSubscription$(denField, _s8_, t9._as(new A.Dropbook__registerEvents_closure25(denField)), false, t8);
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#change-key .menu-item"), t3)), false, _s9_, t5).listen$1(new A.Dropbook__registerEvents_closure26(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#change-key"), t3)), false, _s9_, t5).listen$1(new A.Dropbook__registerEvents_closure27(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#project-details-name"), t3)), false, _s4_, t6).listen$1(new A.Dropbook__registerEvents_closure28(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#project-details-description"), t3)), false, _s4_, t6).listen$1(new A.Dropbook__registerEvents_closure29(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#project-details-public"), t3)), false, "change", t6).listen$1(new A.Dropbook__registerEvents_closure30(_this));
      H.checkTypeBound(t1, t1, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#project-details-remix"), t3)), false, "change", t6).listen$1(new A.Dropbook__registerEvents_closure31(_this));
      artInput = t7._as(t2.querySelector("#artwork-file-input"));
      if (artInput != null) {
        H.checkTypeBound(t1, t1, _s1_, _s16_);
        new W._ElementListEventStreamImpl(t4._as(new W._FrozenElementList(t2.querySelectorAll("#project-artwork-upload-button"), t3)), false, _s5_, t5).listen$1(new A.Dropbook__registerEvents_closure32(artInput));
        t1 = type$._ElementEventStreamImpl_Event;
        W._EventStreamSubscription$(artInput, "input", t1._eval$1("~(1)")._as(new A.Dropbook__registerEvents_closure33(_this, artInput)), false, t1._precomputed1);
      }
    },
    _adjustTempo$1: function(delta) {
      var t1,
        bpmField = type$.InputElement._as(document.querySelector(".tempo-menu .tempo"));
      if (bpmField != null) {
        t1 = B.toInt(bpmField.value, 120);
        if (typeof t1 !== "number")
          return t1.$add();
        bpmField.value = H.S(C.JSInt_methods.clamp$2(t1 + delta, 5, 999));
      }
    },
    _setTempo$0: function() {
      var tempo, t1, t2,
        bpmField = type$.InputElement._as(document.querySelector(".tempo-menu .tempo"));
      if (bpmField != null) {
        tempo = H._asIntNullable(J.clamp$2$n(B.toInt(bpmField.value, 120), 5, 999));
        bpmField.value = "" + tempo;
        t1 = this.project.clock;
        t2 = t1._bpm;
        if (tempo !== t2) {
          t1.setTempo$1(tempo);
          return true;
        }
      }
      return false;
    },
    _bindSpinnerButton$3: function(buttonSelector, spinAction, releaseAction) {
      var t2, t3, t4, t1 = {},
        button = type$.ButtonElement._as(document.querySelector(buttonSelector));
      if (button != null) {
        t1.down = false;
        t1.hold = null;
        t2 = type$._ElementEventStreamImpl_MouseEvent;
        t3 = t2._eval$1("~(1)");
        t4 = t3._as(new A.Dropbook__bindSpinnerButton_closure(t1, releaseAction));
        type$.void_Function._as(null);
        t2 = t2._precomputed1;
        W._EventStreamSubscription$(button, "mouseup", t4, false, t2);
        W._EventStreamSubscription$(button, "mousedown", t3._as(new A.Dropbook__bindSpinnerButton_closure0(t1, spinAction)), false, t2);
      }
    },
    _toggleContextMenu$1: function(menu) {
      var t1, t2;
      if (menu != null) {
        t1 = type$.Element;
        t2 = document;
        H.checkTypeBound(t1, t1, "T", "querySelectorAll");
        t2 = new W._FrozenElementList(t2.querySelectorAll(".context-menu"), type$._FrozenElementList_Element);
        t2.forEach$1(t2, new A.Dropbook__toggleContextMenu_closure(menu));
        J.get$classes$x(menu).toggle$1(0, "hidden");
      }
    }
  };
  A.Dropbook_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this.project.clock;
      if (t1.context == null)
        t1.context = new (window.AudioContext || window.webkitAudioContext)();
    },
    $signature: 0
  };
  A.Dropbook_closure0.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this.$this.project.clock;
      if (t1.context == null)
        t1.context = new (window.AudioContext || window.webkitAudioContext)();
    },
    $signature: 0
  };
  A.Dropbook_playAll_closure.prototype = {
    call$1: function(cell) {
      type$.TunePadCell._as(cell).play$0(0);
    },
    $signature: 26
  };
  A.Dropbook_pauseAll_closure.prototype = {
    call$1: function(cell) {
      type$.TunePadCell._as(cell).pause$0(0);
    },
    $signature: 26
  };
  A.Dropbook__registerEvents_closure.prototype = {
    call$1: function(e) {
      var dialog, t1;
      type$.MouseEvent._as(e);
      dialog = E.Dialog_openModal("#add-track-template", null);
      t1 = type$.Element;
      dialog.toString;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      new W._ElementListEventStreamImpl(type$.ElementList_Element._as(new W._FrozenElementList(dialog.querySelectorAll(".add-button"), type$._FrozenElementList_Element)), false, "click", type$._ElementListEventStreamImpl_MouseEvent).listen$1(new A.Dropbook__registerEvents__closure0(this.$this));
    },
    $signature: 0
  };
  A.Dropbook__registerEvents__closure0.prototype = {
    call$1: function(e) {
      return this.$call$body$Dropbook__registerEvents__closure0(type$.MouseEvent._as(e));
    },
    $call$body$Dropbook__registerEvents__closure0: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, gadget, exception, button, gadget0, $async$exception;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              button = type$.ButtonElement._as(W._convertNativeToDart_EventTarget(e.currentTarget));
              gadget0 = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
              gadget0.type = "gadgets";
              gadget0.name = "New Track";
              gadget = gadget0;
              button.toString;
              gadget.name = button.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(button))._toHyphenedName$1("name"));
              gadget.instrument = button.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(button))._toHyphenedName$1("instrument"));
              E.Dialog_closeModal();
              E.Dialog_showLoader();
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait($async$self.$this.datastore.create$1(0, gadget), $async$call$1);
            case 6:
              // returning from await.
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error creating track.");
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              E.Dialog_hideLoader();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  A.Dropbook__registerEvents_closure0.prototype = {
    call$1: function(e) {
      var nameField, t1, t2;
      type$.Event._as(e);
      nameField = type$.InputElement._as(document.querySelector("#project-name"));
      if (nameField != null) {
        t1 = this.$this;
        t2 = t1.project;
        t2.name = nameField.value;
        t1.datastore.update$1(0, t2);
      }
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure1.prototype = {
    call$1: function(e) {
      if (type$.KeyboardEvent._as(e).keyCode === 13)
        J.blur$0$x(document.querySelector("#project-name"));
    },
    $signature: 13
  };
  A.Dropbook__registerEvents_closure2.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.stopAll$0();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure3.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.pauseAll$0();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure4.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.playAll$0();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure5.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._switchTabs$1("about");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure6.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._switchTabs$1("tracks");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure7.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._switchTabs$1("code");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure8.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._switchTabs$1("mixer");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure9.prototype = {
    call$1: function(menuItem) {
      var _s6_ = "action",
        t1 = J.getInterceptor$x(menuItem),
        t2 = t1.get$dataset(menuItem);
      if (t2._attributes._html$_element.getAttribute("data-" + t2._toHyphenedName$1(_s6_)) === "login")
        R.UserAccounts_login(this.$this.datastore);
      else {
        t2 = t1.get$dataset(menuItem);
        if (t2._attributes._html$_element.getAttribute("data-" + t2._toHyphenedName$1(_s6_)) === "logout")
          this.$this.datastore.logout$0();
        else {
          t1 = t1.get$dataset(menuItem);
          if (t1._attributes._html$_element.getAttribute("data-" + t1._toHyphenedName$1(_s6_)) === "profile")
            C.Window_methods.open$2(window, this.$this.datastore.host + "/account/profile", "_blank");
        }
      }
    },
    $signature: 8
  };
  A.Dropbook__registerEvents_closure10.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      R.UserAccounts_login(this.$this.datastore);
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure11.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.datastore.logout$0();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure12.prototype = {
    call$1: function(e) {
      var t1, t2, t3,
        _s15_ = ".system-warning",
        _s16_ = "querySelectorAll";
      type$.MouseEvent._as(e);
      t1 = type$.Element;
      t2 = document;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s15_), t3)).remove$1(0, "show");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(_s15_), t3)).add$1(0, "dismissed");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure13.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      R.UserAccounts_login(this.$this.datastore);
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure14.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      C.Window_methods.open$2(window, this.$this.datastore.host + "/join", "_blank");
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure15.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._toggleContextMenu$1(document.querySelector("#change-bpm .tempo-menu"));
      e.stopPropagation();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure16.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e).stopPropagation();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure17.prototype = {
    call$0: function() {
      this.$this._adjustTempo$1(1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  A.Dropbook__registerEvents_closure18.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1._setTempo$0())
        t1.datastore.update$1(0, t1.project);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  A.Dropbook__registerEvents_closure19.prototype = {
    call$0: function() {
      this.$this._adjustTempo$1(-1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  A.Dropbook__registerEvents_closure20.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1._setTempo$0())
        t1.datastore.update$1(0, t1.project);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  A.Dropbook__registerEvents_closure21.prototype = {
    call$1: function(e) {
      var i = type$.InputElement._as(J.get$currentTarget$x(type$.Event._as(e))),
        t1 = i.value,
        t2 = P.RegExp_RegExp("[^0-9]");
      t1.toString;
      i.value = H.stringReplaceAllUnchecked(t1, t2, "");
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure22.prototype = {
    call$1: function(e) {
      var t1, numerator, t2, denominator, changed;
      type$.Event._as(e);
      t1 = this.numField;
      numerator = t1 != null ? B.toInt(t1.value, 4) : 4;
      t2 = this.denField;
      denominator = t2 != null ? B.toInt(t2.value, 4) : 4;
      numerator = H._asIntNullable(J.clamp$2$n(numerator, 1, 32));
      if (!C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([1, 2, 4, 8, 16, 32, 64], type$.JSArray_int), denominator))
        denominator = 4;
      t1.value = "" + numerator;
      t2.value = H.S(denominator);
      t1 = this.$this;
      changed = t1._setTempo$0();
      t2 = t1.project.clock._meter;
      if (t2 !== "" + numerator + "/" + H.S(denominator)) {
        t1.project.clock.setTimeSignature$1("" + numerator + "/" + H.S(denominator));
        changed = true;
      }
      if (changed)
        t1.datastore.update$1(0, t1.project);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure23.prototype = {
    call$1: function(e) {
      if (type$.KeyboardEvent._as(e).keyCode === 13)
        this.bpmField.blur();
    },
    $signature: 13
  };
  A.Dropbook__registerEvents_closure24.prototype = {
    call$1: function(e) {
      if (type$.KeyboardEvent._as(e).keyCode === 13)
        this.numField.blur();
    },
    $signature: 13
  };
  A.Dropbook__registerEvents_closure25.prototype = {
    call$1: function(e) {
      if (type$.KeyboardEvent._as(e).keyCode === 13)
        this.denField.blur();
    },
    $signature: 13
  };
  A.Dropbook__registerEvents_closure26.prototype = {
    call$1: function(e) {
      var menu, t1, t2, t3;
      type$.MouseEvent._as(e);
      menu = type$.HtmlElement._as(W._convertNativeToDart_EventTarget(e.currentTarget));
      t1 = this.$this;
      t2 = t1.project.clock;
      menu.toString;
      t3 = menu.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(menu))._toHyphenedName$1("key"));
      t2._key = new D.Key(H.setRuntimeTypeInfo([0, 2, 4, 5, 7, 9, 11], type$.JSArray_int), t3);
      t1._updateToolbar$0();
      t1._toggleContextMenu$1(document.querySelector("#change-key .context-menu"));
      e.stopPropagation();
      t1.datastore.update$1(0, t1.project);
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure27.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._toggleContextMenu$1(document.querySelector("#change-key .context-menu"));
      e.stopPropagation();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure28.prototype = {
    call$1: function(e) {
      var t1;
      type$.Event._as(e);
      t1 = this.$this;
      t1.project.name = type$.InputElement._as(J.get$currentTarget$x(e)).value;
      t1.datastore.update$1(0, t1.project);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure29.prototype = {
    call$1: function(e) {
      var t1;
      type$.Event._as(e);
      t1 = this.$this;
      t1.project.summary = type$.TextAreaElement._as(J.get$currentTarget$x(e)).value;
      t1.datastore.update$1(0, t1.project);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure30.prototype = {
    call$1: function(e) {
      var t1;
      type$.Event._as(e);
      t1 = this.$this;
      t1.project.$public = type$.SelectElement._as(J.get$currentTarget$x(e)).value === "true";
      t1.datastore.update$1(0, t1.project);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure31.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      type$.Event._as(e);
      t1 = this.$this;
      t2 = t1.project;
      t3 = type$.SelectElement._as(J.get$currentTarget$x(e)).value;
      J.$indexSet$ax(t2.settings, "remixable", t3 === "true");
      t1.datastore.update$1(0, t1.project);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents_closure32.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.artInput.click();
    },
    $signature: 0
  };
  A.Dropbook__registerEvents_closure33.prototype = {
    call$1: function(e) {
      var reader = new FileReader(),
        t1 = this.artInput.files;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      reader.readAsDataURL(t1[0]);
      t1 = type$.void_Function_ProgressEvent._as(new A.Dropbook__registerEvents__closure(this.$this, reader));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(reader, "load", t1, false, type$.ProgressEvent);
    },
    $signature: 2
  };
  A.Dropbook__registerEvents__closure.prototype = {
    call$1: function(e) {
      return this.$call$body$Dropbook__registerEvents__closure(type$.ProgressEvent._as(e));
    },
    $call$body$Dropbook__registerEvents__closure: function(e) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1.project.artwork = H._asStringNullable(C.FileReader_methods.get$result($async$self.reader));
              t1._art_cache = "?" + C.C__JSRandom.nextInt$1(500);
              E.Dialog_showLoader();
              $async$goto = 2;
              return P._asyncAwait(t1.datastore.update$1(0, t1.project), $async$call$1);
            case 2:
              // returning from await.
              E.Dialog_hideLoader();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 12
  };
  A.Dropbook__bindSpinnerButton_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      t1 = this._box_0;
      t1.down = false;
      t1 = t1.hold;
      if (t1 != null)
        t1.cancel$0(0);
      P.Function_apply(this.releaseAction, [], null);
    },
    $signature: 0
  };
  A.Dropbook__bindSpinnerButton_closure0.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this._box_0;
      t2 = t1.hold;
      if (t2 != null)
        t2.cancel$0(0);
      t2 = this.spinAction;
      P.Function_apply(t2, [], null);
      t1.down = true;
      t1.hold = P.Timer_Timer(C.Duration_500000, new A.Dropbook__bindSpinnerButton__closure(t1, t2));
    },
    $signature: 0
  };
  A.Dropbook__bindSpinnerButton__closure.prototype = {
    call$0: function() {
      P.Timer_Timer$periodic(C.Duration_50000, new A.Dropbook__bindSpinnerButton___closure(this._box_0, this.spinAction));
    },
    $signature: 1
  };
  A.Dropbook__bindSpinnerButton___closure.prototype = {
    call$1: function(t) {
      type$.Timer._as(t);
      if (this._box_0.down)
        P.Function_apply(this.spinAction, [], null);
      else
        t.cancel$0(0);
    },
    $signature: 38
  };
  A.Dropbook__toggleContextMenu_closure.prototype = {
    call$1: function(m) {
      type$.Element._as(m);
      if (this.menu !== m)
        J.get$classes$x(m).add$1(0, "hidden");
    },
    $signature: 10
  };
  A._Dropbook_Object_ClockSubscriber.prototype = {};
  O.TrackLibrary.prototype = {
    show$0: function(_) {
      var t1, t2, _this = this, _s6_ = "tracks";
      _this.tab = _s6_;
      _this.sort = "modified";
      t1 = _this.filters;
      t1.clear$0(0);
      t2 = type$.dynamic;
      t1.$indexSet(0, _s6_, P.LinkedHashSet_LinkedHashSet$from(["bass", "drums", "drumkit", "guitar", "piano", "marimba", "sequencer", "definitions"], t2));
      t1.$indexSet(0, "sounds", P.LinkedHashSet_LinkedHashSet$from(["bass", "drums", "drumkit", "guitar", "piano", "earsketch"], t2));
      _this.set$filter(0, t1.$index(0, _s6_));
      _this._library$_dialog = E.Dialog_openModal("#library-template", null);
      _this._search$3(_this.tab, _this.filter, _this.sort);
      t1 = _this._library$_dialog;
      t2 = type$.Element;
      t1.toString;
      H.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t1 = new W._FrozenElementList(t1.querySelectorAll(".library-tab"), type$._FrozenElementList_Element);
      t1.forEach$1(t1, new O.TrackLibrary_show_closure(_this));
      D.DropdownMenu_armMenu(_this._library$_dialog.querySelector(".sort-menu"), new O.TrackLibrary_show_closure0(_this));
    },
    _setFilterOption$3: function(tab, f, off) {
      var t1, t2, _this = this, _s1_ = "i", _s1_0 = "T",
        _s16_ = "querySelectorAll",
        _s9_ = "fa-square",
        _s15_ = "fa-check-square",
        el = _this._library$_dialog.querySelector("[data-tab='" + H.S(tab) + "'] .filter-option[data-filter='" + H.S(f) + "']");
      _this.filter.remove$1(0, f);
      t1 = type$.Element;
      t2 = type$._FrozenElementList_Element;
      if (off) {
        el.toString;
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).add$1(0, "far");
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).add$1(0, _s9_);
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).remove$1(0, "fas");
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).remove$1(0, _s15_);
        J.get$classes$x(el).add$1(0, "off");
        if (f === "drums")
          _this.filter.remove$1(0, "drumkit");
      } else {
        el.toString;
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).remove$1(0, "far");
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).remove$1(0, _s9_);
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).add$1(0, "fas");
        H.checkTypeBound(t1, t1, _s1_0, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(el.querySelectorAll(_s1_), t2)).add$1(0, _s15_);
        J.get$classes$x(el).remove$1(0, "off");
        _this.filter.add$1(0, f);
        if (f === "drums")
          _this.filter.add$1(0, "drumkit");
      }
    },
    _search$3: function(collection, filter, sort) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, results, trackList, t2, t3, t4, result, $status, container;
      var $async$_search$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $status = $async$self._library$_dialog.querySelector(".track-count");
              container = type$.DivElement._as($async$self._library$_dialog.querySelector(".search-results"));
              container.children;
              C.DivElement_methods._clearChildren$0(container);
              $async$goto = $status != null && true ? 3 : 4;
              break;
            case 3:
              // then
              t1 = J.getInterceptor$x($status);
              t1.set$innerHtml($status, "Loading ...");
              $async$goto = collection === "tracks" ? 5 : 7;
              break;
            case 5:
              // then
              $async$goto = 8;
              return P._asyncAwait($async$self.datastore.searchTrackLibrary$2(filter.toList$0(0), sort), $async$_search$3);
            case 8:
              // returning from await.
              results = $async$result;
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              $async$goto = collection === "sounds" ? 9 : 11;
              break;
            case 9:
              // then
              $async$goto = 12;
              return P._asyncAwait($async$self.datastore.searchSoundLibrary$2(filter.toList$0(0), sort), $async$_search$3);
            case 12:
              // returning from await.
              results = $async$result;
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              // goto return
              $async$goto = 1;
              break;
            case 10:
              // join
            case 6:
              // join
              trackList = document.createElement("ul");
              trackList.className = "track-list";
              for (t2 = J.getInterceptor$ax(results), t3 = t2.get$iterator(results), t4 = type$.Map_dynamic_dynamic; t3.moveNext$0();) {
                result = $async$self._buildTrack$2(collection, t4._as(t3.get$current(t3)));
                if (result != null)
                  trackList.appendChild(result);
              }
              t1.set$innerHtml($status, "Showing " + H.S(t2.get$length(results)) + " " + H.S(collection));
              container.appendChild(trackList);
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_search$3, $async$completer);
    },
    _buildTrack$2: function(collection, data) {
      var t2, t3, t4, audio, audio_src, source, el, t5, t6, alink, mod, _this = this, _s2_ = "id",
        _s10_ = "instrument",
        _s12_ = ".gadget-icon",
        _s1_ = "T",
        _s16_ = "querySelectorAll",
        _s11_ = "definitions",
        _s14_ = ".star-button i",
        _s10_0 = "star_count",
        _s5_ = "click",
        t1 = document,
        track = type$.LIElement._as(type$.DocumentFragment._as(type$.TemplateElement._as(t1.querySelector("#library-track-template")).content.cloneNode(true)).querySelector("li.track-item"));
      if (track == null)
        return null;
      t2 = J.getInterceptor$asx(data);
      t3 = H.S(t2.$index(data, _s2_));
      track.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1(_s2_), t3);
      track.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("collection"), collection);
      t3 = H._asStringNullable(t2.$index(data, _s10_));
      track.classList.add(t3);
      t3 = collection === "tracks";
      if (t3) {
        t4 = type$.Element;
        H.checkTypeBound(t4, t4, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s12_), type$._FrozenElementList_Element)).add$1(0, H._asStringNullable(t2.$index(data, _s10_)));
      } else if (collection === "sounds") {
        t4 = type$.Element;
        H.checkTypeBound(t4, t4, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s12_), type$._FrozenElementList_Element)).add$1(0, "sound");
      }
      audio = type$.AudioElement._as(track.querySelector("audio"));
      if (!J.$eq$(t2.$index(data, _s10_), _s11_)) {
        t4 = _this.datastore.host;
        audio_src = t4 + "/api/library/audio/" + H.S(t2.$index(data, _s2_));
        if (collection === "sounds")
          audio_src = t4 + "/recorder/audio/" + H.S(t2.$index(data, _s2_));
        if (audio != null) {
          source = t1.createElement("source");
          source.src = audio_src;
          audio.appendChild(source);
        }
      }
      t1 = type$.HtmlElement;
      el = t1._as(track.querySelector(".track-title"));
      if (el != null)
        J.setInnerHtml$1$x(el, H._asStringNullable(t2.$index(data, "name")));
      el.toString;
      t4 = type$._ElementEventStreamImpl_MouseEvent;
      t5 = t4._eval$1("~(1)");
      t6 = t5._as(new O.TrackLibrary__buildTrack_closure(_this, track));
      type$.void_Function._as(null);
      t4 = t4._precomputed1;
      W._EventStreamSubscription$(el, _s5_, t6, false, t4);
      t6 = collection === "sounds";
      if (t6) {
        el = t1._as(track.querySelector(".track-id"));
        if (el != null)
          J.setInnerHtml$1$x(el, "(" + H.S(t2.$index(data, _s2_)) + ")");
      }
      el = t1._as(track.querySelector(".track-duration"));
      if (el != null)
        if (t3)
          J.setInnerHtml$1$x(el, H.S(t2.$index(data, "beats")) + " beats");
        else if (t6)
          J.setInnerHtml$1$x(el, J.toStringAsFixed$1$n(t2.$index(data, "duration"), 1) + "s");
      el = t1._as(track.querySelector(".track-details .author"));
      alink = W.AnchorElement_AnchorElement();
      t6 = H._asStringNullable(t2.$index(data, "uid"));
      alink.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(alink))._toHyphenedName$1("uid"), t6);
      C.AnchorElement_methods.setInnerHtml$1(alink, H.S(t2.$index(data, "username")));
      alink.href = "#";
      W._EventStreamSubscription$(alink, _s5_, t5._as(new O.TrackLibrary__buildTrack_closure0()), false, t4);
      if (el != null) {
        J.setInnerHtml$1$x(el, "by ");
        el.appendChild(alink);
      }
      if (t3) {
        el = t1._as(track.querySelector(".track-details .line-count"));
        if (el != null) {
          J.setInnerHtml$1$x(el, H.S(t2.$index(data, "line_count")) + " lines of Python code");
          el.classList.remove("hidden");
        }
        el = t1._as(track.querySelector(".track-details .music"));
        if (el != null) {
          J.setInnerHtml$1$x(el, H.S(t2.$index(data, "tempo")) + " bpm | " + H.S(t2.$index(data, "meter")) + " time | " + H.S(t2.$index(data, "key")));
          el.classList.remove("hidden");
        }
        el = t1._as(track.querySelector(".track-details .code"));
        if (el != null && J.$eq$(t2.$index(data, _s10_), _s11_)) {
          J.setInnerHtml$1$x(el, H._asStringNullable(t2.$index(data, "code")));
          el.classList.remove("hidden");
        }
      }
      el = t1._as(track.querySelector(".track-details .description"));
      if (el != null)
        J.setInnerHtml$1$x(el, H.S(t2.$index(data, "description")));
      el = t1._as(track.querySelector(".track-details .modified"));
      mod = type$.List_String._as(J.split$1$s(t2.$index(data, "modified"), "."));
      if (el != null && mod.length > 1) {
        if (0 >= mod.length)
          return H.ioore(mod, 0);
        J.setInnerHtml$1$x(el, "Modified: " + H.S(mod[0]));
      }
      t3 = type$.Element;
      H.checkTypeBound(t3, t3, _s1_, _s16_);
      t4 = type$._FrozenElementList_Element;
      t5 = type$.ElementList_Element;
      t6 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(track.querySelectorAll(_s12_), t4)), false, _s5_, t6).listen$1(new O.TrackLibrary__buildTrack_closure1(_this, track));
      H.checkTypeBound(t3, t3, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(track.querySelectorAll(".expand-button"), t4)), false, _s5_, t6).listen$1(new O.TrackLibrary__buildTrack_closure2(track));
      if (_this._isStarred$1(track)) {
        H.checkTypeBound(t3, t3, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s14_), t4)).remove$1(0, "far");
        H.checkTypeBound(t3, t3, _s1_, _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s14_), t4)).add$1(0, "fas");
      }
      el = t1._as(track.querySelector(".star-count"));
      if (el != null && J.$gt$n(t2.$index(data, _s10_0), 0))
        J.setInnerHtml$1$x(el, H.S(t2.$index(data, _s10_0)));
      H.checkTypeBound(t3, t3, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(track.querySelectorAll(".star-button"), t4)), false, _s5_, t6).listen$1(new O.TrackLibrary__buildTrack_closure3(_this, track));
      H.checkTypeBound(t3, t3, _s1_, _s16_);
      new W._ElementListEventStreamImpl(t5._as(new W._FrozenElementList(track.querySelectorAll(".add-button"), t4)), false, _s5_, t6).listen$1(new O.TrackLibrary__buildTrack_closure4(_this, collection, data));
      return track;
    },
    _starKey$1: function(track) {
      var collection = track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("collection")),
        id = track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("id"));
      return "/library/" + H.S(collection) + "/stars/" + H.S(J.toString$0$(this.datastore.user.id)) + "/" + H.S(id);
    },
    _isStarred$1: function(track) {
      var key = this._starKey$1(track);
      return window.localStorage.getItem(key) === "true";
    },
    _starTrack$1: function(track) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t2, stats, el, key, id, collection, t1, $async$temp1;
      var $async$_starTrack$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              key = $async$self._starKey$1(track);
              id = P.int_parse(track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("id")));
              collection = track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("collection"));
              t1 = type$.Element;
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              t2 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(".star-button i"), t2)).remove$1(0, "far");
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(".star-button i"), t2)).add$1(0, "fas");
              window.localStorage.setItem(key, "true");
              $async$goto = collection === "tracks" ? 2 : 4;
              break;
            case 2:
              // then
              $async$temp1 = type$.Map_dynamic_dynamic;
              $async$goto = 5;
              return P._asyncAwait($async$self.datastore.starTrack$1(id), $async$_starTrack$1);
            case 5:
              // returning from await.
              stats = $async$temp1._as($async$result);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = collection === "sounds" ? 6 : 8;
              break;
            case 6:
              // then
              $async$temp1 = type$.Map_dynamic_dynamic;
              $async$goto = 9;
              return P._asyncAwait($async$self.datastore.starSound$1(id), $async$_starTrack$1);
            case 9:
              // returning from await.
              $async$result = $async$temp1._as($async$result);
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$result = null;
            case 7:
              // join
              stats = $async$result;
            case 3:
              // join
              el = track.querySelector(".star-count");
              if (el != null && stats != null)
                J.set$innerHtml$x(el, H.S(J.$index$asx(stats, "star_count")));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_starTrack$1, $async$completer);
    },
    _unstarTrack$1: function(track) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t2, stats, el, key, id, collection, t1, $async$temp1;
      var $async$_unstarTrack$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              key = $async$self._starKey$1(track);
              id = P.int_parse(track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("id")));
              collection = track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("collection"));
              t1 = type$.Element;
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              t2 = type$._FrozenElementList_Element;
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(".star-button i"), t2)).add$1(0, "far");
              H.checkTypeBound(t1, t1, "T", "querySelectorAll");
              W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(".star-button i"), t2)).remove$1(0, "fas");
              t2 = window.localStorage;
              (t2 && C.Storage_methods).remove$1(t2, key);
              $async$goto = collection === "tracks" ? 2 : 4;
              break;
            case 2:
              // then
              $async$temp1 = type$.Map_dynamic_dynamic;
              $async$goto = 5;
              return P._asyncAwait($async$self.datastore.unstarTrack$1(id), $async$_unstarTrack$1);
            case 5:
              // returning from await.
              stats = $async$temp1._as($async$result);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = collection === "sounds" ? 6 : 8;
              break;
            case 6:
              // then
              $async$temp1 = type$.Map_dynamic_dynamic;
              $async$goto = 9;
              return P._asyncAwait($async$self.datastore.unstarSound$1(id), $async$_unstarTrack$1);
            case 9:
              // returning from await.
              $async$result = $async$temp1._as($async$result);
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$result = null;
            case 7:
              // join
              stats = $async$result;
            case 3:
              // join
              el = track.querySelector(".star-count");
              if (el != null && stats != null)
                J.set$innerHtml$x(el, H.S(J.$index$asx(stats, "star_count")));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_unstarTrack$1, $async$completer);
    },
    _playPauseTrackPreview$1: function(track) {
      var audio,
        t1 = track.classList.contains("definitions");
      if (t1)
        return;
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      if (W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(".gadget-icon"), type$._FrozenElementList_Element)).contains$1(0, "playing")) {
        audio = type$.AudioElement._as(track.querySelector("audio"));
        if (audio != null)
          audio.pause();
      } else
        this._playTrackPreview$1(track);
    },
    _playTrackPreview$1: function(track) {
      var t1, t2, t3,
        _s14_ = ".gadget-icon i",
        _s16_ = "querySelectorAll",
        _s12_ = ".gadget-icon",
        audio = type$.AudioElement._as(track.querySelector("audio"));
      if (audio == null)
        return;
      P.promiseToFuture(audio.play(), type$.dynamic);
      track.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(track))._toHyphenedName$1("id"));
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s14_), t2)).remove$1(0, "fa-play");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s14_), t2)).remove$1(0, "fa-pause");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s14_), t2)).add$1(0, "fa-headphones");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s12_), t2)).add$1(0, "loading");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(track.querySelectorAll(_s12_), t2)).remove$1(0, "playing");
      t2 = type$._ElementEventStreamImpl_Event;
      t1 = t2._eval$1("~(1)");
      t3 = t1._as(new O.TrackLibrary__playTrackPreview_closure(track));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(audio, "play", t3, false, t2);
      W._EventStreamSubscription$(audio, "ended", t1._as(new O.TrackLibrary__playTrackPreview_closure0(track)), false, t2);
      W._EventStreamSubscription$(audio, "pause", t1._as(new O.TrackLibrary__playTrackPreview_closure1(track)), false, t2);
    },
    set$filter: function(_, filter) {
      this.filter = type$.Set_dynamic._as(filter);
    }
  };
  O.TrackLibrary_show_closure.prototype = {
    call$1: function(el) {
      var t2, t3, t4, t5, t,
        t1 = type$.Element;
      t1._as(el);
      t2 = J.get$onClick$x(el);
      t3 = this.$this;
      t4 = t2.$ti;
      t5 = t4._eval$1("~(1)")._as(new O.TrackLibrary_show__closure(t3, el));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t2._target, t2._eventType, t5, false, t4._precomputed1);
      t = el.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(el))._toHyphenedName$1("tab"));
      t4 = t3._library$_dialog;
      t5 = ".filters[data-tab='" + H.S(t) + "'] .filter-option";
      t4.toString;
      H.checkTypeBound(t1, t1, "T", "querySelectorAll");
      t5 = new W._FrozenElementList(t4.querySelectorAll(t5), type$._FrozenElementList_Element);
      t5.forEach$1(t5, new O.TrackLibrary_show__closure0(t3, t));
    },
    $signature: 10
  };
  O.TrackLibrary_show__closure.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4, t5, t6,
        _s16_ = "querySelectorAll",
        _s8_ = "selected";
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = this.el;
      t1.tab = t2.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(t2))._toHyphenedName$1("tab"));
      t3 = t1._library$_dialog;
      t4 = type$.Element;
      t3.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      t5 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(".filters"), t5)).add$1(0, "hidden");
      t3 = t1._library$_dialog;
      t6 = ".filters[data-tab='" + H.S(t1.tab) + "']";
      t3.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(t6), t5)).remove$1(0, "hidden");
      t6 = t1._library$_dialog;
      t6.toString;
      H.checkTypeBound(t4, t4, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t6.querySelectorAll(".library-tab"), t5)).remove$1(0, _s8_);
      J.get$classes$x(t2).add$1(0, _s8_);
      t2 = t1.filters;
      if (t2.containsKey$1(0, t1.tab))
        t1.set$filter(0, t2.$index(0, t1.tab));
      t1._search$3(t1.tab, t1.filter, t1.sort);
    },
    $signature: 0
  };
  O.TrackLibrary_show__closure0.prototype = {
    call$1: function(el) {
      var f, t1, t2, t3, t4;
      type$.Element._as(el);
      el.toString;
      f = el.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(el))._toHyphenedName$1("filter"));
      t1 = this.$this;
      t2 = this.t;
      t1._setFilterOption$3(t2, f, !t1.filter.contains$1(0, f));
      t3 = J.get$onClick$x(el);
      t4 = t3.$ti;
      t2 = t4._eval$1("~(1)")._as(new O.TrackLibrary_show___closure(t1, t2, f, el));
      type$.void_Function._as(null);
      W._EventStreamSubscription$(t3._target, t3._eventType, t2, false, t4._precomputed1);
    },
    $signature: 10
  };
  O.TrackLibrary_show___closure.prototype = {
    call$1: function(e) {
      var t1, t2, _this = this;
      type$.MouseEvent._as(e);
      t1 = _this.$this;
      t2 = _this.t;
      t1._setFilterOption$3(t2, _this.f, !J.get$classes$x(_this.el).contains$1(0, "off"));
      t1._search$3(t2, t1.filter, t1.sort);
    },
    $signature: 0
  };
  O.TrackLibrary_show_closure0.prototype = {
    call$1: function(item) {
      var t2,
        t1 = this.$this,
        criteria = type$.SpanElement._as(t1._library$_dialog.querySelector(".sort-criteria"));
      if (criteria != null)
        C.SpanElement_methods.setInnerHtml$1(criteria, J.get$innerHtml$x(item));
      t2 = J.get$dataset$x(item);
      t2 = t2._attributes._html$_element.getAttribute("data-" + t2._toHyphenedName$1("sort"));
      t1.sort = t2;
      t1._search$3(t1.tab, t1.filter, t2);
    },
    $signature: 8
  };
  O.TrackLibrary__buildTrack_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._playPauseTrackPreview$1(this.track);
    },
    $signature: 0
  };
  O.TrackLibrary__buildTrack_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e).preventDefault();
    },
    $signature: 0
  };
  O.TrackLibrary__buildTrack_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._playPauseTrackPreview$1(this.track);
    },
    $signature: 0
  };
  O.TrackLibrary__buildTrack_closure2.prototype = {
    call$1: function(e) {
      var t1, t2, t3,
        _s20_ = ".expand-button i.fas",
        _s16_ = "querySelectorAll";
      type$.MouseEvent._as(e);
      t1 = this.track;
      t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s20_), t3)).toggle$1(0, "fa-chevron-down");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s20_), t3)).toggle$1(0, "fa-chevron-up");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".track-details"), t3)).toggle$1(0, "hidden");
    },
    $signature: 0
  };
  O.TrackLibrary__buildTrack_closure3.prototype = {
    call$1: function(e) {
      var t1, t2;
      type$.MouseEvent._as(e);
      t1 = this.$this;
      t2 = this.track;
      if (t1._isStarred$1(t2))
        t1._unstarTrack$1(t2);
      else
        t1._starTrack$1(t2);
    },
    $signature: 0
  };
  O.TrackLibrary__buildTrack_closure4.prototype = {
    call$1: function(e) {
      var t1, t2, t3, gadget, _this = this;
      type$.MouseEvent._as(e);
      t1 = _this.collection;
      t2 = t1 === "tracks";
      if (t2 && J.$eq$(J.$index$asx(_this.data, "instrument"), "definitions"))
        E.Dialog_message("        Add this line to import the cell into your project:<br><br>\n        <code>\n        &nbsp;&nbsp;&nbsp;<b>from tunepad_" + H.S(J.$index$asx(_this.data, "id")) + " import *</b>\n        </code>", "Add Code", "OK");
      else if (t2) {
        t1 = _this.data;
        t2 = _this.$this.datastore;
        t3 = J.getInterceptor$asx(t1);
        t2.remixTrack$1(H._asIntNullable(t3.$index(t1, "id")));
        gadget = new L.Gadget(new H.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic), -1, new P.DateTime(Date.now(), false), new P.DateTime(Date.now(), false));
        gadget.type = "gadgets";
        gadget.name = "New Track";
        gadget.load$1(0, t1);
        gadget.id = -1;
        gadget.$public = false;
        gadget.remix_parent = H._asIntNullable(t3.$index(t1, "gadget_id"));
        gadget.idata.$indexSet(0, "cloned", true);
        gadget.idata.$indexSet(0, "python", t3.$index(t1, "code"));
        if (!H.boolConversionCheck(t3.containsKey$1(t1, "patch")))
          gadget.idata.$indexSet(0, "patch", B.toInt(t3.$index(t1, "voice"), -1));
        t2.create$1(0, gadget);
        E.Dialog_closeModal();
      } else if (t1 === "sounds")
        E.Dialog_message("        Use this code to play the sound in your project:<br><br>\n        <code>\n        &nbsp;&nbsp;&nbsp;<b>playSound(" + H.S(J.$index$asx(_this.data, "id")) + ")</b>\n        </code>", "Add Sound", "OK");
    },
    $signature: 0
  };
  O.TrackLibrary__playTrackPreview_closure.prototype = {
    call$1: function(e) {
      var t3,
        _s14_ = ".gadget-icon i",
        _s16_ = "querySelectorAll",
        _s12_ = ".gadget-icon",
        t1 = this.track,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).add$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).add$1(0, "playing");
    },
    $signature: 2
  };
  O.TrackLibrary__playTrackPreview_closure0.prototype = {
    call$1: function(e) {
      var t3,
        _s14_ = ".gadget-icon i",
        _s16_ = "querySelectorAll",
        _s12_ = ".gadget-icon",
        t1 = this.track,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).add$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "playing");
    },
    $signature: 2
  };
  O.TrackLibrary__playTrackPreview_closure1.prototype = {
    call$1: function(e) {
      var t3,
        _s14_ = ".gadget-icon i",
        _s16_ = "querySelectorAll",
        _s12_ = ".gadget-icon",
        t1 = this.track,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).add$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s14_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s12_), t3)).remove$1(0, "playing");
    },
    $signature: 2
  };
  F.main_closure.prototype = {
    call$1: function(e) {
      F._onHashChange();
    },
    $signature: 2
  };
  F.main_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F._showProjectList();
    },
    $signature: 0
  };
  F.main_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      E.Dialog_openModal("#help-template", null);
    },
    $signature: 0
  };
  F.main_closure2.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      $.library.show$0(0);
    },
    $signature: 0
  };
  F.main_closure3.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      $.rstudio.show$0(0);
    },
    $signature: 0
  };
  F.main_closure4.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      D.DropdownMenu_closeAllMenus();
    },
    $signature: 0
  };
  F._showWelcomeMessage_closure.prototype = {
    call$1: function(e) {
      var t1;
      type$.MouseEvent._as(e);
      E.Dialog_closeModal();
      t1 = this.project;
      $.dropbook.loadProject$1(t1);
      $.outline.loadProject$1(t1);
    },
    $signature: 0
  };
  F._showWelcomeMessage_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F._createNewProject();
    },
    $signature: 0
  };
  F._showProjectList_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      F._createNewProject();
    },
    $signature: 0
  };
  Z.OutlineView.prototype = {
    loadProject$1: function(project) {
      var list = type$.UListElement._as(document.querySelector(".cell-nav .cell-list"));
      if (list != null) {
        list.children;
        C.UListElement_methods._clearChildren$0(list);
      }
      this.datastore.getProjectGadgets$1(project).then$1$1(new Z.OutlineView_loadProject_closure(this), type$.Null);
    },
    onCreated$1: function($event) {
      var t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.Gadget)
        this.createItem$1(t1);
    },
    onDeleted$1: function($event) {
      var item,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.Gadget) {
        t1 = "#cell-nav-" + H.S(t1.id);
        item = document.querySelector(t1);
        if (item != null)
          J.remove$0$ax(item);
      }
    },
    onUpdated$1: function($event) {
      var t2,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof L.Gadget) {
        t2 = "#cell-nav-" + H.S(t1.id);
        this.updateItem$2(t1, type$.HtmlElement._as(document.querySelector(t2)));
      }
    },
    onReordered$1: function($event) {
      var t1;
      type$.DatastoreEvent._as($event);
      t1 = $event.target;
      if (t1 instanceof L.Gadget && $event.remote) {
        t1 = "#cell-nav-" + H.S(type$.Gadget._as(t1).id);
        document.querySelector(t1);
      }
    },
    createItem$1: function(gadget) {
      var item, t2, t3, t4, _this = this,
        _s16_ = "querySelectorAll",
        _s5_ = "click",
        t1 = document,
        list = type$.UListElement._as(t1.querySelector(".cell-nav .cell-list")),
        template = type$.TemplateElement._as(t1.querySelector("#cell-nav-template"));
      if (list != null && template != null) {
        item = type$.DocumentFragment._as(template.content.cloneNode(true)).querySelector("li");
        if (item != null) {
          type$.HtmlElement._as(item);
          _this.updateItem$2(gadget, item);
          item.id = "cell-nav-" + H.S(gadget.id);
          J.get$classes$x(item).add$1(0, gadget.instrument);
          t1 = H.S(gadget.id);
          item.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("gadget-id"), t1);
          t1 = type$.Element;
          H.checkTypeBound(t1, t1, "T", _s16_);
          t2 = type$._FrozenElementList_Element;
          t3 = type$.ElementList_Element;
          t4 = type$._ElementListEventStreamImpl_MouseEvent;
          new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".shortcut-play-button"), t2)), false, _s5_, t4).listen$1(new Z.OutlineView_createItem_closure(_this, gadget));
          H.checkTypeBound(t1, t1, "T", _s16_);
          new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".shortcut-pause-button"), t2)), false, _s5_, t4).listen$1(new Z.OutlineView_createItem_closure0(_this, gadget));
          H.checkTypeBound(t1, t1, "T", _s16_);
          new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".shortcut-cell-name"), t2)), false, _s5_, t4).listen$1(new Z.OutlineView_createItem_closure1(_this, gadget));
          H.checkTypeBound(t1, t1, "T", _s16_);
          new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".shortcut-drag-handle"), t2)), false, "mousedown", t4).listen$1(new Z.OutlineView_createItem_closure2(_this, list, item));
          list.appendChild(item);
        }
      }
    },
    updateItem$2: function(gadget, item) {
      var cellName, t1;
      if (item != null) {
        cellName = type$.DivElement._as(item.querySelector(".shortcut-cell-name"));
        if (cellName != null) {
          C.DivElement_methods.setInnerHtml$1(cellName, gadget.name);
          W._ElementCssClassSet__removeWhere(cellName, type$.bool_Function_String._as(new Z.OutlineView_updateItem_closure()), true);
          t1 = gadget.instrument;
          cellName.classList.add(t1);
        }
      }
    },
    _reorder$3: function(e, list, item) {
      var t2, t3, minY, maxY, scrollY, t4, sub, t1 = {},
        startY = item.getBoundingClientRect().top;
      e.clientX;
      t2 = e.clientY;
      if (typeof t2 !== "number")
        return t2.$sub();
      if (typeof startY !== "number")
        return H.iae(startY);
      t3 = new W._ChildrenElementList(list, list.children);
      minY = t3.get$first(t3).getBoundingClientRect().top;
      t3 = new W._ChildrenElementList(list, list.children);
      maxY = t3.get$last(t3).getBoundingClientRect().bottom;
      scrollY = C.JSNumber_methods.round$0(list.scrollTop);
      t1.insertion = null;
      item.classList.add("dragging");
      t3 = item.style;
      if (typeof minY !== "number")
        return minY.$add();
      t4 = H.S(startY - (minY + scrollY) - 5) + "px";
      t3.marginTop = t4;
      t3 = document;
      t2 = type$.void_Function_MouseEvent._as(new Z.OutlineView__reorder_closure(t1, minY, maxY, startY, item, scrollY, t2 - startY, list));
      type$.void_Function._as(null);
      sub = W._EventStreamSubscription$(t3, "mousemove", t2, false, type$.MouseEvent);
      t3 = new W._EventStream(t3, "mouseup", false, type$._EventStream_MouseEvent);
      t3.get$first(t3).then$1$1(new Z.OutlineView__reorder_closure0(t1, this, sub, item, list), type$.Null);
    }
  };
  Z.OutlineView_loadProject_closure.prototype = {
    call$1: function(gadgets) {
      J.forEach$1$ax(type$.List_Gadget._as(gadgets), new Z.OutlineView_loadProject__closure(this.$this));
    },
    $signature: 84
  };
  Z.OutlineView_loadProject__closure.prototype = {
    call$1: function(gadget) {
      this.$this.createItem$1(type$.Gadget._as(gadget));
    },
    $signature: 85
  };
  Z.OutlineView_createItem_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.dropbook.playCell$1(this.gadget);
    },
    $signature: 0
  };
  Z.OutlineView_createItem_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.dropbook.pauseCell$1(this.gadget);
    },
    $signature: 0
  };
  Z.OutlineView_createItem_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this.dropbook.scrollCellIntoView$1(this.gadget);
    },
    $signature: 0
  };
  Z.OutlineView_createItem_closure2.prototype = {
    call$1: function(e) {
      this.$this._reorder$3(type$.MouseEvent._as(e), this.list, type$.LIElement._as(this.item));
    },
    $signature: 0
  };
  Z.OutlineView_updateItem_closure.prototype = {
    call$1: function(cname) {
      return cname !== "shortcut-cell-name";
    },
    $signature: 11
  };
  Z.OutlineView__reorder_closure.prototype = {
    call$1: function(e) {
      var t1, cy, t2, t3, t4, t5, t6, t7, t8, rect, t9, t10, _this = this,
        _s16_ = "querySelectorAll",
        _s16_0 = "#add-cell-button",
        _s9_ = "insertion";
      type$.MouseEvent._as(e);
      e.clientX;
      t1 = _this.minY;
      cy = J.clamp$2$n(e.clientY, t1, _this.maxY);
      t2 = _this.startY;
      t3 = _this.item;
      t4 = t3.style;
      t1 = H.S(t2 + (cy - t2) - (t1 + _this.scrollY) - _this.offY - 5) + "px";
      t4.marginTop = t1;
      t1 = _this._box_0;
      t1.insertion = null;
      for (t2 = _this.list, t4 = type$.Element, H.checkTypeBound(t4, t4, "T", _s16_), t5 = type$._FrozenElementList_Element, t6 = new W._FrozenElementList(t2.querySelectorAll("li.cell-nav-item"), t5), t6 = new H.ListIterator(t6, t6.get$length(t6), t5._eval$1("ListIterator<ListMixin.E>")), t7 = type$.LIElement; t6.moveNext$0();) {
        t8 = t6._current;
        rect = t8.getBoundingClientRect();
        t9 = rect.bottom;
        t10 = rect.height;
        if (typeof t10 !== "number")
          return t10.$div();
        if (typeof t9 !== "number")
          return t9.$sub();
        if (cy > t9 - t10 / 2)
          if (t8 !== t3)
            t1.insertion = t7._as(t8);
      }
      t3 = document;
      H.checkTypeBound(t4, t4, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(_s16_0), t5)).remove$1(0, _s9_);
      H.checkTypeBound(t4, t4, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t2.querySelectorAll(".cell-nav-item"), t5)).remove$1(0, _s9_);
      t1 = t1.insertion;
      if (t1 != null)
        t1.classList.add("insertion");
      else {
        H.checkTypeBound(t4, t4, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(_s16_0), t5)).add$1(0, _s9_);
      }
    },
    $signature: 0
  };
  Z.OutlineView__reorder_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4, ordering, li, gadgetId, _this = this,
        _s16_ = "querySelectorAll",
        _s9_ = "insertion";
      type$.MouseEvent._as(e);
      _this.sub.cancel$0(0);
      t1 = _this.item;
      t2 = t1.style;
      t2.marginTop = "0px";
      t2 = type$.Element;
      t3 = document;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll("#add-cell-button"), t4)).remove$1(0, _s9_);
      t3 = _this.list;
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t3.querySelectorAll(".cell-nav-item"), t4)).remove$1(0, _s9_);
      C.LIElement_methods.remove$0(t1);
      t1.classList.remove("dragging");
      t2 = _this._box_0.insertion;
      if (t2 != null)
        C.LIElement_methods.insertAdjacentElement$2(t2, "afterEnd", t1);
      else {
        t2 = t3.children;
        if (t3.firstElementChild == null)
          t3.appendChild(t1);
        else {
          t2 = new W._ChildrenElementList(t3, t2);
          if (t1 !== t2.get$first(t2)) {
            t2 = new W._ChildrenElementList(t3, t3.children);
            J.insertAdjacentElement$2$x(t2.get$first(t2), "beforeBegin", t1);
          }
        }
      }
      ordering = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (t1 = new W._ChildrenElementList(t3, t3.children), t1 = t1.toList$0(t1), t1 = new J.ArrayIterator(t1, t1.length, H._arrayInstanceType(t1)._eval$1("ArrayIterator<1>")), t2 = type$.LIElement; t1.moveNext$0();) {
        li = t2._as(t1.__interceptors$_current);
        li.toString;
        gadgetId = B.toInt(li.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(li))._toHyphenedName$1("gadget-id")), -1);
        if (typeof gadgetId !== "number")
          return gadgetId.$gt();
        if (gadgetId > 0)
          C.JSArray_methods.add$1(ordering, gadgetId);
      }
      t1 = _this.$this;
      t1.datastore.reorderProjectGadgets$2(t1.dropbook.project, ordering);
    },
    $signature: 0
  };
  G.ProjectList.prototype = {
    show$0: function(_) {
      var _this = this;
      _this._dialog = E.Dialog_openModal("#projects-template", null);
      _this._loadProjects$1("modified");
      D.DropdownMenu_armMenu(_this._dialog.querySelector(".sort-menu"), new G.ProjectList_show_closure(_this));
      return _this._dialog;
    },
    _onCreated$1: function($event) {
      var _s8_ = "modified";
      if (type$.DatastoreEvent._as($event).target instanceof K.Project && this._dialog != null) {
        this.sort = _s8_;
        this._loadProjects$1(_s8_);
      }
    },
    _onUpdated$1: function($event) {
      var item, _this = this,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof K.Project && _this._dialog != null) {
        type$.Project._as(t1);
        item = _this._dialog.querySelector('.project-item[data-id="' + H.S(t1.id) + '"]');
        if (item != null)
          J.replaceWith$1$x(item, _this._buildItem$2(t1, _this.sort));
      }
    },
    _onDeleted$1: function($event) {
      var item,
        t1 = type$.DatastoreEvent._as($event).target;
      if (t1 instanceof K.Project && this._dialog != null) {
        type$.Project._as(t1);
        item = this._dialog.querySelector('.project-item[data-id="' + H.S(t1.id) + '"]');
        if (item != null)
          J.remove$0$ax(item);
      }
    },
    _loadProjects$1: function(sort) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1, results, projectList, t2, t3, result, $status, container;
      var $async$_loadProjects$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $status = $async$self._dialog.querySelector(".project-count");
              container = type$.DivElement._as($async$self._dialog.querySelector(".search-results"));
              container.children;
              C.DivElement_methods._clearChildren$0(container);
              $async$goto = $status != null && true ? 2 : 3;
              break;
            case 2:
              // then
              t1 = J.getInterceptor$x($status);
              t1.set$innerHtml($status, "Loading ...");
              $async$goto = 4;
              return P._asyncAwait($async$self.datastore.getUserProjects$1(sort), $async$_loadProjects$1);
            case 4:
              // returning from await.
              results = $async$result;
              projectList = document.createElement("ul");
              projectList.className = "project-listing";
              for (t2 = J.getInterceptor$ax(results), t3 = t2.get$iterator(results); t3.moveNext$0();) {
                result = $async$self._buildItem$2(t3.get$current(t3), sort);
                if (result != null)
                  projectList.appendChild(result);
              }
              t1.set$innerHtml($status, "Showing " + H.S(t2.get$length(results)) + " sessions");
              container.appendChild(projectList);
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_loadProjects$1, $async$completer);
    },
    _buildItem$2: function(project, sort) {
      var t2, el, t3, t4, audio, source, link, badge,
        _s13_ = ".project-icon",
        _s16_ = "querySelectorAll",
        _s5_ = "click",
        t1 = document,
        item = type$.LIElement._as(type$.DocumentFragment._as(type$.TemplateElement._as(t1.querySelector("#project-details-template")).content.cloneNode(true)).querySelector("li.project-item"));
      if (item == null)
        return null;
      t2 = H.S(project.id);
      item.setAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("id"), t2);
      t2 = type$.HtmlElement;
      el = t2._as(item.querySelector(_s13_));
      if (el != null) {
        t3 = el.style;
        t4 = project.color;
        t3.toString;
        t3.backgroundColor = t4 == null ? "" : t4;
        t3 = project.artwork;
        if (t3 != null) {
          t4 = el.style;
          t3 = "url(" + t3 + ")";
          t4.backgroundImage = t3;
        }
        if (project.preview != null)
          el.classList.add("playable");
      }
      audio = type$.AudioElement._as(item.querySelector("audio"));
      if (audio != null && project.preview != null) {
        source = t1.createElement("source");
        source.src = project.preview;
        audio.appendChild(source);
      } else {
        t1 = type$.Element;
        H.checkTypeBound(t1, t1, "T", _s16_);
        W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(".play-icon"), type$._FrozenElementList_Element)).add$1(0, "hidden");
      }
      link = type$.AnchorElement._as(item.querySelector(".project-name"));
      if (link != null) {
        C.AnchorElement_methods.setInnerHtml$1(link, project.name);
        link.href = "#session-" + H.S(project.id);
        t1 = type$._ElementEventStreamImpl_MouseEvent;
        t3 = t1._eval$1("~(1)")._as(new G.ProjectList__buildItem_closure(project));
        type$.void_Function._as(null);
        W._EventStreamSubscription$(link, _s5_, t3, false, t1._precomputed1);
      }
      el = t2._as(item.querySelector(".project-public"));
      if (el != null) {
        J.setInnerHtml$1$x(el, project.$public ? "SHARED" : "PRIVATE");
        t1 = project.$public ? "shared" : "private";
        el.classList.add(t1);
      }
      this._setSearchCriteria$3(item, project, sort);
      badge = this._buildProjectBadge$1(project);
      el = t2._as(item.querySelector(".project-details"));
      if (badge != null && el != null)
        el.appendChild(badge);
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      t3 = type$.ElementList_Element;
      t4 = type$._ElementListEventStreamImpl_MouseEvent;
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)), false, _s5_, t4).listen$1(new G.ProjectList__buildItem_closure0(this, item));
      H.checkTypeBound(t1, t1, "T", _s16_);
      new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(item.querySelectorAll(".expand-button"), t2)), false, _s5_, t4).listen$1(new G.ProjectList__buildItem_closure1(item));
      return item;
    },
    _setSearchCriteria$3: function(item, project, sort) {
      var t1,
        el = type$.HtmlElement._as(item.querySelector(".sort-criteria"));
      if (el == null)
        return;
      switch (sort) {
        case "created-new":
          J.setInnerHtml$1$x(el, "Created: " + project.formatDateTime$1(project.created));
          break;
        case "created-old":
          J.setInnerHtml$1$x(el, "Created: " + project.formatDateTime$1(project.created));
          break;
        case "duration-up":
          J.setInnerHtml$1$x(el, "Duration: " + H.S(project.bars) + " bars");
          break;
        case "duration-dn":
          J.setInnerHtml$1$x(el, "Duration: " + H.S(project.bars) + " bars");
          break;
        case "tempo-up":
          t1 = project.clock._bpm;
          J.setInnerHtml$1$x(el, "Tempo: " + t1 + " bpm");
          break;
        case "tempo-dn":
          t1 = project.clock._bpm;
          J.setInnerHtml$1$x(el, "Tempo: " + t1 + " bpm");
          break;
        default:
          J.setInnerHtml$1$x(el, "Modified: " + project.formatDateTime$1(project.modified));
          break;
      }
    },
    _buildProjectBadge$1: function(project) {
      var t1, el, t2, t3, author, _i, tag, t4,
        _s16_ = "querySelectorAll",
        _s5_ = "click",
        badge = type$.DivElement._as(type$.DocumentFragment._as(type$.TemplateElement._as(document.querySelector("#project-badge-template")).content.cloneNode(true)).querySelector(".project-badge"));
      if (badge != null) {
        t1 = type$.HtmlElement;
        el = t1._as(badge.querySelector(".artwork"));
        if (el != null) {
          t2 = el.style;
          t3 = project.color;
          t2.toString;
          t2.backgroundColor = t3 == null ? "" : t3;
          t2 = project.artwork;
          if (t2 != null) {
            t3 = el.style;
            t2 = "url(" + t2 + ")";
            t3.backgroundImage = t2;
          }
        }
        el = t1._as(badge.querySelector(".music-info"));
        if (el != null) {
          t2 = project.clock;
          t3 = t2._bpm;
          t3 = "" + t3 + " bpm | ";
          t2 = t2._meter;
          J.setInnerHtml$1$x(el, t3 + t2 + " time | " + H.S(J.$index$asx(project.settings, "key")));
        }
        el = t1._as(badge.querySelector(".name"));
        if (el != null)
          J.setInnerHtml$1$x(el, H.S(project.name));
        el = t1._as(badge.querySelector(".author"));
        author = project.author;
        if (author == null)
          author = this.datastore.user.displayName;
        if (el != null && author != null)
          J.setInnerHtml$1$x(el, "by " + author);
        el = t1._as(badge.querySelector(".summary"));
        if (el != null)
          J.setInnerHtml$1$x(el, H.S(project.summary));
        el = t1._as(badge.querySelector(".created"));
        if (el != null)
          J.setInnerHtml$1$x(el, "Created: " + project.formatDateTime$1(project.created));
        el = t1._as(badge.querySelector(".tags"));
        for (t1 = project.tags, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          tag = t1[_i];
          t3 = "<li>#" + H.stringReplaceAllUnchecked(tag, " ", "") + "</li>";
          el.toString;
          J.insertAdjacentHtml$4$treeSanitizer$validator$x(el, "beforeend", t3, null, null);
        }
        t1 = type$.Element;
        H.checkTypeBound(t1, t1, "T", _s16_);
        t2 = type$._FrozenElementList_Element;
        t3 = type$.ElementList_Element;
        t4 = type$._ElementListEventStreamImpl_MouseEvent;
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(badge.querySelectorAll(".project-edit-button"), t2)), false, _s5_, t4).listen$1(new G.ProjectList__buildProjectBadge_closure(project));
        H.checkTypeBound(t1, t1, "T", _s16_);
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(badge.querySelectorAll(".project-clone-button"), t2)), false, _s5_, t4).listen$1(new G.ProjectList__buildProjectBadge_closure0(this, project));
        H.checkTypeBound(t1, t1, "T", _s16_);
        new W._ElementListEventStreamImpl(t3._as(new W._FrozenElementList(badge.querySelectorAll(".project-delete-button"), t2)), false, _s5_, t4).listen$1(new G.ProjectList__buildProjectBadge_closure1(this, project));
      }
      return badge;
    },
    _deleteProject$1: function(project) {
      return this._deleteProject$body$ProjectList(project);
    },
    _deleteProject$body$ProjectList: function(project) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, exception, $async$exception;
      var $async$_deleteProject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = H.boolConversionCheck(window.confirm("Are you sure you want to delete this project?")) ? 2 : 3;
              break;
            case 2:
              // then
              E.Dialog_showLoader();
              $async$handler = 5;
              $async$goto = 8;
              return P._asyncAwait($async$self.datastore.delete$1(0, project), $async$_deleteProject$1);
            case 8:
              // returning from await.
              $async$next.push(7);
              // goto finally
              $async$goto = 6;
              break;
            case 5:
              // catch
              $async$handler = 4;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error deleting project.");
              $async$next.push(7);
              // goto finally
              $async$goto = 6;
              break;
            case 4:
              // uncaught
              $async$next = [1];
            case 6:
              // finally
              $async$handler = 1;
              E.Dialog_hideLoader();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 7:
              // after finally
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_deleteProject$1, $async$completer);
    },
    _cloneProject$1: function(project) {
      return this._cloneProject$body$ProjectList(project);
    },
    _cloneProject$body$ProjectList: function(project) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, clone, data, clone0, exception, $async$exception;
      var $async$_cloneProject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              E.Dialog_showLoader();
              $async$handler = 3;
              clone0 = K.Project$(-1);
              clone0.load$1(0, project.save$0(0));
              clone = clone0;
              clone.id = -1;
              clone.name = "Copy of " + H.S(project.name);
              $async$goto = clone.artwork != null && clone.artwork.length !== 0 ? 6 : 7;
              break;
            case 6:
              // then
              $async$goto = 8;
              return P._asyncAwait(clone.artworkUrlToBase64$1(clone.artwork), $async$_cloneProject$1);
            case 8:
              // returning from await.
              data = $async$result;
              J.set$artwork$x(clone, data);
            case 7:
              // join
              $async$goto = 9;
              return P._asyncAwait($async$self.datastore.create$1(0, clone), $async$_cloneProject$1);
            case 9:
              // returning from await.
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              H.unwrapException($async$exception);
              P.print("Error cloning project.");
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              E.Dialog_hideLoader();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_cloneProject$1, $async$completer);
    },
    _playPreview$1: function(item) {
      var t1, t2, t3,
        _s15_ = ".project-icon i",
        _s16_ = "querySelectorAll",
        _s13_ = ".project-icon",
        audio = type$.AudioElement._as(item.querySelector("audio"));
      if (audio == null)
        return;
      P.promiseToFuture(audio.play(), type$.dynamic);
      item.getAttribute("data-" + new W._DataAttributeMap(new W._ElementAttributeMap(item))._toHyphenedName$1("id"));
      t1 = type$.Element;
      H.checkTypeBound(t1, t1, "T", _s16_);
      t2 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-play");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).remove$1(0, "fa-pause");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s15_), t2)).add$1(0, "fa-headphones");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).add$1(0, "loading");
      H.checkTypeBound(t1, t1, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(item.querySelectorAll(_s13_), t2)).remove$1(0, "playing");
      t2 = type$._ElementEventStreamImpl_Event;
      t1 = t2._eval$1("~(1)");
      t3 = t1._as(new G.ProjectList__playPreview_closure(item));
      type$.void_Function._as(null);
      t2 = t2._precomputed1;
      W._EventStreamSubscription$(audio, "play", t3, false, t2);
      W._EventStreamSubscription$(audio, "ended", t1._as(new G.ProjectList__playPreview_closure0(item)), false, t2);
      W._EventStreamSubscription$(audio, "pause", t1._as(new G.ProjectList__playPreview_closure1(item)), false, t2);
    }
  };
  G.ProjectList_show_closure.prototype = {
    call$1: function(item) {
      var t2,
        t1 = this.$this,
        criteria = type$.SpanElement._as(t1._dialog.querySelector(".sort-criteria"));
      if (criteria != null)
        C.SpanElement_methods.setInnerHtml$1(criteria, J.get$innerHtml$x(item));
      t2 = J.get$dataset$x(item);
      t2 = t2._attributes._html$_element.getAttribute("data-" + t2._toHyphenedName$1("sort"));
      t1.sort = t2;
      t1._loadProjects$1(t2);
    },
    $signature: 8
  };
  G.ProjectList__buildItem_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      window.location.hash = "#session-" + H.S(this.project.id);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  G.ProjectList__buildItem_closure0.prototype = {
    call$1: function(e) {
      var t1, t2, t3, audio,
        _s13_ = ".project-icon",
        _s16_ = "querySelectorAll";
      type$.MouseEvent._as(e);
      t1 = this.item;
      t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      if (W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).contains$1(0, "playable")) {
        H.checkTypeBound(t2, t2, "T", _s16_);
        if (W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).contains$1(0, "playing")) {
          audio = type$.AudioElement._as(t1.querySelector("audio"));
          if (audio != null)
            audio.pause();
        } else
          this.$this._playPreview$1(t1);
      }
    },
    $signature: 0
  };
  G.ProjectList__buildItem_closure1.prototype = {
    call$1: function(e) {
      var t1, t2, t3,
        _s20_ = ".expand-button i.fas",
        _s16_ = "querySelectorAll";
      type$.MouseEvent._as(e);
      t1 = this.item;
      t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s20_), t3)).toggle$1(0, "fa-chevron-down");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s20_), t3)).toggle$1(0, "fa-chevron-up");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(".project-details"), t3)).toggle$1(0, "hidden");
    },
    $signature: 0
  };
  G.ProjectList__buildProjectBadge_closure.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      window.location.hash = "project-" + H.S(this.project.id);
      E.Dialog_closeModal();
    },
    $signature: 0
  };
  G.ProjectList__buildProjectBadge_closure0.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._cloneProject$1(this.project);
    },
    $signature: 0
  };
  G.ProjectList__buildProjectBadge_closure1.prototype = {
    call$1: function(e) {
      type$.MouseEvent._as(e);
      this.$this._deleteProject$1(this.project);
    },
    $signature: 0
  };
  G.ProjectList__playPreview_closure.prototype = {
    call$1: function(e) {
      var t3,
        _s15_ = ".project-icon i",
        _s16_ = "querySelectorAll",
        _s13_ = ".project-icon",
        t1 = this.item,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).add$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).add$1(0, "playing");
    },
    $signature: 2
  };
  G.ProjectList__playPreview_closure0.prototype = {
    call$1: function(e) {
      var t3,
        _s15_ = ".project-icon i",
        _s16_ = "querySelectorAll",
        _s13_ = ".project-icon",
        t1 = this.item,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).add$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, "playing");
    },
    $signature: 2
  };
  G.ProjectList__playPreview_closure1.prototype = {
    call$1: function(e) {
      var t3,
        _s15_ = ".project-icon i",
        _s16_ = "querySelectorAll",
        _s13_ = ".project-icon",
        t1 = this.item,
        t2 = type$.Element;
      H.checkTypeBound(t2, t2, "T", _s16_);
      t3 = type$._FrozenElementList_Element;
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).add$1(0, "fa-play");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-pause");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s15_), t3)).remove$1(0, "fa-headphones");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, "loading");
      H.checkTypeBound(t2, t2, "T", _s16_);
      W._MultiElementCssClassSet__MultiElementCssClassSet(new W._FrozenElementList(t1.querySelectorAll(_s13_), t3)).remove$1(0, "playing");
    },
    $signature: 2
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = P.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = W.Element.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = W.EventTarget.prototype;
    _.super$EventTarget$addEventListener = _.addEventListener$3;
    _ = W._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = B.SynthNode.prototype;
    _.super$SynthNode$release = _.release$0;
    _.super$SynthNode$destroy = _.destroy$0;
    _ = A.TunePadCell.prototype;
    _.super$TunePadCell$insert = _.insert$2;
    _.super$TunePadCell$onEditorBlur = _.onEditorBlur$0;
    _ = X.PythonCell.prototype;
    _.super$PythonCell$insert = _.insert$2;
    _.super$PythonCell$updateView = _.updateView$1;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_i = hunkHelpers._instance_0i,
      _static_2 = hunkHelpers._static_2;
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 20);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 20);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 20);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 3);
    _static(P, "async___nullErrorHandler$closure", 1, null, ["call$2", "call$1"], ["_nullErrorHandler", function(error) {
      return P._nullErrorHandler(error, null);
    }], 15, 0);
    _static_0(P, "async___nullDoneHandler$closure", "_nullDoneHandler", 3);
    var _;
    _instance_0_u(_ = P._BroadcastSubscription.prototype, "get$_onPause", "_onPause$0", 3);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 3);
    _instance_1_i(P._BroadcastStreamController.prototype, "get$add", "add$1", 31);
    _instance(P._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 15, 0);
    _instance(P._Future.prototype, "get$_completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_completeError$2", "_completeError$1"], 15, 0);
    _instance_0_u(_ = P._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 3);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 3);
    _instance_0_u(_ = P._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 3);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 3);
    _instance_0_u(P._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 3);
    _instance_1_u(_ = P._StreamIterator.prototype, "get$_async$_onData", "_async$_onData$1", 31);
    _instance(_, "get$_onError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_onError$2", "_onError$1"], 15, 0);
    _instance_0_u(_, "get$_onDone", "_onDone$0", 3);
    _static_1(P, "convert___defaultToEncodable$closure", "_defaultToEncodable", 9);
    _static(W, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 40, 0);
    _static(W, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 40, 0);
    _instance_0_i(W.CacheStorage.prototype, "get$keys", "keys$0", 67);
    _instance_0_i(W.PaymentInstruments.prototype, "get$keys", "keys$0", 62);
    _instance_0_i(W._StreamPool.prototype, "get$close", "close$0", 3);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 9);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 58);
    _instance_1_u(_ = U.MIDIManager.prototype, "get$_midiConnection", "_midiConnection$1", 18);
    _instance_1_u(_, "get$_midiEvent", "_midiEvent$1", 18);
    _static_2(R, "codemirror_CodeMirror_onEditorUpdate$closure", "CodeMirror_onEditorUpdate", 17);
    _static_2(R, "codemirror_CodeMirror_onCursorActivity$closure", "CodeMirror_onCursorActivity", 17);
    _static_1(R, "codemirror_CodeMirror_onEditorBlur$closure", "CodeMirror_onEditorBlur", 18);
    _static_1(R, "codemirror_CodeMirror_onEditorFocus$closure", "CodeMirror_onEditorFocus", 18);
    _instance_1_u(_ = R.CodeMirror.prototype, "get$_codemirror$_onEditorUpdate", "_codemirror$_onEditorUpdate$1", 22);
    _instance_1_u(_, "get$_onCursorActivity", "_onCursorActivity$1", 22);
    _instance_0_u(_, "get$_onEditorBlur", "_onEditorBlur$0", 3);
    _instance_0_u(_, "get$_onEditorFocus", "_onEditorFocus$0", 3);
    _static_2(A, "quill_QuillEditor_onEditorUpdate$closure", "QuillEditor_onEditorUpdate", 17);
    _instance_1_u(A.QuillEditor.prototype, "get$_onEditorUpdate", "_onEditorUpdate$1", 22);
    _instance_1_i(_ = Y.BassGuitar.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_i(_ = F.DrumKit.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_i(_ = N.Drums.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_i(_ = F.Guitar.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_i(_ = B.Piano.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_i(_ = D.Sequencer.prototype, "get$onKeyDown", "onKeyDown$1", 6);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 6);
    _instance_1_u(_ = A.TunePadCell.prototype, "get$_cell$_onUpdated", "_cell$_onUpdated$1", 4);
    _instance_1_u(_, "get$_cell$_onDeleted", "_cell$_onDeleted$1", 4);
    _instance_1_u(_, "get$_onReordered", "_onReordered$1", 4);
    _instance_1_u(_, "get$_onMessage", "_onMessage$1", 4);
    _instance_1_u(S.Datastore.prototype, "get$_handleSocketMessage", "_handleSocketMessage$1", 14);
    _instance_1_u(Q.RecordingStudio.prototype, "get$tick", "tick$1", 21);
    _instance_1_i(R.PythonTrack.prototype, "get$animate", "animate$1", 21);
    _instance_1_u(_ = B.UserList.prototype, "get$onLogin", "onLogin$1", 4);
    _instance_1_u(_, "get$onLogout", "onLogout$1", 4);
    _instance_1_i(_, "get$onMessage", "onMessage$1", 4);
    _instance_1_i(_ = A.Dropbook.prototype, "get$animate", "animate$1", 21);
    _instance_1_u(_, "get$onUpdated", "onUpdated$1", 4);
    _instance_1_u(_, "get$onCreated", "onCreated$1", 4);
    _instance_1_u(_, "get$onDeleted", "onDeleted$1", 4);
    _instance_1_u(_, "get$onLogin", "onLogin$1", 4);
    _static_1(F, "main__onCreated$closure", "onCreated", 4);
    _static_1(F, "main__onLogin$closure", "onLogin", 4);
    _static_1(F, "main__onLogout$closure", "onLogout", 4);
    _instance_1_u(_ = Z.OutlineView.prototype, "get$onCreated", "onCreated$1", 4);
    _instance_1_u(_, "get$onDeleted", "onDeleted$1", 4);
    _instance_1_u(_, "get$onUpdated", "onUpdated$1", 4);
    _instance_1_u(_, "get$onReordered", "onReordered$1", 4);
    _instance_1_u(_ = G.ProjectList.prototype, "get$_onCreated", "_onCreated$1", 4);
    _instance_1_u(_, "get$_onUpdated", "_onUpdated$1", 4);
    _instance_1_u(_, "get$_onDeleted", "_onDeleted$1", 4);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P._ListBase_Object_ListMixin, P.Iterable, H.ListIterator, P.Iterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.Closure, H.TypeErrorDecoder, P.Error, H.ExceptionAndStackTrace, H._StackTrace, P.MapMixin, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H.Rti, H._FunctionParameters, P._TimerImpl, P._AsyncAwaitCompleter, P.Stream, P._BufferingStreamSubscription, P._BroadcastStreamController, P.Future, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.StreamSubscription, P.StreamTransformerBase, P._StreamController, P._SyncStreamControllerDispatch, P._AsyncStreamControllerDispatch, P._DelayedEvent, P._DelayedDone, P._PendingEvents, P._DoneStreamSubscription, P._StreamIterator, P.Timer, P.AsyncError, P._Zone, P._SetBase, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.ListMixin, P._UnmodifiableMapMixin, P._ListQueueIterator, P.SetMixin, P._SetBase_Object_SetMixin, P.Codec, P._Base64Encoder, P._JsonStringifier, P.bool, P.DateTime, P.num, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.Function, P.List, P.Map, P.Null, P.StackTrace, P._StringStackTrace, P.String, P.StringBuffer, P.Symbol0, W.CssStyleDeclarationBase, W._WrappedEvent, W._BeforeUnloadEventStreamProvider, W.CssClassSet, W.EventStreamProvider, W._StreamPool, W._Html5NodeValidator, W.ImmutableListMixin, W.NodeValidatorBuilder, W._SimpleNodeValidator, W._SvgNodeValidator, W.FixedSizeListIterator, W._DOMWindowCrossFrame, W.NodeValidator, W._SameOriginUriPolicy, W._ValidatingTreeSanitizer, P._StructuredClone, P._AcceptStructuredClone, P.JsObject, P._JSRandom, P._RectangleBase, P.Float32List, D.GrowableAudioBuffer, U.MIDIManager, U.MIDIEvent, X.PythonListener, X.PythonCompiler, S.Preprocessor, R.CodeMirror, Z.EditorListener, A.QuillEditor, S.Instrument, Y.BassFret, F.Drum, N.DrumPad, F.GFret, S.NoteEvent, B.MiniPiano, B.PianoKey, D.SequencerRow, D.SequencerDrumButton, D.SequencerButton, U.SynthChain, E.ClockSubscriber, E.Metronome, E.PlayClock, K.Effect, K.EffectCurve, X.SynthEvent, D.Key, B.SynthNode, F.Note, L.Synthesizer, Y.Trace, Y.TraceEvent, A._TunePadCell_Object_EditorListener, S.Datastore, S.DataModel, S.DatastoreEvent, S.DatastoreException, V._NoteRecorder_Object_ClockSubscriber, V.NoteSpacer, U.EffectsChain, B.GraphicEq, V.AudioRecorder, Q.RecordingStudio, V.WaveformTrace, D.TimelineListener, D.Timeline, B.Collaborator, B.UserList, V.EffectsDial, V.ToggleButton, K.Uuid, A._Dropbook_Object_ClockSubscriber, O.TrackLibrary, Z.OutlineView, G.ProjectList]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.AccessibleNodeList, W.Event, W.Blob, W.CacheStorage, W.Client, W.Credential, W.CryptoKey, W.CssStyleValue, W.CssTransformComponent, W.CssRule, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.DataTransferItem, W.DataTransferItemList, W.DomException, W._DomRectList_Interceptor_ListMixin, W.DomRectReadOnly, W._DomStringList_Interceptor_ListMixin, W.DomTokenList, W.Entry, W._FileList_Interceptor_ListMixin, W.FontFace, W.Gamepad, W.History, W._HtmlCollection_Interceptor_ListMixin, W.ImageData, W.Location, W.MediaList, W._MidiInputMap_Interceptor_MapMixin, W._MidiOutputMap_Interceptor_MapMixin, W.MimeType, W._MimeTypeArray_Interceptor_ListMixin, W.MutationRecord, W.NavigatorConcurrentHardware, W.NavigatorUserMediaError, W._NodeList_Interceptor_ListMixin, W.PaymentInstruments, W.PerformanceEntry, W.PerformanceNavigation, W.Plugin, W._PluginArray_Interceptor_ListMixin, W.RelatedApplication, W.RtcLegacyStatsReport, W.RtcSessionDescription, W._RtcStatsReport_Interceptor_MapMixin, W.Selection, W.SpeechGrammar, W._SpeechGrammarList_Interceptor_ListMixin, W.SpeechRecognitionResult, W._Storage_Interceptor_MapMixin, W.StyleMedia, W.StyleSheet, W._TextTrackCueList_Interceptor_ListMixin, W.TimeRanges, W.Touch, W._TouchList_Interceptor_ListMixin, W.TrackDefault, W.TrackDefaultList, W.Url, W.VideoTrack, W.VttRegion, W.__CssRuleList_Interceptor_ListMixin, W.__GamepadList_Interceptor_ListMixin, W.__NamedNodeMap_Interceptor_ListMixin, W._Report, W.__SpeechRecognitionResultList_Interceptor_ListMixin, W.__StyleSheetList_Interceptor_ListMixin, P.KeyRange, P.ObjectStore, P.Observation, P.Length, P._LengthList_Interceptor_ListMixin, P.Number, P._NumberList_Interceptor_ListMixin, P.PointList, P._StringList_Interceptor_ListMixin, P.Transform, P._TransformList_Interceptor_ListMixin, P.AudioBuffer, P.AudioParam, P._AudioParamMap_Interceptor_MapMixin, P.AudioTrack, P.ActiveInfo, P._SqlResultSetRowList_Interceptor_ListMixin]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.ListBase, [H.UnmodifiableListBase, W._ChildrenElementList, W._FrozenElementList, W._ChildNodeListLazy, P.FilteredElementList]);
    _inherit(H.CodeUnits, H.UnmodifiableListBase);
    _inheritMany(P.Iterable, [H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.TakeIterable, H.SkipIterable, H._ConstantMapKeyIterable]);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.LinkedHashMapKeyIterable, P.Set]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator]);
    _inheritMany(H.ListIterable, [H.MappedListIterable, P.ListQueue, P._JsonMapKeyIterable]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inherit(H.ConstantStringMap, H.ConstantMap);
    _inheritMany(H.Closure, [H.Primitives_functionNoSuchMethod_closure, H.unwrapException_saveStackTrace, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._SyncBroadcastStreamController__sendData_closure, P._SyncBroadcastStreamController__sendDone_closure, P.Future_Future$delayed_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncComplete_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_length_closure, P.Stream_length_closure0, P.Stream_first_closure, P.Stream_first_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._cancelAndValue_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P._JsonStringifier_writeMap_closure, P._symbolMapToStringMap_closure, P.NoSuchMethodError_toString_closure, P.DateTime_parse_parseIntOrZero, P.DateTime_parse_parseMilliAndMicroseconds, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, W.Element_Element$html_closure, W.Entry_remove_closure, W.Entry_remove_closure0, W.HttpRequest_getString_closure, W.HttpRequest_request_closure, W.MidiInputMap_keys_closure, W.MidiOutputMap_keys_closure, W.Navigator_getUserMedia_closure, W.Navigator_getUserMedia_closure0, W.RtcStatsReport_keys_closure, W.Storage_keys_closure, W.Window_animationFrame_closure, W._BeforeUnloadEventStreamProvider_forTarget_closure, W._DataAttributeMap_forEach_closure, W._DataAttributeMap_keys_closure, W._MultiElementCssClassSet__MultiElementCssClassSet_closure, W._MultiElementCssClassSet_readClasses_closure, W._MultiElementCssClassSet_modify_closure, W._MultiElementCssClassSet_toggle_closure, W._MultiElementCssClassSet_remove_closure, W._EventStreamSubscription_closure, W._StreamPool_add_closure, W.NodeValidatorBuilder_allowsElement_closure, W.NodeValidatorBuilder_allowsAttribute_closure, W._SimpleNodeValidator_closure, W._SimpleNodeValidator_closure0, W._TemplatingNodeValidator_closure, W._ValidatingTreeSanitizer_sanitizeTree_walk, P._StructuredClone_walk_closure, P._StructuredClone_walk_closure0, P._AcceptStructuredClone_walk_closure, P.convertDartToNative_Dictionary_closure, P.CssClassSetImpl_add_closure, P.CssClassSetImpl_removeWhere_closure, P.CssClassSetImpl_clear_closure, P.FilteredElementList__iterable_closure, P.FilteredElementList__iterable_closure0, P.FilteredElementList_removeRange_closure, P._completeRequest_closure, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, P.promiseToFuture_closure, P.promiseToFuture_closure0, P.AudioContext_decodeAudioData_closure, P.AudioContext_decodeAudioData_closure0, P.AudioParamMap_keys_closure, A.QuillEditor_initialize_closure, A.QuillEditor_initialize_closure0, Y.BassFret_closure, Y.BassFret_closure0, Y.BassFret_closure1, Y.BassFret_closure2, F.DrumKit_render_closure, F.DrumKit_render_closure0, F.DrumKit_render_closure1, F.DrumKit_render_closure2, N.DrumPad_closure, N.DrumPad_closure0, N.DrumPad_closure1, N.DrumPad_closure2, F.GFret_closure, F.GFret_closure0, F.GFret_closure1, F.GFret_closure2, S.Instrument_unload_closure, B.Piano_render_closure, B.Piano_render_closure0, B.Piano__slideKeyboard_closure, B.MiniPiano_slide_closure, B.PianoKey_closure, B.PianoKey_closure0, B.PianoKey_closure1, B.PianoKey_closure2, D.Sequencer_render_closure, D.SequencerRow_closure, D.SequencerRow_closure0, D.SequencerRow_closure1, D.SequencerRow_mute_closure, D.SequencerRow_unmute_closure, D.SequencerDrumButton_closure, D.SequencerButton_closure, D.SequencerButton_closure0, D.SequencerButton_closure1, U.SynthChain_playNote_closure, U.SynthChain_pitchBend_closure, U.SynthChain_schedulePitchBend_closure, U.SynthChain_releaseNote_closure, U.SynthChain_destroy_closure, E.PlayClock_stopAll_closure, E.PlayClock_setTime_closure, E.PlayClock_setTempo_closure, E.PlayClock_setTimeSignature_closure, E.PlayClock_startMetronome_closure, E.PlayClock_startMetronome_closure0, E.PlayClock_startMetronome__closure, X.SynthEvent_releaseNote_closure, X.SynthEvent_scheduleNote_closure, B.DistNode_closure, B.DistNode__closure, B.SynthSampleNode_schedulePitchBend_closure, L.Synthesizer_loadPatch_closure, L.Synthesizer__play_closure, L.Synthesizer__schedule_closure, L.Synthesizer_pitchBend_closure, L.Synthesizer_loadAudioBuffer_closure, L.Synthesizer_loadAudioBuffer_closure0, L.Synthesizer_loadCustomSound_closure, L.Synthesizer_loadCustomSound_closure0, R.UserAccounts_login_closure, R.UserAccounts_login_closure0, R.UserAccounts_login_closure1, R.UserAccounts_login_closure2, A.TunePadCell_insert_closure, A.TunePadCell_insert_closure0, A.TunePadCell_insert_closure1, A.TunePadCell_insert_closure2, S.Datastore_closure, S.Datastore_closure0, S.Datastore_loginWithGoogle_closure, S.Datastore_loginWithGoogle__closure, X.PythonCell_insert_closure, X.PythonCell_insert_closure0, X.PythonCell_insert_closure1, X.PythonCell_insert_closure2, X.PythonCell_onPythonDone_closure, X.PythonCell__shareCell_closure, X.PythonCell__shareCell_closure0, X.PythonCell_doContextMenu_closure, U.EffectsChain_closure, U.EffectsChain_closure0, U.EffectsChain_closure1, U.EffectsChain_closure2, U.EffectsChain_closure3, U.EffectsChain_closure4, U.EffectsChain_closure5, U.EffectsChain_playAudio_closure, U.EffectsChain_playSlice_closure, U.EffectsChain_loadSoundEffects_closure, U.EffectsChain_loadSoundEffects_closure0, Q.RecordingStudio_show_closure, Q.RecordingStudio_loadUserRecordings_closure, Q.RecordingStudio_uploadAudioFile_closure, Q.RecordingStudio__registerEvents_closure, Q.RecordingStudio__registerEvents_closure0, Q.RecordingStudio__registerEvents_closure1, Q.RecordingStudio__registerEvents_closure2, Q.RecordingStudio__registerEvents_closure3, Q.RecordingStudio__registerEvents_closure4, Q.RecordingStudio__registerEvents_closure5, Q.RecordingStudio__registerEvents_closure6, Q.RecordingStudio__registerEvents_closure7, Q.RecordingStudio__registerEvents_closure8, Q.RecordingStudio__registerEvents_closure9, Q.RecordingStudio__registerEvents_closure10, Q.RecordingStudio__registerEvents_closure11, Q.RecordingStudio__registerEvents_closure12, Q.RecordingStudio__registerRowEvents_closure, Q.RecordingStudio__registerRowEvents_closure0, Q.RecordingStudio__registerRowEvents_closure1, Q.RecordingStudio__registerRowEvents_closure2, Q.RecordingStudio__playPreview_closure, Q.RecordingStudio__playPreview_closure0, Q.RecordingStudio__playPreview_closure1, V.WaveformTrace__buildClipLine_closure, V.WaveformTrace__buildClipLine_closure0, V.WaveformTrace__buildClipLine_closure1, L.TextCell_insert_closure, L.TextCell__doContextMenu_closure, D.Timeline_setInstrument_closure, D.Timeline_insert_closure, D.Timeline__render_closure, D.Timeline__render_closure0, D.Timeline__registerTouchEvents_closure, D.Timeline__registerTouchEvents_closure0, D.Timeline__registerTouchEvents_closure1, D.Timeline__registerTouchEvents_closure2, D.Timeline__renderNote_closure, D.Timeline__renderNote_closure0, D.Timeline__renderNote_closure1, D.Timeline__renderNote_closure2, R.PythonTrack_insert_closure, R.PythonTrack_insert_closure0, R.PythonTrack_insert_closure1, R.PythonTrack_insert_closure2, R.PythonTrack_insert_closure3, R.PythonTrack_insert_closure4, R.PythonTrack_insert_closure5, R.PythonTrack_insert_closure6, R.PythonTrack_insert_closure7, R.PythonTrack_insert_closure8, R.PythonTrack_insert_closure9, R.PythonTrack_insert_closure10, R.PythonTrack_insert_closure11, R.PythonTrack_onPythonDone_closure, R.PythonTrack__initVoiceMenu_closure, R.PythonTrack__setInstrument_closure, R.PythonTrack__setInstrument_closure0, R.PythonTrack__shareTrack_closure, R.PythonTrack__shareTrack_closure0, R.PythonTrack_doContextMenu_closure, R.PythonTrack__initMidi_closure, R.PythonTrack_toggleContextMenu_closure, B.UserList_closure, B.UserList_closure0, V.EffectsDial_buildUI_closure, V.EffectsDial_buildUI_closure0, V.EffectsDial_buildUI_closure1, V.ToggleButton_buildUI_closure, V.ToggleButton_buildUI_closure0, V.ToggleButton_buildUI_closure1, V.ToggleButton_buildUI_closure2, E.Dialog_message_closure, E.Dialog_hideLoader_closure, E.Dialog_closeModal_closure, E.Dialog__showModal_closure, E.Dialog__showModal_closure0, E.Dialog__showModal_closure1, E.Dialog__showModal_closure2, D.DropdownMenu_armMenu_closure, D.DropdownMenu_armMenu_closure0, D.DropdownMenu_closeAllMenus_closure, D.DropdownMenu__toggleMenu_closure, A.Dropbook_closure, A.Dropbook_closure0, A.Dropbook_playAll_closure, A.Dropbook_pauseAll_closure, A.Dropbook__registerEvents_closure, A.Dropbook__registerEvents__closure0, A.Dropbook__registerEvents_closure0, A.Dropbook__registerEvents_closure1, A.Dropbook__registerEvents_closure2, A.Dropbook__registerEvents_closure3, A.Dropbook__registerEvents_closure4, A.Dropbook__registerEvents_closure5, A.Dropbook__registerEvents_closure6, A.Dropbook__registerEvents_closure7, A.Dropbook__registerEvents_closure8, A.Dropbook__registerEvents_closure9, A.Dropbook__registerEvents_closure10, A.Dropbook__registerEvents_closure11, A.Dropbook__registerEvents_closure12, A.Dropbook__registerEvents_closure13, A.Dropbook__registerEvents_closure14, A.Dropbook__registerEvents_closure15, A.Dropbook__registerEvents_closure16, A.Dropbook__registerEvents_closure17, A.Dropbook__registerEvents_closure18, A.Dropbook__registerEvents_closure19, A.Dropbook__registerEvents_closure20, A.Dropbook__registerEvents_closure21, A.Dropbook__registerEvents_closure22, A.Dropbook__registerEvents_closure23, A.Dropbook__registerEvents_closure24, A.Dropbook__registerEvents_closure25, A.Dropbook__registerEvents_closure26, A.Dropbook__registerEvents_closure27, A.Dropbook__registerEvents_closure28, A.Dropbook__registerEvents_closure29, A.Dropbook__registerEvents_closure30, A.Dropbook__registerEvents_closure31, A.Dropbook__registerEvents_closure32, A.Dropbook__registerEvents_closure33, A.Dropbook__registerEvents__closure, A.Dropbook__bindSpinnerButton_closure, A.Dropbook__bindSpinnerButton_closure0, A.Dropbook__bindSpinnerButton__closure, A.Dropbook__bindSpinnerButton___closure, A.Dropbook__toggleContextMenu_closure, O.TrackLibrary_show_closure, O.TrackLibrary_show__closure, O.TrackLibrary_show__closure0, O.TrackLibrary_show___closure, O.TrackLibrary_show_closure0, O.TrackLibrary__buildTrack_closure, O.TrackLibrary__buildTrack_closure0, O.TrackLibrary__buildTrack_closure1, O.TrackLibrary__buildTrack_closure2, O.TrackLibrary__buildTrack_closure3, O.TrackLibrary__buildTrack_closure4, O.TrackLibrary__playTrackPreview_closure, O.TrackLibrary__playTrackPreview_closure0, O.TrackLibrary__playTrackPreview_closure1, F.main_closure, F.main_closure0, F.main_closure1, F.main_closure2, F.main_closure3, F.main_closure4, F._showWelcomeMessage_closure, F._showWelcomeMessage_closure0, F._showProjectList_closure, Z.OutlineView_loadProject_closure, Z.OutlineView_loadProject__closure, Z.OutlineView_createItem_closure, Z.OutlineView_createItem_closure0, Z.OutlineView_createItem_closure1, Z.OutlineView_createItem_closure2, Z.OutlineView_updateItem_closure, Z.OutlineView__reorder_closure, Z.OutlineView__reorder_closure0, G.ProjectList_show_closure, G.ProjectList__buildItem_closure, G.ProjectList__buildItem_closure0, G.ProjectList__buildItem_closure1, G.ProjectList__buildProjectBadge_closure, G.ProjectList__buildProjectBadge_closure0, G.ProjectList__buildProjectBadge_closure1, G.ProjectList__playPreview_closure, G.ProjectList__playPreview_closure0, G.ProjectList__playPreview_closure1]);
    _inheritMany(P.Error, [H.NullError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, P.AssertionError, H._Error, P.JsonUnsupportedObjectError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inherit(H._AssertionError, P.AssertionError);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.JsLinkedHashMap, P._JsonMap, W._AttributeMap, W._DataAttributeMap]);
    _inherit(H.NativeTypedArray, H.NativeTypedData);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H.NativeFloat32List, H.NativeTypedArrayOfDouble);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inheritMany(P.Stream, [P._StreamImpl, W._EventStream, W._ElementListEventStreamImpl]);
    _inherit(P._ControllerStream, P._StreamImpl);
    _inherit(P._BroadcastStream, P._ControllerStream);
    _inherit(P._ControllerSubscription, P._BufferingStreamSubscription);
    _inherit(P._BroadcastSubscription, P._ControllerSubscription);
    _inheritMany(P._BroadcastStreamController, [P._SyncBroadcastStreamController, P._AsyncBroadcastStreamController]);
    _inheritMany(P._Completer, [P._AsyncCompleter, P._SyncCompleter]);
    _inheritMany(P._StreamController, [P._AsyncStreamController, P._SyncStreamController]);
    _inherit(P._DelayedData, P._DelayedEvent);
    _inherit(P._StreamImplEvents, P._PendingEvents);
    _inherit(P._RootZone, P._Zone);
    _inherit(P._LinkedHashSet, P._SetBase);
    _inherit(P.SetBase, P._SetBase_Object_SetMixin);
    _inheritMany(P.Codec, [P.Base64Codec, P.JsonCodec, N.HexCodec]);
    _inherit(P.Converter, P.StreamTransformerBase);
    _inheritMany(P.Converter, [P.Base64Encoder, P.JsonEncoder, P.JsonDecoder, R.HexEncoder]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inherit(P._JsonStringStringifier, P._JsonStringifier);
    _inheritMany(P.num, [P.double, P.int]);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inheritMany(W.EventTarget, [W.Node, W.Animation, W.BackgroundFetchRegistration, W.FileReader, W.FileWriter, W.FontFaceSet, W.HttpRequestEventTarget, W.MediaKeySession, W.MediaStream, W.MediaStreamTrack, W.MessagePort, W.MidiPort, W.NetworkInformation, W.PaymentRequest, W.PresentationConnection, W.RtcDataChannel, W.ScreenOrientation, W.SourceBuffer, W._SourceBufferList_EventTarget_ListMixin, W.TextTrack, W.TextTrackCue, W._TextTrackList_EventTarget_ListMixin, W.VideoTrackList, W.WebSocket, W.Window, W.Worker, W.WorkerGlobalScope, P.Request, P.AudioNode, P.BaseAudioContext, P.AudioTrackList]);
    _inheritMany(W.Node, [W.Element, W.CharacterData, W.Document, W.DocumentFragment, W._Attr]);
    _inheritMany(W.Element, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.MediaElement, W.BaseElement, W.BodyElement, W.ButtonElement, W.DivElement, W.EmbedElement, W.FieldSetElement, W.FormElement, W.InputElement, W.LIElement, W.LinkElement, W.OListElement, W.ObjectElement, W.OutputElement, W.PreElement, W.ScriptElement, W.SelectElement, W.SourceElement, W.SpanElement, W.StyleElement, W.TableElement, W.TableRowElement, W.TableSectionElement, W.TemplateElement, W.TextAreaElement, W.UListElement]);
    _inherit(W.AudioElement, W.MediaElement);
    _inheritMany(W.Event, [W.ExtendableEvent, W.BeforeUnloadEvent, W.BlobEvent, W.UIEvent, W.MessageEvent, W.MidiMessageEvent, W.ProgressEvent, P.VersionChangeEvent, P.AudioProcessingEvent]);
    _inheritMany(W.ExtendableEvent, [W.BackgroundFetchEvent, W.ExtendableMessageEvent, W.PushEvent]);
    _inheritMany(W.UIEvent, [W.CompositionEvent, W.KeyboardEvent, W.MouseEvent, W.TextEvent]);
    _inheritMany(W.CssStyleValue, [W.CssNumericValue, W.CssTransformValue, W.CssUnparsedValue]);
    _inherit(W.CssPerspective, W.CssTransformComponent);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inherit(W.CssUnitValue, W.CssNumericValue);
    _inherit(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W._DomRectList_Interceptor_ListMixin);
    _inherit(W.DomRectList, W._DomRectList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W._DomStringList_Interceptor_ListMixin);
    _inherit(W.DomStringList, W._DomStringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.File, W.Blob);
    _inherit(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W._FileList_Interceptor_ListMixin);
    _inherit(W.FileList, W._FileList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.HtmlDocument, W.Document);
    _inherit(W.HttpRequest, W.HttpRequestEventTarget);
    _inherit(W.MidiInputMap, W._MidiInputMap_Interceptor_MapMixin);
    _inherit(W.MidiOutputMap, W._MidiOutputMap_Interceptor_MapMixin);
    _inherit(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W._MimeTypeArray_Interceptor_ListMixin);
    _inherit(W.MimeTypeArray, W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Navigator, W.NavigatorConcurrentHardware);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.PerformanceResourceTiming, W.PerformanceEntry);
    _inherit(W.PerformanceNavigationTiming, W.PerformanceResourceTiming);
    _inherit(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W._PluginArray_Interceptor_ListMixin);
    _inherit(W.PluginArray, W._PluginArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.RtcStatsReport, W._RtcStatsReport_Interceptor_MapMixin);
    _inherit(W.ShadowRoot, W.DocumentFragment);
    _inherit(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W._SourceBufferList_EventTarget_ListMixin);
    _inherit(W.SourceBufferList, W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W._SpeechGrammarList_Interceptor_ListMixin);
    _inherit(W.SpeechGrammarList, W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W._TextTrackCueList_Interceptor_ListMixin);
    _inherit(W.TextTrackCueList, W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W._TextTrackList_EventTarget_ListMixin);
    _inherit(W.TextTrackList, W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._BeforeUnloadEvent, W._WrappedEvent);
    _inherit(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.__CssRuleList_Interceptor_ListMixin);
    _inherit(W._CssRuleList, W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.__GamepadList_Interceptor_ListMixin);
    _inherit(W._GamepadList, W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin);
    _inherit(W._SpeechRecognitionResultList, W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.__StyleSheetList_Interceptor_ListMixin);
    _inherit(W._StyleSheetList, W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._ElementAttributeMap, W._AttributeMap);
    _inherit(P.CssClassSetImpl, P.SetBase);
    _inheritMany(P.CssClassSetImpl, [W._MultiElementCssClassSet, W._ElementCssClassSet, P.AttributeClassSet]);
    _inherit(W._ElementEventStreamImpl, W._EventStream);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._TemplatingNodeValidator, W._SimpleNodeValidator);
    _inherit(P._StructuredCloneDart2Js, P._StructuredClone);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inherit(P.Rectangle, P._RectangleBase);
    _inheritMany(P.SvgElement, [P.GraphicsElement, P.FEColorMatrixElement, P.FETurbulenceElement, P.ScriptElement0, P.StyleElement0]);
    _inheritMany(P.GraphicsElement, [P.GeometryElement, P.GElement, P.ImageElement0, P.SvgSvgElement, P.TextContentElement]);
    _inheritMany(P.GeometryElement, [P.CircleElement, P.LineElement, P.PathElement, P.RectElement]);
    _inherit(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, P._LengthList_Interceptor_ListMixin);
    _inherit(P.LengthList, P._LengthList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, P._NumberList_Interceptor_ListMixin);
    _inherit(P.NumberList, P._NumberList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._StringList_Interceptor_ListMixin_ImmutableListMixin, P._StringList_Interceptor_ListMixin);
    _inherit(P.StringList, P._StringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P.TextPositioningElement, P.TextContentElement);
    _inherit(P.TextElement, P.TextPositioningElement);
    _inherit(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, P._TransformList_Interceptor_ListMixin);
    _inherit(P.TransformList, P._TransformList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(P.AudioNode, [P.AnalyserNode, P.AudioScheduledSourceNode, P.BiquadFilterNode, P.ConvolverNode, P.DelayNode, P.DynamicsCompressorNode, P.GainNode, P.MediaStreamAudioSourceNode, P.ScriptProcessorNode, P.StereoPannerNode]);
    _inheritMany(P.AudioScheduledSourceNode, [P.AudioBufferSourceNode, P.OscillatorNode]);
    _inheritMany(P.BaseAudioContext, [P.AudioContext, P.OfflineAudioContext]);
    _inherit(P.AudioParamMap, P._AudioParamMap_Interceptor_MapMixin);
    _inherit(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, P._SqlResultSetRowList_Interceptor_ListMixin);
    _inherit(P.SqlResultSetRowList, P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(S.Instrument, [Y.BassGuitar, F.DrumKit, N.Drums, F.Guitar, B.Piano, D.Sequencer]);
    _inheritMany(K.Effect, [K.BiquadFilter, K.PitchBendEffect, K.PanEffect, K.GainEffect]);
    _inheritMany(B.SynthNode, [B.ADSRNode, B.FMNode, B.LFONode, B.DistNode, B.SynthSampleNode, B.SynthDelayNode, B.SynthCompressorNode, B.FilterNode]);
    _inherit(B.SchedulerSynth, L.Synthesizer);
    _inherit(A.TunePadCell, A._TunePadCell_Object_EditorListener);
    _inheritMany(A.TunePadCell, [X._PythonCell_TunePadCell_PythonListener, L._TextCell_TunePadCell_EditorListener]);
    _inherit(X._PythonCell_TunePadCell_PythonListener_EditorListener, X._PythonCell_TunePadCell_PythonListener);
    _inherit(X.PythonCell, X._PythonCell_TunePadCell_PythonListener_EditorListener);
    _inheritMany(S.DataModel, [L.Gadget, L.SynthPatch, K.Project, R.Recording, N.User]);
    _inherit(V.NoteRecorder, V._NoteRecorder_Object_ClockSubscriber);
    _inherit(L.TextCell, L._TextCell_TunePadCell_EditorListener);
    _inherit(R._PythonTrack_PythonCell_PythonListener, X.PythonCell);
    _inherit(R._PythonTrack_PythonCell_PythonListener_EditorListener, R._PythonTrack_PythonCell_PythonListener);
    _inherit(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener, R._PythonTrack_PythonCell_PythonListener_EditorListener);
    _inherit(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber, R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener);
    _inherit(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome, R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber);
    _inherit(R.PythonTrack, R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome);
    _inherit(A.Dropbook, A._Dropbook_Object_ClockSubscriber);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);
    _mixin(P._SyncStreamController, P._SyncStreamControllerDispatch);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._SetBase_Object_SetMixin, P.SetMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleDeclarationBase);
    _mixin(W._DomRectList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._FileList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._MidiInputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MidiOutputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._RtcStatsReport_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._Storage_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._StringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._StringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._AudioParamMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(A._TunePadCell_Object_EditorListener, Z.EditorListener);
    _mixin(X._PythonCell_TunePadCell_PythonListener, X.PythonListener);
    _mixin(X._PythonCell_TunePadCell_PythonListener_EditorListener, Z.EditorListener);
    _mixin(V._NoteRecorder_Object_ClockSubscriber, E.ClockSubscriber);
    _mixin(L._TextCell_TunePadCell_EditorListener, Z.EditorListener);
    _mixin(R._PythonTrack_PythonCell_PythonListener, X.PythonListener);
    _mixin(R._PythonTrack_PythonCell_PythonListener_EditorListener, Z.EditorListener);
    _mixin(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener, D.TimelineListener);
    _mixin(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber, E.ClockSubscriber);
    _mixin(R._PythonTrack_PythonCell_PythonListener_EditorListener_TimelineListener_ClockSubscriber_Metronome, E.Metronome);
    _mixin(A._Dropbook_Object_ClockSubscriber, E.ClockSubscriber);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["Null(MouseEvent)", "Null()", "Null(Event)", "~()", "~(DatastoreEvent)", "Null(@,@)", "~(KeyboardEvent)", "Future<Null>(MouseEvent)", "Null(@)", "@(@)", "Null(Element)", "bool(String)", "Future<Null>(ProgressEvent)", "Null(KeyboardEvent)", "~(@)", "~(Object[StackTrace])", "~(String,@)", "~(String,String)", "~(String)", "~(ClockSubscriber)", "~(~())", "~(num)", "~(Map<@,@>)", "~(SynthNode)", "~(ProgressEvent)", "Null(SynthNode)", "Null(TunePadCell)", "Null(String,String)", "bool(bool,CssClassSetImpl)", "~(Event)", "bool(NodeValidator)", "~(Object)", "~(Set<String>)", "Null(Symbol0,@)", "Null(SequencerButton)", "int(String)", "String(int)", "~(Metronome)", "Null(Timer)", "Null(AudioProcessingEvent)", "bool(Element,String,String,_Html5NodeValidator)", "bool(Node)", "Null(DomException)", "Future<Null>(@)", "JsFunction(@)", "@(String)", "Null(NavigatorUserMediaError)", "JsArray<@>(@)", "JsObject(@)", "Null(AudioBuffer)", "Null(@[StackTrace])", "@(@,String)", "Null(~())", "~(CssClassSetImpl)", "~(Element)", "~(PianoKey)", "Null(SequencerRow)", "@(CssClassSetImpl)", "Object(@)", "Null(int,@)", "Null(num)", "Null(String,@)", "Future<List<@>>()", "String(String)", "double(@)", "num(@)", "~(Node,Node)", "Future<@>()", "@(@,@)", "bool(Event)", "bool(Set<String>)", "String(HttpRequest)", "CssClassSet(Element)", "Null(ProgressEvent)", "Null(BeforeUnloadEvent)", "~(Recording)", "Future<Null>(Event)", "~(SynthEvent)", "Node(SvgElement)", "Null(NoteEvent)", "Null(MIDIEvent)", "Null(@,StackTrace)", "~(Timer)", "Element(Node)", "Null(List<Gadget>)", "Null(Gadget)", "Null(MediaStream)", "@(Event)", "_Future<@>(@)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","AnimationEvent":"Event","AudioDestinationNode":"AudioNode","ConstantSourceNode":"AudioScheduledSourceNode","AnimateElement":"SvgElement","AnimationElement":"SvgElement","AElement":"GraphicsElement","TextPathElement":"TextContentElement","TSpanElement":"TextPositioningElement","EllipseElement":"GeometryElement","AbsoluteOrientationSensor":"EventTarget","OrientationSensor":"EventTarget","Sensor":"EventTarget","OpenDBRequest":"Request","_ResourceProgressEvent":"ProgressEvent","BRElement":"HtmlElement","_DocumentType":"Node","XmlDocument":"Document","PointerEvent":"MouseEvent","VttCue":"TextTrackCue","VideoElement":"MediaElement","FocusEvent":"UIEvent","AbortPaymentEvent":"ExtendableEvent","DedicatedWorkerGlobalScope":"WorkerGlobalScope","CDataSection":"CharacterData","Text":"CharacterData","MidiInput":"MidiPort","HttpRequestUpload":"HttpRequestEventTarget","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","CssStyleSheet":"StyleSheet","CanvasCaptureMediaStreamTrack":"MediaStreamTrack","BackgroundFetchClickEvent":"BackgroundFetchEvent","NativeFloat64List":"NativeTypedArrayOfDouble","NativeByteData":"NativeTypedData","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JavaScriptObject":{"JSObject":[],"Function":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"JSIndexable":["@"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JSIndexable":["@"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"int":[],"double":[],"num":[]},"JSDouble":{"double":[],"num":[]},"JSString":{"String":[],"JSIndexable":["@"],"Pattern":[]},"CodeUnits":{"UnmodifiableListMixin":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"UnmodifiableListMixin":["1"],"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"JSInvocationMirror":{"Invocation":[]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"LinkedHashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"NativeByteBuffer":{"ByteBuffer":[]},"NativeTypedData":{"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"TypedData":[],"JSIndexable":["@"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"FixedLengthListMixin":["double"],"TypedData":[],"JSIndexable":["@"],"Iterable":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeTypedArrayOfInt":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"]},"NativeFloat32List":{"Float32List":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"FixedLengthListMixin":["double"],"TypedData":[],"JSIndexable":["@"],"Iterable":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeInt16List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt32List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt8List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint16List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8ClampedList":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"Uint8List":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"FixedLengthListMixin":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_TimerImpl":{"Timer":[]},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"]},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"_EventDispatch":["1"],"StreamSubscription":["1"]},"_BroadcastStreamController":{"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_SyncCompleter":{"_Completer":["1"]},"_Future":{"Future":["1"]},"_StreamController":{"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_SyncStreamController":{"_SyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"_EventDispatch":["1"],"_StreamControllerLifecycle":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"_EventDispatch":["1"],"StreamSubscription":["1"]},"_BufferingStreamSubscription":{"_EventDispatch":["1"],"StreamSubscription":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_StreamImplEvents":{"_PendingEvents":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"AsyncError":{"Error":[]},"_Zone":{"Zone":[]},"_RootZone":{"Zone":[]},"_LinkedHashSet":{"_SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSetIterator":{"Iterator":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"Queue":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"Base64Encoder":{"Converter":["List<int>","String"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object","String"],"Codec.S":"Object"},"JsonEncoder":{"Converter":["Object","String"]},"JsonDecoder":{"Converter":["String","Object"]},"double":{"num":[]},"AssertionError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"int":{"num":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_StringStackTrace":{"StackTrace":[]},"String":{"Pattern":[]},"StringBuffer":{"StringSink":[]},"HtmlElement":{"Element":[],"Node":[],"EventTarget":[]},"AnchorElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"Animation":{"EventTarget":[]},"AreaElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"AudioElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"BackgroundFetchEvent":{"Event":[]},"BackgroundFetchRegistration":{"EventTarget":[]},"BaseElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"BeforeUnloadEvent":{"Event":[]},"BlobEvent":{"Event":[]},"BodyElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"ButtonElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"CharacterData":{"Node":[],"EventTarget":[]},"CompositionEvent":{"Event":[]},"CssUnitValue":{"CssNumericValue":[]},"DivElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"Document":{"Node":[],"EventTarget":[]},"DocumentFragment":{"Node":[],"EventTarget":[]},"DomRectList":{"ImmutableListMixin":["Rectangle<num>"],"ListMixin":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"List":["Rectangle<num>"],"EfficientLengthIterable":["Rectangle<num>"],"Iterable":["Rectangle<num>"],"JSIndexable":["Rectangle<num>"],"ListMixin.E":"Rectangle<num>","ImmutableListMixin.E":"Rectangle<num>"},"DomRectReadOnly":{"Rectangle":["num"]},"DomStringList":{"ImmutableListMixin":["String"],"ListMixin":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"JSIndexable":["String"],"ListMixin.E":"String","ImmutableListMixin.E":"String"},"_ChildrenElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"_FrozenElementList":{"ElementList":["1"],"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"Element":{"Node":[],"EventTarget":[]},"EmbedElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"ExtendableEvent":{"Event":[]},"ExtendableMessageEvent":{"Event":[]},"FieldSetElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"File":{"Blob":[]},"FileList":{"ImmutableListMixin":["File"],"ListMixin":["File"],"JavaScriptIndexingBehavior":["File"],"List":["File"],"EfficientLengthIterable":["File"],"Iterable":["File"],"JSIndexable":["File"],"ListMixin.E":"File","ImmutableListMixin.E":"File"},"FileReader":{"EventTarget":[]},"FileWriter":{"EventTarget":[]},"FontFaceSet":{"EventTarget":[]},"FormElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"HtmlCollection":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"HtmlDocument":{"Document":[],"Node":[],"EventTarget":[]},"HttpRequest":{"EventTarget":[]},"HttpRequestEventTarget":{"EventTarget":[]},"InputElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"KeyboardEvent":{"Event":[]},"LIElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"LinkElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"MediaElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"MediaKeySession":{"EventTarget":[]},"MediaStream":{"EventTarget":[]},"MediaStreamTrack":{"EventTarget":[]},"MessageEvent":{"Event":[]},"MessagePort":{"EventTarget":[]},"MidiInputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"MidiMessageEvent":{"Event":[]},"MidiOutputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"MidiPort":{"EventTarget":[]},"MimeTypeArray":{"ImmutableListMixin":["MimeType"],"ListMixin":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"List":["MimeType"],"EfficientLengthIterable":["MimeType"],"Iterable":["MimeType"],"JSIndexable":["MimeType"],"ListMixin.E":"MimeType","ImmutableListMixin.E":"MimeType"},"MouseEvent":{"Event":[]},"NetworkInformation":{"EventTarget":[]},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"Node":{"EventTarget":[]},"NodeList":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"OListElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"ObjectElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"OutputElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"PaymentRequest":{"EventTarget":[]},"PluginArray":{"ImmutableListMixin":["Plugin"],"ListMixin":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"EfficientLengthIterable":["Plugin"],"Iterable":["Plugin"],"JSIndexable":["Plugin"],"ListMixin.E":"Plugin","ImmutableListMixin.E":"Plugin"},"PreElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"PresentationConnection":{"EventTarget":[]},"ProgressEvent":{"Event":[]},"PushEvent":{"Event":[]},"RtcDataChannel":{"EventTarget":[]},"RtcStatsReport":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"ScreenOrientation":{"EventTarget":[]},"ScriptElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"SelectElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"ShadowRoot":{"DocumentFragment":[],"Node":[],"EventTarget":[]},"SourceBuffer":{"EventTarget":[]},"SourceBufferList":{"ImmutableListMixin":["SourceBuffer"],"ListMixin":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"EventTarget":[],"EfficientLengthIterable":["SourceBuffer"],"Iterable":["SourceBuffer"],"JSIndexable":["SourceBuffer"],"ListMixin.E":"SourceBuffer","ImmutableListMixin.E":"SourceBuffer"},"SourceElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"SpanElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"SpeechGrammarList":{"ImmutableListMixin":["SpeechGrammar"],"ListMixin":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"EfficientLengthIterable":["SpeechGrammar"],"Iterable":["SpeechGrammar"],"JSIndexable":["SpeechGrammar"],"ListMixin.E":"SpeechGrammar","ImmutableListMixin.E":"SpeechGrammar"},"Storage":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"StyleElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TableElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TableRowElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TableSectionElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TemplateElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextAreaElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextEvent":{"Event":[]},"TextTrack":{"EventTarget":[]},"TextTrackCue":{"EventTarget":[]},"TextTrackCueList":{"ImmutableListMixin":["TextTrackCue"],"ListMixin":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"List":["TextTrackCue"],"EfficientLengthIterable":["TextTrackCue"],"Iterable":["TextTrackCue"],"JSIndexable":["TextTrackCue"],"ListMixin.E":"TextTrackCue","ImmutableListMixin.E":"TextTrackCue"},"TextTrackList":{"ImmutableListMixin":["TextTrack"],"ListMixin":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"List":["TextTrack"],"EventTarget":[],"EfficientLengthIterable":["TextTrack"],"Iterable":["TextTrack"],"JSIndexable":["TextTrack"],"ListMixin.E":"TextTrack","ImmutableListMixin.E":"TextTrack"},"TouchList":{"ImmutableListMixin":["Touch"],"ListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"EfficientLengthIterable":["Touch"],"Iterable":["Touch"],"JSIndexable":["Touch"],"ListMixin.E":"Touch","ImmutableListMixin.E":"Touch"},"UIEvent":{"Event":[]},"UListElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"VideoTrackList":{"EventTarget":[]},"WebSocket":{"EventTarget":[]},"Window":{"WindowBase":[],"EventTarget":[]},"_BeforeUnloadEvent":{"BeforeUnloadEvent":[],"Event":[]},"Worker":{"EventTarget":[]},"WorkerGlobalScope":{"EventTarget":[]},"_Attr":{"Node":[],"EventTarget":[]},"_CssRuleList":{"ImmutableListMixin":["CssRule"],"ListMixin":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"EfficientLengthIterable":["CssRule"],"Iterable":["CssRule"],"JSIndexable":["CssRule"],"ListMixin.E":"CssRule","ImmutableListMixin.E":"CssRule"},"_DomRect":{"Rectangle":["num"]},"_GamepadList":{"ImmutableListMixin":["Gamepad"],"ListMixin":["Gamepad"],"JavaScriptIndexingBehavior":["Gamepad"],"List":["Gamepad"],"EfficientLengthIterable":["Gamepad"],"Iterable":["Gamepad"],"JSIndexable":["Gamepad"],"ListMixin.E":"Gamepad","ImmutableListMixin.E":"Gamepad"},"_NamedNodeMap":{"ImmutableListMixin":["Node"],"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"_SpeechRecognitionResultList":{"ImmutableListMixin":["SpeechRecognitionResult"],"ListMixin":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"EfficientLengthIterable":["SpeechRecognitionResult"],"Iterable":["SpeechRecognitionResult"],"JSIndexable":["SpeechRecognitionResult"],"ListMixin.E":"SpeechRecognitionResult","ImmutableListMixin.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ImmutableListMixin":["StyleSheet"],"ListMixin":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"List":["StyleSheet"],"EfficientLengthIterable":["StyleSheet"],"Iterable":["StyleSheet"],"JSIndexable":["StyleSheet"],"ListMixin.E":"StyleSheet","ImmutableListMixin.E":"StyleSheet"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"_DataAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"CssClassSet":{"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"]},"_MultiElementCssClassSet":{"CssClassSetImpl":[],"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"_ElementCssClassSet":{"CssClassSetImpl":[],"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_ElementListEventStreamImpl":{"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"_Html5NodeValidator":{"NodeValidator":[]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"FixedSizeListIterator":{"Iterator":["1"]},"_DOMWindowCrossFrame":{"WindowBase":[],"EventTarget":[]},"_WrappedEvent":{"Event":[]},"_SameOriginUriPolicy":{"UriPolicy":[]},"_ValidatingTreeSanitizer":{"NodeTreeSanitizer":[]},"CssClassSetImpl":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"]},"FilteredElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"Request":{"EventTarget":[]},"VersionChangeEvent":{"Event":[]},"JsFunction":{"JsObject":[]},"JsArray":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JsObject":[],"Iterable":["1"],"ListMixin.E":"1"},"_JSRandom":{"Random":[]},"CircleElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"FEColorMatrixElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"FETurbulenceElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"GElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"GeometryElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"GraphicsElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"ImageElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"LengthList":{"ImmutableListMixin":["Length"],"ListMixin":["Length"],"List":["Length"],"EfficientLengthIterable":["Length"],"Iterable":["Length"],"ListMixin.E":"Length","ImmutableListMixin.E":"Length"},"LineElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"NumberList":{"ImmutableListMixin":["Number"],"ListMixin":["Number"],"List":["Number"],"EfficientLengthIterable":["Number"],"Iterable":["Number"],"ListMixin.E":"Number","ImmutableListMixin.E":"Number"},"PathElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"RectElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"ScriptElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"StringList":{"ImmutableListMixin":["String"],"ListMixin":["String"],"List":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListMixin.E":"String","ImmutableListMixin.E":"String"},"StyleElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"AttributeClassSet":{"CssClassSetImpl":[],"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"SvgElement":{"Element":[],"Node":[],"EventTarget":[]},"SvgSvgElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextContentElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextPositioningElement":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"TransformList":{"ImmutableListMixin":["Transform"],"ListMixin":["Transform"],"List":["Transform"],"EfficientLengthIterable":["Transform"],"Iterable":["Transform"],"ListMixin.E":"Transform","ImmutableListMixin.E":"Transform"},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"AnalyserNode":{"AudioNode":[],"EventTarget":[]},"AudioBufferSourceNode":{"AudioNode":[],"EventTarget":[]},"AudioContext":{"BaseAudioContext":[],"EventTarget":[]},"AudioNode":{"EventTarget":[]},"AudioParamMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"AudioProcessingEvent":{"Event":[]},"AudioScheduledSourceNode":{"AudioNode":[],"EventTarget":[]},"AudioTrackList":{"EventTarget":[]},"BaseAudioContext":{"EventTarget":[]},"BiquadFilterNode":{"AudioNode":[],"EventTarget":[]},"ConvolverNode":{"AudioNode":[],"EventTarget":[]},"DelayNode":{"AudioNode":[],"EventTarget":[]},"DynamicsCompressorNode":{"AudioNode":[],"EventTarget":[]},"GainNode":{"AudioNode":[],"EventTarget":[]},"MediaStreamAudioSourceNode":{"AudioNode":[],"EventTarget":[]},"OfflineAudioContext":{"BaseAudioContext":[],"EventTarget":[]},"OscillatorNode":{"AudioNode":[],"EventTarget":[]},"ScriptProcessorNode":{"AudioNode":[],"EventTarget":[]},"StereoPannerNode":{"AudioNode":[],"EventTarget":[]},"SqlResultSetRowList":{"ImmutableListMixin":["Map<@,@>"],"ListMixin":["Map<@,@>"],"List":["Map<@,@>"],"EfficientLengthIterable":["Map<@,@>"],"Iterable":["Map<@,@>"],"ListMixin.E":"Map<@,@>","ImmutableListMixin.E":"Map<@,@>"},"HexCodec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"HexEncoder":{"Converter":["List<int>","String"]},"BassGuitar":{"Instrument":[]},"DrumKit":{"Instrument":[]},"Drums":{"Instrument":[]},"Guitar":{"Instrument":[]},"Piano":{"Instrument":[]},"Sequencer":{"Instrument":[]},"BiquadFilter":{"Effect":[]},"PitchBendEffect":{"Effect":[]},"PanEffect":{"Effect":[]},"GainEffect":{"Effect":[]},"ADSRNode":{"SynthNode":[]},"FMNode":{"SynthNode":[]},"LFONode":{"SynthNode":[]},"DistNode":{"SynthNode":[]},"SynthSampleNode":{"SynthNode":[]},"SynthDelayNode":{"SynthNode":[]},"SynthCompressorNode":{"SynthNode":[]},"FilterNode":{"SynthNode":[]},"SchedulerSynth":{"Synthesizer":[]},"TunePadCell":{"EditorListener":[]},"DatastoreException":{"Exception":[]},"PythonCell":{"TunePadCell":[],"EditorListener":[],"PythonListener":[]},"Gadget":{"DataModel":[]},"SynthPatch":{"DataModel":[]},"Project":{"DataModel":[]},"NoteRecorder":{"ClockSubscriber":[]},"Recording":{"DataModel":[]},"TextCell":{"TunePadCell":[],"EditorListener":[]},"PythonTrack":{"TunePadCell":[],"Metronome":[],"ClockSubscriber":[],"TimelineListener":[],"EditorListener":[],"PythonListener":[]},"User":{"DataModel":[]},"Dropbook":{"ClockSubscriber":[]}}'));
  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"UnmodifiableListBase":1,"StreamTransformerBase":2,"ListBase":1,"MapBase":2,"SetBase":1,"_ListBase_Object_ListMixin":1,"_SetBase_Object_SetMixin":1,"_JsArray_JsObject_ListMixin":1,"_RectangleBase":1}'));
  var type$ = (function rtii() {
    var findType = H.findType;
    return {
      $env_1_1_dynamic: findType("@<@>"),
      AnchorElement: findType("AnchorElement"),
      AsyncError: findType("AsyncError"),
      AudioBuffer: findType("AudioBuffer"),
      AudioContext: findType("AudioContext"),
      AudioElement: findType("AudioElement"),
      AudioNode: findType("AudioNode"),
      AudioProcessingEvent: findType("AudioProcessingEvent"),
      Base64Codec: findType("Base64Codec"),
      BaseElement: findType("BaseElement"),
      BeforeUnloadEvent: findType("BeforeUnloadEvent"),
      BiquadFilterNode: findType("BiquadFilterNode"),
      Blob: findType("Blob"),
      BodyElement: findType("BodyElement"),
      ButtonElement: findType("ButtonElement"),
      ByteBuffer: findType("ByteBuffer"),
      CircleElement: findType("CircleElement"),
      ClockSubscriber: findType("ClockSubscriber"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ConstantStringMap_String_Object: findType("ConstantStringMap<String,Object>"),
      ConstantStringMap_of_String_and_List_Map_String_Object: findType("ConstantStringMap<String,List<Map<String,Object>>>"),
      CssClassSetImpl: findType("CssClassSetImpl"),
      CssNumericValue: findType("CssNumericValue"),
      CssRule: findType("CssRule"),
      DataModel: findType("DataModel"),
      DatastoreEvent: findType("DatastoreEvent"),
      DivElement: findType("DivElement"),
      Document: findType("Document"),
      DocumentFragment: findType("DocumentFragment"),
      DomException: findType("DomException"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      ElementList_Element: findType("ElementList<Element>"),
      Error: findType("Error"),
      Event: findType("Event"),
      EventTarget: findType("EventTarget"),
      Exception: findType("Exception"),
      File: findType("File"),
      FileList: findType("FileList"),
      FontFace: findType("FontFace"),
      FormElement: findType("FormElement"),
      Function: findType("Function"),
      FutureOr_List_dynamic: findType("List<@>/"),
      FutureOr_Map_dynamic_dynamic: findType("Map<@,@>/"),
      FutureOr_String: findType("String/"),
      Future_Null: findType("Future<Null>"),
      Future_dynamic: findType("Future<@>"),
      GElement: findType("GElement"),
      Gadget: findType("Gadget"),
      GainNode: findType("GainNode"),
      Gamepad: findType("Gamepad"),
      GrowableAudioBuffer: findType("GrowableAudioBuffer"),
      HexCodec: findType("HexCodec"),
      HtmlElement: findType("HtmlElement"),
      HttpRequest: findType("HttpRequest"),
      ImageData: findType("ImageData"),
      InputElement: findType("InputElement"),
      Invocation: findType("Invocation"),
      Iterable_Element: findType("Iterable<Element>"),
      Iterable_Node: findType("Iterable<Node>"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_AudioNode: findType("JSArray<AudioNode>"),
      JSArray_BassFret: findType("JSArray<BassFret>"),
      JSArray_CircleElement: findType("JSArray<CircleElement>"),
      JSArray_Collaborator: findType("JSArray<Collaborator>"),
      JSArray_Drum: findType("JSArray<Drum>"),
      JSArray_DrumPad: findType("JSArray<DrumPad>"),
      JSArray_Effect: findType("JSArray<Effect>"),
      JSArray_Float32List: findType("JSArray<Float32List>"),
      JSArray_GFret: findType("JSArray<GFret>"),
      JSArray_Gadget: findType("JSArray<Gadget>"),
      JSArray_List_Float32List: findType("JSArray<List<Float32List>>"),
      JSArray_List_num: findType("JSArray<List<num>>"),
      JSArray_Map_String_Object: findType("JSArray<Map<String,Object>>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_NoteSpacer: findType("JSArray<NoteSpacer>"),
      JSArray_PianoKey: findType("JSArray<PianoKey>"),
      JSArray_Project: findType("JSArray<Project>"),
      JSArray_Recording: findType("JSArray<Recording>"),
      JSArray_RectElement: findType("JSArray<RectElement>"),
      JSArray_SequencerButton: findType("JSArray<SequencerButton>"),
      JSArray_SequencerRow: findType("JSArray<SequencerRow>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_SvgElement: findType("JSArray<SvgElement>"),
      JSArray_SynthChain: findType("JSArray<SynthChain>"),
      JSArray_SynthEvent: findType("JSArray<SynthEvent>"),
      JSArray_SynthPatch: findType("JSArray<SynthPatch>"),
      JSArray_TraceEvent: findType("JSArray<TraceEvent>"),
      JSArray_TunePadCell: findType("JSArray<TunePadCell>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_num: findType("JSArray<num>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsArray_dynamic: findType("JsArray<@>"),
      JsLinkedHashMap_String_String: findType("JsLinkedHashMap<String,String>"),
      JsLinkedHashMap_String_dynamic: findType("JsLinkedHashMap<String,@>"),
      JsLinkedHashMap_String_int: findType("JsLinkedHashMap<String,int>"),
      JsLinkedHashMap_String_num: findType("JsLinkedHashMap<String,num>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      JsLinkedHashMap_TraceEvent_SvgElement: findType("JsLinkedHashMap<TraceEvent,SvgElement>"),
      JsLinkedHashMap_dynamic_dynamic: findType("JsLinkedHashMap<@,@>"),
      JsLinkedHashMap_int_SynthNode: findType("JsLinkedHashMap<int,SynthNode>"),
      JsLinkedHashMap_int_SynthPatch: findType("JsLinkedHashMap<int,SynthPatch>"),
      JsLinkedHashMap_int_int: findType("JsLinkedHashMap<int,int>"),
      JsLinkedHashMap_of_String_and_Set_dynamic: findType("JsLinkedHashMap<String,Set<@>>"),
      KeyRange: findType("KeyRange"),
      KeyboardEvent: findType("KeyboardEvent"),
      LIElement: findType("LIElement"),
      Length: findType("Length"),
      LineElement: findType("LineElement"),
      List_Element: findType("List<Element>"),
      List_Gadget: findType("List<Gadget>"),
      List_Object: findType("List<Object>"),
      List_Project: findType("List<Project>"),
      List_Recording: findType("List<Recording>"),
      List_RectElement: findType("List<RectElement>"),
      List_String: findType("List<String>"),
      List_SynthPatch: findType("List<SynthPatch>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_num: findType("List<num>"),
      MIDIEvent: findType("MIDIEvent"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_String_int: findType("Map<String,int>"),
      Map_String_num: findType("Map<String,num>"),
      Map_Symbol_dynamic: findType("Map<Symbol0,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MediaStream: findType("MediaStream"),
      MessageEvent: findType("MessageEvent"),
      MessagePort: findType("MessagePort"),
      Metronome: findType("Metronome"),
      MimeType: findType("MimeType"),
      MouseEvent: findType("MouseEvent"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NativeTypedData: findType("NativeTypedData"),
      NativeUint8List: findType("NativeUint8List"),
      NavigatorUserMediaError: findType("NavigatorUserMediaError"),
      Node: findType("Node"),
      NodeValidator: findType("NodeValidator"),
      Note: findType("Note"),
      NoteEvent: findType("NoteEvent"),
      Null: findType("Null"),
      Number: findType("Number"),
      Object: findType("Object"),
      PathElement: findType("PathElement"),
      PianoKey: findType("PianoKey"),
      Plugin: findType("Plugin"),
      PreElement: findType("PreElement"),
      ProgressEvent: findType("ProgressEvent"),
      Project: findType("Project"),
      Recording: findType("Recording"),
      RectElement: findType("RectElement"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExp: findType("RegExp"),
      Request: findType("Request"),
      Rti: findType("Rti"),
      ScriptElement: findType("ScriptElement0"),
      SelectElement: findType("SelectElement"),
      SequencerButton: findType("SequencerButton"),
      SequencerRow: findType("SequencerRow"),
      Set_String: findType("Set<String>"),
      Set_dynamic: findType("Set<@>"),
      SourceBuffer: findType("SourceBuffer"),
      SpanElement: findType("SpanElement"),
      SpeechGrammar: findType("SpeechGrammar"),
      SpeechRecognitionResult: findType("SpeechRecognitionResult"),
      StackTrace: findType("StackTrace"),
      StereoPannerNode: findType("StereoPannerNode"),
      StreamController_MIDIEvent: findType("StreamController<MIDIEvent>"),
      String: findType("String"),
      String_Function_String: findType("String(String)"),
      StyleSheet: findType("StyleSheet"),
      SvgElement: findType("SvgElement"),
      SvgSvgElement: findType("SvgSvgElement"),
      Symbol: findType("Symbol0"),
      SynthEvent: findType("SynthEvent"),
      SynthNode: findType("SynthNode"),
      SynthPatch: findType("SynthPatch"),
      TemplateElement: findType("TemplateElement"),
      TextAreaElement: findType("TextAreaElement"),
      TextElement: findType("TextElement"),
      TextTrack: findType("TextTrack"),
      TextTrackCue: findType("TextTrackCue"),
      Timer: findType("Timer"),
      Touch: findType("Touch"),
      Transform: findType("Transform"),
      TunePadCell: findType("TunePadCell"),
      TypedData: findType("TypedData"),
      UListElement: findType("UListElement"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      User: findType("User"),
      Window: findType("Window"),
      WindowBase: findType("WindowBase"),
      WorkerGlobalScope: findType("WorkerGlobalScope"),
      _AsyncCompleter_AudioBuffer: findType("_AsyncCompleter<AudioBuffer>"),
      _AsyncCompleter_HttpRequest: findType("_AsyncCompleter<HttpRequest>"),
      _AsyncCompleter_MediaStream: findType("_AsyncCompleter<MediaStream>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _Attr: findType("_Attr"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _DelayedEvent_dynamic: findType("_DelayedEvent<@>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _ElementEventStreamImpl_KeyboardEvent: findType("_ElementEventStreamImpl<KeyboardEvent>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _ElementListEventStreamImpl_Event: findType("_ElementListEventStreamImpl<Event>"),
      _ElementListEventStreamImpl_KeyboardEvent: findType("_ElementListEventStreamImpl<KeyboardEvent>"),
      _ElementListEventStreamImpl_MouseEvent: findType("_ElementListEventStreamImpl<MouseEvent>"),
      _EventStream_AudioProcessingEvent: findType("_EventStream<AudioProcessingEvent>"),
      _EventStream_Event: findType("_EventStream<Event>"),
      _EventStream_MessageEvent: findType("_EventStream<MessageEvent>"),
      _EventStream_MouseEvent: findType("_EventStream<MouseEvent>"),
      _EventStream_ProgressEvent: findType("_EventStream<ProgressEvent>"),
      _FrozenElementList_Element: findType("_FrozenElementList<Element>"),
      _FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>"),
      _Future_AudioBuffer: findType("_Future<AudioBuffer>"),
      _Future_HttpRequest: findType("_Future<HttpRequest>"),
      _Future_MediaStream: findType("_Future<MediaStream>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_num: findType("_Future<num>"),
      _Html5NodeValidator: findType("_Html5NodeValidator"),
      _LinkedHashSetCell: findType("_LinkedHashSetCell"),
      _SyncCompleter_num: findType("_SyncCompleter<num>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      bool_Function_String: findType("bool(String)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Event: findType("@(Event)"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_Object: findType("@(Object,Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_Set_String: findType("@(Set<String>)"),
      dynamic_Function_dynamic: findType("@(@)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      dynamic_Function_num: findType("@(num)"),
      int: findType("int"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_AudioBuffer: findType("~(AudioBuffer)"),
      void_Function_AudioProcessingEvent: findType("~(AudioProcessingEvent)"),
      void_Function_BeforeUnloadEvent: findType("~(BeforeUnloadEvent)"),
      void_Function_DomException: findType("~(DomException)"),
      void_Function_Element: findType("~(Element)"),
      void_Function_Event: findType("~(Event)"),
      void_Function_MediaStream: findType("~(MediaStream)"),
      void_Function_MessageEvent: findType("~(MessageEvent)"),
      void_Function_MouseEvent: findType("~(MouseEvent)"),
      void_Function_NavigatorUserMediaError: findType("~(NavigatorUserMediaError)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_ProgressEvent: findType("~(ProgressEvent)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_Timer: findType("~(Timer)"),
      void_Function_num: findType("~(num)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.AnchorElement_methods = W.AnchorElement.prototype;
    C.AudioBuffer_methods = P.AudioBuffer.prototype;
    C.AudioContext_methods = P.AudioContext.prototype;
    C.AudioParam_methods = P.AudioParam.prototype;
    C.BodyElement_methods = W.BodyElement.prototype;
    C.CircleElement_methods = P.CircleElement.prototype;
    C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
    C.DivElement_methods = W.DivElement.prototype;
    C.FileReader_methods = W.FileReader.prototype;
    C.GElement_methods = P.GElement.prototype;
    C.HtmlDocument_methods = W.HtmlDocument.prototype;
    C.HttpRequest_methods = W.HttpRequest.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSDouble_methods = J.JSDouble.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNull_methods = J.JSNull.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.LIElement_methods = W.LIElement.prototype;
    C.LineElement_methods = P.LineElement.prototype;
    C.NativeFloat32List_methods = H.NativeFloat32List.prototype;
    C.Navigator_methods = W.Navigator.prototype;
    C.NodeList_methods = W.NodeList.prototype;
    C.PathElement_methods = P.PathElement.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.PreElement_methods = W.PreElement.prototype;
    C.RectElement_methods = P.RectElement.prototype;
    C.ShadowRoot_methods = W.ShadowRoot.prototype;
    C.SpanElement_methods = W.SpanElement.prototype;
    C.Storage_methods = W.Storage.prototype;
    C.SvgSvgElement_methods = P.SvgSvgElement.prototype;
    C.TableElement_methods = W.TableElement.prototype;
    C.TextAreaElement_methods = W.TextAreaElement.prototype;
    C.TextElement_methods = P.TextElement.prototype;
    C.UListElement_methods = W.UListElement.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.Window_methods = W.Window.prototype;
    C.C_Base64Encoder = new P.Base64Encoder();
    C.C_Base64Codec = new P.Base64Codec();
    C.C_HexCodec = new N.HexCodec();
    C.C_HexEncoder = new R.HexEncoder();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_JsonCodec = new P.JsonCodec();
    C.C_OutOfMemoryError = new P.OutOfMemoryError();
    C.C__BeforeUnloadEventStreamProvider = new W._BeforeUnloadEventStreamProvider();
    C.C__DelayedDone = new P._DelayedDone();
    C.C__JSRandom = new P._JSRandom();
    C.C__RootZone = new P._RootZone();
    C.C__StringStackTrace = new P._StringStackTrace();
    C.Duration_0 = new P.Duration(0);
    C.Duration_100000 = new P.Duration(100000);
    C.Duration_200000 = new P.Duration(200000);
    C.Duration_2000000 = new P.Duration(2000000);
    C.Duration_30000 = new P.Duration(30000);
    C.Duration_3000000 = new P.Duration(3000000);
    C.Duration_30000000 = new P.Duration(30000000);
    C.Duration_50000 = new P.Duration(50000);
    C.Duration_500000 = new P.Duration(500000);
    C.JsonDecoder_null = new P.JsonDecoder(null);
    C.JsonEncoder_null = new P.JsonEncoder(null);
    C.List_0 = H.setRuntimeTypeInfo(makeConstList(["C", "C\u266f", "D", "D\u266f", "E", "F", "F\u266f", "G", "G\u266f", "A", "A\u266f", "B"]), type$.JSArray_String);
    C.List_2Zi = H.setRuntimeTypeInfo(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    C.List_e2R = H.setRuntimeTypeInfo(makeConstList(["rgb(229, 76, 78)", "rgb(223, 132, 74)", "rgb(228, 171, 81)", "rgb(227, 199, 73)", "rgb(223, 228, 78)", "rgb(174, 215, 71)", "rgb(63, 188, 70)", "rgb(63, 169, 180)", "rgb(64, 124, 180)", "rgb(78, 69, 179)", "rgb(141, 69, 183)", "rgb(202, 69, 147)"]), type$.JSArray_String);
    C.List_ego = H.setRuntimeTypeInfo(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_String);
    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_dynamic);
    C.List_oqF = H.setRuntimeTypeInfo(makeConstList(["1234567890-=", "qwertyuiop[]", "asdfghjkl;'", "zxcvbnm,./"]), type$.JSArray_String);
    C.List_wSV = H.setRuntimeTypeInfo(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    C.List_yrN = H.setRuntimeTypeInfo(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    C.List_nodes_routing = H.setRuntimeTypeInfo(makeConstList(["nodes", "routing"]), type$.JSArray_String);
    C.List_type_id_cx_cy = H.setRuntimeTypeInfo(makeConstList(["type", "id", "cx", "cy"]), type$.JSArray_String);
    C.Map_J6OFu = new H.ConstantStringMap(4, {type: "out", id: 0, cx: 517, cy: 189}, C.List_type_id_cx_cy, type$.ConstantStringMap_String_Object);
    C.List_dT7 = H.setRuntimeTypeInfo(makeConstList(["type", "samples", "id", "level", "cx", "cy"]), type$.JSArray_String);
    C.List_sample_step = H.setRuntimeTypeInfo(makeConstList(["sample", "step"]), type$.JSArray_String);
    C.Map_wTktQ = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/shot-drums/rim", step: 24}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.List_Map_wTktQ = H.setRuntimeTypeInfo(makeConstList([C.Map_wTktQ]), type$.JSArray_Map_String_Object);
    C.Map_dTA0N = new H.ConstantStringMap(6, {type: "sample", samples: C.List_Map_wTktQ, id: 1, level: 1, cx: 100, cy: 100}, C.List_dT7, type$.ConstantStringMap_String_Object);
    C.List_mxd = H.setRuntimeTypeInfo(makeConstList(["type", "A", "D", "S", "R", "level", "cx", "cy", "id"]), type$.JSArray_String);
    C.Map_mxiDZ = new H.ConstantStringMap(9, {type: "adsr", A: 0.01, D: 0.1, S: 1, R: 0.3, level: 1, cx: 258, cy: 228, id: 2}, C.List_mxd, type$.ConstantStringMap_String_Object);
    C.List_gAo = H.setRuntimeTypeInfo(makeConstList([C.Map_J6OFu, C.Map_dTA0N, C.Map_mxiDZ]), type$.JSArray_Map_String_Object);
    C.List_source_dest_type = H.setRuntimeTypeInfo(makeConstList(["source", "dest", "type"]), type$.JSArray_String);
    C.Map_MtKs3 = new H.ConstantStringMap(3, {source: 1, dest: 2, type: "in"}, C.List_source_dest_type, type$.ConstantStringMap_String_Object);
    C.Map_MtM2I = new H.ConstantStringMap(3, {source: 2, dest: 0, type: "out"}, C.List_source_dest_type, type$.ConstantStringMap_String_Object);
    C.List_Map_MtKs3_Map_MtM2I = H.setRuntimeTypeInfo(makeConstList([C.Map_MtKs3, C.Map_MtM2I]), type$.JSArray_Map_String_Object);
    C.Map_b8IFE = new H.ConstantStringMap(2, {nodes: C.List_gAo, routing: C.List_Map_MtKs3_Map_MtM2I}, C.List_nodes_routing, type$.ConstantStringMap_of_String_and_List_Map_String_Object);
    C.Map_wTs4B = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/21pianoA0", step: 21}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/24pianoC1", step: 24}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B1 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/28pianoE1", step: 28}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/32pianoAb1", step: 32}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B2 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/36pianoC2", step: 36}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B3 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/40pianoE2", step: 40}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/44pianoAb2", step: 44}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B4 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/48pianoC3", step: 48}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B5 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/52pianoE3", step: 52}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn1 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/56pianoAb3", step: 56}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B6 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/60pianoC4", step: 60}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B7 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/64pianoE4", step: 64}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn2 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/68pianoAb4", step: 68}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B8 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/72pianoC5", step: 72}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B9 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/76pianoE5", step: 76}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn3 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/80pianoAb5", step: 80}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B10 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/84pianoC6", step: 84}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B11 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/88pianoE6", step: 88}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT0zn4 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/92pianoAb6", step: 92}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTs4B12 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/96pianoC7", step: 96}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTIEE = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/100pianoE7", step: 100}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wT799 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/104pianoAb7", step: 104}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.Map_wTIEE0 = new H.ConstantStringMap(2, {sample: "packages/synthesizer/sounds/voices/piano/108pianoC8", step: 108}, C.List_sample_step, type$.ConstantStringMap_String_Object);
    C.List_qY0 = H.setRuntimeTypeInfo(makeConstList([C.Map_wTs4B, C.Map_wTs4B0, C.Map_wTs4B1, C.Map_wT0zn, C.Map_wTs4B2, C.Map_wTs4B3, C.Map_wT0zn0, C.Map_wTs4B4, C.Map_wTs4B5, C.Map_wT0zn1, C.Map_wTs4B6, C.Map_wTs4B7, C.Map_wT0zn2, C.Map_wTs4B8, C.Map_wTs4B9, C.Map_wT0zn3, C.Map_wTs4B10, C.Map_wTs4B11, C.Map_wT0zn4, C.Map_wTs4B12, C.Map_wTIEE, C.Map_wT799, C.Map_wTIEE0]), type$.JSArray_Map_String_Object);
    C.Map_dTQcj = new H.ConstantStringMap(6, {type: "sample", samples: C.List_qY0, id: 1, level: 1, cx: 100, cy: 100}, C.List_dT7, type$.ConstantStringMap_String_Object);
    C.Map_mxiDZ0 = new H.ConstantStringMap(9, {type: "adsr", A: 0.01, D: 0.1, S: 1, R: 0.3, level: 1, cx: 300, cy: 188, id: 2}, C.List_mxd, type$.ConstantStringMap_String_Object);
    C.List_MEg = H.setRuntimeTypeInfo(makeConstList([C.Map_J6OFu, C.Map_dTQcj, C.Map_mxiDZ0]), type$.JSArray_Map_String_Object);
    C.Map_b8Sgx = new H.ConstantStringMap(2, {nodes: C.List_MEg, routing: C.List_Map_MtKs3_Map_MtM2I}, C.List_nodes_routing, type$.ConstantStringMap_of_String_and_List_Map_String_Object);
    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Symbol0>"));
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty1, H.findType("ConstantStringMap<Symbol0,@>"));
    C.Symbol_call = new H.Symbol("call");
  })();
  (function staticFields() {
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._toStringVisiting = [];
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $.Device__isOpera = null;
    $.Device__isIE = null;
    $.Device__isFirefox = null;
    $.Device__cachedCssPrefix = null;
    $.PianoKey_NOTES = H.setRuntimeTypeInfo(["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"], type$.JSArray_String);
    $.SequencerButton_WIDTH = 50;
    $.PythonCell_boilerplate = null;
    $.datastore = null;
    $.dropbook = null;
    $.outline = null;
    $.projectList = null;
    $.library = null;
    $.rstudio = null;
    $._first_login = true;
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy;
    _lazy($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazy($, "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
      return H.getIsolateAffinityTag("_$dart_js");
    });
    _lazy($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazy($, "Future__nullFuture", "$get$Future__nullFuture", function() {
      return P._Future$zoneValue(null, C.C__RootZone, type$.Null);
    });
    _lazy($, "Future__falseFuture", "$get$Future__falseFuture", function() {
      return P._Future$zoneValue(false, C.C__RootZone, type$.bool);
    });
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", function() {
      return new Error().stack != void 0;
    });
    _lazy($, "DateTime__parseFormat", "$get$DateTime__parseFormat", function() {
      return P.RegExp_RegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d+))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$");
    });
    _lazy($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
      return {};
    });
    _lazy($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
      return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String);
    });
    _lazy($, "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", function() {
      return P.RegExp_RegExp("^\\S+$");
    });
    _lazy($, "_context", "$get$_context", function() {
      return H.findType("JsObject")._as(P._wrapToDart(self));
    });
    _lazy($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazy($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazy($, "MIDIManager__singleton", "$get$MIDIManager__singleton", function() {
      var t1 = type$.int,
        t2 = type$.Map_dynamic_dynamic;
      t2 = new U.MIDIManager(H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t2), H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t2));
      t1 = type$.MIDIEvent;
      t2.set$_stateStream(P.StreamController_StreamController$broadcast(null, false, t1));
      t2.set$_messageStream(P.StreamController_StreamController$broadcast(null, false, t1));
      t1 = $.$get$_context();
      t1.$indexSet(0, "midiEvent", t2.get$_midiEvent());
      t1.$indexSet(0, "midiConnection", t2.get$_midiConnection());
      t1.callMethod$2("midiInit", []);
      return t2;
    });
    _lazy($, "CodeMirror_editorUpdateMap", "$get$CodeMirror_editorUpdateMap", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, type$.Function);
    });
    _lazy($, "CodeMirror_cursorActivityMap", "$get$CodeMirror_cursorActivityMap", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, type$.Function);
    });
    _lazy($, "CodeMirror_editorBlurMap", "$get$CodeMirror_editorBlurMap", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, type$.Function);
    });
    _lazy($, "CodeMirror_editorFocusMap", "$get$CodeMirror_editorFocusMap", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, type$.Function);
    });
    _lazy($, "QuillEditor_editorUpdateMap", "$get$QuillEditor_editorUpdateMap", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, type$.Function);
    });
    _lazy($, "Synthesizer_sounds", "$get$Synthesizer_sounds", function() {
      var t1 = type$.dynamic;
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(t1, t1);
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({AnimationEffectReadOnly: J.Interceptor, AnimationEffectTiming: J.Interceptor, AnimationEffectTimingReadOnly: J.Interceptor, AnimationTimeline: J.Interceptor, AnimationWorkletGlobalScope: J.Interceptor, AuthenticatorAssertionResponse: J.Interceptor, AuthenticatorAttestationResponse: J.Interceptor, AuthenticatorResponse: J.Interceptor, BackgroundFetchFetch: J.Interceptor, BackgroundFetchManager: J.Interceptor, BackgroundFetchSettledFetch: J.Interceptor, BarProp: J.Interceptor, BarcodeDetector: J.Interceptor, BluetoothRemoteGATTDescriptor: J.Interceptor, Body: J.Interceptor, BudgetState: J.Interceptor, CanvasGradient: J.Interceptor, CanvasPattern: J.Interceptor, CanvasRenderingContext2D: J.Interceptor, Clients: J.Interceptor, CookieStore: J.Interceptor, Coordinates: J.Interceptor, CredentialUserData: J.Interceptor, CredentialsContainer: J.Interceptor, Crypto: J.Interceptor, CSS: J.Interceptor, CSSVariableReferenceValue: J.Interceptor, CustomElementRegistry: J.Interceptor, DataTransfer: J.Interceptor, DeprecatedStorageInfo: J.Interceptor, DeprecatedStorageQuota: J.Interceptor, DeprecationReport: J.Interceptor, DetectedBarcode: J.Interceptor, DetectedFace: J.Interceptor, DetectedText: J.Interceptor, DeviceAcceleration: J.Interceptor, DeviceRotationRate: J.Interceptor, DirectoryReader: J.Interceptor, DocumentOrShadowRoot: J.Interceptor, DocumentTimeline: J.Interceptor, DOMError: J.Interceptor, DOMImplementation: J.Interceptor, Iterator: J.Interceptor, DOMMatrix: J.Interceptor, DOMMatrixReadOnly: J.Interceptor, DOMParser: J.Interceptor, DOMPoint: J.Interceptor, DOMPointReadOnly: J.Interceptor, DOMQuad: J.Interceptor, DOMStringMap: J.Interceptor, External: J.Interceptor, FaceDetector: J.Interceptor, DOMFileSystem: J.Interceptor, FontFaceSource: J.Interceptor, FormData: J.Interceptor, GamepadButton: J.Interceptor, GamepadPose: J.Interceptor, Geolocation: J.Interceptor, Position: J.Interceptor, Headers: J.Interceptor, HTMLHyperlinkElementUtils: J.Interceptor, IdleDeadline: J.Interceptor, ImageBitmap: J.Interceptor, ImageBitmapRenderingContext: J.Interceptor, ImageCapture: J.Interceptor, InputDeviceCapabilities: J.Interceptor, IntersectionObserver: J.Interceptor, IntersectionObserverEntry: J.Interceptor, InterventionReport: J.Interceptor, KeyframeEffect: J.Interceptor, KeyframeEffectReadOnly: J.Interceptor, MediaCapabilities: J.Interceptor, MediaCapabilitiesInfo: J.Interceptor, MediaDeviceInfo: J.Interceptor, MediaError: J.Interceptor, MediaKeyStatusMap: J.Interceptor, MediaKeySystemAccess: J.Interceptor, MediaKeys: J.Interceptor, MediaKeysPolicy: J.Interceptor, MediaMetadata: J.Interceptor, MediaSession: J.Interceptor, MediaSettingsRange: J.Interceptor, MemoryInfo: J.Interceptor, MessageChannel: J.Interceptor, Metadata: J.Interceptor, MutationObserver: J.Interceptor, WebKitMutationObserver: J.Interceptor, NavigationPreloadManager: J.Interceptor, NavigatorAutomationInformation: J.Interceptor, NavigatorCookies: J.Interceptor, NodeFilter: J.Interceptor, NodeIterator: J.Interceptor, NonDocumentTypeChildNode: J.Interceptor, NonElementParentNode: J.Interceptor, NoncedElement: J.Interceptor, OffscreenCanvasRenderingContext2D: J.Interceptor, OverconstrainedError: J.Interceptor, PaintRenderingContext2D: J.Interceptor, PaintSize: J.Interceptor, PaintWorkletGlobalScope: J.Interceptor, Path2D: J.Interceptor, PaymentAddress: J.Interceptor, PaymentManager: J.Interceptor, PaymentResponse: J.Interceptor, PerformanceObserver: J.Interceptor, PerformanceObserverEntryList: J.Interceptor, PerformanceServerTiming: J.Interceptor, PerformanceTiming: J.Interceptor, Permissions: J.Interceptor, PhotoCapabilities: J.Interceptor, PositionError: J.Interceptor, Presentation: J.Interceptor, PresentationReceiver: J.Interceptor, PushManager: J.Interceptor, PushMessageData: J.Interceptor, PushSubscription: J.Interceptor, PushSubscriptionOptions: J.Interceptor, Range: J.Interceptor, ReportBody: J.Interceptor, ReportingObserver: J.Interceptor, ResizeObserver: J.Interceptor, ResizeObserverEntry: J.Interceptor, RTCCertificate: J.Interceptor, RTCIceCandidate: J.Interceptor, mozRTCIceCandidate: J.Interceptor, RTCRtpContributingSource: J.Interceptor, RTCRtpReceiver: J.Interceptor, RTCRtpSender: J.Interceptor, RTCStatsResponse: J.Interceptor, Screen: J.Interceptor, ScrollState: J.Interceptor, ScrollTimeline: J.Interceptor, SharedArrayBuffer: J.Interceptor, SpeechRecognitionAlternative: J.Interceptor, SpeechSynthesisVoice: J.Interceptor, StaticRange: J.Interceptor, StorageManager: J.Interceptor, StylePropertyMap: J.Interceptor, StylePropertyMapReadonly: J.Interceptor, SyncManager: J.Interceptor, TextDetector: J.Interceptor, TextMetrics: J.Interceptor, TreeWalker: J.Interceptor, TrustedHTML: J.Interceptor, TrustedScriptURL: J.Interceptor, TrustedURL: J.Interceptor, UnderlyingSourceBase: J.Interceptor, URLSearchParams: J.Interceptor, VRCoordinateSystem: J.Interceptor, VRDisplayCapabilities: J.Interceptor, VREyeParameters: J.Interceptor, VRFrameData: J.Interceptor, VRFrameOfReference: J.Interceptor, VRPose: J.Interceptor, VRStageBounds: J.Interceptor, VRStageBoundsPoint: J.Interceptor, VRStageParameters: J.Interceptor, ValidityState: J.Interceptor, VideoPlaybackQuality: J.Interceptor, WorkletAnimation: J.Interceptor, WorkletGlobalScope: J.Interceptor, XPathEvaluator: J.Interceptor, XPathExpression: J.Interceptor, XPathNSResolver: J.Interceptor, XPathResult: J.Interceptor, XMLSerializer: J.Interceptor, XSLTProcessor: J.Interceptor, Bluetooth: J.Interceptor, BluetoothCharacteristicProperties: J.Interceptor, BluetoothRemoteGATTServer: J.Interceptor, BluetoothRemoteGATTService: J.Interceptor, BluetoothUUID: J.Interceptor, BudgetService: J.Interceptor, Cache: J.Interceptor, DOMFileSystemSync: J.Interceptor, DirectoryEntrySync: J.Interceptor, DirectoryReaderSync: J.Interceptor, EntrySync: J.Interceptor, FileEntrySync: J.Interceptor, FileReaderSync: J.Interceptor, FileWriterSync: J.Interceptor, HTMLAllCollection: J.Interceptor, Mojo: J.Interceptor, MojoHandle: J.Interceptor, MojoWatcher: J.Interceptor, NFC: J.Interceptor, PagePopupController: J.Interceptor, Request: J.Interceptor, Response: J.Interceptor, SubtleCrypto: J.Interceptor, USBAlternateInterface: J.Interceptor, USBConfiguration: J.Interceptor, USBDevice: J.Interceptor, USBEndpoint: J.Interceptor, USBInTransferResult: J.Interceptor, USBInterface: J.Interceptor, USBIsochronousInTransferPacket: J.Interceptor, USBIsochronousInTransferResult: J.Interceptor, USBIsochronousOutTransferPacket: J.Interceptor, USBIsochronousOutTransferResult: J.Interceptor, USBOutTransferResult: J.Interceptor, WorkerLocation: J.Interceptor, Worklet: J.Interceptor, IDBCursor: J.Interceptor, IDBCursorWithValue: J.Interceptor, IDBFactory: J.Interceptor, IDBIndex: J.Interceptor, IDBObserver: J.Interceptor, IDBObserverChanges: J.Interceptor, SVGAngle: J.Interceptor, SVGAnimatedAngle: J.Interceptor, SVGAnimatedBoolean: J.Interceptor, SVGAnimatedEnumeration: J.Interceptor, SVGAnimatedInteger: J.Interceptor, SVGAnimatedLength: J.Interceptor, SVGAnimatedLengthList: J.Interceptor, SVGAnimatedNumber: J.Interceptor, SVGAnimatedNumberList: J.Interceptor, SVGAnimatedPreserveAspectRatio: J.Interceptor, SVGAnimatedRect: J.Interceptor, SVGAnimatedString: J.Interceptor, SVGAnimatedTransformList: J.Interceptor, SVGMatrix: J.Interceptor, SVGPoint: J.Interceptor, SVGPreserveAspectRatio: J.Interceptor, SVGRect: J.Interceptor, SVGUnitTypes: J.Interceptor, AudioListener: J.Interceptor, AudioWorkletGlobalScope: J.Interceptor, AudioWorkletProcessor: J.Interceptor, PeriodicWave: J.Interceptor, ANGLEInstancedArrays: J.Interceptor, ANGLE_instanced_arrays: J.Interceptor, WebGLBuffer: J.Interceptor, WebGLCanvas: J.Interceptor, WebGLColorBufferFloat: J.Interceptor, WebGLCompressedTextureASTC: J.Interceptor, WebGLCompressedTextureATC: J.Interceptor, WEBGL_compressed_texture_atc: J.Interceptor, WebGLCompressedTextureETC1: J.Interceptor, WEBGL_compressed_texture_etc1: J.Interceptor, WebGLCompressedTextureETC: J.Interceptor, WebGLCompressedTexturePVRTC: J.Interceptor, WEBGL_compressed_texture_pvrtc: J.Interceptor, WebGLCompressedTextureS3TC: J.Interceptor, WEBGL_compressed_texture_s3tc: J.Interceptor, WebGLCompressedTextureS3TCsRGB: J.Interceptor, WebGLDebugRendererInfo: J.Interceptor, WEBGL_debug_renderer_info: J.Interceptor, WebGLDebugShaders: J.Interceptor, WEBGL_debug_shaders: J.Interceptor, WebGLDepthTexture: J.Interceptor, WEBGL_depth_texture: J.Interceptor, WebGLDrawBuffers: J.Interceptor, WEBGL_draw_buffers: J.Interceptor, EXTsRGB: J.Interceptor, EXT_sRGB: J.Interceptor, EXTBlendMinMax: J.Interceptor, EXT_blend_minmax: J.Interceptor, EXTColorBufferFloat: J.Interceptor, EXTColorBufferHalfFloat: J.Interceptor, EXTDisjointTimerQuery: J.Interceptor, EXTDisjointTimerQueryWebGL2: J.Interceptor, EXTFragDepth: J.Interceptor, EXT_frag_depth: J.Interceptor, EXTShaderTextureLOD: J.Interceptor, EXT_shader_texture_lod: J.Interceptor, EXTTextureFilterAnisotropic: J.Interceptor, EXT_texture_filter_anisotropic: J.Interceptor, WebGLFramebuffer: J.Interceptor, WebGLGetBufferSubDataAsync: J.Interceptor, WebGLLoseContext: J.Interceptor, WebGLExtensionLoseContext: J.Interceptor, WEBGL_lose_context: J.Interceptor, OESElementIndexUint: J.Interceptor, OES_element_index_uint: J.Interceptor, OESStandardDerivatives: J.Interceptor, OES_standard_derivatives: J.Interceptor, OESTextureFloat: J.Interceptor, OES_texture_float: J.Interceptor, OESTextureFloatLinear: J.Interceptor, OES_texture_float_linear: J.Interceptor, OESTextureHalfFloat: J.Interceptor, OES_texture_half_float: J.Interceptor, OESTextureHalfFloatLinear: J.Interceptor, OES_texture_half_float_linear: J.Interceptor, OESVertexArrayObject: J.Interceptor, OES_vertex_array_object: J.Interceptor, WebGLProgram: J.Interceptor, WebGLQuery: J.Interceptor, WebGLRenderbuffer: J.Interceptor, WebGLRenderingContext: J.Interceptor, WebGL2RenderingContext: J.Interceptor, WebGLSampler: J.Interceptor, WebGLShader: J.Interceptor, WebGLShaderPrecisionFormat: J.Interceptor, WebGLSync: J.Interceptor, WebGLTexture: J.Interceptor, WebGLTimerQueryEXT: J.Interceptor, WebGLTransformFeedback: J.Interceptor, WebGLUniformLocation: J.Interceptor, WebGLVertexArrayObject: J.Interceptor, WebGLVertexArrayObjectOES: J.Interceptor, WebGL: J.Interceptor, WebGL2RenderingContextBase: J.Interceptor, Database: J.Interceptor, SQLError: J.Interceptor, SQLResultSet: J.Interceptor, SQLTransaction: J.Interceptor, ArrayBuffer: H.NativeByteBuffer, DataView: H.NativeTypedData, ArrayBufferView: H.NativeTypedData, Float64Array: H.NativeTypedArrayOfDouble, Float32Array: H.NativeFloat32List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLBRElement: W.HtmlElement, HTMLCanvasElement: W.HtmlElement, HTMLContentElement: W.HtmlElement, HTMLDListElement: W.HtmlElement, HTMLDataElement: W.HtmlElement, HTMLDataListElement: W.HtmlElement, HTMLDetailsElement: W.HtmlElement, HTMLDialogElement: W.HtmlElement, HTMLHRElement: W.HtmlElement, HTMLHeadElement: W.HtmlElement, HTMLHeadingElement: W.HtmlElement, HTMLHtmlElement: W.HtmlElement, HTMLIFrameElement: W.HtmlElement, HTMLImageElement: W.HtmlElement, HTMLLabelElement: W.HtmlElement, HTMLLegendElement: W.HtmlElement, HTMLMapElement: W.HtmlElement, HTMLMenuElement: W.HtmlElement, HTMLMetaElement: W.HtmlElement, HTMLMeterElement: W.HtmlElement, HTMLModElement: W.HtmlElement, HTMLOptGroupElement: W.HtmlElement, HTMLOptionElement: W.HtmlElement, HTMLParagraphElement: W.HtmlElement, HTMLParamElement: W.HtmlElement, HTMLPictureElement: W.HtmlElement, HTMLProgressElement: W.HtmlElement, HTMLQuoteElement: W.HtmlElement, HTMLShadowElement: W.HtmlElement, HTMLSlotElement: W.HtmlElement, HTMLTableCaptionElement: W.HtmlElement, HTMLTableCellElement: W.HtmlElement, HTMLTableDataCellElement: W.HtmlElement, HTMLTableHeaderCellElement: W.HtmlElement, HTMLTableColElement: W.HtmlElement, HTMLTimeElement: W.HtmlElement, HTMLTitleElement: W.HtmlElement, HTMLTrackElement: W.HtmlElement, HTMLUnknownElement: W.HtmlElement, HTMLDirectoryElement: W.HtmlElement, HTMLFontElement: W.HtmlElement, HTMLFrameElement: W.HtmlElement, HTMLFrameSetElement: W.HtmlElement, HTMLMarqueeElement: W.HtmlElement, HTMLElement: W.HtmlElement, AccessibleNodeList: W.AccessibleNodeList, HTMLAnchorElement: W.AnchorElement, Animation: W.Animation, HTMLAreaElement: W.AreaElement, HTMLAudioElement: W.AudioElement, BackgroundFetchClickEvent: W.BackgroundFetchEvent, BackgroundFetchEvent: W.BackgroundFetchEvent, BackgroundFetchFailEvent: W.BackgroundFetchEvent, BackgroundFetchedEvent: W.BackgroundFetchEvent, BackgroundFetchRegistration: W.BackgroundFetchRegistration, HTMLBaseElement: W.BaseElement, BeforeUnloadEvent: W.BeforeUnloadEvent, Blob: W.Blob, BlobEvent: W.BlobEvent, HTMLBodyElement: W.BodyElement, HTMLButtonElement: W.ButtonElement, CacheStorage: W.CacheStorage, CDATASection: W.CharacterData, CharacterData: W.CharacterData, Comment: W.CharacterData, ProcessingInstruction: W.CharacterData, Text: W.CharacterData, Client: W.Client, WindowClient: W.Client, CompositionEvent: W.CompositionEvent, Credential: W.Credential, FederatedCredential: W.Credential, PasswordCredential: W.Credential, PublicKeyCredential: W.Credential, CryptoKey: W.CryptoKey, CSSNumericValue: W.CssNumericValue, CSSPerspective: W.CssPerspective, CSSCharsetRule: W.CssRule, CSSConditionRule: W.CssRule, CSSFontFaceRule: W.CssRule, CSSGroupingRule: W.CssRule, CSSImportRule: W.CssRule, CSSKeyframeRule: W.CssRule, MozCSSKeyframeRule: W.CssRule, WebKitCSSKeyframeRule: W.CssRule, CSSKeyframesRule: W.CssRule, MozCSSKeyframesRule: W.CssRule, WebKitCSSKeyframesRule: W.CssRule, CSSMediaRule: W.CssRule, CSSNamespaceRule: W.CssRule, CSSPageRule: W.CssRule, CSSRule: W.CssRule, CSSStyleRule: W.CssRule, CSSSupportsRule: W.CssRule, CSSViewportRule: W.CssRule, CSSStyleDeclaration: W.CssStyleDeclaration, MSStyleCSSProperties: W.CssStyleDeclaration, CSS2Properties: W.CssStyleDeclaration, CSSImageValue: W.CssStyleValue, CSSKeywordValue: W.CssStyleValue, CSSPositionValue: W.CssStyleValue, CSSResourceValue: W.CssStyleValue, CSSURLImageValue: W.CssStyleValue, CSSStyleValue: W.CssStyleValue, CSSMatrixComponent: W.CssTransformComponent, CSSRotation: W.CssTransformComponent, CSSScale: W.CssTransformComponent, CSSSkew: W.CssTransformComponent, CSSTranslation: W.CssTransformComponent, CSSTransformComponent: W.CssTransformComponent, CSSTransformValue: W.CssTransformValue, CSSUnitValue: W.CssUnitValue, CSSUnparsedValue: W.CssUnparsedValue, DataTransferItem: W.DataTransferItem, DataTransferItemList: W.DataTransferItemList, HTMLDivElement: W.DivElement, XMLDocument: W.Document, Document: W.Document, DocumentFragment: W.DocumentFragment, DOMException: W.DomException, ClientRectList: W.DomRectList, DOMRectList: W.DomRectList, DOMRectReadOnly: W.DomRectReadOnly, DOMStringList: W.DomStringList, DOMTokenList: W.DomTokenList, Element: W.Element, HTMLEmbedElement: W.EmbedElement, DirectoryEntry: W.Entry, Entry: W.Entry, FileEntry: W.Entry, AnimationEvent: W.Event, AnimationPlaybackEvent: W.Event, ApplicationCacheErrorEvent: W.Event, BeforeInstallPromptEvent: W.Event, ClipboardEvent: W.Event, CloseEvent: W.Event, CustomEvent: W.Event, DeviceMotionEvent: W.Event, DeviceOrientationEvent: W.Event, ErrorEvent: W.Event, FontFaceSetLoadEvent: W.Event, GamepadEvent: W.Event, HashChangeEvent: W.Event, MediaEncryptedEvent: W.Event, MediaKeyMessageEvent: W.Event, MediaQueryListEvent: W.Event, MediaStreamEvent: W.Event, MediaStreamTrackEvent: W.Event, MIDIConnectionEvent: W.Event, MutationEvent: W.Event, PageTransitionEvent: W.Event, PaymentRequestUpdateEvent: W.Event, PopStateEvent: W.Event, PresentationConnectionAvailableEvent: W.Event, PresentationConnectionCloseEvent: W.Event, PromiseRejectionEvent: W.Event, RTCDataChannelEvent: W.Event, RTCDTMFToneChangeEvent: W.Event, RTCPeerConnectionIceEvent: W.Event, RTCTrackEvent: W.Event, SecurityPolicyViolationEvent: W.Event, SensorErrorEvent: W.Event, SpeechRecognitionError: W.Event, SpeechRecognitionEvent: W.Event, SpeechSynthesisEvent: W.Event, StorageEvent: W.Event, TrackEvent: W.Event, TransitionEvent: W.Event, WebKitTransitionEvent: W.Event, VRDeviceEvent: W.Event, VRDisplayEvent: W.Event, VRSessionEvent: W.Event, MojoInterfaceRequestEvent: W.Event, USBConnectionEvent: W.Event, OfflineAudioCompletionEvent: W.Event, WebGLContextEvent: W.Event, Event: W.Event, InputEvent: W.Event, SubmitEvent: W.Event, AbsoluteOrientationSensor: W.EventTarget, Accelerometer: W.EventTarget, AccessibleNode: W.EventTarget, AmbientLightSensor: W.EventTarget, ApplicationCache: W.EventTarget, DOMApplicationCache: W.EventTarget, OfflineResourceList: W.EventTarget, BatteryManager: W.EventTarget, BroadcastChannel: W.EventTarget, EventSource: W.EventTarget, Gyroscope: W.EventTarget, LinearAccelerationSensor: W.EventTarget, Magnetometer: W.EventTarget, MediaDevices: W.EventTarget, MediaQueryList: W.EventTarget, MediaRecorder: W.EventTarget, MediaSource: W.EventTarget, MIDIAccess: W.EventTarget, Notification: W.EventTarget, OffscreenCanvas: W.EventTarget, OrientationSensor: W.EventTarget, Performance: W.EventTarget, PermissionStatus: W.EventTarget, PresentationAvailability: W.EventTarget, PresentationConnectionList: W.EventTarget, PresentationRequest: W.EventTarget, RelativeOrientationSensor: W.EventTarget, RemotePlayback: W.EventTarget, RTCDTMFSender: W.EventTarget, RTCPeerConnection: W.EventTarget, webkitRTCPeerConnection: W.EventTarget, mozRTCPeerConnection: W.EventTarget, Sensor: W.EventTarget, ServiceWorker: W.EventTarget, ServiceWorkerContainer: W.EventTarget, ServiceWorkerRegistration: W.EventTarget, SharedWorker: W.EventTarget, SpeechRecognition: W.EventTarget, SpeechSynthesis: W.EventTarget, SpeechSynthesisUtterance: W.EventTarget, VR: W.EventTarget, VRDevice: W.EventTarget, VRDisplay: W.EventTarget, VRSession: W.EventTarget, VisualViewport: W.EventTarget, WorkerPerformance: W.EventTarget, BluetoothDevice: W.EventTarget, BluetoothRemoteGATTCharacteristic: W.EventTarget, Clipboard: W.EventTarget, MojoInterfaceInterceptor: W.EventTarget, USB: W.EventTarget, IDBDatabase: W.EventTarget, IDBTransaction: W.EventTarget, EventTarget: W.EventTarget, AbortPaymentEvent: W.ExtendableEvent, CanMakePaymentEvent: W.ExtendableEvent, FetchEvent: W.ExtendableEvent, ForeignFetchEvent: W.ExtendableEvent, InstallEvent: W.ExtendableEvent, NotificationEvent: W.ExtendableEvent, PaymentRequestEvent: W.ExtendableEvent, SyncEvent: W.ExtendableEvent, ExtendableEvent: W.ExtendableEvent, ExtendableMessageEvent: W.ExtendableMessageEvent, HTMLFieldSetElement: W.FieldSetElement, File: W.File, FileList: W.FileList, FileReader: W.FileReader, FileWriter: W.FileWriter, FontFace: W.FontFace, FontFaceSet: W.FontFaceSet, HTMLFormElement: W.FormElement, Gamepad: W.Gamepad, History: W.History, HTMLCollection: W.HtmlCollection, HTMLFormControlsCollection: W.HtmlCollection, HTMLOptionsCollection: W.HtmlCollection, HTMLDocument: W.HtmlDocument, XMLHttpRequest: W.HttpRequest, XMLHttpRequestUpload: W.HttpRequestEventTarget, XMLHttpRequestEventTarget: W.HttpRequestEventTarget, ImageData: W.ImageData, HTMLInputElement: W.InputElement, KeyboardEvent: W.KeyboardEvent, HTMLLIElement: W.LIElement, HTMLLinkElement: W.LinkElement, Location: W.Location, HTMLVideoElement: W.MediaElement, HTMLMediaElement: W.MediaElement, MediaKeySession: W.MediaKeySession, MediaList: W.MediaList, MediaStream: W.MediaStream, CanvasCaptureMediaStreamTrack: W.MediaStreamTrack, MediaStreamTrack: W.MediaStreamTrack, MessageEvent: W.MessageEvent, MessagePort: W.MessagePort, MIDIInputMap: W.MidiInputMap, MIDIMessageEvent: W.MidiMessageEvent, MIDIOutputMap: W.MidiOutputMap, MIDIInput: W.MidiPort, MIDIOutput: W.MidiPort, MIDIPort: W.MidiPort, MimeType: W.MimeType, MimeTypeArray: W.MimeTypeArray, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, PointerEvent: W.MouseEvent, WheelEvent: W.MouseEvent, MutationRecord: W.MutationRecord, Navigator: W.Navigator, WorkerNavigator: W.NavigatorConcurrentHardware, NavigatorConcurrentHardware: W.NavigatorConcurrentHardware, NavigatorUserMediaError: W.NavigatorUserMediaError, NetworkInformation: W.NetworkInformation, DocumentType: W.Node, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, HTMLOListElement: W.OListElement, HTMLObjectElement: W.ObjectElement, HTMLOutputElement: W.OutputElement, PaymentInstruments: W.PaymentInstruments, PaymentRequest: W.PaymentRequest, PerformanceLongTaskTiming: W.PerformanceEntry, PerformanceMark: W.PerformanceEntry, PerformanceMeasure: W.PerformanceEntry, PerformancePaintTiming: W.PerformanceEntry, TaskAttributionTiming: W.PerformanceEntry, PerformanceEntry: W.PerformanceEntry, PerformanceNavigation: W.PerformanceNavigation, PerformanceNavigationTiming: W.PerformanceNavigationTiming, PerformanceResourceTiming: W.PerformanceResourceTiming, Plugin: W.Plugin, PluginArray: W.PluginArray, HTMLPreElement: W.PreElement, PresentationConnection: W.PresentationConnection, ProgressEvent: W.ProgressEvent, ResourceProgressEvent: W.ProgressEvent, PushEvent: W.PushEvent, RelatedApplication: W.RelatedApplication, RTCDataChannel: W.RtcDataChannel, DataChannel: W.RtcDataChannel, RTCLegacyStatsReport: W.RtcLegacyStatsReport, RTCSessionDescription: W.RtcSessionDescription, mozRTCSessionDescription: W.RtcSessionDescription, RTCStatsReport: W.RtcStatsReport, ScreenOrientation: W.ScreenOrientation, HTMLScriptElement: W.ScriptElement, HTMLSelectElement: W.SelectElement, Selection: W.Selection, ShadowRoot: W.ShadowRoot, SourceBuffer: W.SourceBuffer, SourceBufferList: W.SourceBufferList, HTMLSourceElement: W.SourceElement, HTMLSpanElement: W.SpanElement, SpeechGrammar: W.SpeechGrammar, SpeechGrammarList: W.SpeechGrammarList, SpeechRecognitionResult: W.SpeechRecognitionResult, Storage: W.Storage, HTMLStyleElement: W.StyleElement, StyleMedia: W.StyleMedia, CSSStyleSheet: W.StyleSheet, StyleSheet: W.StyleSheet, HTMLTableElement: W.TableElement, HTMLTableRowElement: W.TableRowElement, HTMLTableSectionElement: W.TableSectionElement, HTMLTemplateElement: W.TemplateElement, HTMLTextAreaElement: W.TextAreaElement, TextEvent: W.TextEvent, TextTrack: W.TextTrack, TextTrackCue: W.TextTrackCue, VTTCue: W.TextTrackCue, TextTrackCueList: W.TextTrackCueList, TextTrackList: W.TextTrackList, TimeRanges: W.TimeRanges, Touch: W.Touch, TouchList: W.TouchList, TrackDefault: W.TrackDefault, TrackDefaultList: W.TrackDefaultList, FocusEvent: W.UIEvent, TouchEvent: W.UIEvent, UIEvent: W.UIEvent, HTMLUListElement: W.UListElement, URL: W.Url, VideoTrack: W.VideoTrack, VideoTrackList: W.VideoTrackList, VTTRegion: W.VttRegion, WebSocket: W.WebSocket, Window: W.Window, DOMWindow: W.Window, Worker: W.Worker, DedicatedWorkerGlobalScope: W.WorkerGlobalScope, ServiceWorkerGlobalScope: W.WorkerGlobalScope, SharedWorkerGlobalScope: W.WorkerGlobalScope, WorkerGlobalScope: W.WorkerGlobalScope, Attr: W._Attr, CSSRuleList: W._CssRuleList, ClientRect: W._DomRect, DOMRect: W._DomRect, GamepadList: W._GamepadList, NamedNodeMap: W._NamedNodeMap, MozNamedAttrMap: W._NamedNodeMap, Report: W._Report, SpeechRecognitionResultList: W._SpeechRecognitionResultList, StyleSheetList: W._StyleSheetList, IDBKeyRange: P.KeyRange, IDBObjectStore: P.ObjectStore, IDBObservation: P.Observation, IDBOpenDBRequest: P.Request, IDBVersionChangeRequest: P.Request, IDBRequest: P.Request, IDBVersionChangeEvent: P.VersionChangeEvent, SVGCircleElement: P.CircleElement, SVGFEColorMatrixElement: P.FEColorMatrixElement, SVGFETurbulenceElement: P.FETurbulenceElement, SVGGElement: P.GElement, SVGEllipseElement: P.GeometryElement, SVGPolygonElement: P.GeometryElement, SVGPolylineElement: P.GeometryElement, SVGGeometryElement: P.GeometryElement, SVGAElement: P.GraphicsElement, SVGClipPathElement: P.GraphicsElement, SVGDefsElement: P.GraphicsElement, SVGForeignObjectElement: P.GraphicsElement, SVGSwitchElement: P.GraphicsElement, SVGUseElement: P.GraphicsElement, SVGGraphicsElement: P.GraphicsElement, SVGImageElement: P.ImageElement0, SVGLength: P.Length, SVGLengthList: P.LengthList, SVGLineElement: P.LineElement, SVGNumber: P.Number, SVGNumberList: P.NumberList, SVGPathElement: P.PathElement, SVGPointList: P.PointList, SVGRectElement: P.RectElement, SVGScriptElement: P.ScriptElement0, SVGStringList: P.StringList, SVGStyleElement: P.StyleElement0, SVGAnimateElement: P.SvgElement, SVGAnimateMotionElement: P.SvgElement, SVGAnimateTransformElement: P.SvgElement, SVGAnimationElement: P.SvgElement, SVGDescElement: P.SvgElement, SVGDiscardElement: P.SvgElement, SVGFEBlendElement: P.SvgElement, SVGFEComponentTransferElement: P.SvgElement, SVGFECompositeElement: P.SvgElement, SVGFEConvolveMatrixElement: P.SvgElement, SVGFEDiffuseLightingElement: P.SvgElement, SVGFEDisplacementMapElement: P.SvgElement, SVGFEDistantLightElement: P.SvgElement, SVGFEFloodElement: P.SvgElement, SVGFEFuncAElement: P.SvgElement, SVGFEFuncBElement: P.SvgElement, SVGFEFuncGElement: P.SvgElement, SVGFEFuncRElement: P.SvgElement, SVGFEGaussianBlurElement: P.SvgElement, SVGFEImageElement: P.SvgElement, SVGFEMergeElement: P.SvgElement, SVGFEMergeNodeElement: P.SvgElement, SVGFEMorphologyElement: P.SvgElement, SVGFEOffsetElement: P.SvgElement, SVGFEPointLightElement: P.SvgElement, SVGFESpecularLightingElement: P.SvgElement, SVGFESpotLightElement: P.SvgElement, SVGFETileElement: P.SvgElement, SVGFilterElement: P.SvgElement, SVGLinearGradientElement: P.SvgElement, SVGMarkerElement: P.SvgElement, SVGMaskElement: P.SvgElement, SVGMetadataElement: P.SvgElement, SVGPatternElement: P.SvgElement, SVGRadialGradientElement: P.SvgElement, SVGSetElement: P.SvgElement, SVGStopElement: P.SvgElement, SVGSymbolElement: P.SvgElement, SVGTitleElement: P.SvgElement, SVGViewElement: P.SvgElement, SVGGradientElement: P.SvgElement, SVGComponentTransferFunctionElement: P.SvgElement, SVGFEDropShadowElement: P.SvgElement, SVGMPathElement: P.SvgElement, SVGElement: P.SvgElement, SVGSVGElement: P.SvgSvgElement, SVGTextPathElement: P.TextContentElement, SVGTextContentElement: P.TextContentElement, SVGTextElement: P.TextElement, SVGTSpanElement: P.TextPositioningElement, SVGTextPositioningElement: P.TextPositioningElement, SVGTransform: P.Transform, SVGTransformList: P.TransformList, AnalyserNode: P.AnalyserNode, RealtimeAnalyserNode: P.AnalyserNode, AudioBuffer: P.AudioBuffer, AudioBufferSourceNode: P.AudioBufferSourceNode, AudioContext: P.AudioContext, webkitAudioContext: P.AudioContext, AudioDestinationNode: P.AudioNode, AudioWorkletNode: P.AudioNode, ChannelMergerNode: P.AudioNode, AudioChannelMerger: P.AudioNode, ChannelSplitterNode: P.AudioNode, AudioChannelSplitter: P.AudioNode, IIRFilterNode: P.AudioNode, MediaElementAudioSourceNode: P.AudioNode, MediaStreamAudioDestinationNode: P.AudioNode, PannerNode: P.AudioNode, AudioPannerNode: P.AudioNode, webkitAudioPannerNode: P.AudioNode, WaveShaperNode: P.AudioNode, AudioNode: P.AudioNode, AudioParam: P.AudioParam, AudioParamMap: P.AudioParamMap, AudioProcessingEvent: P.AudioProcessingEvent, ConstantSourceNode: P.AudioScheduledSourceNode, AudioScheduledSourceNode: P.AudioScheduledSourceNode, AudioTrack: P.AudioTrack, AudioTrackList: P.AudioTrackList, BaseAudioContext: P.BaseAudioContext, BiquadFilterNode: P.BiquadFilterNode, ConvolverNode: P.ConvolverNode, DelayNode: P.DelayNode, DynamicsCompressorNode: P.DynamicsCompressorNode, GainNode: P.GainNode, AudioGainNode: P.GainNode, MediaStreamAudioSourceNode: P.MediaStreamAudioSourceNode, OfflineAudioContext: P.OfflineAudioContext, OscillatorNode: P.OscillatorNode, Oscillator: P.OscillatorNode, ScriptProcessorNode: P.ScriptProcessorNode, JavaScriptAudioNode: P.ScriptProcessorNode, StereoPannerNode: P.StereoPannerNode, WebGLActiveInfo: P.ActiveInfo, SQLResultSetRowList: P.SqlResultSetRowList});
    hunkHelpers.setOrUpdateLeafTags({AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CanvasGradient: true, CanvasPattern: true, CanvasRenderingContext2D: true, Clients: true, CookieStore: true, Coordinates: true, CredentialUserData: true, CredentialsContainer: true, Crypto: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMError: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, External: true, FaceDetector: true, DOMFileSystem: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaError: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, NavigationPreloadManager: true, NavigatorAutomationInformation: true, NavigatorCookies: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, OverconstrainedError: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, Path2D: true, PaymentAddress: true, PaymentManager: true, PaymentResponse: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformanceServerTiming: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PositionError: true, Presentation: true, PresentationReceiver: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, SpeechSynthesisVoice: true, StaticRange: true, StorageManager: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TextDetector: true, TextMetrics: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Request: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBIndex: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL: true, WebGL2RenderingContextBase: true, Database: true, SQLError: true, SQLResultSet: true, SQLTransaction: true, ArrayBuffer: true, DataView: true, ArrayBufferView: false, Float64Array: true, Float32Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLBRElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLMapElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUnknownElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, Animation: true, HTMLAreaElement: true, HTMLAudioElement: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BackgroundFetchRegistration: true, HTMLBaseElement: true, BeforeUnloadEvent: true, Blob: false, BlobEvent: true, HTMLBodyElement: true, HTMLButtonElement: true, CacheStorage: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, Client: true, WindowClient: true, CompositionEvent: true, Credential: true, FederatedCredential: true, PasswordCredential: true, PublicKeyCredential: true, CryptoKey: true, CSSNumericValue: false, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnitValue: true, CSSUnparsedValue: true, DataTransferItem: true, DataTransferItemList: true, HTMLDivElement: true, XMLDocument: true, Document: false, DocumentFragment: false, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, Element: false, HTMLEmbedElement: true, DirectoryEntry: true, Entry: true, FileEntry: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BeforeInstallPromptEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, FontFaceSetLoadEvent: true, GamepadEvent: true, HashChangeEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MIDIConnectionEvent: true, MutationEvent: true, PageTransitionEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PromiseRejectionEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BatteryManager: true, BroadcastChannel: true, EventSource: true, Gyroscope: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaQueryList: true, MediaRecorder: true, MediaSource: true, MIDIAccess: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerRegistration: true, SharedWorker: true, SpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBDatabase: true, IDBTransaction: true, EventTarget: false, AbortPaymentEvent: true, CanMakePaymentEvent: true, FetchEvent: true, ForeignFetchEvent: true, InstallEvent: true, NotificationEvent: true, PaymentRequestEvent: true, SyncEvent: true, ExtendableEvent: false, ExtendableMessageEvent: true, HTMLFieldSetElement: true, File: true, FileList: true, FileReader: true, FileWriter: true, FontFace: true, FontFaceSet: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLDocument: true, XMLHttpRequest: true, XMLHttpRequestUpload: true, XMLHttpRequestEventTarget: false, ImageData: true, HTMLInputElement: true, KeyboardEvent: true, HTMLLIElement: true, HTMLLinkElement: true, Location: true, HTMLVideoElement: true, HTMLMediaElement: false, MediaKeySession: true, MediaList: true, MediaStream: true, CanvasCaptureMediaStreamTrack: true, MediaStreamTrack: true, MessageEvent: true, MessagePort: true, MIDIInputMap: true, MIDIMessageEvent: true, MIDIOutputMap: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, MimeType: true, MimeTypeArray: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, MutationRecord: true, Navigator: true, WorkerNavigator: true, NavigatorConcurrentHardware: false, NavigatorUserMediaError: true, NetworkInformation: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOutputElement: true, PaymentInstruments: true, PaymentRequest: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformancePaintTiming: true, TaskAttributionTiming: true, PerformanceEntry: false, PerformanceNavigation: true, PerformanceNavigationTiming: true, PerformanceResourceTiming: false, Plugin: true, PluginArray: true, HTMLPreElement: true, PresentationConnection: true, ProgressEvent: true, ResourceProgressEvent: true, PushEvent: true, RelatedApplication: true, RTCDataChannel: true, DataChannel: true, RTCLegacyStatsReport: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsReport: true, ScreenOrientation: true, HTMLScriptElement: true, HTMLSelectElement: true, Selection: true, ShadowRoot: true, SourceBuffer: true, SourceBufferList: true, HTMLSourceElement: true, HTMLSpanElement: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, Storage: true, HTMLStyleElement: true, StyleMedia: true, CSSStyleSheet: true, StyleSheet: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, TextEvent: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchList: true, TrackDefault: true, TrackDefaultList: true, FocusEvent: true, TouchEvent: true, UIEvent: false, HTMLUListElement: true, URL: true, VideoTrack: true, VideoTrackList: true, VTTRegion: true, WebSocket: true, Window: true, DOMWindow: true, Worker: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, SharedWorkerGlobalScope: true, WorkerGlobalScope: true, Attr: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, Report: true, SpeechRecognitionResultList: true, StyleSheetList: true, IDBKeyRange: true, IDBObjectStore: true, IDBObservation: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBVersionChangeEvent: true, SVGCircleElement: true, SVGFEColorMatrixElement: true, SVGFETurbulenceElement: true, SVGGElement: true, SVGEllipseElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGGeometryElement: false, SVGAElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGForeignObjectElement: true, SVGSwitchElement: true, SVGUseElement: true, SVGGraphicsElement: false, SVGImageElement: true, SVGLength: true, SVGLengthList: true, SVGLineElement: true, SVGNumber: true, SVGNumberList: true, SVGPathElement: true, SVGPointList: true, SVGRectElement: true, SVGScriptElement: true, SVGStringList: true, SVGStyleElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGFEBlendElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFilterElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPatternElement: true, SVGRadialGradientElement: true, SVGSetElement: true, SVGStopElement: true, SVGSymbolElement: true, SVGTitleElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false, SVGSVGElement: true, SVGTextPathElement: true, SVGTextContentElement: false, SVGTextElement: true, SVGTSpanElement: true, SVGTextPositioningElement: false, SVGTransform: true, SVGTransformList: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBuffer: true, AudioBufferSourceNode: true, AudioContext: true, webkitAudioContext: true, AudioDestinationNode: true, AudioWorkletNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, WaveShaperNode: true, AudioNode: false, AudioParam: true, AudioParamMap: true, AudioProcessingEvent: true, ConstantSourceNode: true, AudioScheduledSourceNode: false, AudioTrack: true, AudioTrackList: true, BaseAudioContext: false, BiquadFilterNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, MediaStreamAudioSourceNode: true, OfflineAudioContext: true, OscillatorNode: true, Oscillator: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WebGLActiveInfo: true, SQLResultSetRowList: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    W._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main, []);
    else
      F.main([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
